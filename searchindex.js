Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_experiment_config", "_autosummary/aslm.config.config.verify_waveform_constants", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.log_files", "_autosummary/aslm.log_files.filters", "_autosummary/aslm.log_files.filters.NonPerfFilter", "_autosummary/aslm.log_files.filters.PerformanceFilter", "_autosummary/aslm.log_files.log_functions", "_autosummary/aslm.log_files.log_functions.find_filename", "_autosummary/aslm.log_files.log_functions.log_setup", "_autosummary/aslm.log_files.log_functions.main_process_listener", "_autosummary/aslm.log_files.log_functions.update_nested_dict", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.APIs.sutter", "_autosummary/aslm.model.devices.APIs.sutter.MP285", "_autosummary/aslm.model.devices.APIs.sutter.MP285.MP285", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.cva_conpro", "_autosummary/aslm.model.features.cva_conpro.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.SharedList", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.remove_empty_tiles", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.custom_widgets", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing/contributing_guidelines", "contributing/contributing_hardware", "contributing/contributing_home", "contributing/contributing_model", "contributing/sphinx_numpydoc", "feature_container/feature_container_home", "implementations", "index", "software_configuration", "software_installation", "supported_hardware"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_experiment_config.rst", "_autosummary/aslm.config.config.verify_waveform_constants.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.log_files.rst", "_autosummary/aslm.log_files.filters.rst", "_autosummary/aslm.log_files.filters.NonPerfFilter.rst", "_autosummary/aslm.log_files.filters.PerformanceFilter.rst", "_autosummary/aslm.log_files.log_functions.rst", "_autosummary/aslm.log_files.log_functions.find_filename.rst", "_autosummary/aslm.log_files.log_functions.log_setup.rst", "_autosummary/aslm.log_files.log_functions.main_process_listener.rst", "_autosummary/aslm.log_files.log_functions.update_nested_dict.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.APIs.sutter.rst", "_autosummary/aslm.model.devices.APIs.sutter.MP285.rst", "_autosummary/aslm.model.devices.APIs.sutter.MP285.MP285.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.cva_conpro.rst", "_autosummary/aslm.model.features.cva_conpro.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.SharedList.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.remove_empty_tiles.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.rst", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.custom_widgets.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing/contributing_guidelines.rst", "contributing/contributing_hardware.rst", "contributing/contributing_home.rst", "contributing/contributing_model.rst", "contributing/sphinx_numpydoc.rst", "feature_container/feature_container_home.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_experiment_config", "aslm.config.config.verify_waveform_constants", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.log_files", "aslm.log_files.filters", "aslm.log_files.filters.NonPerfFilter", "aslm.log_files.filters.PerformanceFilter", "aslm.log_files.log_functions", "aslm.log_files.log_functions.find_filename", "aslm.log_files.log_functions.log_setup", "aslm.log_files.log_functions.main_process_listener", "aslm.log_files.log_functions.update_nested_dict", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.dynamixel.dynamixel_functions", "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "aslm.model.devices.APIs.omicron", "aslm.model.devices.APIs.sutter", "aslm.model.devices.APIs.sutter.MP285", "aslm.model.devices.APIs.sutter.MP285.MP285", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_dynamixel", "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.cva_conpro", "aslm.model.features.cva_conpro.ConstantVelocityAcquisition", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.SharedList", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.remove_empty_tiles", "aslm.model.features.remove_empty_tiles.DetectTissueInStack", "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "aslm.model.features.remove_empty_tiles.detect_tissue", "aslm.model.features.remove_empty_tiles.detect_tissue2", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.custom_widgets", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "&lt;no title&gt;", "Feature Container", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Configuration Overview", "Software Installation", "Supported Hardware"], "terms": {"modul": [0, 9, 13, 16, 18, 19, 25, 26, 39, 41, 45, 46, 47, 73, 74, 75, 76, 79, 80, 83, 94, 99, 110, 115, 122, 127, 132, 154, 167, 195, 196, 216, 237, 245, 276, 277, 278, 279, 281, 288, 289, 290, 294], "function": [1, 8, 13, 14, 20, 23, 24, 27, 32, 37, 41, 45, 46, 47, 55, 57, 77, 87, 88, 90, 92, 100, 105, 106, 133, 140, 143, 146, 151, 157, 166, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 225, 227, 228, 232, 236, 238, 240, 242, 243, 244, 245, 246, 248, 249, 250, 254, 259, 262, 267, 268, 269, 270, 271, 272, 273, 284, 288, 291, 292, 294], "manag": [2, 5, 6, 7, 8, 14, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 129, 131, 134, 137, 139, 144, 156, 161, 166, 175, 178, 179, 181, 183, 187, 188, 190, 293, 294], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 24, 46, 196, 221], "dictionari": [2, 5, 6, 8, 11, 21, 22, 24, 41, 45, 46, 60, 67, 68, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 124, 126, 134, 137, 139, 141, 142, 144, 145, 147, 150, 152, 156, 158, 159, 161, 163, 165, 166, 169, 174, 175, 176, 177, 178, 179, 180, 182, 183, 189, 191, 192, 195, 196, 199, 201, 203, 218, 220, 221, 223, 225, 227, 239, 250, 252, 253, 261, 272, 274, 275, 283, 289, 292], "recurs": [2, 24, 46, 199], "paramet": [2, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 21, 22, 23, 24, 28, 29, 30, 31, 33, 34, 35, 36, 38, 46, 49, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 102, 104, 106, 109, 112, 114, 117, 119, 121, 124, 126, 129, 131, 134, 135, 137, 139, 141, 142, 144, 145, 147, 148, 150, 152, 153, 156, 158, 159, 161, 163, 164, 165, 166, 171, 172, 185, 200, 203, 211, 212, 214, 215, 218, 221, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 242, 243, 244, 245, 248, 250, 251, 252, 253, 255, 256, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 274, 275, 283, 288, 291, 292], "multiprocess": [2, 5, 6, 7, 8, 23, 59, 62, 64, 131, 134, 137, 139, 144, 161, 227], "share": [2, 5, 6, 7, 8, 41, 46, 98, 196, 198, 227, 284, 294], "object": [2, 5, 6, 7, 8, 11, 13, 14, 15, 41, 43, 45, 46, 51, 54, 56, 57, 64, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 102, 104, 112, 117, 119, 124, 126, 129, 131, 134, 135, 137, 139, 141, 144, 145, 147, 152, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 196, 198, 203, 205, 206, 207, 211, 214, 218, 220, 225, 227, 239, 241, 244, 247, 255, 258, 260, 261, 266, 270, 283, 284, 290, 291, 292, 294], "e": [2, 4, 5, 6, 7, 8, 11, 34, 46, 54, 87, 88, 90, 92, 102, 107, 109, 112, 114, 135, 145, 156, 158, 161, 176, 198, 201, 203, 221, 263, 283, 284, 289, 293, 294], "g": [2, 5, 6, 7, 8, 11, 46, 54, 87, 88, 90, 92, 102, 107, 109, 112, 114, 121, 135, 145, 156, 158, 161, 176, 201, 203, 221, 263, 283, 289, 293, 294], "dict": [2, 5, 6, 7, 8, 11, 13, 14, 24, 28, 49, 51, 54, 60, 85, 87, 88, 90, 92, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 121, 124, 126, 134, 137, 139, 141, 142, 144, 145, 147, 150, 152, 156, 158, 159, 161, 163, 165, 166, 171, 174, 175, 176, 177, 178, 179, 180, 182, 183, 189, 191, 192, 195, 203, 211, 212, 214, 218, 223, 225, 227, 239, 244, 250, 252, 253, 272, 274, 275, 283], "between": [2, 5, 6, 7, 8, 29, 46, 49, 51, 54, 82, 90, 156, 158, 161, 176, 182, 183, 188, 190, 198, 214, 218, 220, 221, 223, 242, 263, 283, 292, 294], "process": [2, 5, 6, 7, 8, 23, 43, 46, 51, 54, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 189, 191, 196, 199, 205, 206, 207, 211, 214, 227, 284, 289], "we": [2, 6, 21, 43, 45, 46, 51, 87, 88, 106, 109, 165, 203, 221, 225, 283, 284, 285, 286, 289, 292, 293, 294], "ar": [2, 6, 8, 11, 13, 24, 41, 45, 46, 54, 70, 82, 87, 88, 90, 92, 98, 134, 137, 139, 141, 144, 147, 150, 152, 165, 166, 169, 171, 179, 182, 185, 187, 188, 189, 190, 191, 192, 195, 196, 199, 201, 203, 214, 221, 225, 227, 251, 258, 283, 284, 288, 289, 292, 293, 294], "ad": [2, 6, 8, 45, 46, 134, 196, 214, 260, 266, 286, 289, 291], "str": [2, 3, 4, 6, 11, 13, 14, 21, 22, 28, 29, 30, 33, 35, 46, 49, 51, 52, 54, 64, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 102, 104, 106, 107, 109, 112, 114, 117, 119, 121, 124, 126, 129, 131, 134, 135, 137, 139, 141, 144, 145, 147, 148, 150, 152, 153, 156, 158, 161, 163, 165, 166, 171, 174, 175, 176, 177, 181, 183, 189, 191, 192, 195, 198, 199, 200, 201, 203, 211, 212, 214, 218, 220, 221, 223, 225, 227, 242, 245, 250, 251, 252, 253, 255, 256, 258, 261, 272, 274, 288], "name": [2, 6, 11, 13, 14, 18, 19, 41, 43, 45, 46, 49, 51, 54, 64, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 93, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 121, 124, 126, 129, 131, 134, 137, 139, 141, 144, 145, 147, 150, 152, 156, 158, 161, 165, 166, 171, 189, 191, 192, 198, 199, 201, 203, 214, 218, 221, 223, 225, 227, 242, 245, 251, 253, 272, 283, 284, 288, 289, 292, 294], "insert": [2, 46, 198, 289, 294], "return": [2, 3, 4, 5, 6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 31, 33, 34, 35, 36, 38, 41, 43, 45, 46, 49, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 102, 104, 106, 107, 109, 112, 114, 121, 124, 126, 129, 131, 134, 135, 137, 139, 141, 142, 144, 145, 147, 148, 150, 152, 153, 156, 158, 159, 161, 163, 164, 165, 166, 171, 172, 185, 198, 200, 203, 212, 214, 215, 218, 220, 221, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 239, 242, 243, 244, 245, 248, 250, 252, 253, 255, 256, 258, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 274, 275, 284, 288, 289], "type": [2, 3, 5, 6, 11, 13, 14, 15, 18, 19, 21, 24, 28, 29, 30, 31, 33, 34, 35, 36, 38, 46, 49, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 102, 104, 106, 107, 109, 112, 114, 117, 119, 121, 124, 126, 129, 131, 134, 135, 137, 139, 141, 142, 144, 145, 147, 148, 150, 152, 153, 156, 158, 159, 161, 163, 164, 165, 166, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188, 189, 190, 191, 192, 195, 200, 203, 205, 206, 207, 211, 212, 214, 215, 218, 220, 221, 223, 225, 227, 230, 231, 232, 233, 234, 235, 236, 239, 242, 243, 244, 245, 248, 250, 252, 253, 255, 256, 258, 260, 263, 264, 265, 266, 268, 269, 270, 274, 275, 283, 288, 289, 291, 292, 294], "none": [2, 13, 14, 22, 28, 30, 41, 43, 45, 46, 49, 51, 54, 87, 88, 90, 92, 98, 124, 126, 134, 137, 139, 141, 144, 147, 150, 152, 163, 185, 187, 188, 190, 194, 198, 200, 203, 205, 206, 218, 220, 221, 223, 225, 227, 239, 252, 255, 260, 266, 274, 288, 292, 294], "exampl": [2, 3, 6, 21, 41, 45, 46, 52, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 134, 139, 141, 144, 147, 150, 152, 163, 164, 166, 203, 229, 230, 231, 232, 233, 234, 235, 236, 251, 258, 270, 284, 285, 288, 289, 292, 293, 294], "establish": [3, 294], "program": [3, 13, 41, 45, 198, 284], "home": [3, 101], "directori": [3, 54, 183, 201, 203, 221, 250, 251, 253, 292, 293], "appdata": [3, 283, 292], "local": [3, 14, 33, 46, 283, 292, 293], "window": [3, 208, 250, 283, 289, 292, 293, 294], "mac": [3, 283, 292, 293], "linux": [3, 283, 292, 293], "path": [3, 4, 5, 22, 31, 46, 54, 201, 218, 245, 250, 251, 252, 258, 261, 293], "c": [3, 46, 49, 51, 54, 145, 218, 220, 221, 223, 283, 292, 293, 294], "user": [3, 46, 199, 227, 250, 283, 286, 289, 291, 292, 293, 294], "usernam": [3, 293], "get": [4, 11, 14, 45, 46, 49, 51, 52, 54, 82, 85, 87, 88, 90, 92, 129, 131, 134, 150, 165, 171, 183, 195, 225, 227, 272, 284, 293], "variou": [4, 225, 283, 292, 294], "configur": [4, 5, 6, 7, 8, 11, 22, 49, 51, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 159, 161, 163, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 195, 196, 199, 201, 203, 211, 214, 218, 220, 221, 223, 225, 227, 261, 284, 289, 291, 293], "file": [4, 5, 6, 7, 22, 46, 49, 51, 52, 54, 59, 61, 62, 63, 65, 68, 85, 87, 88, 90, 92, 139, 199, 201, 203, 211, 212, 218, 220, 221, 223, 227, 245, 251, 252, 253, 258, 261, 275, 283, 284, 289, 291, 293], "us": [4, 11, 13, 18, 19, 34, 41, 45, 46, 49, 82, 92, 93, 139, 150, 163, 164, 165, 166, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 203, 205, 206, 207, 208, 209, 211, 214, 221, 223, 225, 227, 229, 230, 231, 232, 233, 234, 236, 256, 258, 283, 284, 285, 288, 289, 292, 293, 294], "configuration_path": [4, 261], "contain": [4, 5, 7, 8, 22, 28, 29, 30, 46, 82, 141, 142, 144, 145, 147, 150, 152, 166, 188, 189, 190, 191, 192, 195, 196, 199, 201, 205, 206, 208, 209, 218, 225, 227, 250, 258, 266, 283, 288, 291, 292], "global": [4, 14, 33, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 129, 131, 134, 137, 139, 144, 156, 161, 227], "microscop": [4, 8, 11, 49, 51, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 165, 166, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 191, 192, 205, 206, 207, 211, 214, 218, 220, 221, 223, 227, 272, 284, 289, 291, 294], "i": [4, 13, 14, 18, 19, 24, 30, 34, 41, 45, 46, 49, 51, 54, 58, 59, 62, 82, 85, 87, 88, 90, 92, 98, 101, 102, 104, 106, 109, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 201, 203, 205, 206, 207, 208, 209, 214, 221, 225, 227, 231, 239, 251, 253, 261, 264, 266, 270, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294], "hardwar": [4, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 88, 90, 92, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 161, 203, 225, 286, 289, 291, 293], "setup": [4, 22, 164, 218, 225, 283, 291, 292, 294], "experiment_path": [4, 261], "per": [4, 13, 41, 45, 46, 49, 51, 54, 101, 112, 114, 139, 185, 218, 220, 221, 223, 289, 294], "experi": [4, 7, 49, 51, 54, 169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 203, 214, 218, 220, 221, 223, 253, 261, 284, 289, 292, 293], "waveform_constants_path": [4, 261], "remot": [4, 8, 11, 69, 96, 98, 124, 126, 139, 225, 231, 261, 290, 291], "focu": [4, 8, 11, 69, 96, 98, 124, 126, 139, 156, 158, 161, 169, 171, 183, 214, 218, 225, 227, 231, 264, 283, 289, 290], "all": [4, 7, 13, 14, 29, 41, 45, 46, 54, 82, 90, 92, 96, 98, 134, 137, 139, 141, 144, 147, 150, 152, 165, 183, 185, 198, 225, 227, 251, 258, 263, 283, 284, 288, 289, 292, 294], "magnif": [4, 156, 158, 161, 176], "rest_api_path": [4, 261], "rest": [4, 90, 211, 261, 283, 291], "api": [4, 46, 59, 87, 88, 90, 93, 134, 144, 211, 261, 283, 291, 294], "waveform_templates_path": [4, 261], "waveform": [4, 8, 96, 98, 112, 114, 124, 126, 139, 225, 227, 261, 272, 284, 291, 294], "templat": [4, 46, 261, 272, 291], "kwarg": [5, 13, 14, 41, 45, 46, 57, 189, 191, 192, 212, 227, 288], "load": [5, 22, 46, 59, 60, 61, 63, 65, 68, 85, 87, 88, 90, 92, 101, 150, 196, 201, 225, 227, 245, 252, 258, 284, 291], "list": [5, 11, 28, 29, 31, 46, 68, 134, 137, 139, 141, 144, 147, 150, 152, 163, 166, 169, 171, 176, 177, 180, 182, 183, 187, 188, 190, 193, 194, 196, 198, 199, 200, 201, 205, 206, 207, 211, 214, 218, 223, 225, 227, 242, 243, 244, 252, 255, 266, 283, 288, 289, 291, 292], "config_dict": 5, "amalgam": 5, "input": [5, 46, 199, 209, 225, 250, 260, 261, 270, 294], "config_nam": 6, "new_config": 6, "bool": [6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 31, 33, 35, 46, 49, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 88, 90, 92, 98, 101, 104, 106, 109, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 164, 165, 166, 169, 171, 174, 175, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 193, 203, 205, 206, 207, 208, 209, 214, 218, 220, 221, 223, 225, 227, 253, 264, 266, 288], "read": [6, 46, 49, 51, 54, 106, 109, 156, 158, 161, 292], "new": [6, 11, 23, 24, 46, 54, 82, 134, 139, 141, 144, 147, 150, 152, 175, 179, 183, 185, 214, 225, 243, 250, 255, 266, 284, 286, 288, 289, 291, 292, 293], "updat": [6, 8, 24, 46, 98, 174, 175, 177, 178, 183, 189, 191, 192, 196, 201, 206, 211, 225, 227, 239, 255, 266, 283, 291, 293], "info": [6, 11, 225], "subdictionari": 6, "replac": [6, 46, 201, 283, 292], "valu": [6, 8, 11, 13, 21, 24, 28, 38, 41, 45, 46, 82, 87, 88, 93, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 169, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 189, 191, 192, 193, 198, 200, 201, 208, 214, 215, 221, 230, 263, 270, 283, 284, 288, 289, 292, 293], "yaml": [6, 7, 22, 201, 252, 253, 284, 292], "true": [6, 13, 18, 19, 21, 31, 41, 45, 46, 54, 82, 87, 88, 90, 101, 106, 109, 134, 137, 139, 141, 144, 147, 150, 152, 166, 171, 189, 191, 193, 195, 205, 206, 207, 208, 214, 218, 220, 221, 223, 225, 227, 253, 288, 289, 294], "fals": [6, 13, 18, 19, 21, 33, 41, 43, 45, 46, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 87, 88, 90, 92, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 165, 166, 183, 185, 189, 190, 191, 192, 198, 205, 206, 208, 209, 214, 218, 220, 221, 223, 225, 227, 253, 264, 266, 288, 294], "verifi": [7, 8, 134, 137, 139, 141, 144, 147, 150, 152], "waveform_const": [7, 96, 98, 292], "constant": [8, 96, 98, 150, 185, 261, 291, 294], "thi": [8, 13, 14, 18, 19, 22, 23, 24, 41, 43, 45, 46, 49, 51, 54, 82, 87, 88, 90, 98, 126, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 203, 205, 206, 207, 208, 209, 221, 225, 227, 242, 243, 244, 245, 250, 251, 263, 272, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294], "check": [8, 13, 21, 46, 57, 101, 104, 106, 109, 156, 161, 169, 183, 205, 206, 214, 227], "ensur": [8, 134, 137, 139, 141, 144, 147, 150, 152, 178, 179, 181, 182, 195, 225, 284], "given": [8, 13, 34, 41, 45, 46, 52, 87, 88, 90, 92, 101, 104, 106, 109, 112, 114, 126, 195, 198, 199, 201, 208, 266, 288, 289, 293], "conform": 8, "expect": [8, 45, 51, 82, 106, 134, 137, 139, 141, 144, 147, 150, 152, 183, 189, 191, 192, 194, 283, 284, 292], "structur": [8, 46, 196, 223, 227, 289], "It": [8, 13, 14, 18, 19, 24, 41, 45, 46, 49, 166, 169, 171, 176, 177, 181, 182, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 201, 205, 206, 207, 208, 225, 250, 283, 288, 289, 291, 292, 293, 294], "relat": [8, 14, 166, 169, 178, 180, 183, 189, 191, 192, 256, 283, 292], "devic": [8, 56, 57, 58, 59, 60, 64, 66, 67, 68, 69, 70, 71, 72, 164, 165, 166, 171, 185, 189, 190, 191, 192, 225, 227, 283, 290, 291, 292], "laser": [8, 11, 68, 98, 129, 165, 225, 233, 234, 236, 283, 289, 290, 291], "galvo": [8, 11, 58, 67, 96, 98, 139, 165, 225, 230, 232, 261, 284, 290], "multipl": [8, 13, 33, 35, 41, 45, 46, 179, 221, 288, 294], "The": [8, 11, 13, 14, 15, 18, 19, 41, 45, 46, 49, 51, 54, 57, 82, 98, 106, 114, 119, 126, 134, 150, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 201, 205, 206, 207, 208, 209, 218, 225, 231, 235, 239, 248, 263, 265, 270, 283, 284, 288, 291, 292, 293, 294], "If": [8, 18, 19, 38, 41, 43, 45, 46, 49, 51, 82, 85, 87, 88, 90, 92, 98, 101, 104, 106, 109, 134, 137, 139, 141, 144, 147, 150, 152, 158, 171, 195, 198, 200, 203, 205, 206, 208, 214, 227, 258, 261, 283, 284, 288, 289, 292, 293, 294], "miss": [8, 46, 195], "default": [8, 11, 13, 14, 22, 41, 45, 46, 87, 88, 90, 92, 102, 109, 134, 137, 139, 141, 144, 147, 150, 152, 169, 174, 176, 177, 181, 183, 185, 187, 188, 189, 190, 191, 192, 195, 198, 203, 205, 206, 207, 208, 209, 218, 221, 223, 225, 227, 233, 253, 256, 261, 283, 284, 288, 289, 292, 294], "empti": [8, 11, 46, 106, 109, 134, 137, 139, 141, 144, 147, 150, 152, 169, 171, 187, 188, 190, 198, 206, 207, 292, 294], "necessari": [8, 46, 96, 98, 101, 106, 109, 178, 188, 190, 205, 206, 225, 248, 250, 283, 284, 285, 289, 292, 294], "valid": [8, 199, 200], "convert": [8, 46, 82, 85, 87, 90, 92, 144, 147, 199, 200, 218, 220, 221, 223, 256, 266], "float": [8, 11, 13, 28, 29, 30, 33, 34, 35, 38, 41, 45, 46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 96, 98, 101, 102, 106, 107, 109, 112, 114, 121, 124, 126, 134, 137, 139, 141, 144, 147, 148, 150, 152, 156, 158, 161, 163, 164, 165, 171, 172, 175, 176, 183, 205, 206, 208, 209, 214, 218, 220, 221, 223, 225, 227, 229, 230, 231, 232, 233, 234, 236, 263, 264, 265, 269, 270, 283], "possibl": [8, 43, 46, 208, 231, 286, 289, 292], "non": [8, 13, 18, 24, 41, 45, 46, 261], "exist": [8, 46, 101, 104, 106, 109, 156, 161, 227, 252, 255, 284, 289], "zoom": [8, 63, 72, 174, 176, 211, 214, 283, 291], "level": [8, 46, 49, 176, 274, 288], "remov": [8, 14, 46, 198, 207, 283, 289, 292], "from": [8, 11, 13, 14, 22, 23, 33, 36, 41, 45, 46, 49, 51, 54, 57, 59, 60, 61, 62, 63, 65, 68, 82, 85, 87, 88, 90, 92, 106, 109, 121, 131, 139, 144, 147, 171, 177, 187, 188, 189, 190, 191, 192, 198, 201, 207, 212, 218, 220, 221, 223, 225, 227, 231, 245, 250, 251, 252, 256, 263, 268, 269, 270, 274, 283, 284, 285, 288, 289, 291, 293, 294], "class": [10, 11, 12, 13, 14, 15, 17, 18, 19, 40, 41, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 202, 203, 204, 205, 206, 207, 210, 211, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 240, 241, 245, 246, 247, 257, 258, 284, 285, 288], "base": [11, 13, 14, 15, 18, 19, 24, 29, 41, 43, 45, 46, 49, 51, 54, 56, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 104, 106, 109, 112, 114, 116, 117, 119, 121, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 198, 201, 203, 205, 206, 207, 209, 211, 214, 218, 220, 221, 223, 225, 227, 241, 247, 258, 264, 266, 283, 284, 285, 293, 294], "__init__": [11, 13, 14, 15, 18, 19, 41, 43, 45, 46, 49, 51, 54, 56, 57, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 121, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 198, 203, 205, 206, 207, 211, 214, 218, 220, 221, 223, 225, 227, 241, 247, 258, 288, 289], "initi": [11, 13, 14, 15, 18, 19, 22, 41, 43, 45, 46, 49, 51, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 135, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 198, 205, 206, 207, 211, 214, 218, 225, 227, 292, 294], "method": [11, 13, 14, 15, 18, 19, 41, 43, 45, 46, 49, 51, 54, 56, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 121, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 198, 203, 205, 206, 207, 209, 211, 214, 218, 220, 221, 223, 225, 227, 241, 247, 258, 288, 289], "attribut": [11, 13, 14, 15, 41, 45, 46, 49, 51, 54, 85, 87, 88, 90, 92, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 164, 165, 166, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 198, 203, 205, 206, 207, 211, 214, 218, 220, 221, 223, 225, 227, 258, 288], "change_microscop": 11, "accord": [11, 24, 46, 49, 51, 54, 87, 88, 90, 92, 198, 288], "result": [11, 45, 46, 57, 87, 88, 90, 156, 158, 161, 169, 189, 191, 199, 208, 225, 244, 284], "get_microscope_configuration_dict": 11, "microscope_configuration_dict": 11, "get_stage_position_limit": 11, "suffix": 11, "posit": [11, 28, 30, 46, 49, 51, 54, 82, 101, 104, 106, 109, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 163, 166, 171, 175, 176, 178, 183, 203, 205, 206, 207, 211, 214, 218, 220, 221, 223, 225, 227, 239, 263, 264, 266, 283, 292, 294], "limit": [11, 46, 134, 137, 139, 141, 144, 147, 150, 152, 158, 225, 284, 288], "stage": [11, 62, 71, 82, 156, 158, 161, 163, 165, 169, 171, 175, 178, 182, 183, 185, 205, 206, 214, 218, 225, 227, 284, 285, 289, 290, 291], "_min": 11, "_max": 11, "position_limit": 11, "depend": [11, 46, 101, 264, 289, 291], "min": [11, 28, 30, 46, 87, 112, 114, 124, 126, 283, 292, 294], "max": [11, 46, 87, 90, 112, 114, 124, 126, 283, 292, 294], "x": [11, 30, 38, 46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 134, 137, 139, 141, 144, 147, 150, 152, 172, 214, 215, 218, 220, 221, 223, 227, 255, 256, 258, 263, 264, 265, 266, 270, 283, 292, 294], "2000": [11, 46, 283, 294], "y": [11, 30, 46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 134, 137, 139, 141, 144, 147, 150, 152, 172, 214, 215, 218, 220, 221, 223, 227, 255, 256, 258, 264, 266, 270, 283, 292, 294], "z": [11, 46, 49, 51, 54, 82, 121, 134, 137, 139, 141, 144, 147, 150, 152, 183, 185, 203, 205, 206, 214, 218, 220, 221, 223, 264, 266, 270, 283, 289, 292, 294], "theta": [11, 134, 137, 139, 141, 144, 147, 150, 152, 218, 264, 283, 292, 294], "0": [11, 29, 30, 34, 46, 49, 57, 59, 67, 68, 71, 82, 87, 88, 90, 102, 107, 109, 112, 114, 134, 137, 139, 141, 144, 147, 148, 150, 152, 156, 158, 161, 164, 165, 176, 198, 205, 206, 208, 209, 214, 223, 227, 229, 230, 231, 232, 233, 234, 236, 256, 263, 270, 274, 283, 288, 290, 292], "f": [11, 45, 46, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 171, 183, 205, 206, 218, 264, 266, 283, 284, 290, 292, 294], "properti": [11, 13, 41, 45, 46, 49, 51, 54, 85, 87, 88, 90, 92, 93, 121, 129, 131, 189, 191, 192, 218, 220, 221, 223, 258, 284, 288, 289], "camera_config_dict": 11, "camera": [11, 28, 30, 46, 59, 64, 96, 98, 112, 114, 124, 126, 139, 165, 166, 180, 225, 227, 229, 283, 290, 291], "camera_set": 11, "set": [11, 13, 33, 41, 45, 46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 93, 98, 101, 106, 109, 117, 119, 134, 137, 139, 144, 147, 150, 156, 158, 161, 164, 166, 169, 174, 187, 188, 189, 190, 191, 192, 198, 201, 211, 218, 220, 221, 223, 225, 227, 266, 283, 285, 288, 289, 292, 293], "camera_flip_flag": 11, "flip": [11, 214], "flag": [11, 46, 54, 87, 88, 90, 92, 98, 101, 104, 106, 109, 164, 165, 166, 175, 183, 187, 188, 190, 198, 207, 225, 227, 293], "flip_flag": 11, "camera_pixel": 11, "pixel": [11, 28, 29, 30, 34, 49, 51, 54, 85, 87, 88, 90, 92, 218, 220, 221, 223, 227, 256, 270], "x_pixel": [11, 85, 87, 88, 90, 92, 292, 294], "int": [11, 28, 29, 30, 33, 35, 46, 49, 51, 54, 57, 59, 67, 68, 71, 82, 85, 87, 88, 90, 92, 93, 96, 98, 101, 102, 104, 106, 107, 109, 112, 114, 117, 119, 124, 126, 134, 135, 137, 139, 141, 142, 144, 147, 148, 150, 152, 156, 158, 159, 161, 164, 165, 166, 171, 175, 177, 178, 181, 183, 190, 203, 205, 206, 211, 214, 215, 218, 220, 221, 223, 225, 227, 233, 235, 255, 256, 263, 264, 265, 270, 272, 283, 288], "number": [11, 13, 41, 45, 46, 49, 51, 54, 57, 85, 87, 88, 90, 92, 96, 98, 101, 106, 109, 112, 114, 124, 126, 134, 139, 142, 145, 152, 153, 158, 159, 166, 171, 175, 177, 178, 181, 183, 190, 198, 203, 205, 206, 208, 211, 214, 218, 220, 221, 223, 225, 227, 263, 264, 265, 272, 283, 284, 288, 291], "y_pixel": [11, 85, 87, 88, 90, 92, 292, 294], "channels_info": 11, "channel": [11, 49, 51, 54, 96, 98, 112, 114, 124, 126, 139, 152, 165, 171, 175, 179, 183, 203, 218, 220, 221, 223, 225, 227, 292, 294], "popul": [11, 92], "combobox": 11, "avail": [11, 13, 41, 45, 46, 101, 104, 106, 109, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 166, 203, 225, 283, 284, 289, 293, 294], "488nm": [11, 292], "561nm": 11, "642nm": [11, 292], "filter": [11, 61, 66, 101, 102, 104, 106, 107, 109, 225, 290, 291], "align": [11, 46, 106, 109, 134, 137, 139, 141, 144, 147, 150, 152, 292], "gfp": [11, 109, 292], "ff01": [11, 292], "515": [11, 292], "30": [11, 46, 270, 283, 292, 294], "32": [11, 46, 82, 203, 292], "daq_sample_r": 11, "daq": [11, 65, 68, 70, 124, 126, 139, 165, 225, 227, 283, 290], "sampl": [11, 96, 98, 112, 114, 124, 126, 139, 150, 289, 290, 294], "rate": [11, 82, 87, 88, 90, 92, 96, 98, 102, 107, 109, 112, 114, 124, 126, 135, 139, 148], "filter_wheel_setting_dict": 11, "wheel": [11, 61, 66, 101, 102, 104, 106, 107, 109, 225, 290, 291], "galvo_num": 11, "galvo_parameter_dict": 11, "lasers_info": 11, "laser_list": 11, "microscope_config": [11, 227], "microscope_nam": [11, 58, 64, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 96, 98, 101, 104, 106, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 165, 225, 227, 294], "number_of_channel": 11, "remote_focus_dict": 11, "delay_perc": [11, 87, 292, 294], "pulse_perc": [11, 87, 292, 294], "remote_focus_paramet": 11, "percent": [11, 112, 114, 124, 126, 134, 139, 214, 229, 231, 232, 234, 236, 283], "delai": [11, 96, 98, 101, 106, 112, 114, 124, 126, 139, 144, 156, 158, 161, 225, 231, 234], "puls": [11, 96, 98, 234, 292, 294], "stage_default_posit": 11, "current": [11, 13, 29, 41, 45, 46, 54, 82, 85, 87, 88, 90, 92, 93, 139, 150, 152, 156, 158, 161, 165, 171, 175, 178, 183, 185, 187, 188, 189, 190, 191, 203, 211, 214, 225, 227, 283, 291, 292], "stage_flip_flag": 11, "stage_setting_dict": 11, "stage_step": 11, "step": [11, 46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 134, 166, 169, 171, 174, 175, 176, 177, 178, 179, 182, 183, 185, 187, 188, 189, 191, 192, 214, 218, 220, 221, 223, 283, 289, 292, 293, 294], "size": [11, 28, 29, 30, 46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 134, 171, 175, 183, 185, 203, 211, 214, 218, 220, 221, 223, 227, 256, 263, 283, 292], "same": [11, 13, 28, 30, 41, 45, 46, 156, 158, 161, 169, 223, 253, 258, 288, 292], "group": [13, 41, 45], "target": [13, 14, 29, 41, 45, 144, 156, 158, 161, 171, 176, 227, 239], "arg": [13, 14, 41, 45, 46, 57, 58, 163, 175, 188, 189, 190, 191, 193, 194, 199, 201, 211, 214, 227, 242, 261, 288, 289], "daemon": [13, 41, 45], "thread": [13, 14, 15, 41, 43, 45, 61, 62, 63, 65, 66, 70, 72, 166, 171, 178, 181, 183, 227], "A": [13, 14, 15, 18, 19, 41, 45, 46, 134, 137, 139, 141, 144, 147, 150, 152, 169, 174, 175, 176, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 205, 206, 207, 208, 214, 218, 252, 258, 263, 270, 284, 289, 292, 294], "custom": [13, 14, 15, 18, 19, 198, 205, 206, 291, 294], "self": [13, 45, 46, 87, 88, 96, 98, 106, 134, 137, 144, 156, 158, 161, 203, 214, 284, 288, 289], "lock": [13, 15, 46, 98, 182, 227], "capabl": [13, 15, 175, 189, 191], "extend": [13, 188, 190, 198, 206], "python": [13, 18, 19, 22, 41, 43, 45, 46, 51, 220, 221, 223, 245, 251, 274, 283, 288, 289, 291, 292], "provid": [13, 14, 46, 93, 169, 174, 175, 177, 178, 179, 180, 181, 183, 187, 188, 189, 190, 191, 192, 198, 261, 283, 284, 285, 289, 292, 294], "abil": 13, "unlock": 13, "explicitli": [13, 225, 294], "scenario": 13, "where": [13, 41, 45, 46, 189, 191, 192, 193, 194, 199, 201, 203, 206, 227, 283, 285, 289, 292, 293], "synchron": [13, 14, 15, 181, 182, 294], "requir": [13, 46, 70, 82, 134, 137, 139, 141, 144, 147, 150, 152, 169, 174, 194, 205, 206, 208, 227, 288, 290, 293, 294], "addit": [13, 22, 46, 51, 101, 106, 134, 169, 175, 189, 191, 198, 218, 223, 227], "over": [13, 14, 29, 46, 199, 293], "execut": [13, 163, 169, 177, 182, 187, 188, 189, 190, 191, 192, 207, 248, 289], "wait": [13, 41, 45, 87, 88, 90, 92, 98, 101, 106, 109, 134, 139, 144, 147, 163, 182, 188, 190, 191, 225, 227, 289], "allow": [13, 14, 18, 19, 46, 175, 177, 181, 182, 183, 187, 189, 191, 192, 227, 283, 284, 289, 291, 292, 293, 294], "whether": [13, 14, 41, 45, 46, 54, 59, 85, 87, 88, 90, 92, 134, 137, 139, 141, 144, 147, 150, 152, 169, 175, 177, 178, 183, 187, 188, 189, 190, 191, 192, 203, 205, 206, 214], "islock": 13, "threadgroup": [13, 41, 45], "option": [13, 14, 22, 28, 29, 30, 41, 43, 45, 46, 49, 90, 98, 134, 137, 139, 141, 144, 147, 150, 152, 169, 174, 176, 177, 181, 183, 187, 188, 189, 190, 191, 192, 195, 198, 199, 201, 205, 206, 207, 208, 209, 218, 220, 221, 223, 225, 233, 283, 288, 289], "callabl": [13, 14, 41, 43, 45], "tupl": [13, 14, 35, 41, 45, 46, 49, 51, 54, 57, 144, 189, 191, 193, 194, 196, 199, 201, 218, 220, 221, 223, 256, 258, 268], "argument": [13, 14, 41, 43, 45, 46, 49, 51, 54, 57, 82, 101, 106, 109, 175, 188, 189, 190, 191, 192, 193, 194, 199, 201, 211, 218, 221, 223, 227, 242, 260, 261, 288, 289], "keyword": [13, 14, 41, 45, 46, 49, 51, 54, 189, 191, 192, 218, 221, 223, 227, 288], "getnam": [13, 41, 45], "string": [13, 41, 43, 45, 46, 54, 101, 104, 106, 109, 117, 124, 150, 152, 158, 177, 199, 200, 203, 218, 221, 223, 227, 252, 253, 274, 288], "identif": [13, 41, 45, 198], "purpos": [13, 41, 45, 46, 96, 98, 150, 293], "onli": [13, 41, 45, 46, 98, 134, 139, 185, 229, 270, 283, 284, 288, 292, 293, 294], "deprec": [13, 41, 45, 46], "instead": [13, 41, 45, 46, 283, 288], "isdaemon": [13, 41, 45], "is_al": [13, 41, 45], "aliv": [13, 41, 45], "just": [13, 41, 45, 46, 289], "befor": [13, 41, 45, 46, 117, 119, 147, 163, 169, 175, 179, 183, 191, 198, 227, 266, 288, 289, 293], "run": [13, 14, 24, 41, 45, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 98, 166, 171, 187, 188, 189, 190, 191, 227, 283, 284, 289, 292, 293, 294], "start": [13, 18, 19, 30, 41, 45, 46, 90, 98, 112, 114, 124, 126, 134, 150, 166, 175, 183, 198, 225, 227, 231, 264, 283, 284, 288, 289, 293, 294], "until": [13, 41, 45, 98, 106, 134, 139, 141, 144, 147, 150, 152, 166, 182, 225, 227], "after": [13, 41, 45, 46, 82, 93, 156, 161, 166, 174, 178, 183, 191, 227, 284, 288, 289, 292, 293], "termin": [13, 41, 45, 82, 166, 187, 225, 227, 284, 292, 293, 294], "see": [13, 41, 45, 46, 221, 275, 284, 288, 289, 291, 292, 293], "also": [13, 41, 45, 46, 196, 203, 206, 284, 288, 293, 294], "enumer": [13, 41, 45], "join": [13, 41, 45], "timeout": [13, 41, 45, 82, 102, 107, 148, 158, 164, 227, 294], "block": [13, 41, 45, 46, 49, 82, 134, 139, 141, 144, 147, 150, 152, 281, 288], "call": [13, 14, 41, 43, 45, 46, 98, 141, 171, 179, 185, 194, 198, 203, 205, 206, 214, 227, 283, 292, 293], "whose": [13, 18, 19, 41, 45, 46], "either": [13, 41, 45, 46, 92, 177, 195, 283, 288, 292], "normal": [13, 41, 45, 46, 85, 87, 88, 90, 92, 165, 225, 292, 294], "through": [13, 18, 19, 24, 38, 41, 45, 46, 175, 183, 188, 189, 190, 191, 192, 201, 205, 214, 225, 289], "an": [13, 24, 28, 29, 30, 33, 34, 35, 36, 38, 41, 43, 45, 46, 54, 57, 85, 87, 88, 90, 92, 134, 137, 139, 141, 144, 147, 150, 152, 158, 169, 177, 183, 187, 188, 190, 198, 206, 207, 208, 209, 215, 218, 221, 225, 227, 255, 261, 263, 266, 270, 275, 283, 284, 285, 288, 289, 292, 294], "unhandl": [13, 41, 45], "except": [13, 14, 41, 45, 46, 57, 134, 137, 139, 141, 144, 147, 150, 152, 288], "occur": [13, 41, 45, 46, 82, 285], "when": [13, 41, 43, 45, 46, 82, 166, 182, 187, 188, 189, 190, 191, 192, 194, 198, 225, 227, 283, 284, 289, 292, 293, 294], "present": [13, 30, 41, 45, 85, 87, 88, 90, 92, 158, 195, 198, 199], "should": [13, 18, 19, 41, 45, 46, 87, 88, 90, 106, 134, 169, 177, 180, 182, 187, 188, 189, 190, 191, 192, 201, 205, 206, 208, 214, 218, 220, 221, 223, 263, 283, 284, 288, 292, 293, 294], "point": [13, 41, 45, 46, 54, 82, 187, 203, 223, 255, 268, 269, 270, 283], "specifi": [13, 18, 19, 41, 45, 46, 82, 106, 109, 150, 174, 176, 177, 181, 187, 188, 189, 190, 191, 192, 195, 199, 201, 203, 205, 206, 207, 208, 209, 250, 253, 283, 288, 289, 292], "oper": [13, 14, 41, 43, 45, 147, 165, 166, 185, 187, 193, 194, 203, 225, 285, 289, 290, 292, 293, 294], "second": [13, 41, 45, 46, 49, 51, 54, 87, 88, 90, 92, 112, 114, 126, 165, 225, 229, 230, 231, 232, 233, 234, 236, 283, 288, 292, 294], "fraction": [13, 41, 45, 263, 264], "thereof": [13, 41, 45], "As": [13, 41, 43, 45, 46, 289, 294], "alwai": [13, 41, 45, 46, 49, 51, 54, 193, 209, 218, 220, 221, 223], "you": [13, 41, 43, 45, 46, 198, 283, 284, 289, 292, 293, 294], "must": [13, 28, 30, 41, 45, 46, 49, 106, 270, 284, 288, 289, 294], "decid": [13, 41, 45, 177, 283, 292], "happen": [13, 41, 45, 289], "still": [13, 41, 45, 46, 182, 283, 292, 293, 294], "time": [13, 41, 45, 46, 49, 51, 54, 57, 85, 87, 88, 90, 92, 96, 98, 101, 106, 109, 112, 114, 124, 126, 134, 139, 148, 158, 163, 164, 165, 175, 181, 183, 185, 190, 203, 218, 220, 221, 223, 225, 227, 229, 248, 283, 285, 292, 294], "out": [13, 18, 19, 41, 45, 46, 87, 88, 106, 134, 137, 139, 141, 144, 147, 150, 152, 164, 169, 171, 174, 176, 198, 208, 214, 234, 263, 264, 283, 284, 288, 292, 294], "can": [13, 41, 43, 45, 46, 51, 90, 92, 101, 106, 169, 174, 177, 189, 191, 192, 198, 199, 200, 221, 227, 258, 283, 284, 285, 288, 289, 292, 293, 294], "ed": [13, 41, 45], "mani": [13, 41, 45, 46, 171, 190, 284, 289, 292, 294], "rais": [13, 41, 45, 46, 49, 51, 58, 85, 87, 88, 90, 92, 101, 104, 106, 107, 109, 147, 158, 198, 258, 288], "runtimeerror": [13, 41, 45, 46], "attempt": [13, 41, 45, 46, 57], "made": [13, 41, 45, 46], "would": [13, 41, 45, 46, 199, 201, 208, 283, 292, 294], "caus": [13, 41, 45, 46, 294], "deadlock": [13, 41, 45], "error": [13, 41, 45, 46, 58, 106, 147, 252, 256, 284, 288, 293], "ha": [13, 41, 45, 46, 82, 106, 134, 137, 139, 141, 144, 147, 150, 152, 183, 185, 187, 189, 191, 192, 252, 263, 283, 288, 289, 290, 292, 294], "been": [13, 41, 45, 183, 187, 189, 191, 192, 205, 206, 294], "do": [13, 18, 19, 41, 45, 46, 54, 87, 88, 98, 134, 185, 194, 195, 221, 283, 284, 288, 289, 292, 293, 294], "so": [13, 41, 45, 46, 98, 185, 283, 293, 294], "setdaemon": [13, 41, 45], "setnam": [13, 41, 45], "": [13, 34, 41, 43, 45, 46, 85, 87, 90, 92, 106, 148, 150, 174, 176, 187, 188, 190, 191, 195, 203, 207, 218, 220, 221, 223, 225, 227, 283, 284, 288, 289, 293, 294], "activ": [13, 41, 45, 87, 88, 90, 92, 96, 98, 101, 166, 174, 175, 179, 180, 183, 218, 220, 221, 223, 227, 284, 291, 292, 293, 294], "most": [13, 41, 45, 46, 82, 284, 292, 294], "onc": [13, 41, 45, 46, 198, 289, 292, 293, 294], "arrang": [13, 41, 45], "invok": [13, 41, 45, 46], "separ": [13, 41, 45, 46, 166, 211, 221, 242, 284, 288, 290], "more": [13, 41, 45, 46, 134, 137, 139, 141, 144, 147, 150, 152, 283, 284, 291, 293, 294], "than": [13, 28, 30, 41, 45, 46, 49, 87, 88, 90, 208, 284, 294], "finish": [13, 147, 171], "boolean": [13, 41, 45, 46, 169, 174, 175, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 193], "indic": [13, 28, 41, 45, 46, 49, 82, 169, 174, 175, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 203, 207, 209, 214, 225, 263, 289], "otherwis": [13, 14, 18, 19, 21, 41, 45, 46, 87, 88, 90, 165, 166, 189, 191, 205, 206, 208, 218, 220, 221, 223, 225, 253, 288], "Its": [13, 41, 45], "inherit": [13, 41, 45, 46, 57, 189, 191], "creat": [13, 14, 41, 45, 46, 78, 98, 134, 139, 141, 144, 147, 152, 196, 218, 227, 230, 232, 233, 234, 236, 250, 255, 256, 264, 284, 288, 291, 293, 294], "main": [13, 23, 41, 45, 169, 179, 180, 181, 182, 189, 191, 195, 207, 284, 289], "therefor": [13, 41, 45, 46], "entir": [13, 41, 45, 214], "exit": [13, 41, 43, 45, 117, 119, 177, 289], "left": [13, 41, 45, 46, 231, 255, 256, 263, 293], "ident": [13, 41, 45, 289, 292], "identifi": [13, 41, 45, 106, 189, 191, 192, 198, 223, 294], "nonzero": [13, 41, 45, 46], "integ": [13, 41, 45, 46, 177, 229, 230, 231, 232, 234, 236, 284], "get_id": [13, 41, 45], "mai": [13, 41, 45, 46, 169, 182, 201, 284, 288, 289, 293, 294], "recycl": [13, 41, 45], "anoth": [13, 41, 45, 46, 283, 284, 292, 293, 294], "even": [13, 33, 41, 45, 46], "semant": [13, 41, 45], "constructor": [13, 41, 45], "native_id": [13, 41, 45], "nativ": [13, 41, 45, 46], "integr": [13, 41, 45, 294], "id": [13, 41, 45, 58, 59, 67, 68, 71, 90, 92, 112, 114, 117, 119, 137, 141, 144, 150, 152, 158, 166, 169, 171, 176, 177, 180, 182, 183, 205, 206, 211, 214, 227], "neg": [13, 41, 45], "get_native_id": [13, 41, 45], "repres": [13, 41, 45, 177, 187, 189, 191, 192, 196, 199, 200, 205, 206, 207, 208, 283, 292], "report": [13, 41, 45, 134, 139, 141, 144, 147, 150, 152, 227, 284], "kernel": [13, 41, 45], "selflock": 13, "pool": 14, "featur": [14, 45, 166, 227, 284, 286, 291], "associ": [14, 82, 174, 175, 176, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 191, 192, 284], "differ": [14, 46, 156, 158, 161, 169, 174, 187, 189, 191, 192, 198, 205, 283, 285, 289, 291, 292, 293, 294], "resourc": [14, 41, 187, 188, 190], "regist": [14, 195, 294], "wrap": [14, 248], "task": [14, 82, 98, 112, 114, 124, 126, 185, 196, 294], "other": [14, 46, 98, 121, 182, 209, 225, 283, 284, 288, 289, 294], "explicit": 14, "creation": [14, 46], "effici": [14, 34], "clear": [14, 46, 163, 164, 187, 188, 190, 198, 227], "move": [14, 46, 82, 101, 106, 109, 126, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 171, 175, 178, 183, 205, 206, 214, 225, 227, 283, 289, 292, 294], "todeletelist": 14, "later": 14, "delet": [14, 203, 251, 291], "createthread": 14, "resourcenam": 14, "callback": 14, "cbarg": 14, "cbkarg": 14, "add": [14, 189, 191, 260, 261, 283, 284, 289, 292, 293], "waitlist": [14, 15], "selflockthread": 14, "getrunningthread": 14, "globaltrac": 14, "frame": [14, 33, 34, 35, 36, 49, 51, 54, 87, 88, 90, 92, 166, 169, 171, 175, 176, 177, 180, 182, 183, 189, 203, 205, 206, 211, 214, 225, 227, 290, 294], "event": [14, 18, 19, 191, 192, 207, 227], "trace": [14, 46], "ani": [14, 41, 45, 46, 51, 134, 137, 139, 141, 144, 147, 150, 152, 179, 182, 189, 191, 194, 195, 205, 206, 288, 289, 294], "killthreadinlist": 14, "threadlist": 14, "kill": 14, "localtrac": 14, "movetodelet": 14, "taskthread": 14, "registerresourc": 14, "removethread": 14, "threadtaskwrap": 14, "dequ": 15, "waitlistlock": 15, "log": [18, 19, 22, 23, 49, 51, 54, 87, 88, 180, 261], "exclud": [18, 19], "perform": [18, 19, 28, 106, 166, 169, 174, 176, 177, 182, 183, 187, 188, 190, 194, 209, 211, 225, 289, 291, 294], "messag": [18, 19, 58, 164], "design": [18, 19, 101, 104, 106, 109, 158, 185, 188, 190, 193, 198, 201, 203, 289, 294], "record": [18, 19, 46, 166, 206], "spec": [18, 19, 49, 218, 223], "logger": [18, 19, 22, 49, 51, 54, 227], "which": [18, 19, 43, 46, 51, 54, 82, 134, 137, 139, 141, 144, 147, 150, 152, 169, 177, 180, 182, 187, 188, 189, 190, 191, 192, 196, 199, 214, 227, 268, 269, 283, 284, 289, 290, 292, 294], "togeth": [18, 19], "its": [18, 19, 46, 134, 139, 141, 144, 147, 150, 152, 188, 189, 190, 192, 199, 289], "children": [18, 19], "have": [18, 19, 43, 46, 82, 98, 175, 183, 187, 188, 190, 194, 205, 206, 221, 283, 284, 288, 289, 292, 293, 294], "everi": [18, 19, 270, 283, 292, 294], "logrecord": [18, 19], "includ": [19, 46, 59, 61, 62, 63, 65, 67, 68, 69, 71, 112, 114, 134, 137, 139, 141, 144, 147, 150, 152, 169, 174, 175, 178, 179, 182, 183, 187, 188, 189, 190, 191, 192, 195, 221, 283, 288, 289, 291, 292, 293, 294], "k": [21, 46], "v": [21, 46, 121, 203], "ve": [21, 289], "met": [21, 24], "condit": [21, 24, 46], "kei": [21, 24, 46, 112, 114, 124, 126, 156, 158, 161, 189, 191, 192, 198, 199, 201, 274, 284, 291], "filenam": [21, 46, 54, 92, 203, 227, 253], "test": [21, 46, 78, 150, 163, 164, 165, 166], "logging_configur": 22, "logging_path": [22, 261], "inform": [22, 46, 59, 61, 62, 63, 65, 82, 87, 88, 90, 101, 106, 141, 142, 178, 180, 227, 250, 253, 263, 283, 284, 292, 293], "format": [22, 46, 49, 51, 54, 96, 98, 199, 203, 218, 221, 283, 284, 288, 289, 292], "here": [22, 24, 87, 88, 231, 283, 284, 285, 288, 292], "http": [22, 34, 51, 101, 106, 134, 218, 220, 221, 223, 251, 288, 292, 293, 294], "doc": [22, 101, 134, 223, 251, 288], "org": [22, 218, 223, 251], "3": [22, 46, 218, 223, 236, 251, 268, 269, 270, 288, 289, 290, 292, 293, 294], "librari": [22, 46, 251, 284, 291], "config": [22, 225, 291, 292, 293], "html": [22, 223, 251, 288], "dictschema": 22, "rel": [22, 134, 185, 294], "locat": [22, 28, 46, 106, 156, 158, 161, 261, 283, 293, 294], "folder": [22, 227, 251, 258, 284, 293], "store": [22, 46, 49, 51, 85, 90, 92, 218, 220, 221, 223, 284], "aslm_path": 22, "queue": [23, 171, 207, 214, 227, 294], "listen": [23, 164], "put": [23, 46, 207, 292], "sub": [23, 46, 183, 203, 251], "via": [23, 46, 70, 98, 107, 163, 235, 283, 294], "d": [24, 46, 92, 274, 275], "find_func": 24, "apply_func": 24, "appli": [24, 46, 134, 176, 196, 198, 208], "loop": [24, 46, 166, 177, 289], "todo": [24, 87, 88, 171, 203, 221, 275, 287], "highli": 24, "gener": [24, 46, 54, 92, 139, 150, 164, 175, 176, 203, 223, 270, 288, 289], "doesn": [24, 46], "t": [24, 43, 45, 46, 49, 51, 54, 87, 88, 98, 106, 134, 218, 220, 221, 223], "belong": 24, "might": 24, "nice": 24, "make": [24, 41, 43, 45, 46, 264, 283, 284, 286, 289, 292], "func": [24, 57, 247, 248], "accept": [24, 41, 45, 46, 134, 261, 270, 288, 289], "pair": [24, 189, 191, 192, 227, 289], "match": [24, 46, 201, 270, 283, 288, 294], "d2": 24, "version": [24, 46, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 209, 290, 292, 293], "pass": [24, 41, 45, 46, 54, 96, 98, 188, 189, 190, 191, 198, 227, 283, 285, 288], "img_data": 28, "union": [28, 29, 30, 33, 35, 49, 51, 54, 218, 223], "_supportsarrai": [28, 29, 30, 33, 35, 49, 51, 54, 218], "dtype": [28, 29, 30, 33, 35, 45, 46, 49, 51, 54, 218], "_nestedsequ": [28, 29, 30, 33, 35, 49, 51, 54, 218], "complex": [28, 29, 30, 33, 35, 46, 49, 51, 54, 218], "byte": [28, 29, 30, 33, 35, 46, 49, 51, 54, 82, 106, 109, 218], "boundari": [28, 29, 31, 214, 263], "width": [28, 30, 46, 85, 87, 88, 90, 92, 166, 208, 225, 255, 268], "1": [28, 29, 30, 34, 45, 46, 49, 51, 54, 59, 82, 87, 90, 93, 112, 114, 134, 163, 165, 176, 177, 185, 190, 198, 205, 206, 208, 214, 218, 220, 221, 223, 225, 227, 230, 231, 232, 233, 234, 236, 263, 270, 283, 288, 289, 292, 294], "offset": [28, 30, 33, 35, 36, 46, 85, 87, 88, 90, 92, 124, 126, 156, 158, 161, 163, 171, 172, 175, 176, 225, 227, 231, 232, 233, 234, 236, 256, 292, 294], "varianc": [28, 30, 35, 36, 46, 85, 87, 88, 90, 92, 227], "binari": [28, 46, 256], "search": [28, 201, 214, 293], "tissu": [28, 29, 30, 31, 176, 205, 206, 208, 209, 214], "imag": [28, 29, 30, 31, 33, 35, 36, 38, 46, 49, 54, 85, 87, 88, 90, 92, 98, 121, 166, 171, 174, 176, 179, 183, 185, 203, 205, 206, 208, 209, 214, 215, 225, 227, 258, 264, 270, 289, 290, 294], "npt": [28, 29, 30, 33, 35, 49, 51, 54, 218, 268, 269, 270], "arraylik": [28, 29, 30, 33, 35, 49, 51, 54, 218, 268, 269, 270], "xy": [28, 33, 35, 36, 255], "presenc": [28, 205, 206], "subimag": [28, 30], "smaller": [28, 30, 46], "image_data": [28, 29, 30, 208, 209], "shape": [28, 30, 46, 49, 51, 54, 218, 220, 221, 223, 258], "map": [28, 30, 31, 33, 35, 36, 46, 85, 87, 88, 90, 92, 139, 150, 152, 214, 221, 227, 283, 292], "row": [28, 29, 31, 46, 266, 283], "downsampl": [28, 29, 31, 176], "mag_ratio": 29, "find": [29, 46, 214, 283, 289, 292, 293, 294], "otsu": [29, 176], "threshold": [29, 139, 176, 178, 208, 209], "space": [29, 46, 176, 203, 263, 264], "resampl": 29, "ratio": [29, 36], "tile": [29, 176, 214, 263, 264], "determin": [30, 46, 49, 139, 169, 175, 176, 177, 181, 182, 183, 189, 205, 206, 208, 209], "direct": [31, 46, 85, 87, 88, 90, 92, 214, 255, 294], "offset_map": [33, 35, 36], "comput": [33, 34, 35, 36, 82, 176, 194, 225, 283, 292, 293, 294], "flatfield": 33, "evenli": 33, "illumin": 33, "scmo": [33, 34, 35], "zyx": [33, 35, 36, 49], "defocus": 33, "signal": [33, 34, 35, 36, 98, 126, 164, 166, 169, 171, 174, 175, 177, 178, 182, 183, 187, 190, 191, 192, 195, 196, 205, 206, 207, 214, 227, 232, 289, 294], "np": [33, 34, 36, 38, 45, 46, 49, 54, 85, 87, 88, 90, 92, 106, 165, 203, 208, 214, 215, 230, 231, 232, 233, 234, 235, 236, 256, 264, 266], "absenc": [33, 35, 36], "oppos": 33, "flatfield_map": 33, "fn": 34, "qe": 34, "82": 34, "ib": 34, "nr": 34, "4": [34, 46, 82, 87, 90, 121, 229, 230, 232, 233, 234, 236, 288, 289, 290, 292], "m": [34, 82, 85, 87, 92, 121, 134, 145, 227, 283, 292, 293, 294], "nois": [34, 36], "www": [34, 106, 294], "hamamatsu": [34, 87, 88, 90, 290], "com": [34, 51, 101, 106, 134, 148, 220, 221, 223, 293, 294], "content": [34, 46, 200, 244, 252, 253, 289], "dam": 34, "photon": 34, "site": 34, "document": [34, 46, 78, 87, 88, 90, 134, 288, 289, 291, 293], "99_sales_librari": 34, "sy": [34, 46], "scas0134e_c13440": 34, "20cu_tec": 34, "pdf": [34, 106], "mean": [34, 41, 45, 46], "sigma": [34, 171, 172], "excess": 34, "factor": [34, 139, 284], "unitless": 34, "quantum": 34, "arrai": [34, 36, 46, 49, 51, 54, 208, 209, 230, 231, 232, 233, 234, 235, 236, 256, 258, 264, 266, 268, 269], "background": 34, "readout": [34, 85, 87, 88, 90, 92, 112, 114, 124, 126, 165, 225], "rm": 34, "em": 34, "gain": [34, 158], "estim": [34, 101, 203], "electron": 34, "numpi": [35, 46, 54, 87, 88, 92, 124, 126, 208, 209, 211, 225, 230, 231, 232, 233, 234, 235, 236, 258, 288], "_array_lik": 35, "_nested_sequ": 35, "dark": 35, "taken": [35, 41, 45, 156, 158, 161], "sequenti": [35, 41, 45, 225], "variance_map": 36, "snr": 36, "input_arrai": 38, "psf_support_diameter_xi": 38, "calcul": [38, 46, 85, 87, 88, 90, 92, 96, 98, 106, 109, 121, 139, 169, 171, 176, 181, 185, 208, 225, 227, 229, 263, 294], "entropi": [38, 171, 227], "ndarrai": [38, 46, 54, 85, 87, 88, 90, 92, 124, 126, 165, 166, 203, 208, 209, 211, 214, 215, 225], "2d": [38, 46, 176], "3d": [38, 49, 82], "iter": [38, 46, 166, 188, 189, 190, 191, 192, 198, 201, 225], "each": [38, 46, 49, 51, 54, 57, 82, 96, 98, 124, 126, 134, 139, 150, 156, 158, 161, 166, 169, 179, 182, 189, 191, 192, 196, 198, 201, 203, 205, 206, 218, 225, 227, 242, 263, 264, 266, 270, 283, 284, 285, 288, 289, 292, 294], "plane": [38, 175, 205, 206, 289, 294], "support": [38, 46, 49, 139, 201, 288, 291, 292], "psf": 38, "dimens": [38, 46, 49, 51, 54, 227, 263, 264, 292], "first_resourc": 41, "resultthread": [41, 42], "access": [41, 45, 46, 51, 283, 293], "order": [41, 46, 82, 182, 188, 190, 198, 218, 220, 221, 223, 283, 292], "thei": [41, 43, 46, 98, 195, 283, 288, 292, 293, 294], "were": [41, 46, 203, 292, 293], "launch": [41, 45, 227, 292], "docstr": [41, 284, 288], "top": [41, 85, 87, 88, 90, 92, 251, 283, 292, 294], "reserv": [41, 45], "futur": [41, 45, 46, 284, 294], "extens": [41, 45, 203], "implement": [41, 45, 46, 49, 51, 90, 139, 141, 147, 150, 152, 193, 221, 283, 291, 294], "noth": [41, 45, 194, 195], "By": [41, 45, 46, 288, 292, 294], "uniqu": [41, 45, 223, 294], "construct": [41, 45, 46, 156, 158, 161, 214], "form": [41, 45, 46, 208, 284, 288, 289, 294], "n": [41, 45, 46, 54, 174, 176, 214, 268, 269, 270, 284, 288, 292, 293], "small": [41, 45, 284], "decim": [41, 45, 46, 82], "invoc": [41, 45], "subclass": [41, 45, 46], "overrid": [41, 45, 49], "sure": [41, 45, 46, 283, 292], "anyth": [41, 45], "els": [41, 45], "get_result": [41, 45], "timeouterror": [41, 45], "standard": [41, 45, 46, 288, 291], "respect": [41, 45, 46, 199, 208, 292], "control": [41, 45, 46, 59, 82, 101, 102, 104, 106, 134, 135, 139, 141, 145, 152, 153, 158, 161, 163, 164, 165, 166, 169, 175, 177, 178, 181, 182, 183, 187, 188, 189, 190, 191, 192, 203, 225, 227, 239, 283, 284, 289, 291, 292], "alia": [42, 44, 46], "initarg": 43, "custom_loop": 43, "close_method_nam": 43, "closearg": 43, "closekwarg": 43, "with_lock": 43, "initkwarg": 43, "child": [43, 45, 51, 54, 196], "act": [43, 46, 291], "like": [43, 46, 258, 263, 283, 288, 292, 293, 294], "isn": [43, 106], "much": [43, 294], "try": [43, 45, 284, 293], "instanc": [43, 46, 169, 174, 196, 266, 283, 292], "behav": [43, 46, 283, 284, 292], "re": [43, 45], "live": [43, 46, 227, 284], "parent": [43, 45, 85, 96, 104, 112, 124, 129, 137, 156], "cours": 43, "spare": 43, "core": [43, 46], "your": [43, 46, 251, 283, 284, 289, 291, 292, 294], "machin": [43, 46, 134, 293], "turn": [43, 112, 114, 117, 119, 225, 227, 283, 289, 292, 294], "cpu": [43, 46], "bound": [43, 134, 137, 139, 141, 144, 147, 150, 152, 176, 283, 292], "parallel": [43, 294], "io": [43, 288], "without": [43, 45, 46, 191, 203, 283, 284, 292, 294], "too": [43, 290], "mental": 43, "overhead": [43, 227], "coder": [43, 284], "our": [43, 45, 46, 90, 92, 218, 221, 283, 284, 291, 292, 293, 294], "automat": [43, 284, 289, 294], "close_method": 43, "custodythread": 44, "simpl": [45, 46, 193, 289], "wish": 45, "had": 45, "chang": [45, 46, 87, 88, 90, 92, 101, 106, 109, 134, 156, 158, 161, 174, 176, 178, 227, 288, 289, 292, 293, 294], "trivial": 45, "save": [45, 54, 90, 134, 137, 139, 141, 144, 147, 150, 152, 171, 183, 199, 203, 214, 227, 250, 253, 289], "u": [45, 46, 284, 294], "line": [45, 46, 85, 87, 88, 90, 92, 134, 227, 255, 284, 288, 289, 292], "code": [45, 46, 51, 90, 93, 163, 171, 220, 221, 223, 283, 286, 288, 289, 291, 292, 293], "def": [45, 288, 289], "doe": [45, 46, 51, 54, 175, 194, 275, 283, 292, 293, 294], "someth": [45, 46, 284, 292], "sum": [45, 46], "ones": 45, "2": [45, 46, 82, 87, 90, 112, 114, 164, 209, 218, 231, 232, 270, 283, 288, 289, 290, 292, 294], "uint8": [45, 46], "problem": [45, 46, 293], "th": [45, 46], "redefin": 45, "solut": [45, 290], "res_th": 45, "assert": 45, "handl": [45, 51, 54, 139, 141, 175, 181, 183, 188, 189, 190, 191, 196, 283, 292], "idea": 45, "attributeerror": [45, 46, 288], "print": [45, 46, 87, 88, 90, 92, 288], "wa": [45, 46, 82, 90, 134, 139, 141, 144, 147, 150, 152, 175, 203, 206, 214, 227, 253], "assertionerror": 45, "dure": [45, 51, 166, 169, 171, 174, 175, 177, 178, 179, 180, 181, 182, 183, 189, 190, 205, 206, 231], "evalu": [45, 46, 203, 248, 268, 269, 270, 284, 292], "rerais": 45, "traceback": [45, 46], "stderr": 45, "don": [45, 87, 88, 134], "affect": [45, 46], "yet": [45, 193, 283], "note": [45, 46, 166, 288, 292], "modifi": [45, 174, 198, 284, 289, 292], "excepthook": 45, "copi": [45, 46, 198, 292], "past": 45, "definit": 45, "work": [45, 46, 98, 284, 293], "shared_memory_nam": 46, "stride": 46, "memori": [46, 227, 284], "output": [46, 68, 70, 98, 139, 234, 288, 294], "objectinsubprocess": 46, "serial": [46, 82, 87, 88, 90, 92, 101, 102, 106, 107, 109, 142, 145, 148, 152, 153, 244, 294], "pretti": 46, "fast": [46, 134], "larg": [46, 284], "regularli": 46, "deal": [46, 221], "sens": 46, "wai": [46, 227, 263, 283, 284, 288, 292], "avoid": [46, 256, 284, 292], "slow": 46, "mayb": 46, "want": [46, 106, 109, 283, 286, 289, 292, 293, 294], "write": [46, 49, 51, 54, 98, 183, 203, 218, 221, 223, 227, 284], "look": [46, 93, 263, 283, 292, 294], "data_buf": 46, "zero": [46, 134, 137, 144], "400": 46, "uint16": 46, "display_buf": 46, "preprocessor": 46, "displai": [46, 58, 82, 96, 98, 199, 227, 289], "num_imag": 46, "show": [46, 227, 289, 293, 294], "payoff": 46, "own": [46, 292], "AND": 46, "realli": 46, "To": [46, 221, 283, 284, 286, 289, 292, 294], "memmap": 46, "axi": [46, 134, 137, 139, 141, 144, 147, 150, 152, 156, 158, 161, 185, 263, 270, 283, 292, 294], "keepdim": 46, "element": [46, 163, 198, 218, 223, 275], "refer": [46, 145, 171, 177, 181, 189, 191, 192, 225, 231, 242, 291], "full": [46, 88, 283, 294], "equival": [46, 293, 294], "argmax": 46, "maximum": [46, 85, 87, 88, 90, 92, 134, 139, 171, 203, 227, 283, 291, 292], "along": [46, 49, 134, 139, 141, 144, 147, 150, 152, 227, 263, 264], "argmin": 46, "minimum": [46, 85, 87, 88, 90, 92, 139, 185, 205, 206, 208, 283, 290, 292], "detail": [46, 106], "argpartit": 46, "kth": 46, "kind": 46, "introselect": 46, "partit": 46, "8": [46, 82, 292, 294], "argsort": 46, "sort": [46, 198], "astyp": 46, "cast": 46, "unsaf": 46, "subok": 46, "typecod": 46, "data": [46, 49, 51, 52, 54, 65, 82, 87, 88, 90, 92, 96, 98, 139, 165, 166, 169, 171, 174, 177, 178, 180, 181, 182, 183, 188, 189, 195, 196, 198, 203, 205, 206, 208, 209, 214, 218, 220, 221, 223, 225, 227, 250, 253, 266, 283, 289, 290, 291], "layout": 46, "fortran": 46, "contigu": 46, "close": [46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 98, 101, 106, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 158, 187, 188, 190, 203, 225, 227, 263, 289], "appear": [46, 289, 292], "equiv": 46, "safe": 46, "same_kind": 46, "what": [46, 263, 283, 289, 292], "backward": 46, "compat": [46, 49, 284], "preserv": 46, "within": [46, 134, 137, 139, 141, 144, 147, 150, 152, 196, 199, 208, 270, 284, 289, 292, 293, 294], "float64": 46, "float32": 46, "convers": [46, 87, 88], "done": [46, 87, 88, 106, 225, 227, 283, 292, 293, 294], "forc": 46, "newli": [46, 227], "alloc": 46, "satisfi": [46, 289], "arr_t": 46, "unless": [46, 284], "descript": [46, 288], "17": [46, 294], "one": [46, 54, 82, 134, 137, 139, 141, 144, 147, 150, 152, 182, 188, 189, 191, 192, 227, 283, 288, 289, 294], "field": [46, 283, 292], "9": [46, 292, 293, 294], "numer": [46, 288, 291], "mode": [46, 49, 51, 54, 82, 85, 87, 88, 90, 92, 98, 145, 147, 150, 165, 174, 175, 183, 185, 214, 225, 227, 289, 290, 292, 294], "length": [46, 193, 194, 263, 264, 270, 288], "long": 46, "enough": 46, "complexwarn": 46, "real": [46, 193, 194, 227], "5": [46, 208, 231, 283, 289, 290, 292, 294], "byteswap": 46, "inplac": 46, "swap": 46, "toggl": 46, "low": [46, 82, 263, 290], "endian": [46, 82], "big": [46, 203], "represent": [46, 49, 51, 199, 220, 221, 223, 275, 289], "place": [46, 198, 283, 292, 294], "imaginari": 46, "part": [46, 198, 284], "individu": [46, 180, 291], "view": [46, 163, 164, 165, 166, 218, 223, 227, 284, 291], "256": 46, "8755": 46, "int16": 46, "hex": 46, "0x1": 46, "0x100": 46, "0x2233": 46, "13090": 46, "0x3322": 46, "b": [46, 106, 107], "ceg": 46, "fac": 46, "s3": 46, "newbyteord": 46, "produc": [46, 274], "choos": [46, 288, 289], "choic": [46, 289], "index": [46, 49, 54, 67, 68, 98, 106, 156, 158, 161, 178, 183, 198, 203, 214, 223, 225, 227, 258, 283, 292, 294], "clip": 46, "One": [46, 54], "compress": [46, 203], "select": [46, 96, 98, 124, 126, 225, 289, 294], "slice": [46, 49, 203, 258, 270], "conj": 46, "conjug": 46, "wise": 46, "veri": 46, "similar": [46, 189, 191, 192, 283, 284, 288, 292], "behavior": [46, 189, 191, 192, 284, 288, 289, 294], "copyto": 46, "prefer": 46, "6": [46, 223, 289, 292, 294], "fill": [46, 171, 215], "c_contigu": 46, "cumprod": 46, "cumul": 46, "product": [46, 134, 284, 291, 294], "cumsum": 46, "diagon": 46, "axis1": 46, "axis2": 46, "In": [46, 221, 283, 284, 289, 292, 294], "previou": [46, 92], "restrict": 46, "dump": 46, "pickl": 46, "back": [46, 82, 218, 221, 231, 289, 294], "pathlib": 46, "now": [46, 175, 218, 293], "scalar": 46, "assign": [46, 195], "flatten": 46, "collaps": 46, "major": 46, "style": [46, 288, 294], "column": 46, "ravel": 46, "flat": 46, "getfield": 46, "certain": [46, 292], "need": [46, 87, 88, 90, 92, 169, 171, 174, 175, 185, 188, 189, 191, 192, 193, 194, 196, 198, 203, 225, 227, 263, 283, 288, 289, 292, 293, 294], "fit": [46, 171, 172, 288], "complex128": 46, "16": [46, 203], "take": [46, 196, 199, 201, 208, 214, 225, 264], "bit": [46, 49, 51, 54, 82, 203, 221], "12": [46, 82, 292, 294], "larger": 46, "itself": [46, 198, 288], "skip": 46, "begin": [46, 169, 187, 188, 190, 205, 206], "diag": 46, "j": [46, 121], "item": [46, 198, 281, 283, 292], "variabl": [46, 121, 182, 193, 194, 196, 205, 206, 208, 284, 288, 293, 294], "case": [46, 82, 185, 284], "int_typ": 46, "interpret": 46, "singl": [46, 49, 121, 134, 139, 141, 144, 147, 150, 152, 234, 258, 263], "nd": 46, "suitabl": 46, "longdoubl": 46, "clongdoubl": 46, "becaus": [46, 283], "lose": 46, "void": 46, "buffer": [46, 82, 87, 88, 90, 92, 165, 166, 203, 225, 227], "defin": [46, 57, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 188, 190, 192, 195, 221, 270, 283, 289, 292], "speed": [46, 82, 106, 134, 147, 150, 158, 284, 290], "up": [46, 51, 90, 93, 98, 139, 164, 169, 183, 185, 214, 255, 289, 292, 294], "arithmet": 46, "optim": [46, 169, 294], "math": 46, "random": [46, 92], "seed": 46, "123": 46, "randint": 46, "7": [46, 231, 289, 290, 292, 293, 294], "itemset": 46, "There": [46, 221, 294], "least": [46, 82], "last": [46, 82, 198, 263, 293], "Then": [46, 289], "faster": [46, 182], "two": [46, 198, 227, 283, 288, 292, 294], "first": [46, 82, 156, 158, 161, 163, 182, 198, 221, 263, 283, 288, 289, 292, 293, 294], "compar": [46, 171], "syntax": 46, "some": [46, 51, 220, 221, 223, 284, 289, 293, 294], "increas": [46, 284], "particular": [46, 294], "howev": [46, 284, 294], "discourag": 46, "among": 46, "complic": 46, "insid": [46, 293], "amax": 46, "averag": 46, "amin": 46, "new_ord": 46, "arr": 46, "newbytord": 46, "specif": [46, 106, 134, 169, 179, 180, 181, 191, 192, 193, 283, 292, 294], "below": [46, 283, 284, 288, 289, 292, 293], "opposit": 46, "littl": [46, 82], "byteord": 46, "ignor": [46, 218, 284], "new_arr": 46, "reflect": [46, 292], "rearrang": 46, "equal": [46, 198, 208, 288], "greater": [46, 208], "behind": 46, "undefin": 46, "sequenc": [46, 82, 187, 188, 189, 190, 191, 192, 258, 289], "final": [46, 169, 187, 188, 190, 283, 292], "them": [46, 188, 190, 195, 196, 198, 284, 293, 294], "sinc": [46, 294], "22": 46, "algorithm": 46, "etc": [46, 51, 90, 134, 137, 139, 141, 144, 147, 150, 152, 220, 221, 223, 261, 263, 291], "unspecifi": 46, "come": [46, 92], "break": [46, 284, 288], "ti": 46, "paritit": 46, "indirect": 46, "prod": 46, "ptp": 46, "peak": [46, 231], "repeat": [46, 96, 98, 272, 290, 292], "reshap": 46, "unlik": [46, 209], "free": [46, 294], "For": [46, 98, 134, 139, 141, 144, 147, 150, 152, 209, 251, 283, 284, 289, 292, 294], "10": [46, 57, 82, 87, 106, 107, 134, 176, 185, 208, 229, 231, 232, 233, 234, 235, 236, 283, 290, 292, 294], "11": [46, 145, 292, 294], "resiz": 46, "new_shap": 46, "refcheck": 46, "count": [46, 164, 177, 181, 183, 185, 198, 208, 283, 292], "valueerror": [46, 101, 104, 106, 109, 158, 198, 288], "pypi": 46, "reliabl": 46, "systemerror": 46, "behaviour": 46, "bug": [46, 284], "realloc": 46, "area": [46, 208], "consecut": 46, "shrink": 46, "enlarg": 46, "abov": [46, 292], "entri": [46, 187, 239, 283, 289, 292, 294], "referenc": 46, "prevent": 46, "recent": [46, 294], "cannot": 46, "round": 46, "around": [46, 289], "searchsort": 46, "side": [46, 194, 263], "sorter": 46, "maintain": [46, 182, 187, 198], "setfield": 46, "val": [46, 57], "ey": 46, "int32": 46, "0e": 46, "000": 46, "5e": 46, "323": 46, "setflag": 46, "uic": 46, "writeabl": 46, "writebackifcopi": 46, "updateifcopi": 46, "These": [46, 174, 187, 188, 190, 201, 283, 294], "how": [46, 171, 190, 283, 284, 288, 289, 292, 293], "actual": [46, 51, 87, 88, 194, 209, 229, 263, 284], "never": 46, "ultim": 46, "owner": 46, "expos": 46, "interfac": [46, 82, 90, 288], "unpickl": 46, "describ": [46, 288, 289], "written": [46, 49, 203, 218, 284, 288], "properli": [46, 283, 294], "about": [46, 180, 253, 263, 284], "four": [46, 82, 294], "w": [46, 49, 51, 54, 268], "appropri": [46, 284, 293, 294], "compil": 46, "pyarray_resolvewritebackifcopi": 46, "upper": [46, 215, 256, 288], "letter": 46, "well": [46, 291], "f_contigu": 46, "owndata": 46, "stdin": 46, "quicksort": 46, "mergesort": 46, "heapsort": 46, "stabl": [46, 198], "both": [46, 49, 70, 134, 179, 221, 288, 289, 293, 294], "timsort": 46, "under": [46, 283, 289, 291, 292, 294], "cover": [46, 263, 294], "vari": 46, "datatyp": 46, "retain": 46, "15": [46, 270], "lexsort": 46, "partial": 46, "s1": 46, "i8": 46, "squeez": 46, "ax": [46, 82, 134, 137, 139, 141, 144, 147, 150, 152, 283, 294], "std": 46, "ddof": 46, "deviat": [46, 285], "swapax": 46, "interchang": 46, "tobyt": 46, "raw": 46, "short": 46, "exhibit": 46, "u2": 46, "x00": 46, "x01": 46, "x02": 46, "x03": 46, "tofil": 46, "fid": 46, "sep": 46, "text": [46, 256, 288, 289, 293], "independ": [46, 294], "recov": 46, "fromfil": 46, "open": [46, 49, 51, 54, 129, 131, 158, 227, 284, 289, 293, 294], "closest": 46, "conveni": 46, "quick": [46, 134], "storag": [46, 166], "precis": [46, 294], "lost": 46, "good": [46, 284], "intend": [46, 199], "archiv": 46, "transport": 46, "overcom": 46, "expens": 46, "directli": [46, 87, 88, 177, 289, 294], "bypass": 46, "gzipfil": 46, "fileno": 46, "bytesio": 46, "tolist": 46, "ndim": 46, "deep": 46, "nearest": 46, "builtin": 46, "depth": 46, "possibli": [46, 169], "recreat": 46, "although": 46, "sometim": 46, "1d": 46, "almost": 46, "uint32": 46, "a_list": 46, "a_tolist": 46, "addition": [46, 225], "0d": [46, 82], "typeerror": 46, "tostr": 46, "exactli": [46, 294], "despit": 46, "19": 46, "transpos": 46, "effect": [46, 194], "vector": 46, "simpli": [46, 194, 284], "atleast2d": 46, "achiev": 46, "newaxi": 46, "matrix": [46, 106, 218], "permut": 46, "revers": [46, 198], "becom": 46, "altern": [46, 90, 220, 221, 223, 288], "give": [46, 198, 283], "var": 46, "omit": 46, "former": [46, 225], "float_": 46, "descriptor": 46, "again": [46, 214], "omiss": 46, "some_dtyp": 46, "reinterpret": 46, "ndarray_subclass": 46, "regular": [46, 284, 288], "predict": 46, "superfici": 46, "shown": [46, 289, 293], "versu": 46, "int8": 46, "513": 46, "xv": 46, "underli": 46, "20": [46, 208, 292, 294], "i1": 46, "recarrai": 46, "i2": 46, "ctype": 46, "simplifi": 46, "interact": [46, 292], "easier": [46, 198], "themselv": [46, 289], "possess": 46, "ctypeslib": 46, "public": [46, 288], "guid": [46, 134, 284], "undocu": 46, "privat": [46, 288], "_ctype": 46, "pointer": [46, 51, 289], "correct": [46, 139], "arbitrari": [46, 51, 288, 289], "troubl": 46, "crash": [46, 284], "bewar": 46, "_array_interface_": 46, "data_a": 46, "kept": 46, "c_void_p": 46, "dealloc": 46, "spelt": 46, "basetyp": 46, "correspond": [46, 134, 139, 141, 147, 166, 176, 189, 191, 192, 199, 201, 283, 292, 294], "p": [46, 49, 158, 268, 269, 270], "platform": 46, "c_intp": 46, "could": [46, 107, 139, 251, 289, 294], "c_int": 46, "c_long": 46, "c_longlong": 46, "import": [46, 284, 289, 291, 292, 294], "jump": 46, "next": [46, 163, 171, 178, 179, 214, 225, 288, 289, 294], "obj": [46, 101, 106, 158, 288], "_as_parameter_": 46, "perhap": 46, "c_doubl": 46, "keep": [46, 190, 284], "shape_a": 46, "c_short": 46, "strides_a": 46, "as_paramet": 46, "31962608": 46, "c_uint32": 46, "__main__": 46, "lp_c_uint": 46, "0x7ff2fc1fc200": 46, "c_uint": 46, "c_uint64": 46, "c_ulong": 46, "4294967296": 46, "_intern": 46, "c_long_array_2": 46, "0x7ff2fc1fce60": 46, "0x7ff2fc1ff320": 46, "segment": [46, 211, 212, 227], "o": [46, 82, 245, 251, 252, 256, 293], "borrow": [46, 51, 220, 221, 223], "subsequ": [46, 292], "while": [46, 147, 283], "remain": [46, 134, 177, 181, 182, 190], "alreadi": [46, 189, 284, 293], "circumst": 46, "alter": [46, 134], "previous": 46, "onto": [46, 294], "fnc": 46, "carrai": 46, "ca": 46, "farrai": 46, "fa": 46, "lowercas": 46, "arbitrarili": 46, "truli": [46, 294], "simultan": [46, 54, 134, 284, 294], "dimension": 46, "higher": [46, 171], "dim": [46, 258], "hold": [46, 253], "items": 46, "flatit": 46, "similarli": [46, 221], "built": [46, 198, 285], "arang": 46, "sqrt": 46, "0j": 46, "1j": 46, "70710678": 46, "nbyte": [46, 49, 51, 54], "total": [46, 139, 171, 178, 190, 208, 227, 263, 283], "consum": 46, "480": 46, "usual": 46, "infer": 46, "fail": [46, 283, 289, 292], "unchang": 46, "incompat": 46, "modif": [46, 284], "desir": [46, 87, 88, 90, 92, 134, 156, 158, 161, 174, 176, 227, 261], "obtain": 46, "suggest": 46, "int_": 46, "relev": [46, 180, 193, 288], "further": 46, "overflow": 46, "fix": [46, 82, 177, 284], "travers": 46, "explan": 46, "found": [46, 58, 85, 87, 88, 90, 92, 101, 106, 214, 227, 283, 284, 292, 293], "rst": 46, "imagin": 46, "40": [46, 185], "known": [46, 294], "tell": [46, 283, 284], "lib": 46, "stride_trick": 46, "as_strid": 46, "13": [46, 82], "14": [46, 82, 270, 292], "18": 46, "21": 46, "23": 46, "48": [46, 294], "224": 46, "1344": 46, "813": 46, "file_nam": [49, 51, 54, 218, 221, 223], "datasourc": [49, 52, 54, 203], "bigdataview": [49, 218, 221], "sourc": [49, 51, 52, 54, 139, 185, 203, 290, 294], "hdf5": 49, "n5": 49, "multi": [49, 175, 178, 183, 189, 191, 192, 289, 294], "resolut": [49, 82, 147, 174, 176, 185, 211, 214, 227, 290], "pyramid": [49, 51, 54], "subdivid": 49, "32x32x1": 49, "r": [49, 51, 54, 171, 266, 269], "get_shape_from_metadata": [49, 51, 54], "metadata": [49, 51, 54, 175, 218, 223], "get_slic": 49, "subdiv": 49, "dataset": 49, "grab": [49, 163], "timepoint": [49, 54, 175, 181, 292], "subdivis": 49, "set_metadata_from_configuration_experi": [49, 51, 54], "dictproxi": [49, 51, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 129, 131, 134, 137, 139, 144, 156, 161, 218, 220, 221, 223], "kw": [49, 51, 54, 218, 221, 223], "notimplementederror": [49, 51], "deriv": [49, 51], "dc": [49, 51, 54, 218, 220, 221, 223, 230], "dt": [49, 51, 54, 218, 220, 221, 223], "interv": [49, 51, 54, 85, 87, 88, 90, 92, 227, 283, 294], "dx": [49, 51, 54, 218, 220, 221, 223], "micron": [49, 51, 54, 82, 134, 137, 139, 144, 147, 290], "dy": [49, 51, 54, 218, 220, 221, 223], "dz": [49, 51, 54, 218, 220, 221, 223], "bigdataviewermetadata": 49, "getter": [49, 51, 54, 288], "account": [49, 51, 54, 112, 114, 275], "xyz": [49, 134], "bdv": 49, "xyczt": [49, 51, 54, 218, 220, 221, 223], "shape_c": [49, 51, 54, 218, 220, 221, 223], "shape_t": [49, 51, 54, 218, 220, 221, 223], "shape_x": [49, 51, 54, 218, 220, 221, 223], "shape_i": [49, 51, 54, 218, 220, 221, 223], "shape_z": [49, 51, 54, 218, 220, 221, 223], "rather": [49, 294], "voxel_s": [49, 51, 54, 218, 220, 221, 223], "voxel": [49, 51, 54, 218, 220, 221, 223], "metdata": 51, "concept": [51, 220, 221, 223], "microscopi": [51, 121, 169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 220, 221, 223], "github": [51, 220, 221, 223, 291, 292, 293], "clean": [51, 183, 185, 291], "leftov": 51, "That": [51, 54], "bdv_data_sourc": [51, 54], "file_typ": [52, 203, 218, 221, 223], "tif": [52, 54, 203, 258], "tifdatasourc": 52, "is_bigtiff": 54, "tiff": [54, 92, 203, 221, 223, 258], "bigtiff": 54, "intern": [54, 220, 221, 223], "generate_image_nam": [54, 203], "current_channel": [54, 165, 203, 225], "current_time_point": [54, 203], "ch00_000000": [54, 203], "set_bigtiff": 54, "stack": [54, 90, 92, 171, 175, 181, 183, 185, 205, 206, 218, 220, 221, 223, 289, 294], "At": 54, "tifffil": 54, "imsav": 54, "is_om": 54, "om": [54, 221, 223, 275], "save_directori": [54, 203, 250], "dummi": [56, 193, 194, 195], "n_tri": 57, "retri": 57, "connect": [57, 64, 66, 67, 68, 69, 70, 71, 72, 82, 85, 87, 88, 90, 92, 98, 101, 102, 104, 106, 107, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 135, 137, 139, 141, 142, 144, 145, 147, 148, 150, 152, 153, 156, 158, 159, 161, 225, 227, 283, 292, 294], "startup": [57, 283, 292], "tri": [57, 284], "redial": 57, "baseexcept": 57, "dcam": [57, 294], "incorrect": 58, "device_typ": 58, "camera_id": 59, "is_synthet": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 165, 225, 284], "proper": [59, 61, 62, 63, 65, 67, 68, 69, 71, 178, 293, 294], "hamamatsuorca": [59, 85, 88, 90, 92, 283, 292, 294], "hamamatsuorcalightn": [59, 294], "photometr": [59, 90], "syntheticcamera": [59, 294], "synthet": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 92, 93, 98, 131, 150, 165, 225, 227, 283, 285, 292], "dedic": [61, 62, 63, 65, 66, 70, 72], "sutterfilterwheel": [61, 66, 107, 283, 292, 294], "asi": [61, 62, 66, 71, 101, 102, 134, 135, 185, 283, 292], "syntheticfilterwheel": [61, 66], "multiproces": [61, 63, 65, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 129, 156], "pull": [62, 87, 88, 284, 292], "pi": [62, 71, 144, 145, 232, 236, 283, 292, 294], "mp285": [62, 71, 147, 148, 290, 294], "thorlab": [62, 71, 152, 153, 283, 290, 292], "mcl": [62, 71, 141], "galvonistag": [62, 71, 294], "syntheticstag": [62, 71, 283, 292, 294], "dynamixelzoom": [63, 72, 159, 283, 292], "syntheticzoom": [63, 72, 283, 292], "device_connect": [64, 66, 67, 68, 69, 70, 71, 72, 85, 87, 88, 90, 92, 101, 104, 106, 109, 112, 114, 117, 119, 124, 126, 129, 131, 134, 137, 139, 141, 144, 147, 150, 152, 158, 161, 225, 284], "acquisit": [65, 85, 87, 88, 90, 92, 96, 98, 112, 114, 139, 169, 174, 175, 177, 178, 181, 182, 183, 185, 203, 225, 227, 289, 290, 291], "ni": [65, 67, 68, 69, 70, 283, 292], "syntheticdaq": 65, "filterwheel": 66, "syntheticgalvo": 67, "scan": [67, 90, 134, 150, 175, 185, 205, 206, 290, 294], "syntheticlas": 68, "switch": [68, 106, 227, 231, 283, 292, 294], "analog": [68, 98, 139, 233, 234, 236, 290], "digit": [68, 70, 294], "trigger": [68, 70, 98, 131, 139, 148, 185, 207, 229, 294], "focus": [69, 124, 231, 261, 290, 291], "equipmentsolut": [69, 294], "syntheticremotefocu": 69, "shutter": [70, 85, 87, 88, 92, 227, 291], "thorlabsshutt": 70, "syntheticshutt": [70, 294], "card": [70, 139, 227, 291], "thu": [70, 292, 294], "enabl": [70, 96, 98, 109, 134, 137, 139, 141, 144, 147, 150, 152, 158, 183, 214, 285, 288, 290, 294], "mock": 78, "dxl_lib": 78, "magicmock": 78, "com_port": [82, 135, 148], "baud_rat": [82, 135, 148], "25": [82, 102, 107, 148, 294], "usb": [82, 294], "baud": [82, 102, 107, 109, 135, 148], "9600": [82, 107, 109, 135, 283, 292, 294], "stop": [82, 87, 88, 90, 92, 98, 112, 114, 124, 126, 134, 137, 139, 141, 144, 147, 150, 152, 164, 166, 187, 188, 190, 198, 225, 227], "pariti": 82, "flow": 82, "rt": 82, "ct": [82, 291], "command": [82, 134, 156, 161, 163, 227, 284, 293], "respons": [82, 166, 169, 172, 174, 176, 178, 187, 188, 189, 190, 191, 192, 195, 212, 214, 225, 291], "consist": [82, 187, 190, 283, 284, 288], "those": [82, 189, 191, 192], "follow": [82, 156, 158, 161, 176, 179, 199, 201, 284, 288, 289, 292, 293], "No": 82, "delimit": 82, "ascii": 82, "cr": [82, 290], "carriag": 82, "hexadecim": 82, "complet": [82, 106, 182, 189, 191, 195, 214, 289], "send": [82, 139, 164, 166], "host": 82, "readi": [82, 179, 208, 225, 227, 292], "receiv": [82, 164, 166, 183, 191, 192, 205, 206, 227, 294], "static": [82, 90, 171], "convert_microns_to_microstep": 82, "microstep": 82, "distanc": [82, 134, 139, 171, 178, 183, 263, 268, 269, 270, 285], "convert_microsteps_to_micron": 82, "flush_buff": 82, "flush": 82, "get_controller_statu": 82, "statu": [82, 189], "mp": [82, 147, 285], "285": [82, 147, 285], "33": 82, "success": [82, 87, 88, 134, 139, 141, 144, 147, 150, 152, 174, 175, 179, 180, 182, 207, 225, 227, 288], "command_complet": 82, "get_current_posit": 82, "x_po": [82, 134, 137, 144, 283, 294], "y_po": [82, 134, 137, 144, 283, 294], "z_po": [82, 214, 283, 294], "interrupt_mov": 82, "interrupt": 82, "movement": [82, 106, 134, 137, 139, 141, 144, 147, 150, 152, 178, 183, 283, 292], "progress": [82, 292, 294], "origin": [82, 183, 293], "stage_stop": 82, "move_to_specified_posit": 82, "instruct": 82, "three": 82, "end": [82, 134, 150, 166, 171, 175, 182, 183, 187, 188, 190, 195, 198, 205, 206, 214, 225, 227, 283, 284, 288, 289], "move_complet": 82, "refresh_displai": 82, "refresh": 82, "vfd": 82, "vacuum": 82, "fluoresc": [82, 121], "reset_control": 82, "reset": [82, 166, 185, 187, 188, 190], "set_absolute_mod": 82, "absolut": [82, 134, 137, 139, 141, 144, 147, 150, 152, 284], "natur": 82, "measur": [82, 169, 263], "set_resolution_and_veloc": 82, "veloc": [82, 134, 147, 150, 185, 283, 292, 294], "3000": 82, "sec": [82, 163], "high": [82, 96, 98, 174, 263, 290], "1310": 82, "04": 82, "50": [82, 232, 236, 292, 294], "nameerror": 85, "calculate_light_sheet_exposure_tim": [85, 87, 88, 90, 92], "full_chip_exposure_tim": [85, 87, 88, 90, 92], "shutter_width": [85, 87, 88, 90, 92], "exposur": [85, 87, 88, 90, 92, 96, 98, 112, 114, 124, 126, 139, 165, 185, 225, 227, 229, 283], "light": [85, 87, 88, 90, 92, 227, 292, 294], "sheet": [85, 87, 88, 90, 92, 227, 292, 294], "roll": [85, 87, 92], "exposure_tim": [85, 87, 88, 90, 92, 96, 98, 112, 114, 124, 126, 139, 225, 227, 231, 283, 292, 294], "camera_line_interv": [85, 87, 88, 90, 92, 227], "durat": [85, 87, 88, 90, 92, 98, 101, 106, 109, 139, 148, 158, 227, 229, 248], "close_camera": [85, 87, 88, 90, 92], "get_line_interv": [85, 87, 88, 90, 92], "line_interv": [85, 90, 92, 292, 294], "get_offset_variance_map": [85, 87, 88, 90, 92, 227], "filenotfounderror": [85, 87, 88, 90, 92, 258], "set_readout_direct": [85, 87, 88, 90, 92], "bottom": [85, 87, 88, 90, 92, 289, 292, 294], "bytrigg": [85, 87, 88, 92], "diverg": [85, 87, 88, 92], "camera_control": [85, 87, 88, 90, 92], "camera_paramet": [85, 87, 88, 90, 92], "is_acquir": [85, 87, 88, 90, 92, 227], "acquir": [85, 87, 88, 90, 92, 175, 176, 178, 183, 203, 225, 227, 283, 289, 294], "max_image_height": [85, 87, 88, 90, 92], "height": [85, 87, 88, 90, 92, 166, 225, 255], "max_image_width": [85, 87, 88, 90, 92], "min_image_height": [85, 87, 88, 90, 92], "min_image_width": [85, 87, 88, 90, 92], "step_image_height": [85, 87, 88, 90, 92], "step_image_width": [85, 87, 88, 90, 92], "camerabas": [87, 90, 92], "orca": [87, 90], "flash": [87, 90, 290], "fusion": 87, "lightn": 87, "serial_numb": [87, 88, 90, 92, 145, 152, 283, 292, 294], "302158": [87, 283, 292], "302159": 87, "302352": [87, 283, 292], "lightsheet_rolling_shutter_width": [87, 292, 294], "608": [87, 292, 294], "defect_correct_mod": [87, 292, 294], "off": [87, 112, 114, 117, 119, 163, 225, 227, 289], "On": 87, "x_pixels_step": [87, 294], "y_pixels_step": [87, 294], "x_pixels_min": [87, 294], "y_pixels_min": [87, 294], "exposure_time_rang": [87, 292, 294], "1000": [87, 283, 284, 292, 294], "flip_x": [87, 294], "flip_i": [87, 294], "calculate_readout_tim": [87, 88, 90, 92], "assum": [87, 88, 101, 156, 158, 161, 185, 203, 214, 221, 251, 258, 264, 283, 293], "c13440": [87, 88], "link": [87, 88, 251], "commun": [87, 88, 102, 107, 109, 135, 166, 214, 283, 292, 294], "readout_tim": [87, 88, 90, 92, 126, 165, 225], "max_frame_r": [87, 88, 90, 92], "framer": [87, 88, 90, 92], "think": [87, 88], "get_property_valu": [87, 88, 93], "close_image_seri": [87, 88, 90, 92], "seri": [87, 88, 90, 92], "line_interval_tim": [87, 88, 90, 92], "get_minimum_waiting_tim": [87, 88, 90, 92], "cyclic_trigger_period": [87, 88, 90], "minimum_trigger_blank": [87, 88, 90], "minimum_trigger_interv": [87, 88, 90], "trigger_blank": [87, 88, 90], "bigger": [87, 88, 90], "trigger_interv": [87, 88, 90], "get_new_fram": [87, 88, 90, 92], "initialize_image_seri": [87, 88, 90, 92], "data_buff": [87, 88, 90, 92, 165, 166, 203, 225, 227], "number_of_fram": [87, 88, 90, 92, 166, 203, 225, 227], "100": [87, 88, 90, 92, 164, 283, 290, 292], "report_set": [87, 88, 90, 92], "consol": [87, 88], "set_roi": [87, 88, 90, 92], "roi_height": [87, 88, 90, 92], "2048": [87, 88, 92, 292, 294], "roi_width": [87, 88, 90, 92], "region": [87, 88, 90, 92, 176, 263], "set_bin": [87, 88, 90, 92], "binning_str": [87, 88, 90, 92], "bin": [87, 88, 90, 92, 227, 292, 294], "1x1": [87, 88, 90, 292, 294], "2x2": [87, 88, 90, 92], "4x4": [87, 88, 90, 92], "8x8": [87, 88, 90, 92], "16x16": [87, 88, 90], "1x2": [87, 88, 90], "2x4": [87, 88, 90], "set_exposure_tim": [87, 88, 90, 92], "unit": [87, 88, 90, 92, 134, 137, 144, 229, 230, 231, 232, 233, 234, 236, 290, 294], "millisecond": [87, 88, 90, 92, 139, 227, 283, 285, 292, 294], "set_line_interv": [87, 88, 90, 92], "set_sensor_mod": [87, 88, 90, 92], "sensor": [87, 88, 90, 92, 190, 227], "chip": 88, "kinetix": 90, "warn": [90, 106], "Not": [90, 93, 150, 221, 229], "hard": [90, 93, 171], "3200": 90, "successfulli": [90, 135, 166, 225, 253, 294], "down": [90, 214, 231, 255, 289], "programm": 90, "generate_new_fram": 92, "load_imag": [92, 227], "pre": [92, 96, 98, 195, 227, 289], "camera_exposure_tim": 92, "current_frame_idx": 92, "num_of_fram": [92, 227], "pre_frame_idx": 92, "random_imag": 92, "idprop": 93, "property_dict": 93, "property_valu": 93, "set_property_valu": 93, "calculate_all_waveform": [96, 98, 225], "sweep_tim": [96, 98, 112, 114, 124, 126, 139, 225, 229, 230, 231, 232, 233, 234, 236, 292, 294], "organ": [96, 98, 196], "sweep": [96, 98, 112, 114, 124, 126, 139, 165, 225], "waveform_dict": [96, 98, 112, 114, 124, 126, 139], "etl": [96, 98, 261], "plu": [96, 98], "enable_microscop": [96, 98], "camera_delai": [96, 98, 229, 231], "camera_delay_perc": [96, 98, 112, 114, 124, 126, 139], "percentag": [96, 98, 176, 205, 206, 208, 209, 225, 235], "camera_high_tim": [96, 98], "camera_pulse_perc": [96, 98], "daq_paramet": [96, 98], "remote_focus_ramp_fal": [96, 98, 112, 114, 124, 126, 139], "ramp": [96, 98, 112, 114, 124, 126, 231], "fall": [96, 98, 124, 126, 231], "sample_r": [96, 98, 112, 114, 124, 126, 139, 229, 230, 231, 232, 233, 234, 236, 292, 294], "waveform_expand_num": [96, 98], "expand": [96, 98, 272, 292], "waveform_repeat_num": [96, 98], "daqbas": 98, "add_camera": 98, "close_task": [98, 112, 114, 124, 126], "counter": [98, 294], "create_camera_task": 98, "create_galvo_remote_focus_task": 98, "create_master_trigger_task": 98, "master": 98, "prepare_acquisit": [98, 225, 227], "channel_kei": [98, 112, 114, 124, 126], "prepar": [98, 112, 114, 124, 126, 169, 171, 179, 182, 185, 187, 188, 190, 212, 225, 227], "run_acquisit": [98, 227], "set_external_trigg": 98, "external_trigg": 98, "extern": [98, 201, 292, 294], "start_task": [98, 112, 114, 124, 126], "won": 98, "run_task": 98, "stop_acquisit": [98, 227], "stop_task": [98, 112, 114, 124, 126], "update_analog_task": 98, "board_nam": 98, "board": [98, 294], "write_waveforms_to_task": 98, "analog_output": 98, "is_updating_analog_task": 98, "trigger_mod": [98, 292, 294], "wait_to_run_lock": 98, "filterwheelbas": [101, 106, 109], "asiimag": [101, 134], "fw_1000": 101, "fw": 101, "1000_ascii_command_set": 101, "check_if_filter_in_filter_dictionari": [101, 104, 106, 109], "filter_nam": [101, 104, 106, 109], "filter_exist": [101, 104, 106, 109], "port": [101, 102, 106, 107, 109, 119, 135, 148, 158, 159, 283, 292, 294], "filter_change_delai": [101, 106, 109], "40m": 101, "adjac": 101, "set_filt": [101, 106, 109], "wait_until_don": [101, 106, 109, 134, 139, 141, 144, 147, 150, 152, 156, 158, 161, 225, 227], "active_filter_wheel": 101, "filter_dictionari": [101, 104, 106, 109], "tiger": [101, 102, 134, 135, 225], "filter_wheel_posit": 101, "number_of_filter_wheel": [101, 106, 109], "wait_until_done_delai": [101, 106, 109], "wheel_posit": [101, 104, 106, 109], "comport": [102, 107, 109, 294], "baudrat": [102, 107, 109, 283, 292, 294], "115200": [102, 135, 283, 292, 294], "build": [102, 107, 142, 148, 242, 250, 289], "asifilterwheel": 102, "com1": [102, 107, 109, 135], "tiger_control": [102, 225], "tigercontrol": 102, "sutter": [106, 107, 148, 285, 290], "lambda": [106, 107, 270, 290], "manual": 106, "lb10": 106, "3_opman": 106, "retriev": [106, 139, 166, 195, 250, 261, 284], "delay_matrix": 106, "page": [106, 121], "38": [106, 292], "rang": [106, 134, 169, 171, 175, 198, 288], "num_byt": [106, 109], "userwarn": [106, 107, 147], "respond": 106, "init_finish": 106, "softwar": [106, 139, 141, 150, 152, 227, 283, 284, 286, 289, 292, 294], "read_on_init": 106, "instal": [109, 227, 291, 294], "period": [109, 231], "galvo_id": [112, 114], "galvanomet": [112, 225, 291], "adjust": [112, 114, 124, 126, 174, 175, 225, 227, 283, 294], "basi": [112, 114, 294], "channel_1": [112, 114], "channel_2": [112, 114], "prepare_task": [112, 114, 124, 126], "turn_off": [112, 114, 117, 119], "device_config": [112, 114, 117, 119, 124, 126, 284], "galvo_max_voltag": [112, 114, 139], "voltag": [112, 114, 124, 126, 139, 230, 231, 233, 236], "galvo_min_voltag": [112, 114, 139], "galvo_nam": [112, 114], "galvo_waveform": [112, 114, 284], "sawtooth": [112, 114, 231, 284, 294], "rise": [112, 114, 231], "galvobas": 114, "laser_id": [117, 119], "initialize_las": [117, 119], "set_pow": [117, 119], "laser_intens": [117, 119], "power": [117, 119, 172, 225, 283, 286, 289, 292, 294], "intens": [117, 119, 203, 234], "turn_on": [117, 119], "laserbas": 119, "calculate_entrance_pupil": 121, "entranc": 121, "pupil": 121, "incid": 121, "angl": 121, "interfer": 121, "contrast": 121, "carolin": 121, "ajo": 121, "franklin": 121, "prasad": 121, "ganesan": 121, "steven": 121, "boxer": 121, "biophi": 121, "volum": [121, 270], "89": 121, "issu": [121, 284, 293], "octob": 121, "2005": 121, "2759": 121, "2769": 121, "entrance_pupil_diamet": 121, "diamet": 121, "millimet": [121, 144], "nidaqmx": 124, "percent_smooth": [124, 126, 235, 292], "smooth": [124, 126, 225, 235, 292, 294], "remote_focus_delai": [124, 126, 139, 231], "remote_focus_max_voltag": [124, 126], "remote_focus_min_voltag": [124, 126], "remotefocusbas": 126, "volt": [126, 139, 230, 231, 232, 233, 234, 236, 294], "close_shutt": [129, 131], "open_shutt": [129, 131], "shutter_st": [129, 131], "state": [129, 131, 134, 187, 188, 190, 227, 272, 283, 289, 292], "shutterbas": 131, "deliv": [131, 294], "device_id": [134, 137, 139, 141, 144, 147, 150, 152], "stagebas": [134, 139, 141, 144, 147, 150, 152], "scientif": 134, "instrument": [134, 139, 144, 145, 283, 290], "serial_command": 134, "command_quick_start": 134, "firmwar": 134, "10th": 134, "ever": 134, "ftp": [134, 294], "stilt": 134, "strain": 134, "system": [134, 196, 203, 225, 227, 283, 284, 290, 292, 293, 294], "get_abs_posit": [134, 137, 139, 141, 144, 147, 150, 152], "axis_ab": [134, 137, 139, 141, 144, 147, 150, 152], "request": [134, 137, 139, 141, 144, 147, 150, 152, 166, 284], "get_axis_posit": [134, 150], "get_position_dict": [134, 137, 139, 141, 144, 147, 150, 152], "get_spe": [134, 150], "move_absolut": [134, 139, 141, 144, 147, 150, 152], "move_dictionari": [134, 137, 139, 141, 144, 147, 150, 152], "x_ab": [134, 137, 139, 141, 144, 147, 150, 152], "micromet": [134, 137, 139, 141, 144, 147, 150, 152, 285], "degre": [134, 137, 139, 141, 144, 147, 150, 152, 185], "spot": [134, 139, 141, 144, 147, 150, 152], "move_axis_absolut": [134, 139, 141, 144, 147, 150, 152], "abs_po": [134, 139, 141, 144, 147, 150, 152], "prefix": [134, 139], "x_min": [134, 139, 147, 283, 292, 294], "report_posit": [134, 139, 141, 144, 147, 150, 152], "scanr": [134, 150], "start_position_mm": [134, 150], "end_position_mm": [134, 150], "enc_divid": [134, 150], "scanv": 134, "number_of_lin": 134, "overshoot": 134, "overshoot_tim": 134, "set_spe": [134, 150], "velocity_dict": [134, 150], "start_scan": [134, 150], "abruptli": [134, 137, 139, 141, 144, 147, 150], "stop_scan": [134, 150], "verify_abs_posit": [134, 137, 139, 141, 144, 147, 150, 152], "is_strict": [134, 137, 139, 141, 144, 147, 150, 152], "y_ab": [134, 137, 139, 141, 144, 147, 150, 152], "abs_posit": [134, 137, 139, 141, 144, 147, 150, 152], "verify_mov": 134, "submit": 134, "aren": 134, "res_dict": 134, "axes_map": [134, 137, 139, 141, 144, 147, 150, 152, 283, 292, 294], "matter": [134, 137, 144], "stage_feedback": [134, 137, 139, 141, 144, 147, 150, 152], "feedback": [134, 137, 139, 141, 144, 147, 150, 152], "stage_limit": [134, 137, 139, 141, 144, 147, 150, 152], "asi_stag": 135, "piezo": [139, 290], "nation": [139, 290], "calculate_waveform": 139, "logic": [139, 141, 147, 150, 152, 190, 191], "axes_channel": [139, 292, 294], "distance_threshold": [139, 294], "stage_settle_dur": 139, "settl": 139, "trigger_sourc": [139, 292, 294], "volts_per_micron": [139, 292, 294], "scale": [139, 270], "mad": [141, 142, 290], "citi": [141, 142, 290], "lab": [141, 142, 284, 290, 293], "mcl_control": 141, "serialnum": [142, 153], "stage_connect": [142, 145], "physik": [144, 145], "xyzf": 144, "position_dict": [144, 150, 152], "wait_on_target": 144, "pi_ax": 144, "pi_devic": [144, 145], "pi_tool": [144, 145], "controller_nam": 145, "reference_mod": 145, "863": 145, "0112345678": 145, "111": 145, "1dg": 145, "frf": [145, 283, 292, 294], "device_ax": 147, "stage_x_po": 147, "stage_y_po": 147, "stage_z_po": 147, "sutterstag": 148, "load_sampl": 150, "mm": [150, 185], "encod": [150, 185, 294], "divid": [150, 185, 208, 263], "unload_sampl": 150, "unload": [150, 227], "default_spe": 150, "kim": [152, 153], "kim_ax": 152, "kim_control": [152, 153], "device_control": 156, "build_stage_dict": [156, 158, 161], "stage_posit": [156, 158, 161, 225, 292, 294], "ideal": [156, 158, 161, 289], "solvent": [156, 158, 161], "babb": [156, 158, 161, 292, 294], "63x": [156, 158, 161, 292], "1x": [156, 158, 161, 292], "70775": [156, 158, 161], "2x": [156, 158, 161, 231, 290, 292], "72455": [156, 158, 161], "3x": [156, 158, 161, 292], "72710": [156, 158, 161], "4x": [156, 158, 161, 292], "72795": [156, 158, 161], "5x": [156, 158, 161, 292], "72850": [156, 158, 161], "6x": [156, 158, 161, 292], "72880": [156, 158, 161], "refract": [156, 158, 161], "servo": [156, 158, 159, 161, 294], "read_posit": [156, 158, 161], "cur_posit": [156, 158, 161], "set_zoom": [156, 158, 161], "confirm": [156, 158, 161, 203, 289, 294], "tha": [156, 161], "zoomdict": [156, 158, 161], "zoomvalu": [156, 158, 161], "zoombas": [158, 161], "dynamixel": 158, "4096": 158, "addr_mx_goal_posit": 158, "goal": 158, "addr_mx_moving_spe": 158, "addr_mx_p_gain": 158, "addr_mx_present_posit": 158, "addr_mx_torque_en": 158, "torqu": [158, 294], "addr_mx_torque_limit": 158, "goal_position_offset": 158, "port_num": [158, 159], "sleeptim": 158, "sleep": 158, "torque_dis": 158, "disabl": [158, 292], "torque_en": 158, "dummyview": 163, "append": [163, 166, 198, 227, 266], "sent": 163, "oldest": 163, "pop": [163, 198], "move_stag": [163, 225, 227], "configuration_control": 163, "configurationcontrol": 163, "menu_control": 163, "menu": [163, 289], "menucontrol": 163, "off_stage_po": 163, "stage_po": 163, "timecost": 164, "cost": 164, "pipe": [164, 166, 227], "generate_messag": 164, "sendout": 164, "in_port": 164, "msg_count": 164, "out_port": 164, "sendout_msg_count": 164, "stop_flag": [164, 166], "devices_dict": [165, 225], "calculate_exposure_sweep_tim": [165, 225], "data_func": [166, 176, 177, 180, 182, 211, 214, 227], "continu": [166, 175, 177, 178, 183, 293, 294], "applic": [166, 169, 188, 190, 284], "shutdown": [166, 294], "signal_func": [166, 174, 175, 177, 178, 179, 181, 182, 183, 207, 214], "frame_id": [166, 169, 171, 176, 177, 180, 182, 183, 203, 205, 206, 211, 214, 227], "increment": [166, 205, 206, 283, 290], "util": [166, 169], "end_flag": [166, 187, 188, 190, 214], "feature_list": [166, 196, 199, 200, 201, 227], "active_microscop": [166, 218, 220, 221, 223, 227], "dummymicroscop": 166, "active_microscope_nam": [166, 214, 227], "data_buffer_posit": [166, 227], "data_contain": 166, "data_pip": 166, "data_record": 166, "data_thread": [166, 227], "dummydevic": 166, "img_height": [166, 225, 227], "img_width": [166, 225, 227], "signal_contain": 166, "signal_pip": 166, "signal_record": 166, "signal_thread": [166, 227], "autofocu": [169, 227, 289], "config_t": [169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 203, 211, 214, 289], "involv": [169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 188, 190], "autom": [169, 178, 291], "microscopemodel": [169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "end_func_data": [169, 171, 205, 206, 289], "action": [169, 174, 183, 187, 191, 192], "end_func_sign": [169, 171, 205, 206, 289], "in_func_data": [169, 171, 205, 206, 289], "in_func_sign": [169, 171, 205, 206, 289], "carri": [169, 174], "pre_func_data": [169, 171, 205, 206, 289], "pre_func_sign": [169, 171, 185, 205, 206, 289], "device_ref": 171, "autofocus_frame_queu": 171, "autofocus_pos_queu": 171, "routin": [171, 172, 291], "get_autofocus_frame_num": 171, "best": [171, 284], "get_step": 171, "step_siz": [171, 283, 292], "autofocus": 171, "travel": 171, "pos_offset": 171, "figur": [171, 284], "robust_autofocu": 171, "robust": 171, "amplitud": [171, 172, 230, 231, 232, 233, 234, 236, 292, 294], "alpha": [171, 172], "unfortun": 171, "unstabl": 171, "fit_data": 171, "focus_posit": 171, "r_squar": 171, "squar": [171, 199, 208], "coarse_step_s": 171, "coars": [171, 290], "coarse_step": 171, "tabl": [171, 178, 183, 195, 211, 266], "f_frame_id": 171, "f_po": [171, 214, 283, 294], "fine_pos_offset": 171, "fine": [171, 284], "fine_step_s": 171, "focus_po": [171, 227], "frame_num": 171, "get_frames_num": 171, "init_po": 171, "max_entropi": [171, 227], "plot_data": 171, "plot": [171, 227], "signal_id": 171, "target_channel": 171, "target_frame_id": 171, "total_frame_num": 171, "x_offset": [172, 283, 292, 294], "y_offset": [172, 283, 292, 294], "tent": 172, "curv": 172, "resolution_mod": 174, "zoom_valu": 174, "reconfigur": [174, 289], "accordingli": [174, 178, 181], "typic": [174, 178, 179, 180, 187, 188, 190, 191, 195, 199, 201, 231, 284], "adapt": 174, "resum": [174, 178, 227, 288], "cleanup": [174, 178, 182, 183, 185, 187, 188, 190, 196, 214, 289], "node": [175, 182, 183, 187, 188, 189, 190, 191, 192, 196, 289], "generate_meta_data": [175, 203], "pre_signal_func": [175, 182, 183, 214], "signal_end": [175, 183, 214], "cycl": [175, 183], "update_channel": [175, 183], "confoc": [175, 292], "project": [175, 203, 211, 212, 292], "conpro_cycling_mod": 175, "n_plane": [175, 292], "need_to_move_new_plan": 175, "offset_end": 175, "offset_start": 175, "offset_step_s": 175, "offset_update_tim": 175, "scanrang": 175, "overlap": [176, 214, 263, 264], "target_resolut": [176, 214], "nanoscal": [176, 214, 292], "target_zoom": [176, 214], "detect": [176, 205, 206, 208, 209], "grid": [176, 264], "interest": 176, "box": [176, 215, 270, 289, 293, 294], "flexibl": [177, 181, 294], "dynam": [177, 181, 201, 289], "track": [177, 182, 187, 190, 205, 206, 264], "decrement": 177, "data_fram": 177, "step_by_fram": 177, "advanc": [178, 283, 284, 289], "paus": [178, 181, 227, 283], "current_idx": 178, "being": [178, 183, 185, 239], "multiposition_t": 178, "position_count": 178, "pre_z": 178, "stage_distance_threshold": 178, "virtual": [179, 225, 227], "primari": [179, 289], "transit": [179, 188, 190], "prepare_next_channel": [179, 225], "captur": [180, 205, 206], "pause_num": 181, "microscopest": [181, 203, 214, 289], "manner": [182, 283, 292], "slower": 182, "improv": [182, 284], "proce": 182, "first_enter_nod": 182, "enter": [182, 293], "help": [182, 283, 288, 292], "releas": 182, "held": 182, "pre_data_func": [182, 183], "variablewithlock": 182, "pause_data_lock": 182, "pause_signal_lock": 182, "get_origin": 183, "saving_flag": [183, 185], "saving_dir": [183, 185], "cleanup_data_func": 183, "end_data_func": [183, 214], "in_data_func": 183, "incom": 183, "current_focus_posit": 183, "current_position_idx": 183, "current_z_posit": 183, "defocu": 183, "focus_step_s": 183, "image_writ": [183, 227], "writer": [183, 185, 227], "imagewrit": [183, 227, 289], "need_to_move_new_posit": 183, "need_to_move_z_posit": 183, "number_z_step": 183, "stack_cycling_mod": 183, "start_focu": 183, "start_z_posit": 183, "z_position_moved_tim": 183, "z_step_siz": [183, 214], "cva": 185, "cleanup_data_funct": 185, "failur": 185, "reli": 185, "inject": 185, "rotari": 185, "45": 185, "396": 185, "nm": [185, 290], "quadratur": 185, "motion": [185, 290], "optic": [185, 292], "root": [187, 188, 190, 196, 218, 221, 223, 274, 275], "cleanup_list": [187, 188, 190], "tree": [187, 188, 189, 190, 191, 192, 196, 218, 289], "serv": [187, 193, 194], "curr_nod": [187, 188, 190], "is_clos": [187, 188, 190], "treenod": [187, 188, 189, 190, 191], "special": [188, 189, 190, 288], "analysi": [188, 289], "mark": [188, 189, 211, 227], "feature_nam": [189, 191, 192], "func_dict": [189, 191, 192], "node_typ": [189, 191, 192, 289], "device_rel": [189, 191, 192, 289], "need_respons": [189, 191, 192, 289], "node_func": [189, 191, 192], "is_mark": 189, "meet": [189, 284], "criteria": 189, "set_properti": [189, 191, 192], "is_initi": [189, 191, 192], "node_nam": [189, 191, 192], "number_of_execut": 190, "remaining_number_of_execut": 190, "wait_respons": [190, 191], "unction": 191, "placehold": [193, 194, 209], "unus": [193, 194], "often": [193, 292], "situat": [193, 194], "context": 193, "feature_modul": 195, "func_typ": 195, "essenti": 195, "init": [195, 289], "dummy_func": 195, "dummy_tru": 195, "sibl": 196, "signalnod": 196, "datanod": 196, "signalcontain": 196, "datacontain": 196, "shared_vari": 196, "create_nod": 196, "build_feature_tre": 196, "assist": 196, "particularli": 198, "compon": [198, 225, 294], "__name__": 198, "meaning": 198, "shared_list__": 198, "shallow": 198, "occurr": 198, "9223372036854775807": 198, "indexerror": 198, "IN": 198, "ascend": 198, "descend": 198, "transmit": 199, "parenthes": [199, 289, 293], "bracket": [199, 292], "easili": 199, "network": 199, "func1": [199, 201], "arg1": [199, 201], "arg2": [199, 201], "func2": [199, 201], "func3": [199, 201], "arg3": [199, 201], "func4": [199, 201], "feature_parameter_setting_path": 201, "function_nam": 201, "yml": [201, 253], "inspect": 201, "value1": 201, "value2": 201, "sub_dir": 203, "image_nam": 203, "disk": [203, 214, 251, 252, 253], "sharedndarrai": [203, 225, 227, 284], "calculate_and_check_disk_spac": 203, "suffici": [203, 205, 206], "wherea": [203, 292], "64": 203, "ext": [203, 294], "color": 203, "meta": 203, "vestigi": 203, "save_imag": 203, "big_tiff": 203, "data_sourc": 203, "mip": 203, "mip_directori": 203, "num_of_channel": 203, "num_of_posit": 203, "num_of_slic": 203, "num_of_timepoint": 203, "75": [205, 206], "detect_func": [205, 206], "analyz": [205, 206, 209], "consid": [205, 206, 208, 209, 225, 284], "detect_tissu": [205, 206], "phase": [205, 206, 232, 233, 236, 292, 294], "position_record": [206, 207], "detecttissueinstack": [206, 289], "position_flag": 207, "remove_posit": 207, "exce": 208, "slide": 208, "approach": [208, 294], "preprocess": 208, "ilastik": [211, 212, 227, 292], "init_func": 211, "mark_posit": [211, 227], "mask": 211, "update_set": 211, "pieces_num": 211, "piec": [211, 256, 285], "pieces_s": 211, "project_fil": [211, 212], "service_url": [211, 212], "url": [211, 212, 292], "servic": [211, 212], "server": 212, "flipx": 214, "flipi": 214, "debug": 214, "outer": 214, "init_data_func": 214, "signal_response_func": 214, "curr_z_index": 214, "f_offset": [214, 283, 292, 294], "f_step_siz": 214, "first_boundari": 214, "has_tissu": 214, "has_tissue_queu": 214, "pre_boundari": 214, "sinx": 214, "sini": 214, "volumes_select": 214, "z_step": [214, 283, 292, 294], "img": 215, "xl": 215, "yl": 215, "xu": 215, "yu": 215, "65535": 215, "draw": [215, 255], "lower": 215, "coordin": [215, 292], "drawn": 215, "xmlmetadata": [218, 223], "xml": [218, 221, 223, 274, 275], "section": [218, 288, 291, 293], "arxiv": 218, "ab": 218, "1412": 218, "0488": 218, "affine_matrix_to_stage_posit": 218, "mat": 218, "affin": 218, "bdv_xml_dict": 218, "parse_xml": [218, 221], "pars": [218, 221, 261, 274, 275], "et": 218, "transform": [218, 289], "set_from_configuration_experi": [218, 220, 221, 223], "set_shape_from_configuration_experi": [218, 220, 221, 223], "set_stack_order_from_configuration_experi": [218, 220, 221, 223], "stage_positions_to_affine_matrix": 218, "to_xml": [218, 221, 223], "write_xml": [218, 221, 223], "displac": [218, 220, 221, 223], "um": [218, 220, 221, 223], "per_stack": [218, 220, 221, 223], "header": 221, "proprietari": 221, "address": [221, 293], "_xml_dict": 221, "ome_tiff_xml_dict": [221, 223], "Will": [221, 285], "xml_tool": 221, "openmicroscopi": 223, "uid": 223, "hierarch": 223, "ome_dict": 223, "is_virtu": 225, "assemble_device_config_list": 225, "device_nam": [225, 284], "device_name_dict": 225, "assembl": 225, "device_config_list": 225, "device_name_list": 225, "end_acquisit": [225, 227], "get_readout_tim": 225, "get_stage_posit": [225, 227], "load_and_start_devic": 225, "is_list": 225, "device_ref_nam": 225, "move_remote_focu": 225, "pos_dict": [225, 227, 239], "update_focu": 225, "central": 225, "move_stage_offset": 225, "former_microscop": 225, "experiment": 225, "stop_stag": [225, 227], "turn_off_las": 225, "turn_on_las": 225, "update_data_buff": [225, 227], "update_stage_limit": 225, "limits_flag": 225, "ask_stage_for_posit": 225, "ask": [225, 227], "available_channel": 225, "central_focu": 225, "current_laser_index": 225, "laser_wavelength": 225, "wavelength": [225, 292, 294], "ret_pos_dict": [225, 227], "stages_list": 225, "event_queu": 227, "architectur": [227, 284, 290, 291], "argpars": [227, 261], "namespac": [227, 261, 275], "change_resolut": 227, "resolution_valu": 227, "create_pip": 227, "pipe_nam": 227, "duplex": 227, "end1": 227, "destroy_virtual_microscop": 227, "destroi": 227, "disconnect": 227, "get_active_microscop": 227, "get_camera_line_interval_and_exposure_tim": 227, "number_of_pixel": 227, "get_data_buff": 227, "512": 227, "get_feature_list": 227, "idx": 227, "feature_list_str": 227, "get_microscope_info": 227, "microscope_info": 227, "offset_variance_map": 227, "launch_virtual_microscop": 227, "load_feature_list_from_fil": 227, "load_feature_list_from_str": 227, "load_feature_record": 227, "folcer": 227, "pause_data_thread": 227, "turn_off_flag": 227, "release_pip": 227, "resume_data_thread": 227, "run_command": 227, "run_data_process": 227, "run_live_acquisit": 227, "stream": 227, "gui": [227, 266, 291], "recalcul": 227, "therebi": 227, "peopl": 227, "simplified_data_process": 227, "show_img_pip": 227, "snap_imag": 227, "due": 227, "update_ilastik_set": 227, "display_segment": 227, "target_label": 227, "label": 227, "acquisition_count": 227, "ask_to_pause_data_thread": 227, "autofocus_on": 227, "camera_wait_iter": 227, "abort": 227, "current_exposure_tim": 227, "f_posit": 227, "image_count": 227, "imaging_mod": 227, "is_liv": 227, "is_sav": 227, "physic": [227, 283, 292], "pause_data_ev": 227, "pause_data_ready_lock": 227, "plot_pip": 227, "pre_exposure_tim": 227, "start_tim": 227, "stop_send_sign": 227, "total_acquisition_count": 227, "total_image_count": 227, "virtual_microscop": 227, "100000": [229, 230, 231, 232, 233, 234, 236, 283, 292, 294], "meant": 229, "visual": 229, "hz": [229, 230, 231, 232, 233, 234, 236], "exposure_start": 229, "exposure_end": 229, "reson": [230, 290], "drive": [230, 233, 236, 291, 294], "typical_galvo": [230, 232], "24": 231, "stai": 231, "linearli": 231, "drop": [231, 289], "right": [231, 255, 263, 289, 293, 294], "exchang": 231, "etl_ramp": 231, "tunable_lens_ramp": 231, "etl_delai": 231, "frequenc": [232, 233, 236, 292, 294], "duty_cycl": [232, 236, 292, 294], "5707963267948966": 232, "radian": [232, 233, 236], "sine": [233, 292], "typical_las": [233, 236], "pulse_width": 234, "ttl": 234, "typical_ttl_puls": 234, "convolut": 235, "smoothed_waveform": 235, "141592653589793": 236, "common": [239, 294], "model": [239, 284, 286, 289, 291], "variabletyp": 241, "ref_nam": 242, "funclist": 243, "combin": [243, 291], "new_func": 243, "proxi": [244, 293], "module_nam": 245, "file_path": [245, 252], "statement": [248, 284], "wrap_func": 248, "saving_set": 250, "popup": [250, 289], "walk": 251, "everyth": 251, "reachabl": 251, "symbol": 251, "caution": 251, "danger": 251, "config_data": 252, "file_directori": 253, "content_dict": 253, "image_width": 255, "300": 255, "image_height": 255, "200": [255, 283, 290, 292], "arrow": 255, "ojbect": 255, "font": 256, "font_siz": 256, "fp": 258, "lazi": 258, "pil": 258, "containt": 258, "low_res_fp": 258, "2022": 258, "07": 258, "02": 258, "cell_001": 258, "low_r": 258, "imshow": 258, "500": [258, 283, 292, 294], "parser": [260, 261], "argumentpars": [260, 261], "argumentparserobject": 260, "dist": 263, "roi_length": 263, "roi": [263, 264], "watch": 263, "sign": [263, 264, 268, 269], "num_til": 263, "x_start": 264, "x_tile": 264, "x_length": 264, "x_overlap": 264, "y_start": 264, "y_tile": 264, "y_length": 264, "y_overlap": 264, "z_start": 264, "z_tile": 264, "z_length": 264, "z_overlap": 264, "theta_start": 264, "theta_til": 264, "theta_length": 264, "theta_overlap": 264, "f_start": 264, "f_tile": 264, "f_length": 264, "f_overlap": 264, "f_track_with_z": 264, "fov": 264, "rotat": [264, 292], "n_posit": 264, "po": 266, "redraw": 266, "panda": 266, "datafram": 266, "multi_position_t": 266, "multiposit": 266, "half": 268, "radiu": 269, "pixel_s": [270, 292, 294], "subsample_z": 270, "nxnxn": 270, "euclidean": 270, "rescal": 270, "subsampl": [270, 292, 294], "128": 270, "29": 270, "waveform_template_nam": 272, "waveform_template_dict": 272, "microscope_state_dict": 272, "repeat_num": 272, "expand_num": 272, "tag": 274, "elementtre": 275, "etre": 275, "fullnam": [280, 281], "escap": [280, 281], "underlin": [280, 281], "rubric": 281, "endfor": 281, "endif": 281, "endblock": 281, "filter_wheel": [283, 292, 294], "com19": [283, 292], "number_of_wheel": [283, 292, 294], "controllernam": [283, 292, 294], "884": [283, 292, 294], "l": [283, 290, 292, 294], "509": [283, 290, 292, 294], "20dg10": [283, 290, 292, 294], "40dg10": [283, 292, 294], "060": [283, 292, 294], "dg": [283, 292, 294], "406": [283, 292, 294], "4pd": [283, 292, 294], "nostag": [283, 292, 294], "refmod": [283, 292, 294], "119060508": [283, 292, 294], "74000375": [283, 292], "servo_id": [283, 292, 294], "com18": [283, 292, 294], "1000000": [283, 292, 294], "manufactur": [283, 285, 292, 294], "123456789": [283, 292], "com7": [283, 292, 294], "instanti": [283, 292], "eg": [283, 292], "emploi": [283, 292], "987654321": [283, 292], "notic": [283, 292], "abbrevi": 283, "y_unload_posit": [283, 294], "10000": [283, 292, 294], "y_load_posit": [283, 294], "90000": [283, 294], "startfocu": [283, 294], "75000": [283, 294], "x_max": [283, 292, 294], "33500": 283, "16000": 283, "y_max": [283, 292, 294], "y_min": [283, 292, 294], "z_max": [283, 292, 294], "50000": 283, "z_min": [283, 292, 294], "25000": [283, 294], "f_max": [283, 292, 294], "f_min": [283, 292, 294], "theta_max": [283, 292, 294], "360": [283, 292, 294], "theta_min": [283, 292, 294], "x_rot_posit": [283, 294], "y_rot_posit": [283, 294], "z_rot_posit": [283, 294], "x_step": [283, 292, 294], "y_step": [283, 292, 294], "theta_step": [283, 292, 294], "f_step": [283, 292, 294], "25250": [283, 294], "40000": [283, 294], "70000": [283, 294], "theta_po": [283, 294], "z_offset": [283, 292, 294], "theta_offset": [283, 292, 294], "explicil": [283, 292], "explictli": 283, "fashion": 283, "queri": 283, "awar": 283, "pimikromov": 283, "third": [283, 292], "spinbox": [283, 292], "develop": [283, 291, 292, 294], "plan": [283, 292], "go": [283, 292, 293], "forward": [283, 292], "widget": [283, 292], "tab": 283, "interval_tim": [283, 292], "eventu": 283, "frequent": [283, 293], "ch00": 283, "ch01": 283, "ch02": 283, "laser_pow": [283, 292], "inclus": 283, "stack_acquisit": [283, 292], "start_po": [283, 292], "end_po": [283, 292], "stack_paus": [283, 292], "5000": [283, 292], "welcom": 284, "pleas": [284, 292, 293], "fork": 284, "branch": 284, "review": 284, "practic": 284, "outlin": [284, 292], "refactor": 284, "reach": 284, "prior": [284, 294], "happi": 284, "bring": 284, "discuss": 284, "strong": 284, "especi": 284, "disrupt": 284, "clariti": 284, "team": 284, "merg": 284, "aslm": [284, 285, 289, 291, 292, 293, 294], "repositori": [284, 291, 293], "conda": [284, 293], "pip": [284, 293], "dev": [284, 294], "pep8": 284, "camelcas": 284, "lowercase_and_separated_by_underscor": 284, "numpydoc": [284, 288], "sphinx": [284, 288], "leverag": 284, "workflow": [284, 289], "enforc": 284, "rare": 284, "ruff": 284, "complain": 284, "start_stag": 284, "exec": 284, "device_startup_funct": 284, "start_": 284, "noqa": 284, "comment": [284, 288], "easi": [284, 293], "opportun": 284, "alert": 284, "pytest": 284, "appl": 284, "encount": 284, "resolv": 284, "oserror": 284, "ulimit": 284, "hand": 284, "abstract": [285, 291], "layer": [285, 291], "divers": [285, 294], "equip": [285, 290], "accompani": 285, "contribut": [285, 289, 291], "encourag": [286, 289], "engag": [286, 289], "collabor": [286, 289], "guidelin": [286, 291], "restructuredtext": 288, "liter": 288, "example_numpi": 288, "py": 288, "blank": 288, "implicitli": 288, "anytim": 288, "bodi": 288, "indent": 288, "stand": 288, "surround": 288, "unind": 288, "module_level_variable1": 288, "inlin": 288, "immedi": 288, "mix": [288, 290, 294], "convent": 288, "_numpi": 288, "readthedoc": 288, "en": 288, "latest": 288, "12345": 288, "module_level_variable2": 288, "98765": 288, "span": 288, "colon": 288, "function_with_types_in_docstr": 288, "param1": 288, "param2": 288, "pep": 288, "484": 288, "annot": 288, "_": [288, 294], "function_with_pep484_type_annot": 288, "duplic": 288, "compli": 288, "module_level_funct": 288, "obviou": [288, 291], "paragraph": 288, "example_gener": 288, "yield": 288, "doctest": 288, "illustr": 288, "exampleerror": 288, "msg": 288, "human": 288, "readabl": 288, "exampleclass": 288, "summari": 288, "declar": 288, "decor": [288, 289], "attr1": 288, "attr2": 288, "param3": 288, "attr3": 288, "attr4": 288, "attr5": 288, "readonly_properti": 288, "readwrite_properti": 288, "setter": 288, "notabl": 288, "mention": [288, 292], "example_method": 288, "__special__": 288, "member": 288, "doubl": 288, "underscor": 288, "napoleon_include_special_with_doc": 288, "conf": 288, "__special_without_docstring__": 288, "_privat": 288, "napoleon_include_private_with_doc": 288, "_private_without_docstr": 288, "snap": 289, "pictur": 289, "common_featur": 289, "zstackacquisit": 289, "discret": 289, "cosin": 289, "volumesearch": 289, "ilastiksegment": 289, "detecttissueinstackandrecord": 289, "removeemptyposit": 289, "constantvelocityacquisit": 289, "changeresolut": 289, "conproacquisit": 289, "findtissuesimple2d": 289, "loopbycount": 289, "movetonextpositioninmultipositiont": 289, "preparenextchannel": 289, "stackpaus": 289, "waittocontinu": 289, "dictat": 289, "few": 289, "cleanup_func_sign": 289, "cleanup_func_data": 289, "acqusit": 289, "failsaf": 289, "latter": 289, "inde": 289, "proceed": 289, "intellig": 289, "explain": 289, "featurelist": 289, "tool": [289, 291, 294], "feature_related_funct": 289, "feature_exampl": 289, "selected_channel": 289, "navig": [289, 293], "4a": 289, "dialog": 289, "analys": 289, "whole": 289, "preview": 289, "ok": 289, "click": [289, 293, 294], "button": [289, 294], "graphic": 289, "omicron": 290, "lighthub": 290, "ultra": 290, "acc": 290, "488": [290, 292, 294], "642": 290, "561": [290, 294], "obi": [290, 294], "unidirect": 290, "bidirect": 290, "repeatablil": 290, "borderlin": 290, "gpu": 290, "nvidia": 290, "titan": 290, "rtx": 290, "cuda": 290, "driver": [290, 294], "456": 290, "71": 290, "grabber": [290, 294], "optotun": 290, "electrotun": 290, "len": 290, "blink": 290, "pxie": [290, 294], "1073": 290, "chassi": 290, "pxi6733": [290, 292], "pxi6259": [290, 292, 294], "32mm": 290, "position": 290, "nano": 290, "coher": 290, "647": [290, 294], "piezojena": 290, "pcie": 290, "6738": 290, "lfa": [290, 294], "2010": [290, 294], "linear": [290, 294], "actuat": [290, 294], "novanta": [290, 294], "khz": 290, "ut": 291, "southwestern": 291, "ecosystem": 291, "aim": 291, "recip": 291, "maker": 291, "minim": 291, "priorit": 291, "stabil": 291, "brutal": 291, "maxim": 291, "biolog": 291, "download": [291, 294], "git": 291, "environ": [291, 292], "troubleshoot": 291, "multiscal": 291, "expans": 291, "opm": 291, "v2": 291, "v1": 291, "spectral": 291, "tirf": 291, "overview": 291, "dichroic": 291, "turret": 291, "mechan": [291, 292], "deform": 291, "mirror": 291, "introduct": 291, "edit": 291, "log_fil": 291, "zach": 291, "marin": 291, "anni": 291, "wang": 291, "dax": 291, "collison": 291, "kevin": 291, "dean": [291, 293], "sampath": 291, "rapuri": 291, "renil": 291, "gupta": 291, "samir": 291, "mamtani": 291, "andrew": 291, "jamieson": 291, "york": 291, "nathaniel": 291, "thayer": 291, "rest_api_config": 292, "waveform_templ": 292, "exact": 292, "confus": 292, "recommend": [292, 293], "anaconda": [292, 293], "prompt": [292, 293, 294], "sh": [292, 293], "thereaft": 292, "conflict": 292, "master_trigger_out_lin": [292, 294], "camera_trigger_out_lin": [292, 294], "laser_port_switch": [292, 294], "laser_switch_st": [292, 294], "pixel_size_in_micron": [292, 294], "sensor_mod": [292, 294], "readout_direct": [292, 294], "readout_spe": [292, 294], "trigger_act": [292, 294], "trigger_polar": [292, 294], "throughout": [292, 294], "000075": [292, 294], "display_acquisition_subsampl": [292, 294], "average_frame_r": [292, 294], "969": [292, 294], "frames_to_averag": [292, 294], "remote_focus_devic": [292, 294], "ao2": [292, 294], "ramp_rising_perc": [292, 294], "85": [292, 294], "ramp_falling_perc": [292, 294], "ao0": [292, 294], "99": [292, 294], "57079": [292, 294], "wheel_numb": [292, 294], "filter_wheel_delai": [292, 294], "030": [292, 294], "available_filt": [292, 294], "rfp": 292, "595": 292, "31": 292, "far": [292, 293], "red": 292, "blp01": 292, "647r": 292, "blocked1": 292, "blocked2": 292, "blocked3": 292, "blocked4": 292, "blocked5": 292, "blocked6": 292, "earlier": 292, "joystick_ax": 292, "agre": [292, 294], "vertic": [292, 294], "vice": 292, "versa": 292, "627": 292, "1711": 292, "2301": 292, "2710": 292, "3079": 292, "3383": 292, "609": 292, "255": 292, "044": 292, "port0": [292, 294], "line0": [292, 294], "onoff": [292, 294], "line2": 292, "luxx": 292, "87": [292, 294], "remote_focus_const": 292, "336": 292, "percent_delai": 292, "562nm": 292, "galvo_const": 292, "mesoscal": 292, "other_const": 292, "duty_wait_dur": 292, "127": 292, "repo": 293, "desktop": 293, "friendli": 293, "head": 293, "miniconda": 293, "websit": 293, "handi": 293, "cheatsheet": 293, "accustom": 293, "pin": [293, 294], "taskbar": 293, "mycomput": 293, "firewal": 293, "utsw": 293, "campu": 293, "circumv": 293, "activatin": 293, "packag": 293, "upgrad": 293, "clone": 293, "cd": 293, "mkdir": 293, "myfoldernam": 293, "thedeanlab": 293, "completet": 293, "upon": [293, 294], "shortcut": 293, "windir": 293, "system32": 293, "cmd": 293, "ex": 293, "script": 293, "bat": 293, "http_proxi": 293, "swmed": 293, "edu": 293, "3128": 293, "https_proxi": 293, "typo": 293, "perspect": 293, "onlin": 293, "usersuserprofil": 293, "condarc": 293, "usersuserprofilepippip": 293, "ini": 293, "password": 293, "8080": 293, "sever": 294, "6733": 294, "daqmx": 294, "recogn": 294, "visibl": 294, "scb": 294, "68a": 294, "breakout": 294, "pinout": 294, "mislead": 294, "aspect": 294, "wire": 294, "receipt": 294, "determinist": 294, "jitter": 294, "anticip": 294, "dev1": 294, "dev2": 294, "commonli": 294, "line1": 294, "pfi0": 294, "p0": 294, "pfio": 294, "gate": 294, "attach": 294, "outsid": 294, "bank": 294, "ao6": 294, "ao8": 294, "ao9": 294, "ao10": 294, "compet": 294, "ao": 294, "distribut": 294, "across": 294, "ao14": 294, "ao19": 294, "pxi6723": 294, "With": 294, "ctr0out": 294, "lead": 294, "ground": 294, "36": 294, "pci6738": 294, "ctr0": 294, "came": 294, "hcimagel": 294, "silicon": 294, "firebird": 294, "framegrabb": 294, "x16": 294, "slot": 294, "motherboard": 294, "excap": 294, "302153": 294, "tbd": 294, "000035": 294, "4608": 294, "2592": 294, "0x7fffffff": 294, "pvcam": 294, "sdk": 294, "term": 294, "unknown": 294, "broadcom": 294, "pci": 294, "kit": 294, "bridg": 294, "abl": 294, "pvcamtest": 294, "voic": 294, "coil": 294, "plai": 294, "crucial": 294, "role": 294, "aberr": 294, "electromagnet": 294, "axial": 294, "focal": 294, "shift": 294, "begun": 294, "longer": 294, "sca814": 294, "remote_focu": 294, "pneumat": 294, "empow": 294, "cater": 294, "modal": 294, "suit": 294, "seamless": 294, "versatil": 294, "tailor": 294, "research": 294, "sync": 294, "less": 294, "perz": 294, "differenti": 294, "post": 294, "potenti": 294, "damag": 294, "com17": 294, "com2": 294, "0000": 294, "stage1": 294, "com9999": 294, "settle_duration_m": 294, "stage3": 294, "49": 294, "05": 294, "stage2": 294, "available_dichro": 294, "510lp": 294, "570lp": 294, "640lp": 294, "com10": 294, "525": 294, "600": 294, "52": 294, "670": 294, "lp": 294, "cambridg": 294, "technologi": 294, "scannermax": 294, "port1": 294, "line5": 294, "41": 294, "44": 294, "mixtur": 294, "line10": 294, "pcie6738": 294, "36x": 294, "180": 294}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [9, 0, 0, "-", "controller"], [16, 0, 0, "-", "log_files"], [25, 0, 0, "-", "model"], [237, 0, 0, "-", "tools"], [276, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_experiment_config"], [8, 1, 1, "", "verify_waveform_constants"]], "aslm.controller": [[10, 0, 0, "-", "configuration_controller"], [12, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[11, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "camera_config_dict"], [11, 4, 1, "", "camera_flip_flags"], [11, 4, 1, "", "camera_pixels"], [11, 3, 1, "", "change_microscope"], [11, 4, 1, "", "channels_info"], [11, 5, 1, "", "configuration"], [11, 4, 1, "", "daq_sample_rate"], [11, 4, 1, "", "filter_wheel_setting_dict"], [11, 5, 1, "", "galvo_num"], [11, 4, 1, "", "galvo_parameter_dict"], [11, 3, 1, "", "get_microscope_configuration_dict"], [11, 3, 1, "", "get_stage_position_limits"], [11, 4, 1, "", "lasers_info"], [11, 5, 1, "", "microscope_config"], [11, 5, 1, "", "microscope_name"], [11, 4, 1, "", "number_of_channels"], [11, 4, 1, "", "remote_focus_dict"], [11, 4, 1, "", "stage_default_position"], [11, 4, 1, "", "stage_flip_flags"], [11, 4, 1, "", "stage_setting_dict"], [11, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[13, 2, 1, "", "SelfLockThread"], [14, 2, 1, "", "SynchronizedThreadPool"], [15, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "daemon"], [13, 3, 1, "", "getName"], [13, 4, 1, "", "ident"], [13, 3, 1, "", "isDaemon"], [13, 3, 1, "", "isLocked"], [13, 3, 1, "", "is_alive"], [13, 3, 1, "", "join"], [13, 4, 1, "", "name"], [13, 4, 1, "", "native_id"], [13, 3, 1, "", "run"], [13, 5, 1, "", "selfLock"], [13, 3, 1, "", "setDaemon"], [13, 3, 1, "", "setName"], [13, 3, 1, "", "start"], [13, 3, 1, "", "unlock"], [13, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [14, 3, 1, "", "createThread"], [14, 3, 1, "", "getRunningThread"], [14, 3, 1, "", "globaltrace"], [14, 3, 1, "", "killThreadInList"], [14, 3, 1, "", "localtrace"], [14, 3, 1, "", "moveToDelete"], [14, 3, 1, "", "registerResource"], [14, 3, 1, "", "removeThread"], [14, 5, 1, "", "resources"], [14, 3, 1, "", "threadTaskWrapping"], [14, 5, 1, "", "toDeleteList"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, 3, 1, "", "__init__"], [15, 5, 1, "", "waitlist"], [15, 5, 1, "", "waitlistLock"]], "aslm.log_files": [[17, 0, 0, "-", "filters"], [20, 0, 0, "-", "log_functions"]], "aslm.log_files.filters": [[18, 2, 1, "", "NonPerfFilter"], [19, 2, 1, "", "PerformanceFilter"]], "aslm.log_files.filters.NonPerfFilter": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "filter"]], "aslm.log_files.filters.PerformanceFilter": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "filter"]], "aslm.log_files.log_functions": [[21, 1, 1, "", "find_filename"], [22, 1, 1, "", "log_setup"], [23, 1, 1, "", "main_process_listener"], [24, 1, 1, "", "update_nested_dict"]], "aslm.model": [[26, 0, 0, "-", "analysis"], [39, 0, 0, "-", "concurrency"], [47, 0, 0, "-", "data_sources"], [55, 0, 0, "-", "device_startup_functions"], [73, 0, 0, "-", "devices"], [162, 0, 0, "-", "dummy"], [167, 0, 0, "-", "features"], [216, 0, 0, "-", "metadata_sources"], [224, 0, 0, "-", "microscope"], [226, 0, 0, "-", "model"], [228, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[27, 0, 0, "-", "boundary_detect"], [32, 0, 0, "-", "camera"], [37, 0, 0, "-", "image_contrast"]], "aslm.model.analysis.boundary_detect": [[28, 1, 1, "", "binary_detect"], [29, 1, 1, "", "find_tissue_boundary_2d"], [30, 1, 1, "", "has_tissue"], [31, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[33, 1, 1, "", "compute_flatfield_map"], [34, 1, 1, "", "compute_noise_sigma"], [35, 1, 1, "", "compute_scmos_offset_and_variance_map"], [36, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.image_contrast": [[38, 1, 1, "", "fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[40, 0, 0, "-", "concurrency_tools"]], "aslm.model.concurrency.concurrency_tools": [[41, 2, 1, "", "CustodyThread"], [42, 5, 1, "", "FancyThread"], [43, 2, 1, "", "ObjectInSubprocess"], [44, 5, 1, "", "PoliteThread"], [45, 2, 1, "", "ResultThread"], [46, 2, 1, "", "SharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[41, 3, 1, "", "__init__"], [41, 4, 1, "", "daemon"], [41, 3, 1, "", "getName"], [41, 3, 1, "", "get_result"], [41, 4, 1, "", "ident"], [41, 3, 1, "", "isDaemon"], [41, 3, 1, "", "is_alive"], [41, 3, 1, "", "join"], [41, 4, 1, "", "name"], [41, 4, 1, "", "native_id"], [41, 3, 1, "", "run"], [41, 3, 1, "", "setDaemon"], [41, 3, 1, "", "setName"], [41, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[43, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[45, 3, 1, "", "__init__"], [45, 4, 1, "", "daemon"], [45, 3, 1, "", "getName"], [45, 3, 1, "", "get_result"], [45, 4, 1, "", "ident"], [45, 3, 1, "", "isDaemon"], [45, 3, 1, "", "is_alive"], [45, 3, 1, "", "join"], [45, 4, 1, "", "name"], [45, 4, 1, "", "native_id"], [45, 3, 1, "", "run"], [45, 3, 1, "", "setDaemon"], [45, 3, 1, "", "setName"], [45, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[46, 5, 1, "", "ALIGNED"], [46, 5, 1, "", "BEHAVED"], [46, 5, 1, "", "CARRAY"], [46, 5, 1, "", "C_CONTIGUOUS"], [46, 5, 1, "", "FARRAY"], [46, 5, 1, "", "FNC"], [46, 5, 1, "", "FORC"], [46, 5, 1, "", "F_CONTIGUOUS"], [46, 5, 1, "", "OWNDATA"], [46, 5, 1, "", "T"], [46, 5, 1, "", "UPDATEIFCOPY"], [46, 5, 1, "", "WRITEABLE"], [46, 5, 1, "", "WRITEBACKIFCOPY"], [46, 3, 1, "", "__init__"], [46, 3, 1, "", "all"], [46, 3, 1, "", "any"], [46, 3, 1, "", "argmax"], [46, 3, 1, "", "argmin"], [46, 3, 1, "", "argpartition"], [46, 3, 1, "", "argsort"], [46, 3, 1, "", "astype"], [46, 5, 1, "", "base"], [46, 3, 1, "", "byteswap"], [46, 3, 1, "", "choose"], [46, 3, 1, "", "clip"], [46, 3, 1, "", "compress"], [46, 3, 1, "", "conj"], [46, 3, 1, "", "conjugate"], [46, 3, 1, "", "copy"], [46, 5, 1, "", "ctypes"], [46, 3, 1, "", "cumprod"], [46, 3, 1, "", "cumsum"], [46, 5, 1, "", "data"], [46, 3, 1, "", "diagonal"], [46, 5, 1, "", "dtype"], [46, 3, 1, "", "dump"], [46, 3, 1, "", "dumps"], [46, 3, 1, "", "fill"], [46, 5, 1, "", "flags"], [46, 5, 1, "", "flat"], [46, 3, 1, "", "flatten"], [46, 3, 1, "", "getfield"], [46, 5, 1, "", "imag"], [46, 3, 1, "", "item"], [46, 3, 1, "", "itemset"], [46, 5, 1, "", "itemsize"], [46, 3, 1, "", "max"], [46, 3, 1, "", "mean"], [46, 3, 1, "", "min"], [46, 5, 1, "", "nbytes"], [46, 5, 1, "", "ndim"], [46, 3, 1, "", "newbyteorder"], [46, 3, 1, "", "nonzero"], [46, 3, 1, "", "partition"], [46, 3, 1, "", "prod"], [46, 3, 1, "", "ptp"], [46, 3, 1, "", "put"], [46, 3, 1, "", "ravel"], [46, 5, 1, "", "real"], [46, 3, 1, "", "repeat"], [46, 3, 1, "", "reshape"], [46, 3, 1, "", "resize"], [46, 3, 1, "", "round"], [46, 3, 1, "", "searchsorted"], [46, 3, 1, "", "setfield"], [46, 3, 1, "", "setflags"], [46, 5, 1, "", "shape"], [46, 5, 1, "", "size"], [46, 3, 1, "", "sort"], [46, 3, 1, "", "squeeze"], [46, 3, 1, "", "std"], [46, 5, 1, "", "strides"], [46, 3, 1, "", "sum"], [46, 3, 1, "", "swapaxes"], [46, 3, 1, "", "take"], [46, 3, 1, "", "tobytes"], [46, 3, 1, "", "tofile"], [46, 3, 1, "", "tolist"], [46, 3, 1, "", "tostring"], [46, 3, 1, "", "trace"], [46, 3, 1, "", "transpose"], [46, 3, 1, "", "var"], [46, 3, 1, "", "view"]], "aslm.model.data_sources": [[48, 0, 0, "-", "bdv_data_source"], [50, 0, 0, "-", "data_source"], [52, 1, 1, "", "get_data_source"], [53, 0, 0, "-", "tiff_data_source"]], "aslm.model.data_sources.bdv_data_source": [[49, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[49, 3, 1, "", "__init__"], [49, 5, 1, "", "bits"], [49, 3, 1, "", "close"], [49, 4, 1, "", "data"], [49, 5, 1, "", "dc"], [49, 5, 1, "", "dt"], [49, 5, 1, "", "dx"], [49, 5, 1, "", "dy"], [49, 5, 1, "", "dz"], [49, 5, 1, "", "file_name"], [49, 3, 1, "", "get_shape_from_metadata"], [49, 3, 1, "", "get_slice"], [49, 5, 1, "", "image"], [49, 5, 1, "", "logger"], [49, 5, 1, "", "metadata"], [49, 4, 1, "", "mode"], [49, 4, 1, "", "nbytes"], [49, 5, 1, "", "positions"], [49, 3, 1, "", "read"], [49, 4, 1, "", "resolutions"], [49, 3, 1, "", "set_metadata_from_configuration_experiment"], [49, 4, 1, "", "shape"], [49, 5, 1, "", "shape_c"], [49, 5, 1, "", "shape_t"], [49, 5, 1, "", "shape_x"], [49, 5, 1, "", "shape_y"], [49, 5, 1, "", "shape_z"], [49, 4, 1, "", "shapes"], [49, 4, 1, "", "subdivisions"], [49, 4, 1, "", "voxel_size"], [49, 3, 1, "", "write"]], "aslm.model.data_sources.data_source": [[51, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[51, 3, 1, "", "__init__"], [51, 5, 1, "", "bits"], [51, 3, 1, "", "close"], [51, 4, 1, "", "data"], [51, 5, 1, "", "dc"], [51, 5, 1, "", "dt"], [51, 5, 1, "", "dx"], [51, 5, 1, "", "dy"], [51, 5, 1, "", "dz"], [51, 5, 1, "", "file_name"], [51, 3, 1, "", "get_shape_from_metadata"], [51, 5, 1, "", "logger"], [51, 5, 1, "", "metadata"], [51, 4, 1, "", "mode"], [51, 4, 1, "", "nbytes"], [51, 5, 1, "", "positions"], [51, 3, 1, "", "read"], [51, 3, 1, "", "set_metadata_from_configuration_experiment"], [51, 4, 1, "", "shape"], [51, 5, 1, "", "shape_c"], [51, 5, 1, "", "shape_t"], [51, 5, 1, "", "shape_x"], [51, 5, 1, "", "shape_y"], [51, 5, 1, "", "shape_z"], [51, 4, 1, "", "voxel_size"], [51, 3, 1, "", "write"]], "aslm.model.data_sources.tiff_data_source": [[54, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[54, 3, 1, "", "__init__"], [54, 5, 1, "", "bits"], [54, 3, 1, "", "close"], [54, 4, 1, "", "data"], [54, 5, 1, "", "dc"], [54, 5, 1, "", "dt"], [54, 5, 1, "", "dx"], [54, 5, 1, "", "dy"], [54, 5, 1, "", "dz"], [54, 5, 1, "", "file_name"], [54, 3, 1, "", "generate_image_name"], [54, 3, 1, "", "get_shape_from_metadata"], [54, 5, 1, "", "image"], [54, 4, 1, "", "is_bigtiff"], [54, 4, 1, "", "is_ome"], [54, 5, 1, "", "logger"], [54, 5, 1, "", "metadata"], [54, 4, 1, "", "mode"], [54, 4, 1, "", "nbytes"], [54, 5, 1, "", "positions"], [54, 3, 1, "", "read"], [54, 5, 1, "", "save_directory"], [54, 3, 1, "", "set_bigtiff"], [54, 3, 1, "", "set_metadata_from_configuration_experiment"], [54, 4, 1, "", "shape"], [54, 5, 1, "", "shape_c"], [54, 5, 1, "", "shape_t"], [54, 5, 1, "", "shape_x"], [54, 5, 1, "", "shape_y"], [54, 5, 1, "", "shape_z"], [54, 4, 1, "", "voxel_size"], [54, 3, 1, "", "write"]], "aslm.model.device_startup_functions": [[56, 2, 1, "", "DummyDeviceConnection"], [57, 1, 1, "", "auto_redial"], [58, 1, 1, "", "device_not_found"], [59, 1, 1, "", "load_camera_connection"], [60, 1, 1, "", "load_devices"], [61, 1, 1, "", "load_filter_wheel_connection"], [62, 1, 1, "", "load_stages"], [63, 1, 1, "", "load_zoom_connection"], [64, 1, 1, "", "start_camera"], [65, 1, 1, "", "start_daq"], [66, 1, 1, "", "start_filter_wheel"], [67, 1, 1, "", "start_galvo"], [68, 1, 1, "", "start_lasers"], [69, 1, 1, "", "start_remote_focus_device"], [70, 1, 1, "", "start_shutter"], [71, 1, 1, "", "start_stage"], [72, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[56, 3, 1, "", "__init__"]], "aslm.model.devices": [[74, 0, 0, "-", "APIs"], [83, 0, 0, "-", "camera"], [94, 0, 0, "-", "daq"], [99, 0, 0, "-", "filter_wheel"], [110, 0, 0, "-", "galvo"], [115, 0, 0, "-", "lasers"], [120, 0, 0, "-", "objectives"], [122, 0, 0, "-", "remote_focus"], [127, 0, 0, "-", "shutter"], [132, 0, 0, "-", "stages"], [154, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[75, 0, 0, "-", "coherent"], [76, 0, 0, "-", "dynamixel"], [79, 0, 0, "-", "omicron"], [80, 0, 0, "-", "sutter"]], "aslm.model.devices.APIs.dynamixel": [[77, 0, 0, "-", "dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[78, 1, 1, "", "create_mock_dxl_device"]], "aslm.model.devices.APIs.sutter": [[81, 0, 0, "-", "MP285"]], "aslm.model.devices.APIs.sutter.MP285": [[82, 2, 1, "", "MP285"]], "aslm.model.devices.APIs.sutter.MP285.MP285": [[82, 3, 1, "", "__init__"], [82, 3, 1, "", "close"], [82, 3, 1, "", "convert_microns_to_microsteps"], [82, 3, 1, "", "convert_microsteps_to_microns"], [82, 3, 1, "", "flush_buffers"], [82, 3, 1, "", "get_controller_status"], [82, 3, 1, "", "get_current_position"], [82, 3, 1, "", "interrupt_move"], [82, 3, 1, "", "move_to_specified_position"], [82, 3, 1, "", "refresh_display"], [82, 3, 1, "", "reset_controller"], [82, 3, 1, "", "set_absolute_mode"], [82, 3, 1, "", "set_resolution_and_velocity"]], "aslm.model.devices.camera": [[84, 0, 0, "-", "camera_base"], [86, 0, 0, "-", "camera_hamamatsu"], [89, 0, 0, "-", "camera_photometrics"], [91, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[85, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[85, 3, 1, "", "__init__"], [85, 3, 1, "", "calculate_light_sheet_exposure_time"], [85, 5, 1, "", "camera_controller"], [85, 5, 1, "", "camera_parameters"], [85, 3, 1, "", "close_camera"], [85, 5, 1, "", "configuration"], [85, 3, 1, "", "get_line_interval"], [85, 3, 1, "", "get_offset_variance_maps"], [85, 5, 1, "", "is_acquiring"], [85, 5, 1, "", "max_image_height"], [85, 5, 1, "", "max_image_width"], [85, 5, 1, "", "min_image_height"], [85, 5, 1, "", "min_image_width"], [85, 4, 1, "", "offset"], [85, 3, 1, "", "set_readout_direction"], [85, 5, 1, "", "step_image_height"], [85, 5, 1, "", "step_image_width"], [85, 4, 1, "", "variance"], [85, 5, 1, "", "x_pixels"], [85, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[87, 2, 1, "", "HamamatsuOrca"], [88, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[87, 3, 1, "", "__init__"], [87, 3, 1, "", "calculate_light_sheet_exposure_time"], [87, 3, 1, "", "calculate_readout_time"], [87, 5, 1, "", "camera_controller"], [87, 5, 1, "", "camera_parameters"], [87, 3, 1, "", "close_camera"], [87, 3, 1, "", "close_image_series"], [87, 5, 1, "", "configuration"], [87, 3, 1, "", "get_line_interval"], [87, 3, 1, "", "get_minimum_waiting_time"], [87, 3, 1, "", "get_new_frame"], [87, 3, 1, "", "get_offset_variance_maps"], [87, 3, 1, "", "initialize_image_series"], [87, 5, 1, "", "is_acquiring"], [87, 4, 1, "", "max_image_height"], [87, 4, 1, "", "max_image_width"], [87, 4, 1, "", "min_image_height"], [87, 4, 1, "", "min_image_width"], [87, 4, 1, "", "offset"], [87, 3, 1, "", "report_settings"], [87, 4, 1, "", "serial_number"], [87, 3, 1, "", "set_ROI"], [87, 3, 1, "", "set_binning"], [87, 3, 1, "", "set_exposure_time"], [87, 3, 1, "", "set_line_interval"], [87, 3, 1, "", "set_readout_direction"], [87, 3, 1, "", "set_sensor_mode"], [87, 4, 1, "", "step_image_height"], [87, 4, 1, "", "step_image_width"], [87, 4, 1, "", "variance"], [87, 5, 1, "", "x_pixels"], [87, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[88, 3, 1, "", "__init__"], [88, 3, 1, "", "calculate_light_sheet_exposure_time"], [88, 3, 1, "", "calculate_readout_time"], [88, 5, 1, "", "camera_controller"], [88, 5, 1, "", "camera_parameters"], [88, 3, 1, "", "close_camera"], [88, 3, 1, "", "close_image_series"], [88, 5, 1, "", "configuration"], [88, 3, 1, "", "get_line_interval"], [88, 3, 1, "", "get_minimum_waiting_time"], [88, 3, 1, "", "get_new_frame"], [88, 3, 1, "", "get_offset_variance_maps"], [88, 3, 1, "", "initialize_image_series"], [88, 5, 1, "", "is_acquiring"], [88, 4, 1, "", "max_image_height"], [88, 4, 1, "", "max_image_width"], [88, 4, 1, "", "min_image_height"], [88, 4, 1, "", "min_image_width"], [88, 4, 1, "", "offset"], [88, 3, 1, "", "report_settings"], [88, 4, 1, "", "serial_number"], [88, 3, 1, "", "set_ROI"], [88, 3, 1, "", "set_binning"], [88, 3, 1, "", "set_exposure_time"], [88, 3, 1, "", "set_line_interval"], [88, 3, 1, "", "set_readout_direction"], [88, 3, 1, "", "set_sensor_mode"], [88, 4, 1, "", "step_image_height"], [88, 4, 1, "", "step_image_width"], [88, 4, 1, "", "variance"], [88, 5, 1, "", "x_pixels"], [88, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[90, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[90, 3, 1, "", "__init__"], [90, 3, 1, "", "calculate_light_sheet_exposure_time"], [90, 3, 1, "", "calculate_readout_time"], [90, 5, 1, "", "camera_controller"], [90, 5, 1, "", "camera_parameters"], [90, 3, 1, "", "close_camera"], [90, 3, 1, "", "close_image_series"], [90, 5, 1, "", "configuration"], [90, 3, 1, "", "get_line_interval"], [90, 3, 1, "", "get_minimum_waiting_time"], [90, 3, 1, "", "get_new_frame"], [90, 3, 1, "", "get_offset_variance_maps"], [90, 3, 1, "", "initialize_image_series"], [90, 5, 1, "", "is_acquiring"], [90, 5, 1, "", "max_image_height"], [90, 5, 1, "", "max_image_width"], [90, 5, 1, "", "min_image_height"], [90, 5, 1, "", "min_image_width"], [90, 4, 1, "", "offset"], [90, 3, 1, "", "report_settings"], [90, 4, 1, "", "serial_number"], [90, 3, 1, "", "set_ROI"], [90, 3, 1, "", "set_binning"], [90, 3, 1, "", "set_exposure_time"], [90, 3, 1, "", "set_line_interval"], [90, 3, 1, "", "set_readout_direction"], [90, 3, 1, "", "set_sensor_mode"], [90, 5, 1, "", "step_image_height"], [90, 5, 1, "", "step_image_width"], [90, 4, 1, "", "variance"], [90, 5, 1, "", "x_pixels"], [90, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[92, 2, 1, "", "SyntheticCamera"], [93, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[92, 3, 1, "", "__init__"], [92, 3, 1, "", "calculate_light_sheet_exposure_time"], [92, 3, 1, "", "calculate_readout_time"], [92, 5, 1, "", "camera_controller"], [92, 5, 1, "", "camera_exposure_time"], [92, 5, 1, "", "camera_parameters"], [92, 3, 1, "", "close_camera"], [92, 3, 1, "", "close_image_series"], [92, 5, 1, "", "configuration"], [92, 5, 1, "", "current_frame_idx"], [92, 5, 1, "", "data_buffer"], [92, 3, 1, "", "generate_new_frame"], [92, 3, 1, "", "get_line_interval"], [92, 3, 1, "", "get_minimum_waiting_time"], [92, 3, 1, "", "get_new_frame"], [92, 3, 1, "", "get_offset_variance_maps"], [92, 3, 1, "", "initialize_image_series"], [92, 5, 1, "", "is_acquiring"], [92, 3, 1, "", "load_images"], [92, 5, 1, "", "max_image_height"], [92, 5, 1, "", "max_image_width"], [92, 5, 1, "", "min_image_height"], [92, 5, 1, "", "min_image_width"], [92, 5, 1, "", "num_of_frame"], [92, 4, 1, "", "offset"], [92, 5, 1, "", "pre_frame_idx"], [92, 5, 1, "", "random_image"], [92, 3, 1, "", "report_settings"], [92, 5, 1, "", "serial_number"], [92, 3, 1, "", "set_ROI"], [92, 3, 1, "", "set_binning"], [92, 3, 1, "", "set_exposure_time"], [92, 3, 1, "", "set_line_interval"], [92, 3, 1, "", "set_readout_direction"], [92, 3, 1, "", "set_sensor_mode"], [92, 5, 1, "", "step_image_height"], [92, 5, 1, "", "step_image_width"], [92, 4, 1, "", "variance"], [92, 5, 1, "", "x_pixels"], [92, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[93, 3, 1, "", "__init__"], [93, 3, 1, "", "get_property_value"], [93, 3, 1, "", "set_property_value"]], "aslm.model.devices.daq": [[95, 0, 0, "-", "daq_base"], [97, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[96, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[96, 3, 1, "", "__init__"], [96, 3, 1, "", "calculate_all_waveforms"], [96, 5, 1, "", "camera_delay"], [96, 5, 1, "", "camera_delay_percent"], [96, 5, 1, "", "camera_high_time"], [96, 5, 1, "", "camera_pulse_percent"], [96, 5, 1, "", "configuration"], [96, 5, 1, "", "daq_parameters"], [96, 3, 1, "", "enable_microscope"], [96, 5, 1, "", "microscope_name"], [96, 5, 1, "", "remote_focus_ramp_falling"], [96, 5, 1, "", "sample_rate"], [96, 5, 1, "", "sweep_time"], [96, 5, 1, "", "waveform_constants"], [96, 5, 1, "", "waveform_dict"], [96, 5, 1, "", "waveform_expand_num"], [96, 5, 1, "", "waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[98, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[98, 3, 1, "", "__init__"], [98, 3, 1, "", "add_camera"], [98, 5, 1, "", "analog_outputs"], [98, 3, 1, "", "calculate_all_waveforms"], [98, 5, 1, "", "camera"], [98, 5, 1, "", "camera_delay"], [98, 5, 1, "", "camera_delay_percent"], [98, 5, 1, "", "camera_high_time"], [98, 5, 1, "", "camera_pulse_percent"], [98, 3, 1, "", "close_tasks"], [98, 5, 1, "", "configuration"], [98, 3, 1, "", "create_camera_task"], [98, 3, 1, "", "create_galvo_remote_focus_tasks"], [98, 3, 1, "", "create_master_trigger_task"], [98, 5, 1, "", "daq_parameters"], [98, 3, 1, "", "enable_microscope"], [98, 5, 1, "", "is_updating_analog_task"], [98, 5, 1, "", "microscope_name"], [98, 3, 1, "", "prepare_acquisition"], [98, 5, 1, "", "remote_focus_ramp_falling"], [98, 3, 1, "", "run_acquisition"], [98, 5, 1, "", "sample_rate"], [98, 3, 1, "", "set_external_trigger"], [98, 3, 1, "", "start_tasks"], [98, 3, 1, "", "stop_acquisition"], [98, 3, 1, "", "stop_tasks"], [98, 5, 1, "", "sweep_time"], [98, 5, 1, "", "trigger_mode"], [98, 3, 1, "", "update_analog_task"], [98, 5, 1, "", "wait_to_run_lock"], [98, 5, 1, "", "waveform_constants"], [98, 5, 1, "", "waveform_dict"], [98, 5, 1, "", "waveform_expand_num"], [98, 5, 1, "", "waveform_repeat_num"], [98, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[100, 0, 0, "-", "filter_wheel_asi"], [103, 0, 0, "-", "filter_wheel_base"], [105, 0, 0, "-", "filter_wheel_sutter"], [108, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[101, 2, 1, "", "ASIFilterWheel"], [102, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[101, 3, 1, "", "__init__"], [101, 5, 1, "", "active_filter_wheel"], [101, 3, 1, "", "check_if_filter_in_filter_dictionary"], [101, 3, 1, "", "close"], [101, 3, 1, "", "filter_change_delay"], [101, 5, 1, "", "filter_dictionary"], [101, 5, 1, "", "filter_wheel"], [101, 5, 1, "", "filter_wheel_position"], [101, 5, 1, "", "microscope_name"], [101, 5, 1, "", "number_of_filter_wheels"], [101, 3, 1, "", "set_filter"], [101, 5, 1, "", "wait_until_done_delay"], [101, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[104, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[104, 3, 1, "", "__init__"], [104, 3, 1, "", "check_if_filter_in_filter_dictionary"], [104, 5, 1, "", "filter_dictionary"], [104, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[106, 2, 1, "", "SutterFilterWheel"], [107, 5, 1, "", "baudrate"], [107, 1, 1, "", "build_filter_wheel_connection"], [107, 5, 1, "", "comport"], [107, 5, 1, "", "timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[106, 3, 1, "", "__init__"], [106, 3, 1, "", "check_if_filter_in_filter_dictionary"], [106, 3, 1, "", "close"], [106, 5, 1, "", "delay_matrix"], [106, 3, 1, "", "filter_change_delay"], [106, 5, 1, "", "filter_dictionary"], [106, 5, 1, "", "init_finished"], [106, 5, 1, "", "microscope_name"], [106, 5, 1, "", "number_of_filter_wheels"], [106, 3, 1, "", "read"], [106, 5, 1, "", "read_on_init"], [106, 5, 1, "", "serial"], [106, 3, 1, "", "set_filter"], [106, 5, 1, "", "speed"], [106, 5, 1, "", "wait_until_done"], [106, 5, 1, "", "wait_until_done_delay"], [106, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[109, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[109, 3, 1, "", "__init__"], [109, 5, 1, "", "baudrate"], [109, 3, 1, "", "check_if_filter_in_filter_dictionary"], [109, 3, 1, "", "close"], [109, 5, 1, "", "comport"], [109, 3, 1, "", "filter_change_delay"], [109, 5, 1, "id0", "filter_dictionary"], [109, 5, 1, "", "number_of_filter_wheels"], [109, 3, 1, "", "read"], [109, 3, 1, "", "set_filter"], [109, 5, 1, "id1", "wheel_position"]], "aslm.model.devices.galvo": [[111, 0, 0, "-", "galvo_base"], [113, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[112, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "adjust"], [112, 5, 1, "", "camera_delay_percent"], [112, 3, 1, "", "close_task"], [112, 5, 1, "", "configuration"], [112, 5, 1, "", "device_config"], [112, 5, 1, "", "galvo_max_voltage"], [112, 5, 1, "", "galvo_min_voltage"], [112, 5, 1, "", "galvo_name"], [112, 5, 1, "", "galvo_waveform"], [112, 5, 1, "", "microscope_name"], [112, 3, 1, "", "prepare_task"], [112, 5, 1, "", "remote_focus_ramp_falling"], [112, 5, 1, "", "sample_rate"], [112, 5, 1, "", "samples"], [112, 3, 1, "", "start_task"], [112, 3, 1, "", "stop_task"], [112, 5, 1, "", "sweep_time"], [112, 3, 1, "", "turn_off"], [112, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[114, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "adjust"], [114, 5, 1, "", "camera_delay_percent"], [114, 3, 1, "", "close_task"], [114, 5, 1, "", "configuration"], [114, 5, 1, "", "device_config"], [114, 5, 1, "", "galvo_max_voltage"], [114, 5, 1, "", "galvo_min_voltage"], [114, 5, 1, "", "galvo_name"], [114, 5, 1, "", "galvo_waveform"], [114, 5, 1, "", "microscope_name"], [114, 3, 1, "", "prepare_task"], [114, 5, 1, "", "remote_focus_ramp_falling"], [114, 5, 1, "", "sample_rate"], [114, 5, 1, "", "samples"], [114, 3, 1, "", "start_task"], [114, 3, 1, "", "stop_task"], [114, 5, 1, "", "sweep_time"], [114, 3, 1, "", "turn_off"], [114, 5, 1, "", "waveform_dict"]], "aslm.model.devices.lasers": [[116, 0, 0, "-", "laser_base"], [118, 0, 0, "-", "laser_synthetic"]], "aslm.model.devices.lasers.laser_base": [[117, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[117, 3, 1, "", "__init__"], [117, 3, 1, "", "close"], [117, 5, 1, "", "configuration"], [117, 5, 1, "", "device_config"], [117, 3, 1, "", "initialize_laser"], [117, 5, 1, "", "microscope_name"], [117, 3, 1, "", "set_power"], [117, 3, 1, "", "turn_off"], [117, 3, 1, "", "turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[119, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "close"], [119, 5, 1, "", "configuration"], [119, 5, 1, "", "device_config"], [119, 3, 1, "", "initialize_laser"], [119, 5, 1, "", "microscope_name"], [119, 3, 1, "", "set_power"], [119, 3, 1, "", "turn_off"], [119, 3, 1, "", "turn_on"]], "aslm.model.devices.objectives": [[121, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[121, 3, 1, "", "__init__"], [121, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[123, 0, 0, "-", "remote_focus_base"], [125, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[124, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[124, 3, 1, "", "__init__"], [124, 3, 1, "", "adjust"], [124, 5, 1, "", "camera_delay_percent"], [124, 3, 1, "", "close_task"], [124, 5, 1, "", "configuration"], [124, 5, 1, "", "device_config"], [124, 5, 1, "", "microscope_name"], [124, 5, 1, "", "percent_smoothing"], [124, 3, 1, "", "prepare_task"], [124, 5, 1, "", "remote_focus_delay"], [124, 5, 1, "", "remote_focus_max_voltage"], [124, 5, 1, "", "remote_focus_min_voltage"], [124, 5, 1, "", "remote_focus_ramp_falling"], [124, 5, 1, "", "sample_rate"], [124, 5, 1, "", "samples"], [124, 3, 1, "", "start_task"], [124, 3, 1, "", "stop_task"], [124, 5, 1, "", "sweep_time"], [124, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[126, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "adjust"], [126, 5, 1, "", "camera_delay_percent"], [126, 3, 1, "", "close_task"], [126, 5, 1, "", "configuration"], [126, 5, 1, "", "device_config"], [126, 5, 1, "", "microscope_name"], [126, 3, 1, "", "move"], [126, 5, 1, "", "percent_smoothing"], [126, 3, 1, "", "prepare_task"], [126, 5, 1, "", "remote_focus_delay"], [126, 5, 1, "", "remote_focus_max_voltage"], [126, 5, 1, "", "remote_focus_min_voltage"], [126, 5, 1, "", "remote_focus_ramp_falling"], [126, 5, 1, "", "sample_rate"], [126, 5, 1, "", "samples"], [126, 3, 1, "", "start_task"], [126, 3, 1, "", "stop_task"], [126, 5, 1, "", "sweep_time"], [126, 5, 1, "", "waveform_dict"]], "aslm.model.devices.shutter": [[128, 0, 0, "-", "laser_shutter_base"], [130, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[129, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[129, 3, 1, "", "__init__"], [129, 3, 1, "", "close_shutter"], [129, 3, 1, "", "open_shutter"], [129, 5, 1, "", "shutter_state"], [129, 4, 1, "", "state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[131, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[131, 3, 1, "", "__init__"], [131, 3, 1, "", "close_shutter"], [131, 3, 1, "", "open_shutter"], [131, 5, 1, "", "shutter_state"], [131, 4, 1, "", "state"]], "aslm.model.devices.stages": [[133, 0, 0, "-", "stage_asi"], [136, 0, 0, "-", "stage_base"], [138, 0, 0, "-", "stage_galvo"], [140, 0, 0, "-", "stage_mcl"], [143, 0, 0, "-", "stage_pi"], [146, 0, 0, "-", "stage_sutter"], [149, 0, 0, "-", "stage_synthetic"], [151, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[134, 2, 1, "", "ASIStage"], [135, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[134, 3, 1, "", "__init__"], [134, 5, 1, "", "axes"], [134, 5, 1, "", "axes_mapping"], [134, 3, 1, "", "close"], [134, 3, 1, "", "get_abs_position"], [134, 3, 1, "", "get_axis_position"], [134, 3, 1, "", "get_position_dict"], [134, 3, 1, "", "get_speed"], [134, 3, 1, "", "move_absolute"], [134, 3, 1, "", "move_axis_absolute"], [134, 3, 1, "", "report_position"], [134, 3, 1, "", "scanr"], [134, 3, 1, "", "scanv"], [134, 3, 1, "", "set_speed"], [134, 5, 1, "", "stage_feedback"], [134, 5, 1, "", "stage_limits"], [134, 3, 1, "", "start_scan"], [134, 3, 1, "", "stop"], [134, 3, 1, "", "stop_scan"], [134, 3, 1, "", "verify_abs_position"], [134, 3, 1, "", "verify_move"]], "aslm.model.devices.stages.stage_base": [[137, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[137, 3, 1, "", "__init__"], [137, 5, 1, "", "axes"], [137, 5, 1, "", "axes_mapping"], [137, 3, 1, "", "close"], [137, 3, 1, "", "get_abs_position"], [137, 3, 1, "", "get_position_dict"], [137, 5, 1, "", "stage_feedback"], [137, 5, 1, "", "stage_limits"], [137, 3, 1, "", "stop"], [137, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[139, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[139, 3, 1, "", "__init__"], [139, 5, 1, "", "axes"], [139, 5, 1, "", "axes_channels"], [139, 5, 1, "", "axes_mapping"], [139, 3, 1, "", "calculate_waveform"], [139, 5, 1, "", "camera_delay_percent"], [139, 3, 1, "", "close"], [139, 5, 1, "", "configuration"], [139, 5, 1, "", "daq"], [139, 5, 1, "", "distance_threshold"], [139, 5, 1, "", "exposure_times"], [139, 5, 1, "", "galvo_max_voltage"], [139, 5, 1, "", "galvo_min_voltage"], [139, 3, 1, "", "get_abs_position"], [139, 3, 1, "", "get_position_dict"], [139, 5, 1, "", "microscope_name"], [139, 3, 1, "", "move_absolute"], [139, 3, 1, "", "move_axis_absolute"], [139, 5, 1, "", "remote_focus_delay"], [139, 5, 1, "", "remote_focus_ramp_falling"], [139, 3, 1, "", "report_position"], [139, 5, 1, "", "sample_rate"], [139, 5, 1, "", "samples"], [139, 5, 1, "", "stage_feedback"], [139, 5, 1, "", "stage_limits"], [139, 5, 1, "", "stage_settle_duration"], [139, 3, 1, "", "stop"], [139, 5, 1, "", "sweep_time"], [139, 5, 1, "", "sweep_times"], [139, 5, 1, "", "trigger_source"], [139, 3, 1, "", "verify_abs_position"], [139, 5, 1, "", "volts_per_micron"], [139, 5, 1, "", "waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[141, 2, 1, "", "MCLStage"], [142, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[141, 3, 1, "", "__init__"], [141, 5, 1, "", "axes"], [141, 5, 1, "", "axes_mapping"], [141, 3, 1, "", "close"], [141, 3, 1, "", "get_abs_position"], [141, 3, 1, "", "get_position_dict"], [141, 5, 1, "", "handle"], [141, 5, 1, "", "mcl_controller"], [141, 3, 1, "", "move_absolute"], [141, 3, 1, "", "move_axis_absolute"], [141, 3, 1, "", "report_position"], [141, 5, 1, "", "stage_feedback"], [141, 5, 1, "", "stage_limits"], [141, 3, 1, "", "stop"], [141, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[144, 2, 1, "", "PIStage"], [145, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[144, 3, 1, "", "__init__"], [144, 5, 1, "", "axes"], [144, 5, 1, "", "axes_mapping"], [144, 3, 1, "", "close"], [144, 3, 1, "", "get_abs_position"], [144, 3, 1, "", "get_position_dict"], [144, 3, 1, "", "move_absolute"], [144, 3, 1, "", "move_axis_absolute"], [144, 5, 1, "", "pi_axes"], [144, 5, 1, "", "pi_device"], [144, 5, 1, "", "pi_tools"], [144, 3, 1, "", "report_position"], [144, 5, 1, "", "stage_feedback"], [144, 5, 1, "", "stage_limits"], [144, 3, 1, "", "stop"], [144, 3, 1, "", "verify_abs_position"], [144, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[147, 2, 1, "", "SutterStage"], [148, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[147, 3, 1, "", "__init__"], [147, 5, 1, "", "axes"], [147, 5, 1, "", "axes_mapping"], [147, 3, 1, "", "close"], [147, 5, 1, "", "device_axes"], [147, 3, 1, "", "get_abs_position"], [147, 3, 1, "", "get_position_dict"], [147, 3, 1, "", "move_absolute"], [147, 3, 1, "", "move_axis_absolute"], [147, 3, 1, "", "report_position"], [147, 5, 1, "", "resolution"], [147, 5, 1, "", "speed"], [147, 5, 1, "", "stage"], [147, 5, 1, "", "stage_feedback"], [147, 5, 1, "", "stage_limits"], [147, 5, 1, "", "stage_x_pos"], [147, 5, 1, "", "stage_y_pos"], [147, 5, 1, "", "stage_z_pos"], [147, 3, 1, "", "stop"], [147, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[150, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[150, 3, 1, "", "__init__"], [150, 5, 1, "", "axes"], [150, 5, 1, "", "axes_mapping"], [150, 3, 1, "", "close"], [150, 5, 1, "", "default_speed"], [150, 3, 1, "", "get_abs_position"], [150, 3, 1, "", "get_axis_position"], [150, 3, 1, "", "get_position_dict"], [150, 3, 1, "", "get_speed"], [150, 3, 1, "", "load_sample"], [150, 3, 1, "", "move_absolute"], [150, 3, 1, "", "move_axis_absolute"], [150, 3, 1, "", "report_position"], [150, 3, 1, "", "scanr"], [150, 3, 1, "", "set_speed"], [150, 5, 1, "", "stage_feedback"], [150, 5, 1, "", "stage_limits"], [150, 3, 1, "", "start_scan"], [150, 3, 1, "", "stop"], [150, 3, 1, "", "stop_scan"], [150, 3, 1, "", "unload_sample"], [150, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[152, 2, 1, "", "TLKIMStage"], [153, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[152, 3, 1, "", "__init__"], [152, 5, 1, "", "axes"], [152, 5, 1, "", "axes_mapping"], [152, 3, 1, "", "close"], [152, 3, 1, "", "get_abs_position"], [152, 3, 1, "", "get_position_dict"], [152, 5, 1, "", "kim_axes"], [152, 5, 1, "", "kim_controller"], [152, 3, 1, "", "move_absolute"], [152, 3, 1, "", "move_axis_absolute"], [152, 3, 1, "", "report_position"], [152, 5, 1, "", "serial_number"], [152, 5, 1, "", "stage_feedback"], [152, 5, 1, "", "stage_limits"], [152, 3, 1, "", "stop"], [152, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[155, 0, 0, "-", "zoom_base"], [157, 0, 0, "-", "zoom_dynamixel"], [160, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[156, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[156, 3, 1, "", "__init__"], [156, 3, 1, "", "build_stage_dict"], [156, 5, 1, "", "configuration"], [156, 3, 1, "", "move"], [156, 3, 1, "", "read_position"], [156, 3, 1, "", "set_zoom"], [156, 5, 1, "", "zoomdict"], [156, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[158, 2, 1, "", "DynamixelZoom"], [159, 1, 1, "", "build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[158, 3, 1, "", "__init__"], [158, 5, 1, "", "addr_mx_goal_position"], [158, 5, 1, "", "addr_mx_moving_speed"], [158, 5, 1, "", "addr_mx_p_gain"], [158, 5, 1, "", "addr_mx_present_position"], [158, 5, 1, "", "addr_mx_torque_enable"], [158, 5, 1, "", "addr_mx_torque_limit"], [158, 3, 1, "", "build_stage_dict"], [158, 5, 1, "", "configuration"], [158, 5, 1, "", "dynamixel"], [158, 5, 1, "", "goal_position_offset"], [158, 5, 1, "", "id"], [158, 3, 1, "", "move"], [158, 5, 1, "", "port_num"], [158, 3, 1, "", "read_position"], [158, 3, 1, "", "set_zoom"], [158, 5, 1, "", "sleeptime"], [158, 5, 1, "", "timeout"], [158, 5, 1, "", "torque_disable"], [158, 5, 1, "", "torque_enable"], [158, 5, 1, "", "zoomdict"], [158, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_synthetic": [[161, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[161, 3, 1, "", "__init__"], [161, 3, 1, "", "build_stage_dict"], [161, 5, 1, "", "configuration"], [161, 3, 1, "", "move"], [161, 3, 1, "", "read_position"], [161, 3, 1, "", "set_zoom"], [161, 5, 1, "", "zoomdict"], [161, 5, 1, "", "zoomvalue"]], "aslm.model.dummy": [[163, 2, 1, "", "DummyController"], [164, 2, 1, "", "DummyDevice"], [165, 2, 1, "", "DummyMicroscope"], [166, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[163, 3, 1, "", "__init__"], [163, 3, 1, "", "clear"], [163, 5, 1, "", "commands"], [163, 5, 1, "", "configuration"], [163, 5, 1, "", "configuration_controller"], [163, 3, 1, "", "execute"], [163, 5, 1, "", "menu_controller"], [163, 5, 1, "", "off_stage_pos"], [163, 3, 1, "", "pop"], [163, 5, 1, "", "stage_pos"], [163, 5, 1, "", "view"]], "aslm.model.dummy.DummyDevice": [[164, 3, 1, "", "__init__"], [164, 3, 1, "", "clear"], [164, 3, 1, "", "generate_message"], [164, 5, 1, "", "in_port"], [164, 3, 1, "", "listen"], [164, 5, 1, "", "msg_count"], [164, 5, 1, "", "out_port"], [164, 3, 1, "", "sendout"], [164, 5, 1, "", "sendout_msg_count"], [164, 3, 1, "", "setup"], [164, 5, 1, "", "stop_flag"], [164, 5, 1, "", "timecost"]], "aslm.model.dummy.DummyMicroscope": [[165, 3, 1, "", "__init__"], [165, 3, 1, "", "calculate_exposure_sweep_times"], [165, 5, 1, "", "configuration"], [165, 5, 1, "", "current_channel"], [165, 5, 1, "", "daq"], [165, 5, 1, "", "data_buffer"], [165, 5, 1, "", "galvo"], [165, 5, 1, "", "lasers"], [165, 5, 1, "", "microscope_name"], [165, 5, 1, "", "stages"]], "aslm.model.dummy.DummyModel": [[166, 3, 1, "", "__init__"], [166, 5, 1, "", "active_microscope"], [166, 5, 1, "", "active_microscope_name"], [166, 5, 1, "", "camera"], [166, 5, 1, "", "configuration"], [166, 5, 1, "", "data"], [166, 5, 1, "", "data_buffer"], [166, 5, 1, "", "data_buffer_positions"], [166, 5, 1, "", "data_container"], [166, 3, 1, "", "data_func"], [166, 5, 1, "", "data_pipe"], [166, 5, 1, "", "data_records"], [166, 5, 1, "", "data_thread"], [166, 5, 1, "", "device"], [166, 5, 1, "", "frame_id"], [166, 5, 1, "", "img_height"], [166, 5, 1, "", "img_width"], [166, 5, 1, "", "manager"], [166, 5, 1, "", "number_of_frames"], [166, 5, 1, "", "signal_container"], [166, 3, 1, "", "signal_func"], [166, 5, 1, "", "signal_pipe"], [166, 5, 1, "", "signal_records"], [166, 5, 1, "", "signal_thread"], [166, 3, 1, "", "start"], [166, 5, 1, "", "stop_flag"]], "aslm.model.features": [[168, 0, 0, "-", "auto_tile_scan"], [170, 0, 0, "-", "autofocus"], [173, 0, 0, "-", "common_features"], [184, 0, 0, "-", "cva_conpro"], [186, 0, 0, "-", "feature_container"], [197, 0, 0, "-", "feature_related_functions"], [202, 0, 0, "-", "image_writer"], [204, 0, 0, "-", "remove_empty_tiles"], [210, 0, 0, "-", "restful_features"], [213, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[169, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[169, 3, 1, "", "__init__"], [169, 5, 1, "", "autofocus"], [169, 3, 1, "", "end_func_data"], [169, 3, 1, "", "end_func_signal"], [169, 3, 1, "", "in_func_data"], [169, 3, 1, "", "in_func_signal"], [169, 5, 1, "", "model"], [169, 3, 1, "", "pre_func_data"], [169, 3, 1, "", "pre_func_signal"]], "aslm.model.features.autofocus": [[171, 2, 1, "", "Autofocus"], [172, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[171, 3, 1, "", "__init__"], [171, 5, 1, "", "autofocus_frame_queue"], [171, 5, 1, "", "autofocus_pos_queue"], [171, 5, 1, "", "coarse_step_size"], [171, 5, 1, "", "coarse_steps"], [171, 5, 1, "", "config_table"], [171, 5, 1, "", "device"], [171, 5, 1, "", "device_ref"], [171, 3, 1, "", "end_func_data"], [171, 3, 1, "", "end_func_signal"], [171, 5, 1, "", "f_frame_id"], [171, 5, 1, "", "f_pos"], [171, 5, 1, "", "fine_pos_offset"], [171, 5, 1, "", "fine_step_size"], [171, 5, 1, "", "focus_pos"], [171, 5, 1, "", "frame_num"], [171, 3, 1, "", "get_autofocus_frame_num"], [171, 5, 1, "", "get_frames_num"], [171, 3, 1, "", "get_steps"], [171, 3, 1, "", "in_func_data"], [171, 3, 1, "", "in_func_signal"], [171, 5, 1, "", "init_pos"], [171, 5, 1, "", "max_entropy"], [171, 5, 1, "", "model"], [171, 5, 1, "", "plot_data"], [171, 3, 1, "", "pre_func_data"], [171, 3, 1, "", "pre_func_signal"], [171, 3, 1, "", "robust_autofocus"], [171, 3, 1, "", "run"], [171, 5, 1, "", "signal_id"], [171, 5, 1, "", "target_channel"], [171, 5, 1, "", "target_frame_id"], [171, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[174, 2, 1, "", "ChangeResolution"], [175, 2, 1, "", "ConProAcquisition"], [176, 2, 1, "", "FindTissueSimple2D"], [177, 2, 1, "", "LoopByCount"], [178, 2, 1, "", "MoveToNextPositionInMultiPositionTable"], [179, 2, 1, "", "PrepareNextChannel"], [180, 2, 1, "", "Snap"], [181, 2, 1, "", "StackPause"], [182, 2, 1, "", "WaitToContinue"], [183, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[174, 3, 1, "", "__init__"], [174, 3, 1, "", "cleanup"], [174, 5, 1, "", "config_table"], [174, 5, 1, "", "model"], [174, 5, 1, "", "resolution_mode"], [174, 3, 1, "", "signal_func"], [174, 5, 1, "", "zoom_value"]], "aslm.model.features.common_features.ConProAcquisition": [[175, 3, 1, "", "__init__"], [175, 5, 1, "", "channels"], [175, 5, 1, "", "config_table"], [175, 5, 1, "", "conpro_cycling_mode"], [175, 3, 1, "", "generate_meta_data"], [175, 5, 1, "", "model"], [175, 5, 1, "", "n_plane"], [175, 5, 1, "", "need_to_move_new_plane"], [175, 5, 1, "", "offset_end"], [175, 5, 1, "", "offset_start"], [175, 5, 1, "", "offset_step_size"], [175, 5, 1, "", "offset_update_time"], [175, 3, 1, "", "pre_signal_func"], [175, 5, 1, "", "scanrange"], [175, 3, 1, "", "signal_end"], [175, 3, 1, "", "signal_func"], [175, 5, 1, "", "timepoints"], [175, 3, 1, "", "update_channel"]], "aslm.model.features.common_features.FindTissueSimple2D": [[176, 3, 1, "", "__init__"], [176, 5, 1, "", "config_table"], [176, 3, 1, "", "data_func"], [176, 5, 1, "", "model"], [176, 5, 1, "", "overlap"], [176, 5, 1, "", "target_resolution"], [176, 5, 1, "", "target_zoom"]], "aslm.model.features.common_features.LoopByCount": [[177, 3, 1, "", "__init__"], [177, 5, 1, "", "config_table"], [177, 5, 1, "", "data_frames"], [177, 3, 1, "", "data_func"], [177, 5, 1, "", "model"], [177, 3, 1, "", "signal_func"], [177, 5, 1, "", "signals"], [177, 5, 1, "", "step_by_frame"], [177, 5, 1, "", "steps"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[178, 3, 1, "", "__init__"], [178, 3, 1, "", "cleanup"], [178, 5, 1, "", "config_table"], [178, 5, 1, "", "current_idx"], [178, 5, 1, "", "model"], [178, 5, 1, "", "multiposition_table"], [178, 5, 1, "", "position_count"], [178, 5, 1, "", "pre_z"], [178, 3, 1, "", "signal_func"], [178, 5, 1, "", "stage_distance_threshold"]], "aslm.model.features.common_features.PrepareNextChannel": [[179, 3, 1, "", "__init__"], [179, 5, 1, "", "config_table"], [179, 5, 1, "", "model"], [179, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.Snap": [[180, 3, 1, "", "__init__"], [180, 5, 1, "", "config_table"], [180, 3, 1, "", "data_func"], [180, 5, 1, "", "model"]], "aslm.model.features.common_features.StackPause": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.WaitToContinue": [[182, 3, 1, "", "__init__"], [182, 3, 1, "", "cleanup"], [182, 5, 1, "", "config_table"], [182, 3, 1, "", "data_func"], [182, 5, 1, "", "first_enter_node"], [182, 5, 1, "", "model"], [182, 5, 1, "", "pause_data_lock"], [182, 5, 1, "", "pause_signal_lock"], [182, 3, 1, "", "pre_data_func"], [182, 3, 1, "", "pre_signal_func"], [182, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ZStackAcquisition": [[183, 3, 1, "", "__init__"], [183, 5, 1, "", "channels"], [183, 3, 1, "", "cleanup_data_func"], [183, 5, 1, "", "config_table"], [183, 5, 1, "", "current_focus_position"], [183, 5, 1, "", "current_position_idx"], [183, 5, 1, "", "current_z_position"], [183, 5, 1, "", "defocus"], [183, 3, 1, "", "end_data_func"], [183, 5, 1, "", "focus_step_size"], [183, 5, 1, "", "get_origin"], [183, 5, 1, "", "image_writer"], [183, 3, 1, "", "in_data_func"], [183, 5, 1, "", "model"], [183, 5, 1, "", "need_to_move_new_position"], [183, 5, 1, "", "need_to_move_z_position"], [183, 5, 1, "", "number_z_steps"], [183, 5, 1, "", "positions"], [183, 3, 1, "", "pre_data_func"], [183, 3, 1, "", "pre_signal_func"], [183, 3, 1, "", "signal_end"], [183, 3, 1, "", "signal_func"], [183, 5, 1, "", "stack_cycling_mode"], [183, 5, 1, "", "start_focus"], [183, 5, 1, "", "start_z_position"], [183, 3, 1, "", "update_channel"], [183, 5, 1, "", "z_position_moved_time"], [183, 5, 1, "", "z_step_size"]], "aslm.model.features.cva_conpro": [[185, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.cva_conpro.ConstantVelocityAcquisition": [[185, 3, 1, "", "__init__"], [185, 3, 1, "", "cleanup"], [185, 3, 1, "", "cleanup_data_function"], [185, 3, 1, "", "pre_func_signal"]], "aslm.model.features.feature_container": [[187, 2, 1, "", "Container"], [188, 2, 1, "", "DataContainer"], [189, 2, 1, "", "DataNode"], [190, 2, 1, "", "SignalContainer"], [191, 2, 1, "", "SignalNode"], [192, 2, 1, "", "TreeNode"], [193, 1, 1, "", "dummy_True"], [194, 1, 1, "", "dummy_func"], [195, 1, 1, "", "get_registered_funcs"], [196, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[187, 3, 1, "", "__init__"], [187, 3, 1, "", "cleanup"], [187, 5, 1, "", "curr_node"], [187, 5, 1, "", "end_flag"], [187, 5, 1, "", "is_closed"], [187, 3, 1, "", "reset"], [187, 5, 1, "", "root"]], "aslm.model.features.feature_container.DataContainer": [[188, 3, 1, "", "__init__"], [188, 3, 1, "", "cleanup"], [188, 5, 1, "", "curr_node"], [188, 5, 1, "", "end_flag"], [188, 5, 1, "", "is_closed"], [188, 3, 1, "", "reset"], [188, 5, 1, "", "root"], [188, 3, 1, "", "run"]], "aslm.model.features.feature_container.DataNode": [[189, 3, 1, "", "__init__"], [189, 5, 1, "", "device_related"], [189, 5, 1, "", "is_initialized"], [189, 5, 1, "", "is_marked"], [189, 5, 1, "", "need_response"], [189, 5, 1, "", "node_funcs"], [189, 5, 1, "", "node_name"], [189, 5, 1, "", "node_type"], [189, 3, 1, "", "run"], [189, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.SignalContainer": [[190, 3, 1, "", "__init__"], [190, 3, 1, "", "cleanup"], [190, 5, 1, "", "curr_node"], [190, 5, 1, "", "end_flag"], [190, 5, 1, "", "is_closed"], [190, 5, 1, "", "number_of_execution"], [190, 5, 1, "", "remaining_number_of_execution"], [190, 3, 1, "", "reset"], [190, 5, 1, "", "root"], [190, 3, 1, "", "run"]], "aslm.model.features.feature_container.SignalNode": [[191, 3, 1, "", "__init__"], [191, 5, 1, "", "device_related"], [191, 5, 1, "", "is_initialized"], [191, 5, 1, "", "need_response"], [191, 5, 1, "", "node_funcs"], [191, 5, 1, "", "node_name"], [191, 5, 1, "", "node_type"], [191, 3, 1, "", "run"], [191, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.TreeNode": [[192, 3, 1, "", "__init__"], [192, 5, 1, "", "device_related"], [192, 5, 1, "", "is_initialized"], [192, 5, 1, "", "need_response"], [192, 5, 1, "", "node_funcs"], [192, 5, 1, "", "node_name"], [192, 5, 1, "", "node_type"], [192, 3, 1, "", "set_property"]], "aslm.model.features.feature_related_functions": [[198, 2, 1, "", "SharedList"], [199, 1, 1, "", "convert_feature_list_to_str"], [200, 1, 1, "", "convert_str_to_feature_list"], [201, 1, 1, "", "load_dynamic_parameter_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[198, 3, 1, "", "__init__"], [198, 3, 1, "", "append"], [198, 3, 1, "", "clear"], [198, 3, 1, "", "copy"], [198, 3, 1, "", "count"], [198, 3, 1, "", "extend"], [198, 3, 1, "", "index"], [198, 3, 1, "", "insert"], [198, 3, 1, "", "pop"], [198, 3, 1, "", "remove"], [198, 3, 1, "", "reverse"], [198, 3, 1, "", "sort"]], "aslm.model.features.image_writer": [[203, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[203, 3, 1, "", "__init__"], [203, 5, 1, "", "big_tiff"], [203, 3, 1, "", "calculate_and_check_disk_space"], [203, 3, 1, "", "close"], [203, 5, 1, "", "config_table"], [203, 5, 1, "", "current_time_point"], [203, 5, 1, "", "data_buffer"], [203, 5, 1, "", "data_source"], [203, 5, 1, "", "file_type"], [203, 3, 1, "", "generate_image_name"], [203, 3, 1, "", "generate_meta_data"], [203, 5, 1, "", "mip"], [203, 5, 1, "", "mip_directory"], [203, 5, 1, "", "num_of_channels"], [203, 5, 1, "", "num_of_positions"], [203, 5, 1, "", "num_of_slices"], [203, 5, 1, "", "num_of_timepoints"], [203, 5, 1, "", "number_of_frames"], [203, 5, 1, "", "save_directory"], [203, 3, 1, "", "save_image"], [203, 5, 1, "", "sub_dir"]], "aslm.model.features.remove_empty_tiles": [[205, 2, 1, "", "DetectTissueInStack"], [206, 2, 1, "", "DetectTissueInStackAndRecord"], [207, 2, 1, "", "RemoveEmptyPositions"], [208, 1, 1, "", "detect_tissue"], [209, 1, 1, "", "detect_tissue2"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[205, 3, 1, "", "__init__"], [205, 5, 1, "", "detect_func"], [205, 3, 1, "", "end_func_data"], [205, 3, 1, "", "end_func_signal"], [205, 3, 1, "", "in_func_data"], [205, 3, 1, "", "in_func_signal"], [205, 5, 1, "", "model"], [205, 5, 1, "", "planes"], [205, 3, 1, "", "pre_func_data"], [205, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[206, 3, 1, "", "__init__"], [206, 5, 1, "", "detect_func"], [206, 3, 1, "", "end_func_data"], [206, 3, 1, "", "end_func_signal"], [206, 3, 1, "", "in_func_data"], [206, 3, 1, "", "in_func_signal"], [206, 5, 1, "", "model"], [206, 5, 1, "", "planes"], [206, 5, 1, "", "position_records"], [206, 3, 1, "", "pre_func_data"], [206, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[207, 3, 1, "", "__init__"], [207, 5, 1, "", "model"], [207, 5, 1, "", "position_records"], [207, 3, 1, "", "signal_func"]], "aslm.model.features.restful_features": [[211, 2, 1, "", "IlastikSegmentation"], [212, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[211, 3, 1, "", "__init__"], [211, 5, 1, "", "config_table"], [211, 3, 1, "", "data_func"], [211, 3, 1, "", "init_func"], [211, 3, 1, "", "mark_position"], [211, 5, 1, "", "model"], [211, 5, 1, "", "pieces_num"], [211, 5, 1, "", "pieces_size"], [211, 5, 1, "", "project_file"], [211, 5, 1, "", "resolution"], [211, 5, 1, "", "service_url"], [211, 3, 1, "", "update_setting"], [211, 5, 1, "", "zoom"]], "aslm.model.features.volume_search": [[214, 2, 1, "", "VolumeSearch"], [215, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[214, 3, 1, "", "__init__"], [214, 3, 1, "", "cleanup"], [214, 5, 1, "", "config_table"], [214, 5, 1, "", "curr_z_index"], [214, 3, 1, "", "data_func"], [214, 5, 1, "", "debug"], [214, 5, 1, "", "direction"], [214, 3, 1, "", "end_data_func"], [214, 5, 1, "", "end_flag"], [214, 5, 1, "", "f_offset"], [214, 5, 1, "", "f_pos"], [214, 5, 1, "", "f_step_size"], [214, 5, 1, "", "first_boundary"], [214, 5, 1, "", "has_tissue"], [214, 5, 1, "", "has_tissue_queue"], [214, 3, 1, "", "init_data_func"], [214, 5, 1, "", "model"], [214, 5, 1, "", "overlap"], [214, 5, 1, "", "pre_boundary"], [214, 3, 1, "", "pre_signal_func"], [214, 3, 1, "", "signal_end"], [214, 3, 1, "", "signal_func"], [214, 3, 1, "", "signal_response_func"], [214, 5, 1, "", "sinx"], [214, 5, 1, "", "siny"], [214, 5, 1, "", "target_resolution"], [214, 5, 1, "", "target_zoom"], [214, 5, 1, "", "volumes_selected"], [214, 5, 1, "", "z_pos"], [214, 5, 1, "", "z_step_size"], [214, 5, 1, "", "z_steps"]], "aslm.model.metadata_sources": [[217, 0, 0, "-", "bdv_metadata"], [219, 0, 0, "-", "metadata"], [222, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[218, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[218, 3, 1, "", "__init__"], [218, 5, 1, "", "active_microscope"], [218, 3, 1, "", "affine_matrix_to_stage_positions"], [218, 3, 1, "", "bdv_xml_dict"], [218, 4, 1, "", "configuration"], [218, 5, 1, "", "dc"], [218, 5, 1, "", "dt"], [218, 5, 1, "", "dx"], [218, 5, 1, "", "dy"], [218, 5, 1, "", "dz"], [218, 3, 1, "", "parse_xml"], [218, 4, 1, "", "per_stack"], [218, 5, 1, "", "positions"], [218, 3, 1, "", "set_from_configuration_experiment"], [218, 3, 1, "", "set_shape_from_configuration_experiment"], [218, 3, 1, "", "set_stack_order_from_configuration_experiment"], [218, 4, 1, "", "shape"], [218, 5, 1, "", "shape_c"], [218, 5, 1, "", "shape_t"], [218, 5, 1, "", "shape_x"], [218, 5, 1, "", "shape_y"], [218, 5, 1, "", "shape_z"], [218, 3, 1, "", "stage_positions_to_affine_matrix"], [218, 3, 1, "", "to_xml"], [218, 4, 1, "", "voxel_size"], [218, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[220, 2, 1, "", "Metadata"], [221, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[220, 3, 1, "", "__init__"], [220, 5, 1, "", "active_microscope"], [220, 4, 1, "", "configuration"], [220, 5, 1, "", "dc"], [220, 5, 1, "", "dt"], [220, 5, 1, "", "dx"], [220, 5, 1, "", "dy"], [220, 5, 1, "", "dz"], [220, 4, 1, "", "per_stack"], [220, 5, 1, "", "positions"], [220, 3, 1, "", "set_from_configuration_experiment"], [220, 3, 1, "", "set_shape_from_configuration_experiment"], [220, 3, 1, "", "set_stack_order_from_configuration_experiment"], [220, 4, 1, "", "shape"], [220, 5, 1, "", "shape_c"], [220, 5, 1, "", "shape_t"], [220, 5, 1, "", "shape_x"], [220, 5, 1, "", "shape_y"], [220, 5, 1, "", "shape_z"], [220, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[221, 3, 1, "", "__init__"], [221, 5, 1, "", "active_microscope"], [221, 4, 1, "", "configuration"], [221, 5, 1, "", "dc"], [221, 5, 1, "", "dt"], [221, 5, 1, "", "dx"], [221, 5, 1, "", "dy"], [221, 5, 1, "", "dz"], [221, 4, 1, "", "per_stack"], [221, 5, 1, "", "positions"], [221, 3, 1, "", "set_from_configuration_experiment"], [221, 3, 1, "", "set_shape_from_configuration_experiment"], [221, 3, 1, "", "set_stack_order_from_configuration_experiment"], [221, 4, 1, "", "shape"], [221, 5, 1, "", "shape_c"], [221, 5, 1, "", "shape_t"], [221, 5, 1, "", "shape_x"], [221, 5, 1, "", "shape_y"], [221, 5, 1, "", "shape_z"], [221, 3, 1, "", "to_xml"], [221, 4, 1, "", "voxel_size"], [221, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[223, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[223, 3, 1, "", "__init__"], [223, 5, 1, "", "active_microscope"], [223, 4, 1, "", "configuration"], [223, 5, 1, "", "dc"], [223, 5, 1, "", "dt"], [223, 5, 1, "", "dx"], [223, 5, 1, "", "dy"], [223, 5, 1, "", "dz"], [223, 3, 1, "", "ome_tiff_xml_dict"], [223, 4, 1, "", "per_stack"], [223, 5, 1, "", "positions"], [223, 3, 1, "", "set_from_configuration_experiment"], [223, 3, 1, "", "set_shape_from_configuration_experiment"], [223, 3, 1, "", "set_stack_order_from_configuration_experiment"], [223, 4, 1, "", "shape"], [223, 5, 1, "", "shape_c"], [223, 5, 1, "", "shape_t"], [223, 5, 1, "", "shape_x"], [223, 5, 1, "", "shape_y"], [223, 5, 1, "", "shape_z"], [223, 3, 1, "", "to_xml"], [223, 4, 1, "", "voxel_size"], [223, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[225, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[225, 3, 1, "", "__init__"], [225, 5, 1, "", "ask_stage_for_position"], [225, 3, 1, "", "assemble_device_config_lists"], [225, 5, 1, "", "available_channels"], [225, 3, 1, "", "calculate_all_waveform"], [225, 3, 1, "", "calculate_exposure_sweep_times"], [225, 5, 1, "", "central_focus"], [225, 5, 1, "", "channels"], [225, 5, 1, "", "configuration"], [225, 5, 1, "", "current_channel"], [225, 5, 1, "", "current_laser_index"], [225, 5, 1, "", "daq"], [225, 5, 1, "", "data_buffer"], [225, 3, 1, "", "end_acquisition"], [225, 5, 1, "", "galvo"], [225, 3, 1, "", "get_readout_time"], [225, 3, 1, "", "get_stage_position"], [225, 5, 1, "", "info"], [225, 5, 1, "", "is_synthetic"], [225, 5, 1, "", "laser_wavelength"], [225, 5, 1, "", "lasers"], [225, 3, 1, "", "load_and_start_devices"], [225, 5, 1, "", "microscope_name"], [225, 3, 1, "", "move_remote_focus"], [225, 3, 1, "", "move_stage"], [225, 3, 1, "", "move_stage_offset"], [225, 5, 1, "", "number_of_frames"], [225, 3, 1, "", "prepare_acquisition"], [225, 3, 1, "", "prepare_next_channel"], [225, 5, 1, "", "ret_pos_dict"], [225, 5, 1, "", "stages"], [225, 5, 1, "", "stages_list"], [225, 3, 1, "", "stop_stage"], [225, 3, 1, "", "terminate"], [225, 5, 1, "", "tiger_controller"], [225, 3, 1, "", "turn_off_lasers"], [225, 3, 1, "", "turn_on_laser"], [225, 3, 1, "", "update_data_buffer"], [225, 3, 1, "", "update_stage_limits"]], "aslm.model.model": [[227, 2, 1, "", "Model"]], "aslm.model.model.Model": [[227, 3, 1, "", "__init__"], [227, 5, 1, "", "acquisition_count"], [227, 5, 1, "", "active_microscope"], [227, 5, 1, "", "active_microscope_name"], [227, 5, 1, "", "ask_to_pause_data_thread"], [227, 5, 1, "", "autofocus_on"], [227, 5, 1, "", "binning"], [227, 5, 1, "", "camera_wait_iterations"], [227, 3, 1, "", "change_resolution"], [227, 5, 1, "", "configuration"], [227, 3, 1, "", "create_pipe"], [227, 5, 1, "", "current_exposure_time"], [227, 5, 1, "", "data_buffer"], [227, 5, 1, "", "data_buffer_positions"], [227, 5, 1, "", "data_thread"], [227, 3, 1, "", "destroy_virtual_microscope"], [227, 3, 1, "", "end_acquisition"], [227, 5, 1, "", "event_queue"], [227, 5, 1, "", "f_position"], [227, 5, 1, "", "feature_list"], [227, 5, 1, "", "focus_pos"], [227, 5, 1, "", "frame_id"], [227, 3, 1, "", "get_active_microscope"], [227, 3, 1, "", "get_camera_line_interval_and_exposure_time"], [227, 3, 1, "", "get_data_buffer"], [227, 3, 1, "", "get_feature_list"], [227, 3, 1, "", "get_microscope_info"], [227, 3, 1, "", "get_offset_variance_maps"], [227, 3, 1, "", "get_stage_position"], [227, 5, 1, "", "image_count"], [227, 5, 1, "", "image_writer"], [227, 5, 1, "", "imaging_mode"], [227, 5, 1, "", "img_height"], [227, 5, 1, "", "img_width"], [227, 5, 1, "", "is_acquiring"], [227, 5, 1, "", "is_live"], [227, 5, 1, "", "is_save"], [227, 3, 1, "", "launch_virtual_microscope"], [227, 3, 1, "", "load_feature_list_from_file"], [227, 3, 1, "", "load_feature_list_from_str"], [227, 3, 1, "", "load_feature_records"], [227, 3, 1, "", "load_images"], [227, 5, 1, "", "logger"], [227, 5, 1, "", "max_entropy"], [227, 5, 1, "", "microscopes"], [227, 3, 1, "", "move_stage"], [227, 5, 1, "", "number_of_frames"], [227, 5, 1, "", "pause_data_event"], [227, 5, 1, "", "pause_data_ready_lock"], [227, 3, 1, "", "pause_data_thread"], [227, 5, 1, "", "plot_pipe"], [227, 5, 1, "", "pre_exposure_time"], [227, 3, 1, "", "prepare_acquisition"], [227, 3, 1, "", "release_pipe"], [227, 3, 1, "", "resume_data_thread"], [227, 3, 1, "", "run_acquisition"], [227, 3, 1, "", "run_command"], [227, 3, 1, "", "run_data_process"], [227, 3, 1, "", "run_live_acquisition"], [227, 5, 1, "", "show_img_pipe"], [227, 5, 1, "", "signal_thread"], [227, 3, 1, "", "simplified_data_process"], [227, 3, 1, "", "snap_image"], [227, 5, 1, "", "start_time"], [227, 5, 1, "", "stop_acquisition"], [227, 5, 1, "", "stop_send_signal"], [227, 3, 1, "", "stop_stage"], [227, 3, 1, "", "terminate"], [227, 5, 1, "", "total_acquisition_count"], [227, 5, 1, "", "total_image_count"], [227, 3, 1, "", "update_data_buffer"], [227, 3, 1, "", "update_ilastik_setting"], [227, 5, 1, "", "virtual_microscopes"]], "aslm.model.waveforms": [[229, 1, 1, "", "camera_exposure"], [230, 1, 1, "", "dc_value"], [231, 1, 1, "", "remote_focus_ramp"], [232, 1, 1, "", "sawtooth"], [233, 1, 1, "", "sine_wave"], [234, 1, 1, "", "single_pulse"], [235, 1, 1, "", "smooth_waveform"], [236, 1, 1, "", "square"]], "aslm.tools": [[238, 0, 0, "-", "common_dict_tools"], [240, 0, 0, "-", "common_functions"], [246, 0, 0, "-", "decorators"], [249, 0, 0, "-", "file_functions"], [254, 0, 0, "-", "image"], [257, 0, 0, "-", "image_loaders"], [259, 0, 0, "-", "main_functions"], [262, 0, 0, "-", "multipos_table_tools"], [267, 0, 0, "-", "sdf"], [271, 0, 0, "-", "waveform_template_funcs"], [273, 0, 0, "-", "xml_tools"]], "aslm.tools.common_dict_tools": [[239, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[241, 2, 1, "", "VariableWithLock"], [242, 1, 1, "", "build_ref_name"], [243, 1, 1, "", "combine_funcs"], [244, 1, 1, "", "copy_proxy_object"], [245, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[241, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[247, 2, 1, "", "FeatureList"], [248, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[247, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[250, 1, 1, "", "create_save_path"], [251, 1, 1, "", "delete_folder"], [252, 1, 1, "", "load_yaml_file"], [253, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[255, 1, 1, "", "create_arrow_image"], [256, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[258, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[258, 3, 1, "", "__init__"], [258, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[260, 1, 1, "", "create_parser"], [261, 1, 1, "", "evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[263, 1, 1, "", "calc_num_tiles"], [264, 1, 1, "", "compute_tiles_from_bounding_box"], [265, 1, 1, "", "sign"], [266, 1, 1, "", "update_table"]], "aslm.tools.sdf": [[268, 1, 1, "", "box"], [269, 1, 1, "", "sphere"], [270, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[272, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[274, 1, 1, "", "dict_to_xml"], [275, 1, 1, "", "parse_xml"]], "aslm.view": [[277, 0, 0, "-", "custom_widgets"], [278, 0, 0, "-", "main_window_content"], [279, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 283, 286, 290], "config": [0, 1, 2, 3, 4, 5, 6, 7, 8], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_experiment_config": 7, "verify_waveform_const": 8, "control": [9, 10, 11, 12, 13, 14, 15, 294], "configuration_control": [10, 11], "configurationcontrol": 11, "thread_pool": [12, 13, 14, 15], "selflockthread": 13, "synchronizedthreadpool": 14, "threadwaitlist": 15, "log_fil": [16, 17, 18, 19, 20, 21, 22, 23, 24], "filter": [17, 18, 19, 292, 294], "nonperffilt": 18, "performancefilt": 19, "log_funct": [20, 21, 22, 23, 24], "find_filenam": 21, "log_setup": 22, "main_process_listen": 23, "update_nested_dict": 24, "model": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 287], "analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "boundary_detect": [27, 28, 29, 30, 31], "binary_detect": 28, "find_tissue_boundary_2d": 29, "has_tissu": 30, "map_boundari": 31, "camera": [32, 33, 34, 35, 36, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 292, 294], "compute_flatfield_map": 33, "compute_noise_sigma": 34, "compute_scmos_offset_and_variance_map": 35, "compute_signal_to_nois": 36, "image_contrast": [37, 38], "fast_normalized_dct_shannon_entropi": 38, "concurr": [39, 40, 41, 42, 43, 44, 45, 46], "concurrency_tool": [40, 41, 42, 43, 44, 45, 46], "custodythread": 41, "fancythread": 42, "objectinsubprocess": 43, "politethread": 44, "resultthread": 45, "sharedndarrai": 46, "data_sourc": [47, 48, 49, 50, 51, 52, 53, 54], "bdv_data_sourc": [48, 49], "bigdataviewerdatasourc": 49, "datasourc": 51, "get_data_sourc": 52, "tiff_data_sourc": [53, 54], "tiffdatasourc": 54, "device_startup_funct": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "dummydeviceconnect": 56, "auto_redi": 57, "device_not_found": 58, "load_camera_connect": 59, "load_devic": 60, "load_filter_wheel_connect": 61, "load_stag": 62, "load_zoom_connect": 63, "start_camera": 64, "start_daq": 65, "start_filter_wheel": 66, "start_galvo": 67, "start_las": 68, "start_remote_focus_devic": 69, "start_shutt": 70, "start_stag": 71, "start_zoom": 72, "devic": [73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 294], "api": [74, 75, 76, 77, 78, 79, 80, 81, 82, 282, 292], "coher": [75, 294], "dynamixel": [76, 77, 78, 294], "dynamixel_funct": [77, 78], "create_mock_dxl_devic": 78, "omicron": [79, 294], "sutter": [80, 81, 82, 294], "mp285": [81, 82], "camera_bas": [84, 85], "camerabas": 85, "camera_hamamatsu": [86, 87, 88], "hamamatsuorca": 87, "hamamatsuorcalightn": 88, "camera_photometr": [89, 90], "photometricskinetix": 90, "camera_synthet": [91, 92, 93], "syntheticcamera": 92, "syntheticcameracontrol": 93, "daq": [94, 95, 96, 97, 98, 292, 294], "daq_bas": [95, 96], "daqbas": 96, "daq_synthet": [97, 98], "syntheticdaq": 98, "filter_wheel": [99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "filter_wheel_asi": [100, 101, 102], "asifilterwheel": 101, "build_filter_wheel_connect": [102, 107], "filter_wheel_bas": [103, 104], "filterwheelbas": 104, "filter_wheel_sutt": [105, 106, 107], "sutterfilterwheel": 106, "filter_wheel_synthet": [108, 109], "syntheticfilterwheel": 109, "galvo": [110, 111, 112, 113, 114, 292, 294], "galvo_bas": [111, 112], "galvobas": 112, "galvo_synthet": [113, 114], "syntheticgalvo": 114, "laser": [115, 116, 117, 118, 119, 292, 294], "laser_bas": [116, 117], "laserbas": 117, "laser_synthet": [118, 119], "syntheticlas": 119, "object": [120, 121, 289], "remote_focu": [122, 123, 124, 125, 126], "remote_focus_bas": [123, 124], "remotefocusbas": 124, "remote_focus_synthet": [125, 126], "syntheticremotefocu": 126, "shutter": [127, 128, 129, 130, 131, 292, 294], "laser_shutter_bas": [128, 129], "shutterbas": 129, "laser_shutter_synthet": [130, 131], "syntheticshutt": 131, "stage": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 283, 292, 294], "stage_asi": [133, 134, 135], "asistag": 134, "build_asi_stage_connect": 135, "stage_bas": [136, 137], "stagebas": 137, "stage_galvo": [138, 139], "galvonistag": 139, "stage_mcl": [140, 141, 142], "mclstage": 141, "build_mclstage_connect": 142, "stage_pi": [143, 144, 145], "pistag": 144, "build_pistage_connect": 145, "stage_sutt": [146, 147, 148], "sutterstag": 147, "build_mp285_connect": 148, "stage_synthet": [149, 150], "syntheticstag": 150, "stage_tl_kcube_inerti": [151, 152, 153], "tlkimstag": 152, "build_tlkimstage_connect": 153, "zoom": [154, 155, 156, 157, 158, 159, 160, 161, 292, 294], "zoom_bas": [155, 156], "zoombas": 156, "zoom_dynamixel": [157, 158, 159], "dynamixelzoom": 158, "build_dynamixel_zoom_connect": 159, "zoom_synthet": [160, 161], "syntheticzoom": 161, "dummi": [162, 163, 164, 165, 166], "dummycontrol": 163, "dummydevic": 164, "dummymicroscop": 165, "dummymodel": 166, "featur": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 287, 289], "auto_tile_scan": [168, 169], "calculatefocusrang": 169, "note": [169, 174, 175, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 208, 209], "paramet": [169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 205, 206, 207, 208, 209, 289], "return": [169, 174, 175, 177, 178, 179, 180, 182, 183, 189, 191, 193, 194, 195, 196, 199, 205, 206, 207, 208, 209], "autofocu": [170, 171, 172], "power_t": 172, "common_featur": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "changeresolut": 174, "conproacquisit": 175, "findtissuesimple2d": 176, "loopbycount": 177, "movetonextpositioninmultipositiont": 178, "preparenextchannel": 179, "snap": 180, "stackpaus": 181, "waittocontinu": 182, "zstackacquisit": 183, "cva_conpro": [184, 185], "constantvelocityacquisit": 185, "feature_contain": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "contain": [187, 289], "datacontain": 188, "datanod": 189, "signalcontain": 190, "signalnod": 191, "treenod": 192, "dummy_tru": 193, "dummy_func": 194, "get_registered_func": 195, "load_featur": 196, "feature_related_funct": [197, 198, 199, 200, 201], "sharedlist": 198, "convert_feature_list_to_str": 199, "exampl": [199, 201, 208, 283], "convert_str_to_feature_list": 200, "load_dynamic_parameter_funct": 201, "image_writ": [202, 203], "imagewrit": 203, "remove_empty_til": [204, 205, 206, 207, 208, 209], "detecttissueinstack": 205, "detecttissueinstackandrecord": 206, "removeemptyposit": 207, "detect_tissu": 208, "detect_tissue2": 209, "restful_featur": [210, 211, 212], "ilastiksegment": 211, "prepare_servic": 212, "volume_search": [213, 214, 215], "volumesearch": 214, "draw_box": 215, "metadata_sourc": [216, 217, 218, 219, 220, 221, 222, 223], "bdv_metadata": [217, 218], "bigdataviewermetadata": 218, "metadata": [219, 220, 221], "xmlmetadata": 221, "ome_tiff_metadata": [222, 223], "ometiffmetadata": 223, "microscop": [224, 225, 283, 290, 292], "waveform": [228, 229, 230, 231, 232, 233, 234, 235, 236, 292], "camera_exposur": 229, "dc_valu": 230, "remote_focus_ramp": 231, "sawtooth": 232, "sine_wav": 233, "single_puls": 234, "smooth_waveform": 235, "squar": 236, "tool": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "common_dict_tool": [238, 239], "update_stage_dict": 239, "common_funct": [240, 241, 242, 243, 244, 245], "variablewithlock": 241, "build_ref_nam": 242, "combine_func": 243, "copy_proxy_object": 244, "load_module_from_fil": 245, "decor": [246, 247, 248], "featurelist": 247, "function_tim": 248, "file_funct": [249, 250, 251, 252, 253], "create_save_path": 250, "delete_fold": 251, "load_yaml_fil": 252, "save_yaml_fil": 253, "imag": [254, 255, 256], "create_arrow_imag": 255, "text_arrai": 256, "image_load": [257, 258], "lazytiff": 258, "main_funct": [259, 260, 261], "create_pars": 260, "evaluate_parser_input_argu": 261, "multipos_table_tool": [262, 263, 264, 265, 266], "calc_num_til": 263, "compute_tiles_from_bounding_box": 264, "sign": 265, "update_t": 266, "sdf": [267, 268, 269, 270], "box": 268, "sphere": 269, "volume_from_sdf": 270, "waveform_template_func": [271, 272], "get_waveform_template_paramet": 272, "xml_tool": [273, 274, 275], "dict_to_xml": 274, "parse_xml": 275, "view": [276, 277, 278, 279], "custom_widget": 277, "main_window_cont": 278, "popup": 279, "refer": 282, "configur": [283, 292, 294], "yaml": 283, "hardwar": [283, 285, 292, 294], "section": [283, 292], "gui": [283, 292], "channel": 283, "stack": 283, "acquisit": [283, 294], "timepoint": 283, "contribut": [284, 286], "guidelin": 284, "gener": 284, "principl": 284, "instal": [284, 293], "develop": 284, "depend": 284, "code": 284, "style": 284, "document": 284, "pre": 284, "commit": 284, "hook": 284, "dictionari": 284, "pars": 284, "unit": [284, 285], "test": 284, "mac": 284, "ad": [285, 287], "new": [285, 287], "scientif": 285, "how": 285, "add": 285, "introduct": 289, "current": 289, "implement": [289, 290], "The": 289, "creat": 289, "custom": 289, "combin": 289, "load": 289, "function": 289, "edit": 289, "delet": 289, "multiscal": 290, "expans": 290, "opm": 290, "v2": 290, "ct": 290, "v1": 290, "spectral": 290, "tirf": 290, "autonom": 291, "softwar": [291, 293], "light": 291, "microscopi": 291, "project": 291, "philosophi": 291, "content": 291, "author": 291, "index": 291, "search": 291, "overview": 292, "file": [292, 294], "remot": [292, 294], "focu": [292, 294], "wheel": [292, 294], "ax": 292, "definit": 292, "joystick": 292, "constant": 292, "other": 292, "templat": 292, "rest": 292, "download": 293, "git": 293, "setup": 293, "your": 293, "python": 293, "environ": 293, "troubleshoot": 293, "support": 294, "data": 294, "card": 294, "ni": 294, "pcie": 294, "6738": 294, "pxi": 294, "6259": 294, "6723": 294, "hamamatsu": 294, "flash": 294, "4": 294, "0": 294, "fusion": 294, "lightn": 294, "photometr": 294, "iri": 294, "15": 294, "focus": 294, "equip": 294, "solut": 294, "thorlab": 294, "blink": 294, "optotun": 294, "tunabl": 294, "len": 294, "synthet": 294, "asi": 294, "tiger": 294, "mp": 294, "285": 294, "physik": 294, "instrument": 294, "analog": 294, "piezo": 294, "etc": 294, "dichroic": 294, "turret": 294, "galvanomet": 294, "mechan": 294, "synethet": 294, "deform": 294, "mirror": 294, "imagin": 294, "optic": 294}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_experiment_config": [[7, "aslm-config-config-verify-experiment-config"]], "aslm.config.config.verify_waveform_constants": [[8, "aslm-config-config-verify-waveform-constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[13, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "aslm.log_files.filters.NonPerfFilter": [[18, "aslm-log-files-filters-nonperffilter"]], "aslm.log_files.filters.PerformanceFilter": [[19, "aslm-log-files-filters-performancefilter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "aslm.log_files.log_functions.find_filename": [[21, "aslm-log-files-log-functions-find-filename"]], "aslm.log_files.log_functions.log_setup": [[22, "aslm-log-files-log-functions-log-setup"]], "aslm.log_files.log_functions.main_process_listener": [[23, "aslm-log-files-log-functions-main-process-listener"]], "aslm.log_files.log_functions.update_nested_dict": [[24, "aslm-log-files-log-functions-update-nested-dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[28, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[29, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[30, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[31, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[33, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[34, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[35, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[36, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.image_contrast": [[37, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[38, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.concurrency": [[39, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[40, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[41, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[42, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[43, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[44, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[45, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[46, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.data_sources": [[47, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[48, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[49, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[50, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[51, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[52, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[53, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[54, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.device_startup_functions": [[55, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[56, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[57, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[58, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[59, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[60, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[61, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[62, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[63, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[64, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[65, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[66, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[67, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[68, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[69, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[70, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[71, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[72, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[73, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[74, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[75, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[76, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[77, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device": [[78, "aslm-model-devices-apis-dynamixel-dynamixel-functions-create-mock-dxl-device"]], "aslm.model.devices.APIs.omicron": [[79, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.APIs.sutter": [[80, "module-aslm.model.devices.APIs.sutter"]], "aslm.model.devices.APIs.sutter.MP285": [[81, "module-aslm.model.devices.APIs.sutter.MP285"]], "aslm.model.devices.APIs.sutter.MP285.MP285": [[82, "aslm-model-devices-apis-sutter-mp285-mp285"]], "aslm.model.devices.camera": [[83, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[84, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[85, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[86, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[87, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[88, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[89, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[90, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[91, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[92, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[93, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[94, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[95, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[96, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[97, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[98, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[99, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[100, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[101, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[102, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[103, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[104, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[105, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[106, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[107, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[108, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[109, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[110, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[111, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[112, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[113, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[114, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.lasers": [[115, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[116, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[117, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[118, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[119, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.objectives": [[120, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[121, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[122, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[123, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[124, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[125, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[126, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[127, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[128, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[129, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[130, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[131, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[132, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[133, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[134, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[135, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[136, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[137, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[138, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[139, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[140, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[141, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[142, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[143, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[144, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[145, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[146, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[147, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[148, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[149, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[150, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[151, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[152, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[153, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[154, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[155, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[156, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_dynamixel": [[157, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[158, "aslm-model-devices-zoom-zoom-dynamixel-dynamixelzoom"]], "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection": [[159, "aslm-model-devices-zoom-zoom-dynamixel-build-dynamixel-zoom-connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[160, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[161, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[162, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[163, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[164, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[165, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[166, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[167, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[168, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[169, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "Notes:": [[169, "notes"], [174, "notes"], [175, "notes"], [177, "notes"], [178, "notes"], [179, "notes"], [180, "notes"], [181, "notes"], [182, "notes"], [183, "notes"], [187, "notes"], [188, "notes"], [188, "id4"], [189, "notes"], [190, "notes"], [190, "id4"], [191, "notes"], [192, "notes"], [193, "notes"], [194, "notes"], [195, "notes"], [196, "notes"], [198, "notes"], [199, "notes"], [201, "notes"], [208, "notes"], [209, "notes"]], "Parameters:": [[169, "parameters"], [169, "id2"], [174, "parameters"], [175, "parameters"], [175, "id1"], [176, "parameters"], [176, "id1"], [177, "parameters"], [177, "id1"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [180, "id1"], [181, "parameters"], [182, "parameters"], [182, "id1"], [183, "parameters"], [183, "id1"], [187, "parameters"], [188, "parameters"], [188, "id1"], [189, "parameters"], [189, "id1"], [189, "id4"], [190, "parameters"], [190, "id1"], [191, "parameters"], [191, "id1"], [191, "id4"], [192, "parameters"], [192, "id1"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [198, "parameters"], [199, "parameters"], [201, "parameters"], [205, "parameters"], [205, "id2"], [206, "parameters"], [206, "id2"], [207, "parameters"], [208, "parameters"], [209, "parameters"]], "Returns:": [[169, "returns"], [169, "id1"], [174, "returns"], [175, "returns"], [175, "id4"], [175, "id5"], [177, "returns"], [177, "id2"], [178, "returns"], [179, "returns"], [180, "returns"], [182, "returns"], [182, "id2"], [183, "returns"], [183, "id2"], [183, "id3"], [189, "returns"], [191, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [199, "returns"], [205, "returns"], [205, "id1"], [205, "id3"], [205, "id4"], [206, "returns"], [206, "id1"], [206, "id3"], [207, "returns"], [208, "returns"], [209, "returns"]], "aslm.model.features.autofocus": [[170, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[171, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[172, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[173, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[174, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[175, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[176, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[177, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[178, "aslm-model-features-common-features-movetonextpositioninmultipositiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[179, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[180, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[181, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[182, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[183, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.cva_conpro": [[184, "module-aslm.model.features.cva_conpro"]], "aslm.model.features.cva_conpro.ConstantVelocityAcquisition": [[185, "aslm-model-features-cva-conpro-constantvelocityacquisition"]], "aslm.model.features.feature_container": [[186, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[187, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[188, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[189, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[190, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[191, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[192, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[193, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[194, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[195, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[196, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[197, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[198, "aslm-model-features-feature-related-functions-sharedlist"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[199, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "Example:": [[199, "example"], [201, "example"], [208, "example"]], "]": [[199, "id3"], [201, "id5"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[200, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions": [[201, "aslm-model-features-feature-related-functions-load-dynamic-parameter-functions"]], "aslm.model.features.image_writer": [[202, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[203, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.remove_empty_tiles": [[204, "module-aslm.model.features.remove_empty_tiles"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[205, "aslm-model-features-remove-empty-tiles-detecttissueinstack"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[206, "aslm-model-features-remove-empty-tiles-detecttissueinstackandrecord"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[207, "aslm-model-features-remove-empty-tiles-removeemptypositions"]], "aslm.model.features.remove_empty_tiles.detect_tissue": [[208, "aslm-model-features-remove-empty-tiles-detect-tissue"]], "aslm.model.features.remove_empty_tiles.detect_tissue2": [[209, "aslm-model-features-remove-empty-tiles-detect-tissue2"]], "aslm.model.features.restful_features": [[210, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[211, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[212, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[213, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[214, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[215, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[216, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[217, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[218, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[219, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[220, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[221, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[222, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[223, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[224, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[225, "aslm-model-microscope-microscope"]], "aslm.model.model": [[226, "module-aslm.model.model"]], "aslm.model.model.Model": [[227, "aslm-model-model-model"]], "aslm.model.waveforms": [[228, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[229, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[230, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[231, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[232, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[233, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[234, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[235, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[236, "aslm-model-waveforms-square"]], "aslm.tools": [[237, "module-aslm.tools"]], "aslm.tools.common_dict_tools": [[238, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[239, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[240, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[241, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[242, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[243, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[244, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[245, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[246, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[247, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[248, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[249, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[250, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[251, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[252, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[253, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[254, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[255, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[256, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[257, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[258, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[259, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[260, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[261, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.multipos_table_tools": [[262, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[263, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[264, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[265, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[266, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.sdf": [[267, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[268, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[269, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[270, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[271, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[272, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[273, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[274, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[275, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[276, "module-aslm.view"]], "aslm.view.custom_widgets": [[277, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[278, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[279, "module-aslm.view.popups"]], "API Reference": [[282, "api-reference"]], "Configuring ASLM": [[283, "configuring-aslm"]], "Configuration.yaml": [[283, "configuration-yaml"]], "Hardware Section": [[283, "hardware-section"], [292, "hardware-section"]], "Microscope Section": [[283, "microscope-section"], [292, "microscope-section"]], "Configuring stages": [[283, "configuring-stages"]], "GUI Section": [[283, "gui-section"], [292, "gui-section"]], "Channels": [[283, "channels"]], "Stack Acquisition": [[283, "stack-acquisition"]], "Timepoint": [[283, "timepoint"]], "Example YAML Configuration": [[283, "example-yaml-configuration"]], "Contributing Guidelines": [[284, "contributing-guidelines"]], "General Principles": [[284, "general-principles"]], "Installation of Developer Dependencies": [[284, "installation-of-developer-dependencies"]], "Coding Style": [[284, "coding-style"]], "Documentation": [[284, "documentation"]], "Pre-Commit Hooks": [[284, "pre-commit-hooks"]], "Dictionary Parsing": [[284, "dictionary-parsing"]], "Unit Tests": [[284, "unit-tests"]], "Developing with a Mac": [[284, "developing-with-a-mac"]], "Adding New Hardware": [[285, "adding-new-hardware"]], "Scientific Units": [[285, "scientific-units"]], "How to Add New Hardware": [[285, "how-to-add-new-hardware"]], "Contributing to ASLM": [[286, "contributing-to-aslm"]], "Adding New Model Features": [[287, "adding-new-model-features"]], "Feature Container": [[289, "feature-container"]], "Introduction": [[289, "introduction"]], "Currently Implemented Features": [[289, "currently-implemented-features"]], "The Feature Object": [[289, "the-feature-object"]], "Creating Custom Features": [[289, "creating-custom-features"]], "Combining Features": [[289, "combining-features"]], "Loading Custom Functions": [[289, "loading-custom-functions"]], "Editing Function Parameters": [[289, "editing-function-parameters"]], "Deleting Features": [[289, "deleting-features"]], "Microscope Implementations": [[290, "microscope-implementations"]], "Multiscale Microscope": [[290, "multiscale-microscope"]], "Expansion ASLM": [[290, "expansion-aslm"]], "OPM-V2": [[290, "opm-v2"]], "CT-ASLM-V1": [[290, "ct-aslm-v1"]], "CT-ASLM-V2": [[290, "ct-aslm-v2"]], "Spectral TIRF": [[290, "spectral-tirf"]], "Autonomous Software for Light Microscopy": [[291, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[291, "project-philosophy"]], "Contents": [[291, "contents"]], "Authors": [[291, "authors"]], "Index and search": [[291, "index-and-search"]], "Configuration Overview": [[292, "configuration-overview"]], "Configuration File": [[292, "configuration-file"], [294, "configuration-file"], [294, "id1"], [294, "id2"], [294, "id3"]], "DAQ Section": [[292, "daq-section"]], "Camera Section": [[292, "camera-section"]], "Remote Focus Section": [[292, "remote-focus-section"]], "Galvo Section": [[292, "galvo-section"]], "Filter Wheel Section": [[292, "filter-wheel-section"]], "Stage Section": [[292, "stage-section"]], "Stage Axes Definition": [[292, "stage-axes-definition"]], "Joystick Axes Definition": [[292, "joystick-axes-definition"]], "Zoom Section": [[292, "zoom-section"]], "Shutter Section": [[292, "shutter-section"]], "Laser Section": [[292, "laser-section"]], "Waveform Constants File": [[292, "waveform-constants-file"]], "Remote Constants Section": [[292, "remote-constants-section"]], "Galvo Constants Section": [[292, "galvo-constants-section"]], "Other Constants Section": [[292, "other-constants-section"]], "Waveform Templates File": [[292, "waveform-templates-file"]], "Rest API Configuration File": [[292, "rest-api-configuration-file"]], "Software Installation": [[293, "software-installation"]], "Download Git": [[293, "download-git"]], "Setup your Python Environment": [[293, "setup-your-python-environment"]], "Troubleshooting": [[293, "troubleshooting"]], "Supported Hardware": [[294, "supported-hardware"]], "Data Acquisition Card": [[294, "data-acquisition-card"]], "NI": [[294, "ni"]], "PCIe-6738": [[294, "pcie-6738"]], "PXI-6259": [[294, "pxi-6259"]], "PXI-6723": [[294, "pxi-6723"]], "Cameras": [[294, "cameras"]], "Hamamatsu Flash 4.0": [[294, "hamamatsu-flash-4-0"]], "Hamamatsu Fusion": [[294, "hamamatsu-fusion"]], "Hamamatsu Lightning": [[294, "hamamatsu-lightning"]], "Photometrics Iris 15": [[294, "photometrics-iris-15"]], "Remote Focusing Devices": [[294, "remote-focusing-devices"]], "Equipment Solutions": [[294, "equipment-solutions"]], "Thorlabs BLINK": [[294, "thorlabs-blink"]], "Optotune Focus Tunable Lens": [[294, "optotune-focus-tunable-lens"]], "Synthetic Remote Focus Device": [[294, "synthetic-remote-focus-device"]], "Stages": [[294, "stages"]], "ASI Tiger Controller": [[294, "asi-tiger-controller"]], "Sutter MP-285": [[294, "sutter-mp-285"]], "Physik Instrumente": [[294, "physik-instrumente"]], "Thorlabs": [[294, "thorlabs"], [294, "id6"]], "Analog Controlled (Galvo/Piezo/etc.)": [[294, "analog-controlled-galvo-piezo-etc"]], "Synthetic Stage": [[294, "synthetic-stage"]], "Dichroic Turret": [[294, "dichroic-turret"]], "ASI": [[294, "asi"], [294, "id4"]], "Synthetic Dichroic Turret": [[294, "synthetic-dichroic-turret"]], "Filter Wheels": [[294, "filter-wheels"]], "Sutter": [[294, "sutter"]], "Synthetic Filter Wheel": [[294, "synthetic-filter-wheel"]], "Galvanometers": [[294, "galvanometers"]], "DAQ Control": [[294, "daq-control"], [294, "id5"]], "Synthetic Galvanometer": [[294, "synthetic-galvanometer"]], "Lasers": [[294, "lasers"]], "Coherent": [[294, "coherent"]], "Omicron": [[294, "omicron"]], "Synthetic Laser": [[294, "synthetic-laser"]], "Shutters": [[294, "shutters"]], "Synthetic Shutter": [[294, "synthetic-shutter"]], "Mechanical Zoom": [[294, "mechanical-zoom"]], "Dynamixel Zoom": [[294, "dynamixel-zoom"]], "Synethetic Zoom": [[294, "synethetic-zoom"]], "Deformable Mirrors": [[294, "deformable-mirrors"]], "Imagine Optics": [[294, "imagine-optics"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [9, "module-aslm.controller"], [10, "module-aslm.controller.configuration_controller"], [12, "module-aslm.controller.thread_pool"], [16, "module-aslm.log_files"], [17, "module-aslm.log_files.filters"], [20, "module-aslm.log_files.log_functions"], [25, "module-aslm.model"], [26, "module-aslm.model.analysis"], [27, "module-aslm.model.analysis.boundary_detect"], [32, "module-aslm.model.analysis.camera"], [37, "module-aslm.model.analysis.image_contrast"], [39, "module-aslm.model.concurrency"], [40, "module-aslm.model.concurrency.concurrency_tools"], [47, "module-aslm.model.data_sources"], [48, "module-aslm.model.data_sources.bdv_data_source"], [50, "module-aslm.model.data_sources.data_source"], [53, "module-aslm.model.data_sources.tiff_data_source"], [55, "module-aslm.model.device_startup_functions"], [73, "module-aslm.model.devices"], [74, "module-aslm.model.devices.APIs"], [75, "module-aslm.model.devices.APIs.coherent"], [76, "module-aslm.model.devices.APIs.dynamixel"], [77, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"], [79, "module-aslm.model.devices.APIs.omicron"], [80, "module-aslm.model.devices.APIs.sutter"], [81, "module-aslm.model.devices.APIs.sutter.MP285"], [83, "module-aslm.model.devices.camera"], [84, "module-aslm.model.devices.camera.camera_base"], [86, "module-aslm.model.devices.camera.camera_hamamatsu"], [89, "module-aslm.model.devices.camera.camera_photometrics"], [91, "module-aslm.model.devices.camera.camera_synthetic"], [94, "module-aslm.model.devices.daq"], [95, "module-aslm.model.devices.daq.daq_base"], [97, "module-aslm.model.devices.daq.daq_synthetic"], [99, "module-aslm.model.devices.filter_wheel"], [100, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [103, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [105, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [108, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [110, "module-aslm.model.devices.galvo"], [111, "module-aslm.model.devices.galvo.galvo_base"], [113, "module-aslm.model.devices.galvo.galvo_synthetic"], [115, "module-aslm.model.devices.lasers"], [116, "module-aslm.model.devices.lasers.laser_base"], [118, "module-aslm.model.devices.lasers.laser_synthetic"], [120, "module-aslm.model.devices.objectives"], [122, "module-aslm.model.devices.remote_focus"], [123, "module-aslm.model.devices.remote_focus.remote_focus_base"], [125, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [127, "module-aslm.model.devices.shutter"], [128, "module-aslm.model.devices.shutter.laser_shutter_base"], [130, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [132, "module-aslm.model.devices.stages"], [133, "module-aslm.model.devices.stages.stage_asi"], [136, "module-aslm.model.devices.stages.stage_base"], [138, "module-aslm.model.devices.stages.stage_galvo"], [140, "module-aslm.model.devices.stages.stage_mcl"], [143, "module-aslm.model.devices.stages.stage_pi"], [146, "module-aslm.model.devices.stages.stage_sutter"], [149, "module-aslm.model.devices.stages.stage_synthetic"], [151, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [154, "module-aslm.model.devices.zoom"], [155, "module-aslm.model.devices.zoom.zoom_base"], [157, "module-aslm.model.devices.zoom.zoom_dynamixel"], [160, "module-aslm.model.devices.zoom.zoom_synthetic"], [162, "module-aslm.model.dummy"], [167, "module-aslm.model.features"], [168, "module-aslm.model.features.auto_tile_scan"], [170, "module-aslm.model.features.autofocus"], [173, "module-aslm.model.features.common_features"], [184, "module-aslm.model.features.cva_conpro"], [186, "module-aslm.model.features.feature_container"], [197, "module-aslm.model.features.feature_related_functions"], [202, "module-aslm.model.features.image_writer"], [204, "module-aslm.model.features.remove_empty_tiles"], [210, "module-aslm.model.features.restful_features"], [213, "module-aslm.model.features.volume_search"], [216, "module-aslm.model.metadata_sources"], [217, "module-aslm.model.metadata_sources.bdv_metadata"], [219, "module-aslm.model.metadata_sources.metadata"], [222, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [224, "module-aslm.model.microscope"], [226, "module-aslm.model.model"], [228, "module-aslm.model.waveforms"], [237, "module-aslm.tools"], [238, "module-aslm.tools.common_dict_tools"], [240, "module-aslm.tools.common_functions"], [246, "module-aslm.tools.decorators"], [249, "module-aslm.tools.file_functions"], [254, "module-aslm.tools.image"], [257, "module-aslm.tools.image_loaders"], [259, "module-aslm.tools.main_functions"], [262, "module-aslm.tools.multipos_table_tools"], [267, "module-aslm.tools.sdf"], [271, "module-aslm.tools.waveform_template_funcs"], [273, "module-aslm.tools.xml_tools"], [276, "module-aslm.view"], [277, "module-aslm.view.custom_widgets"], [278, "module-aslm.view.main_window_content"], [279, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_experiment_config() (in module aslm.config.config)": [[7, "aslm.config.config.verify_experiment_config"]], "verify_waveform_constants() (in module aslm.config.config)": [[8, "aslm.config.config.verify_waveform_constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[11, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_flip_flags"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "configuration (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.configuration"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_num (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_num"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "microscope_config (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_config"]], "microscope_name (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_name"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_flip_flags"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.run"]], "selflock (aslm.controller.thread_pool.selflockthread attribute)": [[13, "aslm.controller.thread_pool.SelfLockThread.selfLock"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "resources (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.resources"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "todeletelist (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.toDeleteList"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[15, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "waitlist (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlist"]], "waitlistlock (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlistLock"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "nonperffilter (class in aslm.log_files.filters)": [[18, "aslm.log_files.filters.NonPerfFilter"]], "__init__() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.__init__"]], "filter() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.filter"]], "performancefilter (class in aslm.log_files.filters)": [[19, "aslm.log_files.filters.PerformanceFilter"]], "__init__() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.__init__"]], "filter() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.filter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "find_filename() (in module aslm.log_files.log_functions)": [[21, "aslm.log_files.log_functions.find_filename"]], "log_setup() (in module aslm.log_files.log_functions)": [[22, "aslm.log_files.log_functions.log_setup"]], "main_process_listener() (in module aslm.log_files.log_functions)": [[23, "aslm.log_files.log_functions.main_process_listener"]], "update_nested_dict() (in module aslm.log_files.log_functions)": [[24, "aslm.log_files.log_functions.update_nested_dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[28, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[29, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[30, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[31, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[33, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[34, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[35, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[36, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.image_contrast": [[37, "module-aslm.model.analysis.image_contrast"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[38, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[39, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[40, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[41, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[42, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[43, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[43, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[44, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[45, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[46, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "aslm.model.data_sources": [[47, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[48, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "bits (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.bits"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "dc (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dc"]], "dt (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dt"]], "dx (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dx"]], "dy (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dy"]], "dz (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dz"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"]], "get_shape_from_metadata() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.get_shape_from_metadata"]], "get_slice() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.get_slice"]], "image (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.image"]], "logger (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.logger"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "nbytes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.nbytes"]], "positions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.positions"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shape_c (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_c"]], "shape_t (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_t"]], "shape_x (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_x"]], "shape_y (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_y"]], "shape_z (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_z"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[49, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"]], "aslm.model.data_sources.data_source": [[50, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[51, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.__init__"]], "bits (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.bits"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.close"]], "data (aslm.model.data_sources.data_source.datasource property)": [[51, "aslm.model.data_sources.data_source.DataSource.data"]], "dc (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dc"]], "dt (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dt"]], "dx (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dx"]], "dy (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dy"]], "dz (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.dz"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.file_name"]], "get_shape_from_metadata() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.get_shape_from_metadata"]], "logger (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.logger"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.metadata"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[51, "aslm.model.data_sources.data_source.DataSource.mode"]], "nbytes (aslm.model.data_sources.data_source.datasource property)": [[51, "aslm.model.data_sources.data_source.DataSource.nbytes"]], "positions (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.positions"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.read"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[51, "aslm.model.data_sources.data_source.DataSource.shape"]], "shape_c (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_c"]], "shape_t (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_t"]], "shape_x (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_x"]], "shape_y (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_y"]], "shape_z (aslm.model.data_sources.data_source.datasource attribute)": [[51, "aslm.model.data_sources.data_source.DataSource.shape_z"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[51, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[51, "aslm.model.data_sources.data_source.DataSource.write"]], "get_data_source() (in module aslm.model.data_sources)": [[52, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[53, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "bits (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.bits"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "dc (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dc"]], "dt (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dt"]], "dx (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dx"]], "dy (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dy"]], "dz (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dz"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"]], "get_shape_from_metadata() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.get_shape_from_metadata"]], "image (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.image"]], "is_bigtiff (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.is_bigtiff"]], "is_ome (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.is_ome"]], "logger (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.logger"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "nbytes (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.nbytes"]], "positions (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.positions"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"]], "save_directory (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.save_directory"]], "set_bigtiff() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_bigtiff"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "shape_c (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_c"]], "shape_t (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_t"]], "shape_x (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_x"]], "shape_y (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_y"]], "shape_z (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_z"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[54, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"]], "aslm.model.device_startup_functions": [[55, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[56, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[56, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[57, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[58, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[59, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[60, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[61, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[62, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[63, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[64, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[65, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[66, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[67, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[68, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[69, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[70, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[71, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[72, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[73, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[74, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[75, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[76, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.dynamixel.dynamixel_functions": [[77, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "create_mock_dxl_device() (in module aslm.model.devices.apis.dynamixel.dynamixel_functions)": [[78, "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device"]], "aslm.model.devices.apis.omicron": [[79, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.apis.sutter": [[80, "module-aslm.model.devices.APIs.sutter"]], "aslm.model.devices.apis.sutter.mp285": [[81, "module-aslm.model.devices.APIs.sutter.MP285"]], "mp285 (class in aslm.model.devices.apis.sutter.mp285)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285"]], "__init__() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.__init__"]], "close() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.close"]], "convert_microns_to_microsteps() (aslm.model.devices.apis.sutter.mp285.mp285 static method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.convert_microns_to_microsteps"]], "convert_microsteps_to_microns() (aslm.model.devices.apis.sutter.mp285.mp285 static method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.convert_microsteps_to_microns"]], "flush_buffers() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.flush_buffers"]], "get_controller_status() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.get_controller_status"]], "get_current_position() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.get_current_position"]], "interrupt_move() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.interrupt_move"]], "move_to_specified_position() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.move_to_specified_position"]], "refresh_display() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.refresh_display"]], "reset_controller() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.reset_controller"]], "set_absolute_mode() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.set_absolute_mode"]], "set_resolution_and_velocity() (aslm.model.devices.apis.sutter.mp285.mp285 method)": [[82, "aslm.model.devices.APIs.sutter.MP285.MP285.set_resolution_and_velocity"]], "aslm.model.devices.camera": [[83, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[84, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[85, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "camera_controller (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_base.camerabase method)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.close_camera"]], "configuration (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_base.camerabase method)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.get_line_interval"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_base.camerabase method)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.get_offset_variance_maps"]], "is_acquiring (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.min_image_width"]], "offset (aslm.model.devices.camera.camera_base.camerabase property)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.offset"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "step_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.step_image_width"]], "variance (aslm.model.devices.camera.camera_base.camerabase property)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.variance"]], "x_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[85, "aslm.model.devices.camera.camera_base.CameraBase.y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[86, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[87, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.y_pixels"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[88, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[89, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "configuration (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_width"]], "offset (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.offset"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_width"]], "variance (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.variance"]], "x_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[90, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[91, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_controller"]], "camera_exposure_time (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_exposure_time"]], "camera_parameters (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "configuration (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.configuration"]], "current_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.current_frame_idx"]], "data_buffer (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.data_buffer"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.is_acquiring"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "max_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_width"]], "num_of_frame (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.num_of_frame"]], "offset (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.offset"]], "pre_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.pre_frame_idx"]], "random_image (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.random_image"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "serial_number (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_width"]], "variance (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.variance"]], "x_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[92, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.y_pixels"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[93, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[93, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[93, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "set_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[93, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.set_property_value"]], "aslm.model.devices.daq": [[94, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[95, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[96, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "camera_delay (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.camera_pulse_percent"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "daq_parameters (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_base.daqbase method)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.enable_microscope"]], "microscope_name (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.microscope_name"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.sample_rate"]], "sweep_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.sweep_time"]], "waveform_constants (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[96, "aslm.model.devices.daq.daq_base.DAQBase.waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[97, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "analog_outputs (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.analog_outputs"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "camera (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera"]], "camera_delay (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_pulse_percent"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "daq_parameters (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.enable_microscope"]], "is_updating_analog_task (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.is_updating_analog_task"]], "microscope_name (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.microscope_name"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.remote_focus_ramp_falling"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "sample_rate (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sample_rate"]], "set_external_trigger() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.set_external_trigger"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "sweep_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sweep_time"]], "trigger_mode (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.trigger_mode"]], "update_analog_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.update_analog_task"]], "wait_to_run_lock (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.wait_to_run_lock"]], "waveform_constants (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_repeat_num"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[98, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[99, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[100, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "active_filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.active_filter_wheel"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_dictionary"]], "filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel"]], "filter_wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel_position"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.number_of_filter_wheels"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[101, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wheel_position"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[102, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[103, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[104, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[105, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"]], "delay_matrix (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.delay_matrix"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "init_finished (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.init_finished"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"]], "read_on_init (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read_on_init"]], "serial (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.serial"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "speed (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.speed"]], "wait_until_done (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[106, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[107, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[107, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "comport (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[107, "aslm.model.devices.filter_wheel.filter_wheel_sutter.comport"]], "timeout (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[107, "aslm.model.devices.filter_wheel.filter_wheel_sutter.timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[108, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"], [109, "id0"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[109, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"], [109, "id1"]], "aslm.model.devices.galvo": [[110, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[111, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[112, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[113, "module-aslm.model.devices.galvo.galvo_synthetic"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"]], "configuration (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.configuration"]], "device_config (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.samples"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[114, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.waveform_dict"]], "aslm.model.devices.lasers": [[115, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[116, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "configuration (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.configuration"]], "device_config (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_base.laserbase method)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_base.laserbase method)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_base.laserbase method)": [[117, "aslm.model.devices.lasers.laser_base.LaserBase.turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[118, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "configuration (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.configuration"]], "device_config (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[119, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_on"]], "aslm.model.devices.objectives": [[120, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[121, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[121, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[121, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[122, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[123, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[124, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[125, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "move() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.move"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[126, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.waveform_dict"]], "aslm.model.devices.shutter": [[127, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[128, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[129, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[129, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[129, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[129, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[129, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_base.shutterbase property)": [[129, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[130, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[131, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[131, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[131, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[131, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[131, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter property)": [[131, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[132, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[133, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes (aslm.model.devices.stages.stage_asi.asistage attribute)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"]], "scanv() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.scanv"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_asi.asistage attribute)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_asi.asistage attribute)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"]], "verify_move() (aslm.model.devices.stages.stage_asi.asistage method)": [[134, "aslm.model.devices.stages.stage_asi.ASIStage.verify_move"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[135, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[136, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[137, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[137, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes (aslm.model.devices.stages.stage_base.stagebase attribute)": [[137, "aslm.model.devices.stages.stage_base.StageBase.axes"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[137, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "close() (aslm.model.devices.stages.stage_base.stagebase method)": [[137, "aslm.model.devices.stages.stage_base.StageBase.close"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[137, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[137, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"]], "stage_feedback (aslm.model.devices.stages.stage_base.stagebase attribute)": [[137, "aslm.model.devices.stages.stage_base.StageBase.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_base.stagebase attribute)": [[137, "aslm.model.devices.stages.stage_base.StageBase.stage_limits"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[137, "aslm.model.devices.stages.stage_base.StageBase.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[137, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[138, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes"]], "axes_channels (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_channels"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "calculate_waveform() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.calculate_waveform"]], "camera_delay_percent (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.camera_delay_percent"]], "close() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.close"]], "configuration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.configuration"]], "daq (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.daq"]], "distance_threshold (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.distance_threshold"]], "exposure_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.exposure_times"]], "galvo_max_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_min_voltage"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "microscope_name (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.microscope_name"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "remote_focus_delay (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_delay"]], "remote_focus_ramp_falling (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_ramp_falling"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "sample_rate (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sample_rate"]], "samples (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.samples"]], "stage_feedback (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_limits"]], "stage_settle_duration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_settle_duration"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"]], "sweep_time (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_time"]], "sweep_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_times"]], "trigger_source (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.trigger_source"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "volts_per_micron (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.volts_per_micron"]], "waveform_dict (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[139, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[140, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "handle (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.handle"]], "mcl_controller (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.mcl_controller"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[141, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[142, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[143, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[144, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_pi.pistage attribute)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_pi.pistage attribute)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[144, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[145, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[146, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "device_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.device_axes"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stage_feedback (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_limits"]], "stage_x_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_x_pos"]], "stage_y_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_y_pos"]], "stage_z_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_z_pos"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[147, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[148, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[149, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.close"]], "default_speed (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.default_speed"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_speed"]], "load_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.load_sample"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop_scan"]], "unload_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.unload_sample"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[150, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[151, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "kim_axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_axes"]], "kim_controller (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_controller"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "serial_number (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.serial_number"]], "stage_feedback (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[152, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[153, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[154, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[155, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.configuration"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[156, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[157, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "dynamixelzoom (class in aslm.model.devices.zoom.zoom_dynamixel)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom"]], "__init__() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.__init__"]], "addr_mx_goal_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_goal_position"]], "addr_mx_moving_speed (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_moving_speed"]], "addr_mx_p_gain (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_p_gain"]], "addr_mx_present_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_present_position"]], "addr_mx_torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_enable"]], "addr_mx_torque_limit (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_limit"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.configuration"]], "dynamixel (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.dynamixel"]], "goal_position_offset (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.goal_position_offset"]], "id (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.id"]], "move() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.move"]], "port_num (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.port_num"]], "read_position() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.set_zoom"]], "sleeptime (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.sleeptime"]], "timeout (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.timeout"]], "torque_disable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_disable"]], "torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_enable"]], "zoomdict (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[158, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomvalue"]], "build_dynamixel_zoom_connection() (in module aslm.model.devices.zoom.zoom_dynamixel)": [[159, "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[160, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.configuration"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[161, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomvalue"]], "aslm.model.dummy": [[162, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[163, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[163, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[163, "aslm.model.dummy.DummyController.clear"]], "commands (aslm.model.dummy.dummycontroller attribute)": [[163, "aslm.model.dummy.DummyController.commands"]], "configuration (aslm.model.dummy.dummycontroller attribute)": [[163, "aslm.model.dummy.DummyController.configuration"]], "configuration_controller (aslm.model.dummy.dummycontroller attribute)": [[163, "aslm.model.dummy.DummyController.configuration_controller"]], "execute() (aslm.model.dummy.dummycontroller method)": [[163, "aslm.model.dummy.DummyController.execute"]], "menu_controller (aslm.model.dummy.dummycontroller attribute)": [[163, "aslm.model.dummy.DummyController.menu_controller"]], "off_stage_pos (aslm.model.dummy.dummycontroller attribute)": [[163, "aslm.model.dummy.DummyController.off_stage_pos"]], "pop() (aslm.model.dummy.dummycontroller method)": [[163, "aslm.model.dummy.DummyController.pop"]], "stage_pos (aslm.model.dummy.dummycontroller attribute)": [[163, "aslm.model.dummy.DummyController.stage_pos"]], "view (aslm.model.dummy.dummycontroller attribute)": [[163, "aslm.model.dummy.DummyController.view"]], "dummydevice (class in aslm.model.dummy)": [[164, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[164, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[164, "aslm.model.dummy.DummyDevice.clear"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[164, "aslm.model.dummy.DummyDevice.generate_message"]], "in_port (aslm.model.dummy.dummydevice attribute)": [[164, "aslm.model.dummy.DummyDevice.in_port"]], "listen() (aslm.model.dummy.dummydevice method)": [[164, "aslm.model.dummy.DummyDevice.listen"]], "msg_count (aslm.model.dummy.dummydevice attribute)": [[164, "aslm.model.dummy.DummyDevice.msg_count"]], "out_port (aslm.model.dummy.dummydevice attribute)": [[164, "aslm.model.dummy.DummyDevice.out_port"]], "sendout() (aslm.model.dummy.dummydevice method)": [[164, "aslm.model.dummy.DummyDevice.sendout"]], "sendout_msg_count (aslm.model.dummy.dummydevice attribute)": [[164, "aslm.model.dummy.DummyDevice.sendout_msg_count"]], "setup() (aslm.model.dummy.dummydevice method)": [[164, "aslm.model.dummy.DummyDevice.setup"]], "stop_flag (aslm.model.dummy.dummydevice attribute)": [[164, "aslm.model.dummy.DummyDevice.stop_flag"]], "timecost (aslm.model.dummy.dummydevice attribute)": [[164, "aslm.model.dummy.DummyDevice.timecost"]], "dummymicroscope (class in aslm.model.dummy)": [[165, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[165, "aslm.model.dummy.DummyMicroscope.__init__"]], "calculate_exposure_sweep_times() (aslm.model.dummy.dummymicroscope method)": [[165, "aslm.model.dummy.DummyMicroscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.configuration"]], "current_channel (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.current_channel"]], "daq (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.daq"]], "data_buffer (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.data_buffer"]], "galvo (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.galvo"]], "lasers (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.lasers"]], "microscope_name (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.microscope_name"]], "stages (aslm.model.dummy.dummymicroscope attribute)": [[165, "aslm.model.dummy.DummyMicroscope.stages"]], "dummymodel (class in aslm.model.dummy)": [[166, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[166, "aslm.model.dummy.DummyModel.__init__"]], "active_microscope (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.active_microscope"]], "active_microscope_name (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.active_microscope_name"]], "camera (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.camera"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.data"]], "data_buffer (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.data_buffer"]], "data_buffer_positions (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.data_buffer_positions"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[166, "aslm.model.dummy.DummyModel.data_func"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.data_pipe"]], "data_records (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.data_records"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.data_thread"]], "device (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.device"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.frame_id"]], "img_height (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.img_height"]], "img_width (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.img_width"]], "manager (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.manager"]], "number_of_frames (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.number_of_frames"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[166, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_records (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.signal_records"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[166, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[166, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[167, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[168, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "autofocus (aslm.model.features.auto_tile_scan.calculatefocusrange attribute)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.autofocus"]], "end_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_data"]], "end_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_signal"]], "in_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_data"]], "in_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_signal"]], "model (aslm.model.features.auto_tile_scan.calculatefocusrange attribute)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.model"]], "pre_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_data"]], "pre_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[169, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_signal"]], "aslm.model.features.autofocus": [[170, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[171, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "config_table (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.config_table"]], "device (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.device"]], "device_ref (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.device_ref"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[171, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "model (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.model"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[171, "aslm.model.features.autofocus.Autofocus.run"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[171, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[172, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[173, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[174, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[174, "aslm.model.features.common_features.ChangeResolution.__init__"]], "cleanup() (aslm.model.features.common_features.changeresolution method)": [[174, "aslm.model.features.common_features.ChangeResolution.cleanup"]], "config_table (aslm.model.features.common_features.changeresolution attribute)": [[174, "aslm.model.features.common_features.ChangeResolution.config_table"]], "model (aslm.model.features.common_features.changeresolution attribute)": [[174, "aslm.model.features.common_features.ChangeResolution.model"]], "resolution_mode (aslm.model.features.common_features.changeresolution attribute)": [[174, "aslm.model.features.common_features.ChangeResolution.resolution_mode"]], "signal_func() (aslm.model.features.common_features.changeresolution method)": [[174, "aslm.model.features.common_features.ChangeResolution.signal_func"]], "zoom_value (aslm.model.features.common_features.changeresolution attribute)": [[174, "aslm.model.features.common_features.ChangeResolution.zoom_value"]], "conproacquisition (class in aslm.model.features.common_features)": [[175, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[175, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "channels (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.channels"]], "config_table (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.config_table"]], "conpro_cycling_mode (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.conpro_cycling_mode"]], "generate_meta_data() (aslm.model.features.common_features.conproacquisition method)": [[175, "aslm.model.features.common_features.ConProAcquisition.generate_meta_data"]], "model (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.model"]], "n_plane (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.n_plane"]], "need_to_move_new_plane (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.need_to_move_new_plane"]], "offset_end (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.offset_end"]], "offset_start (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.offset_start"]], "offset_step_size (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.offset_step_size"]], "offset_update_time (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.offset_update_time"]], "pre_signal_func() (aslm.model.features.common_features.conproacquisition method)": [[175, "aslm.model.features.common_features.ConProAcquisition.pre_signal_func"]], "scanrange (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.scanrange"]], "signal_end() (aslm.model.features.common_features.conproacquisition method)": [[175, "aslm.model.features.common_features.ConProAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.conproacquisition method)": [[175, "aslm.model.features.common_features.ConProAcquisition.signal_func"]], "timepoints (aslm.model.features.common_features.conproacquisition attribute)": [[175, "aslm.model.features.common_features.ConProAcquisition.timepoints"]], "update_channel() (aslm.model.features.common_features.conproacquisition method)": [[175, "aslm.model.features.common_features.ConProAcquisition.update_channel"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[176, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[176, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "config_table (aslm.model.features.common_features.findtissuesimple2d attribute)": [[176, "aslm.model.features.common_features.FindTissueSimple2D.config_table"]], "data_func() (aslm.model.features.common_features.findtissuesimple2d method)": [[176, "aslm.model.features.common_features.FindTissueSimple2D.data_func"]], "model (aslm.model.features.common_features.findtissuesimple2d attribute)": [[176, "aslm.model.features.common_features.FindTissueSimple2D.model"]], "overlap (aslm.model.features.common_features.findtissuesimple2d attribute)": [[176, "aslm.model.features.common_features.FindTissueSimple2D.overlap"]], "target_resolution (aslm.model.features.common_features.findtissuesimple2d attribute)": [[176, "aslm.model.features.common_features.FindTissueSimple2D.target_resolution"]], "target_zoom (aslm.model.features.common_features.findtissuesimple2d attribute)": [[176, "aslm.model.features.common_features.FindTissueSimple2D.target_zoom"]], "loopbycount (class in aslm.model.features.common_features)": [[177, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[177, "aslm.model.features.common_features.LoopByCount.__init__"]], "config_table (aslm.model.features.common_features.loopbycount attribute)": [[177, "aslm.model.features.common_features.LoopByCount.config_table"]], "data_frames (aslm.model.features.common_features.loopbycount attribute)": [[177, "aslm.model.features.common_features.LoopByCount.data_frames"]], "data_func() (aslm.model.features.common_features.loopbycount method)": [[177, "aslm.model.features.common_features.LoopByCount.data_func"]], "model (aslm.model.features.common_features.loopbycount attribute)": [[177, "aslm.model.features.common_features.LoopByCount.model"]], "signal_func() (aslm.model.features.common_features.loopbycount method)": [[177, "aslm.model.features.common_features.LoopByCount.signal_func"]], "signals (aslm.model.features.common_features.loopbycount attribute)": [[177, "aslm.model.features.common_features.LoopByCount.signals"]], "step_by_frame (aslm.model.features.common_features.loopbycount attribute)": [[177, "aslm.model.features.common_features.LoopByCount.step_by_frame"]], "steps (aslm.model.features.common_features.loopbycount attribute)": [[177, "aslm.model.features.common_features.LoopByCount.steps"]], "movetonextpositioninmultipositiontable (class in aslm.model.features.common_features)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.__init__"]], "cleanup() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.cleanup"]], "config_table (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.config_table"]], "current_idx (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.current_idx"]], "model (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.model"]], "multiposition_table (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.multiposition_table"]], "position_count (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.position_count"]], "pre_z (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.pre_z"]], "signal_func() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.signal_func"]], "stage_distance_threshold (aslm.model.features.common_features.movetonextpositioninmultipositiontable attribute)": [[178, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.stage_distance_threshold"]], "preparenextchannel (class in aslm.model.features.common_features)": [[179, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[179, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "config_table (aslm.model.features.common_features.preparenextchannel attribute)": [[179, "aslm.model.features.common_features.PrepareNextChannel.config_table"]], "model (aslm.model.features.common_features.preparenextchannel attribute)": [[179, "aslm.model.features.common_features.PrepareNextChannel.model"]], "signal_func() (aslm.model.features.common_features.preparenextchannel method)": [[179, "aslm.model.features.common_features.PrepareNextChannel.signal_func"]], "snap (class in aslm.model.features.common_features)": [[180, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[180, "aslm.model.features.common_features.Snap.__init__"]], "config_table (aslm.model.features.common_features.snap attribute)": [[180, "aslm.model.features.common_features.Snap.config_table"]], "data_func() (aslm.model.features.common_features.snap method)": [[180, "aslm.model.features.common_features.Snap.data_func"]], "model (aslm.model.features.common_features.snap attribute)": [[180, "aslm.model.features.common_features.Snap.model"]], "stackpause (class in aslm.model.features.common_features)": [[181, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[181, "aslm.model.features.common_features.StackPause.__init__"]], "signal_func() (aslm.model.features.common_features.stackpause method)": [[181, "aslm.model.features.common_features.StackPause.signal_func"]], "waittocontinue (class in aslm.model.features.common_features)": [[182, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[182, "aslm.model.features.common_features.WaitToContinue.__init__"]], "cleanup() (aslm.model.features.common_features.waittocontinue method)": [[182, "aslm.model.features.common_features.WaitToContinue.cleanup"]], "config_table (aslm.model.features.common_features.waittocontinue attribute)": [[182, "aslm.model.features.common_features.WaitToContinue.config_table"]], "data_func() (aslm.model.features.common_features.waittocontinue method)": [[182, "aslm.model.features.common_features.WaitToContinue.data_func"]], "first_enter_node (aslm.model.features.common_features.waittocontinue attribute)": [[182, "aslm.model.features.common_features.WaitToContinue.first_enter_node"]], "model (aslm.model.features.common_features.waittocontinue attribute)": [[182, "aslm.model.features.common_features.WaitToContinue.model"]], "pause_data_lock (aslm.model.features.common_features.waittocontinue attribute)": [[182, "aslm.model.features.common_features.WaitToContinue.pause_data_lock"]], "pause_signal_lock (aslm.model.features.common_features.waittocontinue attribute)": [[182, "aslm.model.features.common_features.WaitToContinue.pause_signal_lock"]], "pre_data_func() (aslm.model.features.common_features.waittocontinue method)": [[182, "aslm.model.features.common_features.WaitToContinue.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.waittocontinue method)": [[182, "aslm.model.features.common_features.WaitToContinue.pre_signal_func"]], "signal_func() (aslm.model.features.common_features.waittocontinue method)": [[182, "aslm.model.features.common_features.WaitToContinue.signal_func"]], "zstackacquisition (class in aslm.model.features.common_features)": [[183, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "channels (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.channels"]], "cleanup_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.cleanup_data_func"]], "config_table (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.config_table"]], "current_focus_position (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.current_focus_position"]], "current_position_idx (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.current_position_idx"]], "current_z_position (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.current_z_position"]], "defocus (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.defocus"]], "end_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.end_data_func"]], "focus_step_size (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.focus_step_size"]], "get_origin (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.get_origin"]], "image_writer (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.image_writer"]], "in_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.in_data_func"]], "model (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.model"]], "need_to_move_new_position (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.need_to_move_new_position"]], "need_to_move_z_position (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.need_to_move_z_position"]], "number_z_steps (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.number_z_steps"]], "positions (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.positions"]], "pre_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.signal_func"]], "stack_cycling_mode (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.stack_cycling_mode"]], "start_focus (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.start_focus"]], "start_z_position (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.start_z_position"]], "update_channel() (aslm.model.features.common_features.zstackacquisition method)": [[183, "aslm.model.features.common_features.ZStackAcquisition.update_channel"]], "z_position_moved_time (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.z_position_moved_time"]], "z_step_size (aslm.model.features.common_features.zstackacquisition attribute)": [[183, "aslm.model.features.common_features.ZStackAcquisition.z_step_size"]], "aslm.model.features.cva_conpro": [[184, "module-aslm.model.features.cva_conpro"]], "constantvelocityacquisition (class in aslm.model.features.cva_conpro)": [[185, "aslm.model.features.cva_conpro.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.cva_conpro.constantvelocityacquisition method)": [[185, "aslm.model.features.cva_conpro.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.cva_conpro.constantvelocityacquisition method)": [[185, "aslm.model.features.cva_conpro.ConstantVelocityAcquisition.cleanup"]], "cleanup_data_function() (aslm.model.features.cva_conpro.constantvelocityacquisition method)": [[185, "aslm.model.features.cva_conpro.ConstantVelocityAcquisition.cleanup_data_function"]], "pre_func_signal() (aslm.model.features.cva_conpro.constantvelocityacquisition method)": [[185, "aslm.model.features.cva_conpro.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.feature_container": [[186, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[187, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[187, "aslm.model.features.feature_container.Container.__init__"]], "cleanup() (aslm.model.features.feature_container.container method)": [[187, "aslm.model.features.feature_container.Container.cleanup"]], "curr_node (aslm.model.features.feature_container.container attribute)": [[187, "aslm.model.features.feature_container.Container.curr_node"]], "end_flag (aslm.model.features.feature_container.container attribute)": [[187, "aslm.model.features.feature_container.Container.end_flag"]], "is_closed (aslm.model.features.feature_container.container attribute)": [[187, "aslm.model.features.feature_container.Container.is_closed"]], "reset() (aslm.model.features.feature_container.container method)": [[187, "aslm.model.features.feature_container.Container.reset"]], "root (aslm.model.features.feature_container.container attribute)": [[187, "aslm.model.features.feature_container.Container.root"]], "datacontainer (class in aslm.model.features.feature_container)": [[188, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[188, "aslm.model.features.feature_container.DataContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.datacontainer method)": [[188, "aslm.model.features.feature_container.DataContainer.cleanup"]], "curr_node (aslm.model.features.feature_container.datacontainer attribute)": [[188, "aslm.model.features.feature_container.DataContainer.curr_node"]], "end_flag (aslm.model.features.feature_container.datacontainer attribute)": [[188, "aslm.model.features.feature_container.DataContainer.end_flag"]], "is_closed (aslm.model.features.feature_container.datacontainer attribute)": [[188, "aslm.model.features.feature_container.DataContainer.is_closed"]], "reset() (aslm.model.features.feature_container.datacontainer method)": [[188, "aslm.model.features.feature_container.DataContainer.reset"]], "root (aslm.model.features.feature_container.datacontainer attribute)": [[188, "aslm.model.features.feature_container.DataContainer.root"]], "run() (aslm.model.features.feature_container.datacontainer method)": [[188, "aslm.model.features.feature_container.DataContainer.run"]], "datanode (class in aslm.model.features.feature_container)": [[189, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[189, "aslm.model.features.feature_container.DataNode.__init__"]], "device_related (aslm.model.features.feature_container.datanode attribute)": [[189, "aslm.model.features.feature_container.DataNode.device_related"]], "is_initialized (aslm.model.features.feature_container.datanode attribute)": [[189, "aslm.model.features.feature_container.DataNode.is_initialized"]], "is_marked (aslm.model.features.feature_container.datanode attribute)": [[189, "aslm.model.features.feature_container.DataNode.is_marked"]], "need_response (aslm.model.features.feature_container.datanode attribute)": [[189, "aslm.model.features.feature_container.DataNode.need_response"]], "node_funcs (aslm.model.features.feature_container.datanode attribute)": [[189, "aslm.model.features.feature_container.DataNode.node_funcs"]], "node_name (aslm.model.features.feature_container.datanode attribute)": [[189, "aslm.model.features.feature_container.DataNode.node_name"]], "node_type (aslm.model.features.feature_container.datanode attribute)": [[189, "aslm.model.features.feature_container.DataNode.node_type"]], "run() (aslm.model.features.feature_container.datanode method)": [[189, "aslm.model.features.feature_container.DataNode.run"]], "set_property() (aslm.model.features.feature_container.datanode method)": [[189, "aslm.model.features.feature_container.DataNode.set_property"]], "signalcontainer (class in aslm.model.features.feature_container)": [[190, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[190, "aslm.model.features.feature_container.SignalContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.signalcontainer method)": [[190, "aslm.model.features.feature_container.SignalContainer.cleanup"]], "curr_node (aslm.model.features.feature_container.signalcontainer attribute)": [[190, "aslm.model.features.feature_container.SignalContainer.curr_node"]], "end_flag (aslm.model.features.feature_container.signalcontainer attribute)": [[190, "aslm.model.features.feature_container.SignalContainer.end_flag"]], "is_closed (aslm.model.features.feature_container.signalcontainer attribute)": [[190, "aslm.model.features.feature_container.SignalContainer.is_closed"]], "number_of_execution (aslm.model.features.feature_container.signalcontainer attribute)": [[190, "aslm.model.features.feature_container.SignalContainer.number_of_execution"]], "remaining_number_of_execution (aslm.model.features.feature_container.signalcontainer attribute)": [[190, "aslm.model.features.feature_container.SignalContainer.remaining_number_of_execution"]], "reset() (aslm.model.features.feature_container.signalcontainer method)": [[190, "aslm.model.features.feature_container.SignalContainer.reset"]], "root (aslm.model.features.feature_container.signalcontainer attribute)": [[190, "aslm.model.features.feature_container.SignalContainer.root"]], "run() (aslm.model.features.feature_container.signalcontainer method)": [[190, "aslm.model.features.feature_container.SignalContainer.run"]], "signalnode (class in aslm.model.features.feature_container)": [[191, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[191, "aslm.model.features.feature_container.SignalNode.__init__"]], "device_related (aslm.model.features.feature_container.signalnode attribute)": [[191, "aslm.model.features.feature_container.SignalNode.device_related"]], "is_initialized (aslm.model.features.feature_container.signalnode attribute)": [[191, "aslm.model.features.feature_container.SignalNode.is_initialized"]], "need_response (aslm.model.features.feature_container.signalnode attribute)": [[191, "aslm.model.features.feature_container.SignalNode.need_response"]], "node_funcs (aslm.model.features.feature_container.signalnode attribute)": [[191, "aslm.model.features.feature_container.SignalNode.node_funcs"]], "node_name (aslm.model.features.feature_container.signalnode attribute)": [[191, "aslm.model.features.feature_container.SignalNode.node_name"]], "node_type (aslm.model.features.feature_container.signalnode attribute)": [[191, "aslm.model.features.feature_container.SignalNode.node_type"]], "run() (aslm.model.features.feature_container.signalnode method)": [[191, "aslm.model.features.feature_container.SignalNode.run"]], "set_property() (aslm.model.features.feature_container.signalnode method)": [[191, "aslm.model.features.feature_container.SignalNode.set_property"]], "treenode (class in aslm.model.features.feature_container)": [[192, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[192, "aslm.model.features.feature_container.TreeNode.__init__"]], "device_related (aslm.model.features.feature_container.treenode attribute)": [[192, "aslm.model.features.feature_container.TreeNode.device_related"]], "is_initialized (aslm.model.features.feature_container.treenode attribute)": [[192, "aslm.model.features.feature_container.TreeNode.is_initialized"]], "need_response (aslm.model.features.feature_container.treenode attribute)": [[192, "aslm.model.features.feature_container.TreeNode.need_response"]], "node_funcs (aslm.model.features.feature_container.treenode attribute)": [[192, "aslm.model.features.feature_container.TreeNode.node_funcs"]], "node_name (aslm.model.features.feature_container.treenode attribute)": [[192, "aslm.model.features.feature_container.TreeNode.node_name"]], "node_type (aslm.model.features.feature_container.treenode attribute)": [[192, "aslm.model.features.feature_container.TreeNode.node_type"]], "set_property() (aslm.model.features.feature_container.treenode method)": [[192, "aslm.model.features.feature_container.TreeNode.set_property"]], "dummy_true() (in module aslm.model.features.feature_container)": [[193, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[194, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[195, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[196, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[197, "module-aslm.model.features.feature_related_functions"]], "sharedlist (class in aslm.model.features.feature_related_functions)": [[198, "aslm.model.features.feature_related_functions.SharedList"]], "__init__() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.__init__"]], "append() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.append"]], "clear() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.clear"]], "copy() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.copy"]], "count() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.count"]], "extend() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.extend"]], "index() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.index"]], "insert() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.insert"]], "pop() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.pop"]], "remove() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.remove"]], "reverse() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.reverse"]], "sort() (aslm.model.features.feature_related_functions.sharedlist method)": [[198, "aslm.model.features.feature_related_functions.SharedList.sort"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[199, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[200, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "load_dynamic_parameter_functions() (in module aslm.model.features.feature_related_functions)": [[201, "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions"]], "aslm.model.features.image_writer": [[202, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[203, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[203, "aslm.model.features.image_writer.ImageWriter.__init__"]], "big_tiff (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.big_tiff"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[203, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[203, "aslm.model.features.image_writer.ImageWriter.close"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.config_table"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.current_time_point"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.data_buffer"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.data_source"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.file_type"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[203, "aslm.model.features.image_writer.ImageWriter.generate_image_name"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[203, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.mip"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.mip_directory"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.num_of_channels"]], "num_of_positions (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.num_of_positions"]], "num_of_slices (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.num_of_slices"]], "num_of_timepoints (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.num_of_timepoints"]], "number_of_frames (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.number_of_frames"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.save_directory"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[203, "aslm.model.features.image_writer.ImageWriter.save_image"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[203, "aslm.model.features.image_writer.ImageWriter.sub_dir"]], "aslm.model.features.remove_empty_tiles": [[204, "module-aslm.model.features.remove_empty_tiles"]], "detecttissueinstack (class in aslm.model.features.remove_empty_tiles)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.__init__"]], "detect_func (aslm.model.features.remove_empty_tiles.detecttissueinstack attribute)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.detect_func"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_signal"]], "model (aslm.model.features.remove_empty_tiles.detecttissueinstack attribute)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.model"]], "planes (aslm.model.features.remove_empty_tiles.detecttissueinstack attribute)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.planes"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[205, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_signal"]], "detecttissueinstackandrecord (class in aslm.model.features.remove_empty_tiles)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.__init__"]], "detect_func (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord attribute)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.detect_func"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_signal"]], "model (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord attribute)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.model"]], "planes (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord attribute)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.planes"]], "position_records (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord attribute)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.position_records"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[206, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_signal"]], "removeemptypositions (class in aslm.model.features.remove_empty_tiles)": [[207, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions"]], "__init__() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[207, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.__init__"]], "model (aslm.model.features.remove_empty_tiles.removeemptypositions attribute)": [[207, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.model"]], "position_records (aslm.model.features.remove_empty_tiles.removeemptypositions attribute)": [[207, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.position_records"]], "signal_func() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[207, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.signal_func"]], "detect_tissue() (in module aslm.model.features.remove_empty_tiles)": [[208, "aslm.model.features.remove_empty_tiles.detect_tissue"]], "detect_tissue2() (in module aslm.model.features.remove_empty_tiles)": [[209, "aslm.model.features.remove_empty_tiles.detect_tissue2"]], "aslm.model.features.restful_features": [[210, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[211, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "config_table (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.config_table"]], "data_func() (aslm.model.features.restful_features.ilastiksegmentation method)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.data_func"]], "init_func() (aslm.model.features.restful_features.ilastiksegmentation method)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.init_func"]], "mark_position() (aslm.model.features.restful_features.ilastiksegmentation method)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.mark_position"]], "model (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.model"]], "pieces_num (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.pieces_num"]], "pieces_size (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.pieces_size"]], "project_file (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.project_file"]], "resolution (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.resolution"]], "service_url (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.service_url"]], "update_setting() (aslm.model.features.restful_features.ilastiksegmentation method)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.update_setting"]], "zoom (aslm.model.features.restful_features.ilastiksegmentation attribute)": [[211, "aslm.model.features.restful_features.IlastikSegmentation.zoom"]], "prepare_service() (in module aslm.model.features.restful_features)": [[212, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[213, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[214, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "cleanup() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.cleanup"]], "config_table (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.config_table"]], "curr_z_index (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.curr_z_index"]], "data_func() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.data_func"]], "debug (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.debug"]], "direction (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.direction"]], "end_data_func() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.end_data_func"]], "end_flag (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.end_flag"]], "f_offset (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.f_offset"]], "f_pos (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.f_pos"]], "f_step_size (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.f_step_size"]], "first_boundary (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.first_boundary"]], "has_tissue (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.has_tissue"]], "has_tissue_queue (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.has_tissue_queue"]], "init_data_func() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.init_data_func"]], "model (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.model"]], "overlap (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.overlap"]], "pre_boundary (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.pre_boundary"]], "pre_signal_func() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.pre_signal_func"]], "signal_end() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.signal_end"]], "signal_func() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.signal_func"]], "signal_response_func() (aslm.model.features.volume_search.volumesearch method)": [[214, "aslm.model.features.volume_search.VolumeSearch.signal_response_func"]], "sinx (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.sinx"]], "siny (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.siny"]], "target_resolution (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.target_resolution"]], "target_zoom (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.target_zoom"]], "volumes_selected (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.volumes_selected"]], "z_pos (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.z_pos"]], "z_step_size (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.z_step_size"]], "z_steps (aslm.model.features.volume_search.volumesearch attribute)": [[214, "aslm.model.features.volume_search.VolumeSearch.z_steps"]], "draw_box() (in module aslm.model.features.volume_search)": [[215, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[216, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[217, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "active_microscope (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.active_microscope"]], "affine_matrix_to_stage_positions() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.affine_matrix_to_stage_positions"]], "bdv_xml_dict() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.bdv_xml_dict"]], "configuration (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.configuration"]], "dc (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.dc"]], "dt (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.dt"]], "dx (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.dx"]], "dy (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.dy"]], "dz (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.dz"]], "parse_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_xml"]], "per_stack (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.per_stack"]], "positions (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.positions"]], "set_from_configuration_experiment() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.set_from_configuration_experiment"]], "set_shape_from_configuration_experiment() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.set_shape_from_configuration_experiment"]], "set_stack_order_from_configuration_experiment() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.set_stack_order_from_configuration_experiment"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "shape_c (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape_c"]], "shape_t (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape_t"]], "shape_x (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape_x"]], "shape_y (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape_y"]], "shape_z (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata attribute)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape_z"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[218, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[219, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[220, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[220, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "active_microscope (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.active_microscope"]], "configuration (aslm.model.metadata_sources.metadata.metadata property)": [[220, "aslm.model.metadata_sources.metadata.Metadata.configuration"]], "dc (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.dc"]], "dt (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.dt"]], "dx (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.dx"]], "dy (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.dy"]], "dz (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.dz"]], "per_stack (aslm.model.metadata_sources.metadata.metadata property)": [[220, "aslm.model.metadata_sources.metadata.Metadata.per_stack"]], "positions (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.positions"]], "set_from_configuration_experiment() (aslm.model.metadata_sources.metadata.metadata method)": [[220, "aslm.model.metadata_sources.metadata.Metadata.set_from_configuration_experiment"]], "set_shape_from_configuration_experiment() (aslm.model.metadata_sources.metadata.metadata method)": [[220, "aslm.model.metadata_sources.metadata.Metadata.set_shape_from_configuration_experiment"]], "set_stack_order_from_configuration_experiment() (aslm.model.metadata_sources.metadata.metadata method)": [[220, "aslm.model.metadata_sources.metadata.Metadata.set_stack_order_from_configuration_experiment"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[220, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "shape_c (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.shape_c"]], "shape_t (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.shape_t"]], "shape_x (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.shape_x"]], "shape_y (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.shape_y"]], "shape_z (aslm.model.metadata_sources.metadata.metadata attribute)": [[220, "aslm.model.metadata_sources.metadata.Metadata.shape_z"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[220, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "active_microscope (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.active_microscope"]], "configuration (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.configuration"]], "dc (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.dc"]], "dt (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.dt"]], "dx (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.dx"]], "dy (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.dy"]], "dz (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.dz"]], "per_stack (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.per_stack"]], "positions (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.positions"]], "set_from_configuration_experiment() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.set_from_configuration_experiment"]], "set_shape_from_configuration_experiment() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.set_shape_from_configuration_experiment"]], "set_stack_order_from_configuration_experiment() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.set_stack_order_from_configuration_experiment"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "shape_c (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.shape_c"]], "shape_t (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.shape_t"]], "shape_x (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.shape_x"]], "shape_y (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.shape_y"]], "shape_z (aslm.model.metadata_sources.metadata.xmlmetadata attribute)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.shape_z"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[221, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[222, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "active_microscope (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.active_microscope"]], "configuration (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.configuration"]], "dc (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.dc"]], "dt (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.dt"]], "dx (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.dx"]], "dy (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.dy"]], "dz (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.dz"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "per_stack (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.per_stack"]], "positions (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.positions"]], "set_from_configuration_experiment() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.set_from_configuration_experiment"]], "set_shape_from_configuration_experiment() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.set_shape_from_configuration_experiment"]], "set_stack_order_from_configuration_experiment() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.set_stack_order_from_configuration_experiment"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "shape_c (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape_c"]], "shape_t (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape_t"]], "shape_x (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape_x"]], "shape_y (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape_y"]], "shape_z (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata attribute)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape_z"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[223, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[224, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[225, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.__init__"]], "ask_stage_for_position (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.ask_stage_for_position"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "available_channels (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.available_channels"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "central_focus (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.central_focus"]], "channels (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.channels"]], "configuration (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.configuration"]], "current_channel (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.current_channel"]], "current_laser_index (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.current_laser_index"]], "daq (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.end_acquisition"]], "galvo (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.galvo"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.get_readout_time"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.get_stage_position"]], "info (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.info"]], "is_synthetic (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.is_synthetic"]], "laser_wavelength (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.laser_wavelength"]], "lasers (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.lasers"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.microscope_name"]], "move_remote_focus() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.move_remote_focus"]], "move_stage() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.move_stage_offset"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.prepare_next_channel"]], "ret_pos_dict (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.ret_pos_dict"]], "stages (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.stages"]], "stages_list (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.stages_list"]], "stop_stage() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.terminate"]], "tiger_controller (aslm.model.microscope.microscope attribute)": [[225, "aslm.model.microscope.Microscope.tiger_controller"]], "turn_off_lasers() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.turn_off_lasers"]], "turn_on_laser() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.turn_on_laser"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.update_data_buffer"]], "update_stage_limits() (aslm.model.microscope.microscope method)": [[225, "aslm.model.microscope.Microscope.update_stage_limits"]], "aslm.model.model": [[226, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[227, "aslm.model.model.Model"]], "__init__() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.__init__"]], "acquisition_count (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.acquisition_count"]], "active_microscope (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.active_microscope"]], "active_microscope_name (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.active_microscope_name"]], "ask_to_pause_data_thread (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.ask_to_pause_data_thread"]], "autofocus_on (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.autofocus_on"]], "binning (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.binning"]], "camera_wait_iterations (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.camera_wait_iterations"]], "change_resolution() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.create_pipe"]], "current_exposure_time (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.current_exposure_time"]], "data_buffer (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.data_buffer"]], "data_buffer_positions (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.data_buffer_positions"]], "data_thread (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.data_thread"]], "destroy_virtual_microscope() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.destroy_virtual_microscope"]], "end_acquisition() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.end_acquisition"]], "event_queue (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.event_queue"]], "f_position (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.f_position"]], "feature_list (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.feature_list"]], "focus_pos (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.focus_pos"]], "frame_id (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.frame_id"]], "get_active_microscope() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.get_active_microscope"]], "get_camera_line_interval_and_exposure_time() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.get_camera_line_interval_and_exposure_time"]], "get_data_buffer() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.get_data_buffer"]], "get_feature_list() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.get_offset_variance_maps"]], "get_stage_position() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.get_stage_position"]], "image_count (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.image_count"]], "image_writer (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.image_writer"]], "imaging_mode (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.imaging_mode"]], "img_height (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.img_height"]], "img_width (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.img_width"]], "is_acquiring (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.is_acquiring"]], "is_live (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.is_live"]], "is_save (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.is_save"]], "launch_virtual_microscope() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.launch_virtual_microscope"]], "load_feature_list_from_file() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.load_feature_list_from_file"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.load_images"]], "logger (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.logger"]], "max_entropy (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.max_entropy"]], "microscopes (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.microscopes"]], "move_stage() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.move_stage"]], "number_of_frames (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.number_of_frames"]], "pause_data_event (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.pause_data_event"]], "pause_data_ready_lock (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.pause_data_ready_lock"]], "pause_data_thread() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.pause_data_thread"]], "plot_pipe (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.plot_pipe"]], "pre_exposure_time (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.pre_exposure_time"]], "prepare_acquisition() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.prepare_acquisition"]], "release_pipe() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.release_pipe"]], "resume_data_thread() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.run_command"]], "run_data_process() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.run_data_process"]], "run_live_acquisition() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.run_live_acquisition"]], "show_img_pipe (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.show_img_pipe"]], "signal_thread (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.signal_thread"]], "simplified_data_process() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.simplified_data_process"]], "snap_image() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.snap_image"]], "start_time (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.start_time"]], "stop_acquisition (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.stop_acquisition"]], "stop_send_signal (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.stop_send_signal"]], "stop_stage() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.stop_stage"]], "terminate() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.terminate"]], "total_acquisition_count (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.total_acquisition_count"]], "total_image_count (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.total_image_count"]], "update_data_buffer() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.update_data_buffer"]], "update_ilastik_setting() (aslm.model.model.model method)": [[227, "aslm.model.model.Model.update_ilastik_setting"]], "virtual_microscopes (aslm.model.model.model attribute)": [[227, "aslm.model.model.Model.virtual_microscopes"]], "aslm.model.waveforms": [[228, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[229, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[230, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[231, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[232, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[233, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[234, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[235, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[236, "aslm.model.waveforms.square"]], "aslm.tools": [[237, "module-aslm.tools"]], "aslm.tools.common_dict_tools": [[238, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[239, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[240, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[241, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[241, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[242, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[243, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[244, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[245, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[246, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[247, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[247, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[248, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[249, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[250, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[251, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[252, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[253, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[254, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[255, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[256, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[257, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[258, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[258, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[258, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[259, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[260, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[261, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[262, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[263, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[264, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[265, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[266, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.sdf": [[267, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[268, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[269, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[270, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[271, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[272, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[273, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[274, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[275, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[276, "module-aslm.view"]], "aslm.view.custom_widgets": [[277, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[278, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[279, "module-aslm.view.popups"]]}})