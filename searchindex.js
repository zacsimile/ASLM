Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_experiment_config", "_autosummary/aslm.config.config.verify_waveform_constants", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_contrast.image_intensity", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "_autosummary/aslm.model.analysis.image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr", "_autosummary/aslm.model.analysis.image_transform", "_autosummary/aslm.model.analysis.image_transform.deskew_image", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu", "_autosummary/aslm.model.analysis.spectral_unmixing", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.SharedList", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.remove_empty_tiles", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.custom_widgets", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing/contributing_guidelines", "contributing/contributing_hardware", "contributing/contributing_home", "contributing/contributing_model", "feature_container/feature_container_home", "implementations", "index", "software_configuration", "software_installation", "supported_hardware", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_experiment_config.rst", "_autosummary/aslm.config.config.verify_waveform_constants.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_and_correct_flatfield.rst", "_autosummary/aslm.model.analysis.image_contrast.estimate_image_resolution.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_contrast.image_intensity.rst", "_autosummary/aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.analysis.image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.apodize_image.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_correlation_coefficient.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_image_decorrelation.rst", "_autosummary/aslm.model.analysis.image_decorrelation.get_radial_average.rst", "_autosummary/aslm.model.analysis.image_decorrelation.image_to_polar.rst", "_autosummary/aslm.model.analysis.image_decorrelation.linear_map.rst", "_autosummary/aslm.model.analysis.image_decorrelation.main_image_decorr.rst", "_autosummary/aslm.model.analysis.image_transform.rst", "_autosummary/aslm.model.analysis.image_transform.deskew_image.rst", "_autosummary/aslm.model.analysis.image_transform.initiate_gpu.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.rst", "_autosummary/aslm.model.analysis.spectral_unmixing.to_do.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.SharedList.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.remove_empty_tiles.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.rst", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.custom_widgets.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing/contributing_guidelines.rst", "contributing/contributing_hardware.rst", "contributing/contributing_home.rst", "contributing/contributing_model.rst", "feature_container/feature_container_home.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_experiment_config", "aslm.config.config.verify_waveform_constants", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield", "aslm.model.analysis.image_contrast.estimate_image_resolution", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.analysis.image_contrast.image_intensity", "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy", "aslm.model.analysis.image_decorrelation", "aslm.model.analysis.image_decorrelation.apodize_image", "aslm.model.analysis.image_decorrelation.get_correlation_coefficient", "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima", "aslm.model.analysis.image_decorrelation.get_image_decorrelation", "aslm.model.analysis.image_decorrelation.get_radial_average", "aslm.model.analysis.image_decorrelation.image_to_polar", "aslm.model.analysis.image_decorrelation.linear_map", "aslm.model.analysis.image_decorrelation.main_image_decorr", "aslm.model.analysis.image_transform", "aslm.model.analysis.image_transform.deskew_image", "aslm.model.analysis.image_transform.initiate_gpu", "aslm.model.analysis.spectral_unmixing", "aslm.model.analysis.spectral_unmixing.to_do", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.dynamixel.dynamixel_functions", "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_dynamixel", "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.SharedList", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.remove_empty_tiles", "aslm.model.features.remove_empty_tiles.DetectTissueInStack", "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "aslm.model.features.remove_empty_tiles.detect_tissue", "aslm.model.features.remove_empty_tiles.detect_tissue2", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.custom_widgets", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "Feature Container", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Configuration", "Software Installation", "Supported Hardware", "User Guide"], "terms": {"modul": [0, 9, 13, 16, 17, 58, 60, 65, 66, 73, 74, 77, 103, 104, 105, 106, 109, 110, 121, 126, 137, 142, 149, 154, 159, 181, 194, 224, 225, 245, 266, 278, 312, 313, 314, 315, 317, 324, 325], "function": [1, 13, 14, 18, 23, 28, 30, 32, 35, 36, 38, 44, 47, 53, 54, 56, 57, 60, 62, 65, 66, 67, 68, 69, 70, 73, 74, 77, 79, 85, 87, 107, 114, 115, 117, 119, 127, 132, 133, 160, 167, 170, 173, 178, 184, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 210, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 242, 256, 257, 261, 265, 267, 268, 269, 271, 273, 275, 276, 277, 278, 279, 281, 282, 283, 287, 292, 296, 301, 303, 304, 305, 306, 307, 308, 309, 320, 325, 326, 327, 329], "manag": [2, 5, 6, 7, 8, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 156, 158, 161, 164, 166, 171, 183, 188, 202, 205, 206, 208, 210, 216, 217, 219, 328, 329], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 66, 225, 247, 250, 252], "dictionari": [2, 5, 6, 11, 13, 60, 65, 66, 90, 97, 98, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 151, 153, 161, 164, 166, 168, 169, 171, 172, 174, 177, 179, 183, 185, 186, 188, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 220, 221, 224, 225, 228, 230, 232, 234, 247, 250, 252, 254, 256, 272, 283, 285, 286, 294, 308, 310, 311, 319, 324, 327], "recurs": [2, 66, 228], "paramet": [2, 4, 5, 6, 7, 11, 14, 19, 20, 21, 24, 25, 26, 39, 62, 66, 67, 68, 69, 79, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 120, 123, 125, 128, 129, 131, 133, 136, 139, 141, 144, 146, 148, 151, 153, 156, 158, 161, 162, 164, 166, 168, 169, 171, 172, 174, 175, 177, 179, 180, 183, 185, 186, 188, 190, 191, 192, 193, 198, 199, 212, 229, 232, 243, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 275, 276, 277, 278, 281, 283, 284, 285, 286, 288, 289, 291, 293, 294, 295, 297, 298, 299, 300, 302, 304, 305, 306, 308, 310, 311, 319, 326, 327], "multiprocess": [2, 5, 6, 7, 71, 89, 92, 94, 158, 161, 164, 166, 171, 188], "share": [2, 5, 6, 7, 60, 66, 71, 72, 73, 125, 225, 227, 256, 320, 329], "object": [2, 5, 6, 7, 11, 13, 14, 15, 60, 62, 63, 65, 66, 67, 71, 72, 73, 76, 79, 81, 84, 86, 87, 94, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 120, 123, 125, 128, 129, 131, 139, 144, 146, 151, 153, 156, 158, 161, 162, 164, 166, 168, 171, 172, 174, 179, 183, 185, 188, 190, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 218, 220, 221, 225, 227, 232, 234, 235, 236, 240, 243, 249, 254, 256, 272, 274, 277, 280, 288, 291, 293, 294, 295, 300, 306, 319, 320, 325, 326, 327, 329], "e": [2, 4, 5, 6, 7, 11, 25, 66, 84, 114, 115, 117, 119, 129, 134, 136, 139, 141, 162, 172, 183, 185, 188, 202, 203, 210, 227, 230, 232, 250, 297, 319, 324, 328, 329], "g": [2, 5, 6, 7, 11, 66, 84, 114, 115, 117, 119, 129, 134, 136, 139, 141, 148, 162, 172, 183, 185, 188, 202, 203, 210, 230, 232, 250, 297, 319, 324, 328, 329], "dict": [2, 5, 6, 7, 11, 14, 19, 79, 81, 84, 90, 112, 114, 115, 117, 119, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 148, 151, 153, 161, 164, 166, 168, 169, 171, 172, 174, 177, 179, 183, 185, 186, 188, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 220, 221, 224, 232, 234, 254, 256, 272, 277, 283, 285, 286, 308, 310, 311, 319], "between": [2, 5, 6, 7, 20, 66, 79, 81, 84, 117, 183, 185, 188, 203, 209, 217, 219, 227, 243, 268, 269, 275, 297, 319, 327, 329], "process": [2, 5, 6, 7, 63, 66, 71, 72, 74, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 217, 218, 220, 225, 228, 234, 235, 236, 256, 320, 324], "we": [2, 6, 62, 63, 65, 66, 69, 72, 79, 81, 84, 114, 115, 133, 136, 192, 232, 247, 250, 252, 254, 319, 320, 321, 322, 324, 327, 328, 329], "ar": [2, 6, 11, 13, 60, 65, 66, 67, 84, 100, 114, 115, 117, 119, 125, 161, 164, 166, 168, 171, 174, 177, 179, 192, 196, 198, 206, 209, 212, 216, 217, 218, 219, 220, 221, 224, 225, 228, 230, 232, 243, 250, 254, 256, 268, 269, 284, 291, 319, 320, 324, 325, 327, 328, 329], "ad": [2, 6, 62, 65, 66, 161, 225, 243, 293, 300, 322, 324, 326], "str": [2, 3, 4, 6, 11, 14, 19, 20, 21, 24, 26, 62, 66, 67, 68, 69, 79, 81, 82, 84, 94, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 120, 123, 125, 128, 129, 131, 133, 134, 136, 139, 141, 144, 146, 148, 151, 153, 156, 158, 161, 162, 164, 166, 168, 171, 172, 174, 175, 177, 179, 180, 183, 185, 188, 190, 201, 202, 203, 204, 208, 210, 218, 220, 221, 224, 227, 228, 229, 230, 232, 243, 247, 250, 252, 254, 256, 270, 275, 278, 283, 284, 285, 286, 288, 289, 291, 294, 302, 308, 310], "name": [2, 6, 11, 13, 14, 60, 62, 63, 65, 66, 67, 68, 69, 79, 81, 84, 94, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 148, 151, 153, 156, 158, 161, 164, 166, 168, 171, 172, 174, 177, 179, 183, 185, 188, 192, 218, 220, 221, 227, 228, 230, 232, 243, 254, 256, 275, 278, 284, 286, 308, 319, 320, 324, 327, 329], "insert": [2, 66, 227, 324, 329], "return": [2, 3, 4, 5, 6, 11, 13, 19, 20, 21, 25, 36, 39, 43, 46, 47, 49, 54, 60, 62, 63, 65, 66, 72, 79, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 112, 114, 115, 117, 119, 120, 123, 125, 128, 129, 131, 133, 134, 136, 139, 141, 148, 151, 153, 156, 158, 161, 162, 164, 166, 168, 169, 171, 172, 174, 175, 177, 179, 180, 183, 185, 186, 188, 190, 191, 193, 198, 199, 212, 227, 229, 232, 247, 249, 250, 252, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 275, 276, 277, 278, 281, 283, 285, 286, 288, 289, 291, 293, 294, 295, 297, 298, 299, 300, 304, 305, 306, 308, 310, 311, 320, 324], "type": [2, 3, 5, 6, 11, 20, 21, 25, 39, 66, 79, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 108, 112, 114, 115, 117, 119, 120, 123, 125, 128, 129, 131, 133, 134, 136, 139, 141, 144, 146, 148, 151, 153, 156, 158, 161, 162, 164, 166, 168, 169, 171, 172, 174, 175, 177, 179, 180, 183, 185, 186, 188, 190, 191, 192, 193, 196, 198, 199, 201, 202, 205, 210, 212, 217, 218, 220, 221, 224, 227, 229, 232, 247, 249, 250, 252, 254, 256, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 275, 276, 277, 278, 281, 283, 285, 286, 288, 289, 291, 293, 295, 297, 298, 299, 300, 304, 305, 306, 310, 311, 319, 324, 326, 327], "none": [2, 13, 14, 19, 20, 21, 31, 46, 48, 51, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 79, 81, 84, 114, 115, 117, 119, 125, 151, 153, 161, 164, 166, 168, 171, 174, 177, 179, 190, 191, 193, 196, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 216, 217, 218, 219, 220, 221, 223, 227, 229, 232, 234, 235, 247, 249, 250, 252, 254, 256, 272, 285, 288, 291, 293, 300, 302, 310, 327], "exampl": [2, 3, 6, 60, 65, 66, 73, 74, 82, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 161, 166, 168, 171, 174, 177, 179, 190, 191, 192, 193, 232, 258, 259, 260, 261, 262, 263, 265, 268, 284, 291, 295, 306, 320, 321, 324, 327, 328, 329], "establish": 3, "program": [3, 13, 60, 65, 227, 320], "home": [3, 128], "directori": [3, 84, 210, 230, 232, 250, 283, 284, 286, 302, 327, 328], "appdata": [3, 319, 327], "local": [3, 14, 24, 47, 48, 66, 319, 327, 328], "window": [3, 237, 283, 319, 324, 327, 328, 329], "mac": [3, 319, 327, 328], "linux": [3, 319, 327, 328], "path": [3, 4, 5, 66, 84, 230, 256, 278, 283, 284, 285, 291, 294, 302, 320, 328], "c": [3, 66, 79, 81, 84, 172, 252, 319, 327, 328], "user": [3, 66, 228, 256, 283, 295, 319, 322, 324, 326, 327, 328, 329], "usernam": [3, 328], "get": [4, 11, 14, 65, 66, 79, 82, 112, 114, 115, 117, 119, 156, 158, 161, 177, 192, 198, 210, 224, 254, 256, 308, 320, 328], "variou": [4, 68, 69, 196, 319, 327, 329], "configur": [4, 5, 6, 7, 8, 11, 79, 81, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 186, 188, 192, 193, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 224, 225, 228, 230, 232, 234, 243, 247, 249, 250, 252, 254, 256, 294, 320, 324, 326, 328, 329, 330], "file": [4, 5, 6, 7, 57, 66, 79, 81, 82, 84, 112, 114, 115, 117, 119, 166, 228, 230, 232, 247, 249, 250, 252, 256, 278, 284, 285, 286, 291, 294, 302, 311, 319, 320, 324, 326, 328, 329], "us": [4, 11, 13, 25, 39, 40, 57, 60, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 79, 119, 120, 166, 177, 190, 191, 192, 193, 196, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 230, 232, 234, 235, 236, 237, 238, 243, 250, 252, 254, 256, 258, 259, 260, 261, 262, 263, 265, 289, 291, 302, 319, 320, 321, 324, 327, 328, 329], "configuration_path": [4, 294], "contain": [4, 5, 7, 19, 20, 21, 66, 168, 169, 171, 172, 174, 177, 179, 193, 196, 198, 201, 202, 203, 205, 206, 207, 208, 209, 210, 217, 218, 219, 220, 221, 224, 225, 228, 230, 234, 235, 237, 238, 256, 283, 291, 300, 319, 326, 327, 330], "global": [4, 14, 24, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 156, 158, 161, 164, 166, 171, 183, 188, 256], "microscop": [4, 11, 79, 81, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 192, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 220, 221, 234, 235, 236, 243, 256, 308, 320, 324, 326, 328, 329], "i": [4, 11, 13, 21, 25, 29, 54, 57, 60, 62, 65, 66, 67, 69, 73, 74, 79, 84, 88, 89, 112, 114, 115, 117, 119, 125, 128, 129, 131, 133, 136, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 190, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 230, 232, 234, 235, 236, 237, 238, 243, 250, 254, 256, 260, 268, 269, 270, 272, 284, 286, 294, 295, 298, 300, 302, 306, 319, 320, 321, 324, 325, 326, 327, 328, 329], "hardwar": [4, 66, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 188, 232, 254, 322, 324, 326, 328, 330], "setup": [4, 79, 191, 192, 319, 326, 327, 329], "experiment_path": [4, 294], "per": [4, 13, 60, 65, 66, 79, 81, 84, 128, 139, 141, 166, 212, 324, 329], "experi": [4, 7, 79, 81, 84, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 232, 243, 247, 249, 250, 252, 286, 294, 320, 324, 328], "waveform_constants_path": [4, 294], "remot": [4, 11, 99, 123, 125, 151, 153, 166, 260, 294, 325, 329], "focu": [4, 11, 99, 123, 125, 151, 153, 166, 183, 185, 188, 196, 198, 210, 247, 254, 260, 298, 319, 324, 329], "all": [4, 7, 13, 14, 20, 60, 62, 65, 66, 67, 68, 69, 84, 117, 119, 123, 125, 161, 164, 166, 168, 171, 174, 177, 179, 192, 210, 212, 227, 254, 256, 284, 291, 297, 319, 320, 324, 327, 329], "magnif": [4, 183, 185, 188, 203], "rest_api_path": [4, 294], "rest": [4, 117, 294, 319, 326], "api": [4, 66, 89, 114, 115, 117, 120, 161, 171, 294, 319, 326, 329], "waveform_templates_path": [4, 294], "waveform": [4, 123, 125, 139, 141, 151, 153, 166, 254, 256, 294, 308, 320, 326, 329], "templat": [4, 66, 294, 308, 326], "kwarg": [5, 13, 14, 60, 62, 65, 66, 67, 68, 69, 73, 74, 87, 218, 220, 221, 241, 256], "load": [5, 66, 90, 112, 114, 115, 117, 119, 128, 177, 225, 230, 254, 256, 278, 285, 291, 320, 326], "list": [5, 11, 19, 20, 35, 66, 98, 161, 164, 166, 168, 171, 174, 177, 179, 190, 193, 196, 198, 202, 203, 204, 205, 207, 209, 210, 216, 217, 219, 222, 223, 225, 227, 228, 229, 230, 234, 235, 236, 243, 247, 252, 254, 256, 275, 276, 277, 285, 288, 300, 319, 324, 326, 327], "config_dict": 5, "amalgam": 5, "input": [5, 35, 39, 45, 46, 47, 48, 49, 50, 51, 66, 228, 238, 283, 293, 294, 306, 329], "config_nam": 6, "new_config": 6, "bool": [6, 11, 19, 20, 21, 24, 26, 62, 66, 67, 68, 69, 79, 81, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 125, 128, 131, 133, 136, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 193, 196, 201, 202, 204, 205, 206, 207, 209, 210, 216, 218, 219, 220, 221, 222, 234, 235, 236, 237, 238, 243, 247, 254, 256, 268, 270, 286, 295, 300, 302], "read": [6, 66, 79, 81, 84, 133, 136, 183, 185, 188, 327], "new": [6, 11, 51, 66, 84, 161, 166, 168, 171, 174, 177, 179, 202, 206, 210, 212, 243, 276, 283, 288, 300, 320, 322, 324, 326, 327, 328], "updat": [6, 66, 125, 201, 202, 204, 205, 210, 218, 220, 221, 225, 230, 235, 254, 256, 272, 288, 300, 319, 326, 328], "info": [6, 11], "subdictionari": 6, "replac": [6, 66, 230, 319, 327], "valu": [6, 11, 13, 19, 43, 51, 60, 65, 66, 114, 115, 120, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 196, 198, 199, 201, 202, 204, 205, 206, 207, 209, 210, 218, 220, 221, 222, 227, 229, 230, 237, 243, 250, 259, 297, 306, 319, 320, 324, 327, 328], "yaml": [6, 7, 230, 285, 286, 320, 327], "true": [6, 13, 22, 60, 62, 65, 66, 67, 68, 69, 114, 115, 117, 128, 133, 136, 161, 164, 166, 168, 171, 174, 177, 179, 204, 218, 220, 222, 224, 234, 235, 236, 237, 254, 256, 268, 286, 295, 302, 324], "fals": [6, 13, 24, 43, 60, 62, 63, 65, 66, 67, 68, 69, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 114, 115, 117, 119, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 192, 204, 210, 218, 219, 220, 221, 227, 234, 235, 237, 238, 243, 254, 256, 268, 286, 300], "verifi": [7, 161, 164, 166, 168, 171, 174, 177, 179], "waveform_const": [7, 123, 125], "class": [10, 11, 12, 13, 14, 15, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 273, 274, 278, 279, 280, 290, 291, 320, 321], "base": [11, 13, 14, 15, 20, 48, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 76, 79, 81, 84, 86, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 143, 144, 146, 148, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 190, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 227, 230, 232, 234, 235, 236, 238, 240, 243, 247, 249, 250, 252, 254, 256, 274, 280, 291, 298, 300, 319, 320, 321, 328, 329], "thi": [11, 13, 54, 57, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 79, 81, 84, 114, 115, 117, 125, 153, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 190, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 232, 234, 235, 236, 237, 238, 250, 254, 256, 270, 275, 276, 277, 278, 283, 284, 297, 298, 302, 308, 319, 320, 321, 324, 325, 326, 327, 328, 329], "The": [11, 13, 14, 60, 65, 66, 73, 74, 79, 87, 125, 133, 141, 146, 153, 161, 177, 183, 185, 188, 190, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 230, 234, 235, 236, 237, 238, 260, 264, 272, 281, 297, 299, 302, 306, 319, 320, 326, 327, 328, 329], "microscope_nam": [11, 88, 94, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 254], "microscope_config": 11, "change_microscop": 11, "accord": [11, 66, 79, 81, 84, 114, 115, 117, 119, 227], "get_microscope_configuration_dict": 11, "get_stage_position_limit": 11, "suffix": 11, "posit": [11, 19, 21, 47, 66, 79, 81, 84, 128, 131, 133, 136, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 198, 202, 203, 205, 210, 234, 235, 236, 243, 247, 254, 256, 272, 297, 298, 300, 319, 327, 329], "limit": [11, 62, 66, 67, 68, 69, 161, 164, 166, 168, 171, 174, 177, 179, 185, 320], "stage": [11, 92, 101, 183, 185, 188, 196, 198, 201, 202, 205, 206, 207, 208, 209, 210, 212, 234, 235, 243, 247, 254, 256, 320, 321, 324, 326], "__init__": [11, 13, 14, 15, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 76, 79, 81, 84, 86, 87, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 148, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 190, 191, 192, 193, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 227, 232, 234, 235, 236, 240, 243, 247, 249, 250, 252, 254, 256, 274, 280, 291, 324], "method": [11, 13, 14, 15, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 76, 79, 81, 84, 86, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 148, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 190, 191, 192, 193, 198, 212, 214, 232, 238, 240, 243, 247, 249, 250, 252, 254, 256, 274, 280, 291, 324], "attribut": [11, 13, 60, 65, 66, 67, 79, 81, 84, 112, 114, 115, 117, 119, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 247, 249, 250, 252, 291], "result": [11, 65, 66, 74, 87, 114, 115, 117, 183, 185, 188, 196, 218, 220, 228, 237, 277, 320], "microscope_configuration_dict": 11, "_min": 11, "_max": 11, "position_limit": 11, "depend": [11, 66, 128, 298, 324, 326], "min": [11, 19, 21, 66, 139, 141, 151, 153, 319, 327], "max": [11, 66, 117, 139, 141, 151, 153, 319, 327, 329], "x": [11, 21, 43, 66, 79, 81, 84, 112, 114, 115, 117, 119, 161, 164, 166, 168, 171, 174, 177, 179, 199, 210, 243, 247, 256, 268, 269, 288, 289, 291, 297, 298, 299, 300, 306, 319, 327], "2000": [11, 66, 319, 329], "y": [11, 21, 36, 43, 66, 79, 81, 84, 112, 114, 115, 117, 119, 161, 164, 166, 168, 171, 174, 177, 179, 199, 210, 243, 247, 256, 288, 289, 291, 298, 300, 306, 319, 327], "z": [11, 36, 66, 79, 81, 84, 148, 161, 164, 166, 168, 171, 174, 177, 179, 205, 210, 212, 234, 235, 243, 247, 268, 269, 270, 298, 300, 306, 319, 324, 327], "theta": [11, 161, 164, 166, 168, 171, 174, 177, 179, 210, 247, 298, 319, 327], "0": [11, 20, 21, 25, 31, 48, 66, 79, 87, 89, 97, 98, 101, 114, 115, 117, 129, 134, 136, 139, 141, 161, 164, 166, 168, 171, 174, 175, 177, 179, 183, 185, 188, 191, 192, 203, 227, 234, 235, 237, 238, 243, 252, 256, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 289, 297, 302, 306, 310, 319, 325, 327], "f": [11, 65, 66, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 198, 234, 235, 247, 298, 300, 319, 320, 325, 327, 329], "properti": [11, 13, 60, 65, 66, 79, 81, 84, 112, 114, 115, 117, 119, 120, 148, 156, 158, 218, 220, 221, 247, 249, 250, 252, 291, 320, 324], "camera_config_dict": 11, "camera": [11, 19, 21, 66, 89, 94, 123, 125, 139, 141, 151, 153, 166, 192, 207, 254, 256, 258, 319, 325, 326], "camera_set": 11, "set": [11, 13, 24, 60, 62, 65, 66, 79, 81, 84, 112, 114, 115, 117, 119, 120, 125, 128, 133, 136, 144, 146, 161, 164, 166, 171, 174, 177, 183, 185, 188, 191, 192, 196, 201, 216, 217, 218, 219, 220, 221, 227, 230, 256, 300, 319, 321, 324, 327, 328], "camera_flip_flag": 11, "flip": [11, 243], "flag": [11, 66, 114, 115, 117, 119, 125, 128, 131, 133, 136, 193, 202, 204, 210, 216, 217, 219, 227, 236, 256, 298, 328], "flip_flag": 11, "camera_pixel": 11, "default": [11, 13, 14, 39, 48, 60, 62, 65, 66, 114, 115, 117, 119, 129, 136, 161, 164, 166, 168, 171, 174, 177, 179, 196, 201, 203, 204, 208, 210, 212, 216, 217, 218, 219, 220, 221, 224, 227, 232, 234, 235, 236, 237, 238, 254, 256, 262, 286, 289, 294, 319, 320, 324, 327, 329], "pixel": [11, 19, 20, 21, 25, 45, 79, 81, 84, 112, 114, 115, 117, 119, 256, 268, 269, 270, 289, 306], "from": [11, 13, 14, 24, 27, 33, 39, 50, 51, 57, 60, 62, 65, 66, 67, 71, 73, 74, 79, 81, 84, 87, 90, 112, 114, 115, 117, 119, 133, 136, 148, 158, 166, 171, 174, 198, 204, 216, 217, 218, 219, 220, 221, 227, 230, 236, 247, 249, 250, 252, 254, 256, 260, 278, 283, 284, 285, 289, 297, 302, 304, 305, 306, 310, 319, 320, 321, 324, 326, 328, 329], "x_pixel": [11, 112, 114, 115, 117, 119, 327], "int": [11, 19, 20, 21, 24, 26, 62, 66, 67, 68, 69, 79, 81, 84, 87, 89, 97, 98, 101, 112, 114, 115, 117, 119, 120, 123, 125, 128, 129, 131, 133, 134, 136, 139, 141, 144, 146, 151, 153, 161, 162, 164, 166, 168, 169, 171, 174, 175, 177, 179, 183, 185, 186, 188, 193, 198, 202, 204, 205, 208, 210, 219, 232, 234, 235, 247, 252, 254, 256, 262, 264, 270, 288, 289, 297, 298, 299, 302, 306, 308, 319], "number": [11, 13, 45, 48, 60, 65, 66, 79, 81, 84, 87, 112, 114, 115, 117, 119, 123, 125, 128, 133, 136, 139, 141, 151, 153, 161, 166, 169, 172, 179, 180, 185, 186, 198, 202, 204, 208, 210, 219, 227, 232, 234, 235, 237, 254, 256, 297, 298, 299, 302, 308, 319, 320, 326], "y_pixel": [11, 112, 114, 115, 117, 119, 327], "channels_info": 11, "channel": [11, 79, 81, 84, 123, 125, 139, 141, 151, 153, 166, 179, 192, 198, 202, 206, 210, 232, 254, 256, 327, 329], "popul": [11, 119], "combobox": 11, "avail": [11, 13, 60, 65, 66, 73, 128, 131, 133, 136, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 232, 295, 319, 320, 324, 328, 329], "laser": [11, 98, 125, 156, 254, 262, 263, 265, 319, 324, 325, 326], "488nm": [11, 327], "561nm": 11, "642nm": [11, 327], "filter": [11, 48, 91, 96, 128, 129, 131, 133, 134, 136, 325, 326], "empti": [11, 66, 133, 136, 161, 164, 166, 168, 171, 174, 177, 179, 196, 198, 203, 216, 217, 219, 227, 235, 236, 327], "align": [11, 66, 133, 136, 161, 164, 166, 168, 171, 174, 177, 179, 327], "gfp": [11, 136, 327], "ff01": [11, 327], "515": [11, 327], "30": [11, 66, 306, 319, 327], "32": [11, 39, 66, 232, 327], "daq_sample_r": 11, "daq": [11, 95, 98, 100, 151, 153, 166, 254, 256, 319], "sampl": [11, 48, 123, 125, 139, 141, 151, 153, 166, 177, 268, 269, 270, 324, 325, 329], "rate": [11, 114, 115, 117, 119, 123, 125, 129, 134, 136, 139, 141, 151, 153, 162, 166, 175], "float": [11, 13, 19, 20, 21, 24, 25, 26, 39, 60, 62, 65, 66, 67, 68, 69, 79, 81, 84, 112, 114, 115, 117, 119, 123, 125, 128, 129, 133, 134, 136, 139, 141, 148, 151, 153, 161, 164, 166, 168, 171, 174, 175, 177, 179, 183, 185, 188, 190, 192, 198, 199, 202, 203, 205, 210, 234, 235, 237, 238, 243, 247, 254, 256, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270, 297, 298, 299, 305, 306, 319], "filter_wheel_setting_dict": 11, "wheel": [11, 91, 96, 128, 129, 131, 133, 134, 136, 325, 326], "galvo_parameter_dict": 11, "galvo": [11, 88, 97, 123, 125, 166, 259, 261, 294, 320], "lasers_info": 11, "laser_list": 11, "number_of_channel": 11, "remote_focus_dict": 11, "delay_perc": [11, 327], "pulse_perc": [11, 327], "remote_focus_paramet": 11, "percent": [11, 139, 141, 151, 153, 161, 166, 243, 258, 260, 261, 263, 265, 319], "delai": [11, 123, 125, 128, 133, 139, 141, 151, 153, 166, 171, 183, 185, 188, 260, 263], "puls": [11, 123, 125, 161, 263, 327, 329], "stage_default_posit": 11, "current": [11, 13, 20, 60, 65, 66, 112, 114, 115, 117, 119, 120, 166, 177, 179, 183, 185, 188, 198, 201, 202, 205, 210, 212, 216, 217, 218, 219, 220, 227, 232, 243, 254, 256, 298, 319, 326, 327], "stage_flip_flag": 11, "stage_setting_dict": 11, "stage_step": 11, "step": [11, 66, 79, 81, 84, 112, 114, 115, 117, 119, 196, 198, 201, 202, 203, 204, 205, 206, 209, 210, 212, 216, 217, 218, 220, 221, 319, 324, 327, 328], "size": [11, 19, 20, 21, 66, 79, 81, 84, 112, 114, 115, 117, 119, 198, 202, 210, 212, 232, 247, 249, 250, 252, 256, 268, 269, 270, 289, 297, 319, 327], "same": [11, 13, 19, 21, 60, 65, 66, 183, 185, 188, 196, 252, 286, 291, 327], "group": [13, 60, 65], "target": [13, 14, 20, 60, 65, 73, 74, 171, 183, 185, 188, 203, 256, 272], "arg": [13, 14, 60, 62, 65, 66, 67, 68, 69, 73, 74, 87, 88, 190, 202, 217, 218, 219, 220, 222, 223, 228, 230, 256, 275, 294, 295, 324], "daemon": [13, 60, 65], "thread": [13, 14, 60, 63, 65, 67, 73, 74, 91, 92, 93, 95, 96, 100, 102, 193, 198, 205, 208, 209, 210, 256], "constructor": [13, 60, 65], "should": [13, 60, 65, 66, 73, 74, 114, 115, 117, 133, 161, 196, 204, 207, 209, 216, 217, 218, 219, 220, 221, 230, 234, 235, 237, 297, 319, 320, 327, 328, 329], "alwai": [13, 60, 65, 66, 79, 81, 84, 222, 238], "call": [13, 60, 62, 63, 65, 66, 73, 74, 79, 125, 168, 198, 206, 223, 227, 232, 234, 235, 256, 319, 327, 328], "keyword": [13, 14, 60, 65, 66, 73, 79, 81, 84, 218, 220, 221, 256], "argument": [13, 14, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 79, 81, 84, 87, 128, 133, 136, 202, 217, 218, 219, 220, 221, 222, 223, 228, 230, 256, 275, 293, 294, 324], "reserv": [13, 60, 65], "futur": [13, 60, 65, 66, 320], "extens": [13, 60, 65, 232, 320], "when": [13, 60, 63, 65, 66, 74, 209, 216, 217, 218, 219, 220, 221, 223, 227, 254, 256, 319, 320, 324, 327, 328, 329], "threadgroup": [13, 60, 65], "implement": [13, 60, 65, 66, 79, 81, 84, 117, 166, 168, 174, 177, 179, 222, 250, 319, 326, 329], "callabl": [13, 14, 60, 62, 63, 65, 67, 68, 69, 72], "invok": [13, 60, 65, 66], "run": [13, 14, 60, 62, 65, 67, 68, 69, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 125, 198, 216, 217, 218, 219, 220, 256, 319, 320, 324, 327, 328, 329], "mean": [13, 25, 60, 65, 66, 269], "noth": [13, 60, 65, 223, 224], "By": [13, 60, 62, 65, 66, 327, 329], "uniqu": [13, 60, 65, 329], "construct": [13, 60, 65, 66, 183, 185, 188, 243], "form": [13, 60, 65, 66, 237, 320, 324, 329], "n": [13, 60, 65, 66, 84, 201, 203, 243, 268, 269, 270, 304, 305, 306, 320, 327, 328], "where": [13, 60, 65, 66, 218, 220, 221, 222, 223, 228, 230, 232, 235, 256, 319, 321, 324, 327, 328], "small": [13, 60, 65, 320], "decim": [13, 60, 65, 66], "tupl": [13, 14, 26, 60, 65, 66, 79, 81, 84, 87, 171, 218, 220, 222, 223, 225, 228, 230, 247, 249, 250, 252, 289, 291, 304], "invoc": [13, 60, 65], "If": [13, 43, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 79, 81, 84, 112, 114, 115, 117, 119, 125, 128, 131, 133, 136, 161, 164, 166, 168, 171, 174, 177, 179, 185, 198, 224, 227, 229, 232, 234, 235, 237, 256, 268, 291, 294, 319, 320, 324, 327, 328, 329], "subclass": [13, 60, 62, 65, 66], "overrid": [13, 60, 65, 79], "must": [13, 19, 21, 60, 65, 66, 73, 79, 133, 306, 320, 324, 329], "make": [13, 34, 60, 63, 65, 66, 72, 298, 319, 320, 322, 324, 327], "sure": [13, 60, 65, 66, 319, 327], "befor": [13, 60, 65, 66, 144, 146, 174, 190, 196, 202, 206, 210, 220, 227, 300, 324, 328], "do": [13, 57, 60, 65, 66, 114, 115, 125, 161, 223, 224, 247, 250, 252, 319, 320, 324, 327, 328, 329], "anyth": [13, 60, 65], "els": [13, 60, 65], "getnam": [13, 60, 65], "string": [13, 60, 62, 63, 65, 66, 84, 128, 131, 133, 136, 144, 151, 177, 179, 185, 204, 227, 228, 229, 232, 256, 285, 286, 310], "identif": [13, 60, 65, 227], "purpos": [13, 60, 65, 66, 74, 123, 125, 177, 328], "onli": [13, 60, 65, 66, 125, 161, 166, 212, 258, 306, 319, 320, 327, 328, 329], "deprec": [13, 60, 65, 66], "instead": [13, 60, 65, 66, 74, 319], "isdaemon": [13, 60, 65], "whether": [13, 60, 65, 66, 89, 112, 114, 115, 117, 119, 161, 164, 166, 168, 171, 174, 177, 179, 196, 202, 204, 205, 210, 216, 218, 219, 220, 221, 232, 234, 235, 256, 302], "islock": 13, "check": [13, 66, 87, 128, 131, 133, 136, 183, 188, 196, 210, 234, 235, 256], "lock": [13, 66, 125, 209], "is_al": [13, 60, 65], "aliv": [13, 60, 65], "just": [13, 60, 65, 66, 67, 324], "start": [13, 21, 60, 62, 65, 66, 117, 125, 139, 141, 151, 153, 161, 177, 193, 202, 210, 227, 254, 256, 260, 298, 302, 319, 320, 324, 328, 329], "until": [13, 60, 65, 73, 125, 133, 161, 166, 168, 171, 174, 177, 179, 209, 254, 256], "after": [13, 60, 65, 66, 120, 183, 188, 201, 205, 210, 220, 256, 320, 324, 327, 328], "termin": [13, 60, 65, 216, 254, 320, 327, 328, 329], "see": [13, 60, 62, 65, 66, 73, 74, 250, 311, 320, 324, 326, 328], "also": [13, 60, 65, 66, 225, 232, 235, 320, 328, 329], "enumer": [13, 60, 65], "join": [13, 60, 65, 74], "timeout": [13, 60, 65, 129, 134, 175, 185, 191], "wait": [13, 60, 65, 73, 114, 115, 117, 119, 125, 128, 133, 136, 161, 171, 174, 190, 209, 217, 219, 220, 254, 256, 324], "block": [13, 60, 65, 66, 79, 161, 166, 168, 171, 174, 177, 179, 317], "whose": [13, 60, 65, 66], "either": [13, 60, 65, 66, 119, 204, 224, 319, 327], "normal": [13, 30, 33, 46, 48, 60, 65, 66, 112, 114, 115, 117, 119, 192, 254, 327], "through": [13, 43, 60, 65, 66, 202, 210, 217, 218, 219, 220, 221, 230, 234, 243, 324], "an": [13, 19, 20, 21, 24, 26, 27, 40, 50, 54, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 87, 112, 114, 115, 117, 119, 161, 164, 166, 168, 171, 174, 177, 179, 185, 196, 203, 204, 210, 216, 217, 219, 227, 235, 236, 237, 238, 247, 250, 256, 288, 294, 297, 300, 306, 311, 319, 320, 321, 324, 327, 329], "unhandl": [13, 60, 65], "except": [13, 60, 62, 65, 66, 67, 68, 69, 74, 87, 161, 164, 166, 168, 171, 174, 177, 179], "option": [13, 14, 20, 60, 63, 65, 66, 117, 125, 161, 164, 166, 168, 171, 174, 177, 179, 196, 201, 203, 204, 208, 210, 216, 217, 218, 219, 220, 221, 224, 227, 228, 230, 234, 235, 236, 237, 238, 254, 262, 319, 320, 324], "occur": [13, 60, 65, 66, 161, 321], "present": [13, 21, 60, 65, 112, 114, 115, 117, 119, 185, 224, 227, 228], "point": [13, 60, 62, 65, 66, 84, 216, 232, 288, 304, 305, 306, 319], "specifi": [13, 60, 65, 66, 133, 136, 177, 201, 203, 204, 208, 216, 217, 218, 219, 220, 221, 224, 228, 230, 232, 234, 235, 236, 237, 238, 283, 286, 319, 324, 327], "oper": [13, 60, 63, 65, 69, 72, 174, 192, 196, 212, 216, 222, 223, 232, 254, 321, 324, 325, 327, 328, 329], "second": [13, 60, 65, 66, 79, 81, 84, 114, 115, 117, 119, 139, 141, 153, 192, 254, 258, 259, 260, 261, 262, 263, 265, 319, 327], "fraction": [13, 60, 65, 297, 298], "thereof": [13, 60, 65], "As": [13, 60, 63, 65, 66, 72, 324, 329], "you": [13, 60, 63, 65, 66, 71, 72, 73, 74, 227, 319, 320, 324, 327, 328, 329], "decid": [13, 60, 65, 204, 205, 319, 327], "happen": [13, 60, 65, 324], "still": [13, 60, 65, 66, 209, 319, 327, 328, 329], "time": [13, 60, 65, 66, 79, 81, 84, 87, 112, 114, 115, 117, 119, 123, 125, 128, 133, 136, 139, 141, 151, 153, 161, 166, 175, 185, 190, 192, 202, 208, 210, 212, 219, 232, 254, 256, 258, 281, 319, 321, 327, 329], "out": [13, 60, 62, 65, 66, 114, 115, 133, 161, 164, 166, 168, 171, 174, 177, 179, 191, 196, 198, 201, 203, 227, 237, 243, 263, 297, 298, 319, 320, 327, 329], "A": [13, 60, 65, 66, 73, 74, 161, 164, 166, 168, 171, 174, 177, 179, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 229, 230, 234, 235, 236, 237, 243, 285, 291, 297, 306, 320, 324, 327, 329], "can": [13, 60, 63, 65, 66, 67, 71, 74, 79, 81, 84, 117, 119, 128, 133, 196, 201, 204, 218, 220, 221, 227, 228, 229, 250, 256, 291, 319, 320, 321, 324, 327, 328, 329], "ed": [13, 60, 65], "mani": [13, 60, 65, 66, 198, 219, 320, 324, 327], "rais": [13, 60, 62, 65, 66, 67, 68, 69, 74, 79, 81, 84, 88, 112, 114, 115, 117, 119, 128, 131, 133, 134, 136, 174, 185, 227, 291], "runtimeerror": [13, 60, 65, 66, 67], "attempt": [13, 60, 65, 66, 87], "made": [13, 60, 65, 66], "would": [13, 60, 62, 65, 66, 228, 230, 237, 319, 327, 329], "caus": [13, 60, 65, 66], "deadlock": [13, 60, 65], "It": [13, 60, 65, 66, 79, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 230, 234, 235, 236, 237, 283, 319, 324, 326, 327, 328, 329], "error": [13, 60, 65, 66, 74, 88, 133, 174, 268, 269, 285, 289, 320, 328], "ha": [13, 60, 65, 66, 71, 133, 161, 164, 166, 168, 171, 174, 177, 179, 202, 210, 212, 216, 218, 220, 221, 285, 295, 297, 319, 324, 325, 327], "been": [13, 60, 65, 202, 210, 216, 218, 220, 221, 234, 235], "so": [13, 60, 65, 66, 74, 125, 212, 319, 328, 329], "setdaemon": [13, 60, 65], "setnam": [13, 60, 65], "": [13, 25, 60, 63, 65, 66, 112, 114, 117, 119, 133, 175, 177, 201, 203, 216, 217, 219, 220, 224, 232, 236, 256, 319, 320, 324, 328], "activ": [13, 60, 65, 114, 115, 117, 119, 123, 125, 128, 201, 202, 206, 207, 210, 256, 320, 326, 327, 328, 329], "most": [13, 60, 65, 66, 320, 327, 329], "onc": [13, 60, 65, 66, 227, 324, 328, 329], "arrang": [13, 60, 65], "separ": [13, 60, 65, 66, 250, 275, 320, 325], "more": [13, 60, 65, 66, 161, 164, 166, 168, 171, 174, 177, 179, 319, 320, 326, 328], "than": [13, 19, 21, 60, 65, 66, 79, 114, 115, 117, 237, 320, 329], "unlock": 13, "finish": [13, 174, 198], "boolean": [13, 60, 65, 66, 196, 201, 202, 204, 205, 206, 207, 209, 210, 216, 218, 219, 220, 221, 222], "indic": [13, 19, 60, 65, 66, 79, 196, 201, 202, 204, 205, 206, 207, 209, 210, 216, 218, 219, 220, 221, 232, 236, 238, 243, 254, 297, 324], "otherwis": [13, 60, 65, 66, 114, 115, 117, 192, 218, 220, 221, 234, 235, 237, 254, 286], "Its": [13, 60, 65], "initi": [13, 15, 60, 63, 65, 66, 71, 72, 79, 81, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 120, 123, 125, 128, 131, 133, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 162, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 190, 196, 198, 202, 209, 210, 218, 220, 221, 227, 234, 235, 256, 327], "inherit": [13, 60, 65, 66, 87, 218, 220], "creat": [13, 14, 60, 62, 65, 66, 74, 108, 125, 161, 166, 168, 171, 174, 179, 225, 256, 259, 261, 262, 263, 265, 283, 288, 289, 298, 320, 326, 328, 329], "main": [13, 60, 65, 74, 196, 202, 203, 205, 206, 207, 208, 209, 210, 218, 220, 224, 236, 320, 324], "therefor": [13, 60, 65, 66], "entir": [13, 60, 65, 243], "python": [13, 60, 63, 65, 66, 72, 79, 81, 84, 247, 249, 250, 252, 278, 284, 310, 319, 324, 326, 327], "exit": [13, 60, 63, 65, 144, 146, 204, 324], "left": [13, 60, 65, 66, 260, 288, 289, 297, 328], "ident": [13, 60, 65, 324, 327], "identifi": [13, 35, 36, 60, 65, 133, 218, 220, 221, 227, 329], "nonzero": [13, 60, 65, 66], "integ": [13, 60, 65, 66, 204, 258, 259, 260, 261, 263, 265, 320], "get_id": [13, 60, 65], "mai": [13, 60, 65, 66, 196, 209, 230, 320, 324, 328, 329], "recycl": [13, 60, 65], "anoth": [13, 60, 62, 65, 66, 74, 319, 320, 327, 328], "even": [13, 24, 60, 65, 66], "semant": [13, 60, 65], "multipl": [13, 24, 26, 35, 60, 65, 66, 67, 206, 250, 329], "given": [13, 25, 60, 65, 66, 82, 114, 115, 117, 119, 128, 131, 133, 136, 139, 141, 153, 224, 227, 228, 230, 237, 300, 324, 328], "native_id": [13, 60, 65], "nativ": [13, 60, 65, 66], "integr": [13, 60, 65, 329], "id": [13, 60, 65, 88, 89, 97, 98, 101, 117, 119, 139, 141, 144, 146, 164, 168, 171, 177, 179, 185, 193, 196, 198, 203, 204, 207, 209, 210, 234, 235], "non": [13, 60, 65, 66, 294], "neg": [13, 60, 65], "get_native_id": [13, 60, 65], "repres": [13, 60, 65, 204, 216, 218, 220, 221, 225, 228, 229, 234, 235, 236, 237, 319, 327], "report": [13, 60, 65, 161, 166, 168, 171, 174, 177, 179, 256, 320], "kernel": [13, 60, 65], "clear": [14, 66, 190, 191, 216, 217, 219, 227, 256], "pool": 14, "createthread": 14, "resourcenam": 14, "callback": 14, "cbarg": 14, "cbkarg": 14, "add": [14, 29, 62, 218, 220, 293, 294, 319, 320, 324, 327, 328], "waitlist": 14, "resourc": [14, 60, 67, 73, 216, 217, 219], "getrunningthread": 14, "globaltrac": 14, "frame": [14, 24, 25, 26, 114, 115, 117, 119, 193, 196, 198, 202, 203, 204, 207, 209, 210, 218, 234, 235, 243, 254, 256, 325, 329], "event": [14, 220, 221, 236], "trace": [14, 66], "ani": [14, 60, 62, 65, 66, 79, 81, 84, 161, 164, 166, 168, 171, 174, 177, 179, 206, 209, 218, 220, 223, 224, 234, 235, 324, 329], "killthreadinlist": 14, "threadlist": 14, "kill": 14, "localtrac": 14, "movetodelet": 14, "taskthread": 14, "move": [14, 57, 66, 128, 133, 136, 153, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 198, 202, 205, 210, 234, 235, 243, 254, 256, 319, 324, 327, 329], "todeletelist": 14, "selflockthread": 14, "registerresourc": 14, "regist": [14, 224, 329], "removethread": 14, "remov": [14, 66, 227, 236, 319, 324, 327], "threadtaskwrap": 14, "wrap": [14, 281], "img_data": 19, "_supportsarrai": [19, 20, 21, 24, 26, 79, 81, 84, 247, 270], "dtype": [19, 20, 21, 24, 26, 65, 66, 69, 71, 79, 81, 84, 247, 270], "_nestedsequ": [19, 20, 21, 24, 26, 79, 81, 84, 247, 270], "complex": [19, 20, 21, 24, 26, 46, 66, 79, 81, 84, 247, 270], "byte": [19, 20, 21, 24, 26, 66, 79, 81, 84, 133, 136, 247, 270], "boundari": [19, 20, 22, 243, 297], "width": [19, 21, 66, 112, 114, 115, 117, 119, 237, 254, 268, 269, 270, 288, 304], "1": [19, 20, 21, 25, 46, 48, 65, 66, 79, 81, 84, 89, 117, 120, 139, 141, 161, 190, 192, 203, 204, 212, 219, 227, 234, 235, 237, 243, 252, 254, 256, 259, 260, 261, 262, 263, 265, 268, 269, 270, 297, 306, 319, 324, 327, 328, 329], "offset": [19, 21, 24, 26, 27, 66, 112, 114, 115, 117, 119, 151, 153, 183, 185, 188, 198, 199, 202, 203, 254, 256, 260, 261, 262, 263, 265, 268, 269, 270, 289, 327], "varianc": [19, 21, 26, 27, 66, 112, 114, 115, 117, 119, 256], "perform": [19, 51, 62, 67, 68, 69, 133, 196, 201, 203, 204, 209, 210, 216, 217, 219, 223, 238, 324, 326, 329], "binari": [19, 66, 289], "search": [19, 230, 328], "tissu": [19, 20, 21, 203, 234, 235, 237, 238, 243], "imag": [19, 20, 21, 24, 26, 27, 29, 30, 33, 36, 39, 40, 43, 45, 46, 48, 49, 50, 54, 66, 79, 84, 112, 114, 115, 117, 119, 125, 148, 198, 201, 203, 206, 210, 232, 234, 235, 237, 238, 243, 254, 256, 268, 269, 270, 291, 298, 306, 324, 325, 329], "locat": [19, 66, 133, 183, 185, 188, 294, 319, 328, 329], "image_data": [19, 20, 21, 29, 31, 33, 36, 37, 39, 54, 237, 238], "npt": [19, 20, 21, 24, 26, 79, 81, 84, 304, 305, 306], "arraylik": [19, 20, 21, 24, 26, 79, 81, 84, 304, 305, 306], "xy": [19, 24, 288], "presenc": [19, 234, 235], "subimag": [19, 21], "smaller": [19, 21, 66], "shape": [19, 21, 34, 66, 69, 71, 79, 81, 84, 247, 249, 250, 252, 291], "map": [19, 21, 24, 26, 27, 51, 66, 112, 114, 115, 117, 119, 161, 166, 177, 179, 250, 256, 319, 327], "mag_ratio": 20, "find": [20, 66, 243, 319, 324, 327, 328, 329], "otsu": [20, 32, 33, 203], "threshold": [20, 32, 33, 203, 205, 237, 238], "space": [20, 46, 48, 66, 203, 232, 297, 298], "resampl": 20, "ratio": 20, "over": [20, 66, 228, 328], "tile": [20, 203, 243, 297, 298], "row": [20, 66, 300, 319], "downsampl": [20, 203], "determin": [21, 66, 79, 166, 196, 203, 204, 208, 209, 210, 218, 234, 235, 237, 238], "direct": [22, 36, 66, 112, 114, 115, 117, 119, 243, 268, 269, 270, 288, 320, 328, 329], "offset_map": [24, 27], "comput": [24, 26, 27, 203, 223, 319, 327, 328, 329], "flatfield": 24, "evenli": 24, "illumin": 24, "scmo": [24, 25, 26], "zyx": [24, 26, 79], "defocus": 24, "signal": [24, 25, 125, 153, 191, 192, 193, 196, 201, 202, 203, 204, 205, 206, 208, 209, 210, 216, 219, 220, 221, 224, 225, 234, 235, 236, 256, 261, 324, 329], "np": [24, 25, 65, 66, 112, 114, 115, 117, 119, 133, 232, 237, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 289, 298, 300], "absenc": 24, "oppos": 24, "fn": 25, "qe": 25, "82": 25, "ib": 25, "nr": 25, "4": [25, 66, 114, 117, 148, 258, 259, 261, 262, 263, 265, 268, 269, 324, 325, 327, 328], "m": [25, 40, 112, 114, 119, 148, 172, 256, 319, 327, 328], "http": [25, 40, 79, 81, 84, 128, 133, 161, 247, 249, 250, 252, 284, 327, 328, 329], "www": [25, 133, 329], "hamamatsu": [25, 114, 115, 117, 325], "com": [25, 40, 79, 81, 84, 128, 133, 161, 175, 247, 249, 250, 252, 328, 329], "content": [25, 66, 229, 277, 285, 286, 324], "dam": 25, "photon": 25, "site": 25, "document": [25, 66, 108, 114, 115, 117, 161, 320, 324, 326, 328], "99_sales_librari": 25, "sy": [25, 66], "scas0134e_c13440": 25, "20cu_tec": 25, "pdf": [25, 133], "nois": 25, "sigma": [25, 36, 198, 199], "excess": 25, "factor": [25, 166, 320], "unitless": 25, "quantum": 25, "effici": 25, "arrai": [25, 66, 69, 71, 79, 81, 84, 237, 238, 259, 260, 261, 262, 263, 264, 265, 268, 270, 289, 291, 298, 300, 304, 305], "background": [25, 268, 269, 270], "readout": [25, 112, 114, 115, 117, 119, 139, 141, 151, 153, 192, 254], "rm": 25, "em": 25, "gain": [25, 185], "estim": [25, 40, 48, 128, 232], "electron": 25, "dark": 26, "taken": [26, 60, 65, 183, 185, 188], "sequenti": [26, 60, 65], "variance_map": 27, "snr": 27, "border": 29, "median": 29, "requir": [29, 57, 66, 100, 161, 164, 166, 168, 171, 174, 177, 179, 196, 201, 223, 234, 235, 237, 256, 325, 328, 329], "3d": [29, 34, 43, 79], "inside_imag": 30, "normalized_cel": 30, "surface_cel": 30, "combin": [30, 276, 326], "insid": [30, 66, 328], "cell": [30, 32], "surfac": [30, 35, 36], "image_threshold": 31, "pixel_s": [31, 40, 268, 269, 270, 306, 327], "206": 31, "padded_image_data": 32, "insidegamma": 32, "insideblur": 32, "insidedilateradiu": 32, "insideeroderadiu": 32, "tri": [32, 87, 320], "fill": [32, 66, 198, 244], "interior": 32, "gaussian": [32, 268, 269, 270], "blur": 32, "follow": [32, 183, 185, 188, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 228, 230, 320, 324, 327, 328], "dilat": 32, "hole": 32, "eros": 32, "subtract": 33, "standard": [33, 60, 65, 66, 326], "deviat": [33, 66, 321], "radiu": [34, 305], "structur": [34, 66, 225, 252, 256, 324], "element": [34, 66, 190, 227, 247, 311], "sphere": 34, "scale": [35, 166, 306], "each": [36, 43, 66, 71, 79, 81, 84, 87, 123, 125, 151, 153, 161, 166, 177, 183, 185, 188, 196, 198, 206, 209, 218, 220, 221, 225, 227, 230, 232, 234, 235, 256, 275, 297, 298, 300, 306, 319, 320, 321, 324, 327, 329], "ndarrai": [39, 66, 69, 112, 114, 115, 117, 119, 151, 153, 232, 237, 238, 254, 268, 269, 270], "calcul": [39, 66, 112, 114, 115, 117, 119, 123, 125, 133, 136, 148, 166, 196, 198, 203, 208, 212, 237, 254, 256, 258, 297, 329], "flat": [39, 66], "dark_field": 39, "correct": [39, 66, 166], "bit": [39, 66, 79, 81, 84, 232, 250], "data": [39, 54, 66, 79, 81, 82, 84, 95, 114, 115, 117, 119, 123, 125, 166, 191, 192, 193, 196, 198, 201, 203, 204, 205, 207, 208, 209, 210, 212, 217, 218, 224, 225, 227, 232, 234, 235, 237, 238, 254, 256, 283, 286, 300, 319, 324, 325, 326], "16": [39, 66, 232], "param": 39, "flat_field": 39, "input_arrai": [40, 41, 42, 43], "number_high_pass_filt": 40, "10": [40, 48, 66, 87, 133, 134, 161, 203, 237, 258, 260, 261, 262, 263, 264, 265, 319, 327, 328], "fourier_sampl": [40, 48], "50": [40, 48, 261, 265, 327], "apodization_pixel": 40, "20": [40, 66, 237, 327], "resolut": [40, 79, 174, 201, 203, 212, 243, 256, 325], "decorrel": [40, 47, 48], "github": [40, 79, 81, 84, 247, 249, 250, 252, 326, 327, 328], "ades91": 40, "imdecorr": 40, "blob": 40, "master": [40, 125], "main_imagedecorr": 40, "psf_support_diameter_xi": [41, 42, 43], "use_gpu": [43, 256, 295], "2d": [43, 45, 48, 66, 203, 268, 270], "iter": [43, 66, 217, 218, 219, 220, 221, 227, 230], "plane": [43, 202, 234, 235, 324, 329], "otf_support_x": 43, "support": [43, 66, 79, 166, 230, 326, 330], "otf": 43, "dimens": [43, 66, 79, 81, 84, 256, 297, 298, 327], "otf_support_i": 43, "entropi": [43, 198], "input_imag": [45, 48, 49, 50], "number_pixel": 45, "apod": 45, "edg": 45, "output": [45, 46, 47, 48, 49, 50, 51, 62, 66, 98, 100, 125, 161, 166, 263, 329], "output_imag": 45, "image_1": 46, "image_2": 46, "c1": 46, "c2": 46, "correl": 46, "coeffici": 46, "express": 46, "fourier": [46, 48], "transform": [46, 50, 324], "2": [46, 65, 66, 117, 139, 141, 191, 238, 247, 260, 261, 268, 269, 306, 319, 324, 325, 327, 328, 329], "correlation_coeffici": 46, "cross": 46, "decorrelation_funct": 47, "maxima": [47, 48], "max_index": 47, "max_amplitud": 47, "amplitud": [47, 48, 198, 199, 259, 260, 261, 262, 263, 265, 327], "number_highpass_filt": 48, "cut": 48, "off": [48, 139, 141, 144, 146, 190, 254, 256, 324], "frequenc": [48, 261, 262, 265, 327], "analyz": [48, 234, 235, 238], "linspac": 48, "high": [48, 123, 125, 201, 297, 325], "pass": [48, 60, 65, 66, 71, 72, 84, 123, 125, 217, 218, 219, 220, 227, 256, 319, 321], "kcmax": 48, "a0": 48, "d0": 48, "radial": [49, 268, 269, 270], "averag": [49, 62, 66, 67, 68, 69], "squar": [49, 228, 237, 269], "im": 49, "r": [49, 79, 81, 84, 300, 305], "imp": 50, "im2pol": 50, "imc": 50, "carthesian": 50, "polar": 50, "coordin": [50, 327], "input_valu": 51, "minimum_valu": 51, "maximum_valu": 51, "mapped_minimum_valu": 51, "mapped_maximum_valu": 51, "linear": [51, 329], "rang": [51, 133, 161, 196, 198, 202, 227], "minimum": [51, 66, 112, 114, 115, 117, 119, 166, 212, 234, 235, 237, 319, 325, 327], "maximum": [51, 66, 112, 114, 115, 117, 119, 161, 166, 198, 232, 319, 326, 327], "rescaled_valu": 51, "rescal": [51, 306], "shear_angl": 54, "z_pixel_s": 54, "xy_pixel_s": 54, "design": [54, 128, 131, 133, 136, 185, 217, 219, 222, 227, 230, 232, 324, 329], "deskew": 54, "uint16": [54, 66], "save": [54, 65, 84, 117, 161, 164, 166, 168, 171, 174, 177, 179, 198, 210, 228, 232, 283, 286, 324], "tiff": [54, 84, 119, 232, 250, 252, 291], "spectral": [57, 326], "unmix": 57, "need": [57, 66, 74, 114, 115, 117, 119, 196, 198, 201, 202, 210, 212, 217, 218, 220, 221, 222, 223, 225, 227, 232, 254, 256, 297, 319, 324, 327, 328, 329], "repo": [57, 328], "here": [57, 114, 115, 260, 319, 320, 321, 327], "signific": 57, "organ": [57, 123, 125, 225], "overhaul": 57, "first_resourc": [60, 73], "resultthread": [60, 61, 68], "access": [60, 65, 66, 67, 71, 79, 81, 84, 319, 328], "order": [60, 66, 67, 209, 217, 219, 227, 319, 327], "thei": [60, 63, 66, 72, 125, 224, 319, 327, 328, 329], "were": [60, 66, 232, 327, 328], "launch": [60, 65, 74, 327], "docstr": [60, 73, 74, 320], "top": [60, 73, 74, 112, 114, 115, 117, 119, 284, 319, 327], "get_result": [60, 65], "accept": [60, 65, 66, 73, 161, 294, 306, 324], "timeouterror": [60, 62, 65, 67, 68, 69], "respect": [60, 65, 66, 228, 237, 327], "control": [60, 65, 66, 89, 128, 129, 131, 133, 161, 162, 166, 168, 172, 179, 180, 185, 188, 190, 191, 192, 193, 196, 202, 203, 204, 205, 208, 209, 210, 216, 217, 218, 219, 220, 221, 232, 254, 256, 272, 319, 320, 324, 326, 327], "alia": [61, 64, 66], "homemad": 62, "test": [62, 66, 67, 68, 69, 108, 177, 190, 191, 192, 193], "mostli": 62, "written": [62, 66, 79, 232, 320], "curios": 62, "what": [62, 66, 270, 297, 319, 324, 327], "featur": [62, 65, 193, 256, 320, 322, 326, 330], "want": [62, 66, 71, 133, 136, 319, 322, 324, 327, 328, 329], "could": [62, 66, 134, 166, 284, 320, 324, 329], "done": [62, 66, 114, 115, 133, 254, 256, 319, 327, 328, 329], "easili": [62, 228], "without": [62, 63, 65, 66, 67, 71, 72, 220, 232, 319, 320, 327, 329], "import": [62, 66, 320, 324, 326, 327, 329], "Not": [62, 117, 120, 177, 250, 258], "real": [62, 66, 222, 223, 256], "packag": [62, 328], "wasn": 62, "t": [62, 63, 65, 66, 72, 79, 81, 84, 114, 115, 125, 133, 161, 252, 329], "To": [62, 66, 250, 319, 320, 322, 324, 327, 329], "test_": [62, 67, 68, 69], "expect": [62, 65, 67, 68, 73, 79, 81, 84, 133, 161, 164, 166, 168, 171, 174, 177, 179, 210, 218, 220, 221, 223, 319, 320, 327], "gener": [62, 66, 84, 119, 166, 177, 191, 202, 203, 232, 252, 268, 269, 270, 306, 324], "specif": [62, 66, 67, 68, 69, 133, 161, 196, 206, 207, 208, 220, 221, 222, 319, 327, 329], "print": [62, 65, 66, 114, 115, 117, 119, 302], "stdout": 62, "test_prefix": [62, 67, 68, 69], "fail": [62, 66, 67, 68, 69, 319, 324, 327], "fail_fast": [62, 67, 68, 69], "begin": [62, 66, 67, 68, 69, 196, 216, 217, 219, 234, 235], "time_it": [62, 67, 68, 69], "n_loop": [62, 67, 68, 69], "func": [62, 67, 68, 69, 87, 280, 281], "timeout_u": [62, 67, 68, 69], "allow": [62, 66, 67, 68, 69, 202, 204, 208, 209, 210, 216, 218, 220, 221, 256, 319, 320, 324, 326, 327, 328, 329], "durat": [62, 67, 68, 69, 112, 114, 115, 117, 119, 125, 128, 133, 136, 166, 175, 185, 256, 258, 281], "exce": [62, 67, 68, 69, 237], "bar": [62, 67, 68, 69], "format": [62, 66, 67, 68, 69, 79, 81, 84, 123, 125, 228, 232, 247, 250, 319, 320, 324, 327], "progress": [62, 67, 68, 69, 327, 329], "initarg": [63, 71, 72], "custom_loop": [63, 71, 72], "close_method_nam": [63, 72], "closearg": [63, 72], "closekwarg": [63, 72], "with_lock": 63, "initkwarg": [63, 71, 72], "child": [63, 65, 72, 218, 220, 221, 225], "act": [63, 66, 72, 326], "like": [63, 66, 72, 73, 74, 291, 297, 319, 327, 328, 329], "isn": [63, 72, 133], "much": [63, 72, 329], "possibl": [63, 66, 72, 237, 260, 322, 324, 327], "try": [63, 65, 72, 320, 328], "instanc": [63, 66, 72, 73, 196, 201, 210, 225, 300, 319, 327], "behav": [63, 66, 69, 72, 319, 320, 327], "re": [63, 65, 72], "live": [63, 66, 72, 256, 320], "parent": [63, 65, 71, 72, 112, 123, 131, 139, 151, 156, 164, 183], "cours": [63, 72], "have": [63, 66, 72, 125, 202, 210, 216, 217, 219, 223, 234, 235, 250, 319, 320, 324, 327, 328, 329], "spare": [63, 72], "core": [63, 66, 72], "your": [63, 66, 71, 72, 74, 284, 319, 320, 324, 326, 327, 329], "machin": [63, 66, 72, 161, 320, 328], "turn": [63, 72, 139, 141, 144, 146, 254, 256, 319, 324, 327, 329], "cpu": [63, 66, 72], "bound": [63, 72, 161, 164, 166, 168, 171, 174, 177, 179, 203, 319, 327], "which": [63, 66, 73, 79, 81, 84, 161, 164, 166, 168, 171, 174, 177, 179, 196, 204, 207, 209, 216, 217, 218, 219, 220, 221, 225, 228, 236, 243, 256, 304, 305, 319, 320, 324, 325, 327, 329], "parallel": [63, 329], "io": [63, 72], "too": [63, 72, 325], "mental": [63, 72], "overhead": [63, 67, 72, 256], "coder": [63, 72, 320], "our": [63, 65, 66, 71, 117, 119, 247, 250, 252, 319, 320, 326, 327, 328, 329], "automat": [63, 324], "close_method": 63, "custodythread": [64, 67, 68], "simpl": [65, 66, 222, 324], "wish": 65, "had": 65, "chang": [65, 66, 114, 115, 117, 119, 128, 133, 136, 161, 183, 185, 188, 201, 203, 205, 256, 298, 324, 327, 328, 329], "self": [65, 66, 114, 115, 123, 125, 133, 164, 171, 183, 185, 188, 198, 232, 243, 320, 324], "trivial": 65, "u": [65, 66, 320, 329], "line": [65, 66, 73, 112, 114, 115, 117, 119, 256, 288, 302, 320, 324, 327], "code": [65, 66, 79, 81, 84, 117, 120, 190, 198, 247, 249, 250, 252, 302, 319, 322, 324, 326, 327, 328], "def": [65, 324], "doe": [65, 66, 81, 84, 202, 223, 311, 319, 327, 328, 329], "someth": [65, 66, 320, 327], "sum": [65, 66], "ones": 65, "uint8": [65, 66, 71], "problem": [65, 66, 328], "th": [65, 66], "redefin": 65, "solut": 65, "res_th": 65, "assert": 65, "handl": [65, 166, 168, 202, 208, 210, 217, 218, 219, 220, 225, 319, 327], "idea": 65, "attributeerror": [65, 66], "wa": [65, 66, 117, 161, 166, 168, 171, 174, 177, 179, 202, 232, 235, 256, 286], "assertionerror": 65, "dure": [65, 79, 81, 84, 196, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 219, 234, 235, 260], "evalu": [65, 66, 232, 281, 295, 304, 305, 306, 320, 327], "rerais": 65, "traceback": [65, 66], "stderr": 65, "don": [65, 114, 115, 161, 329], "affect": [65, 66, 203], "yet": [65, 222, 319], "note": [65, 66, 327], "modifi": [65, 201, 227, 320, 324, 327], "excepthook": 65, "copi": [65, 66, 227, 327], "past": 65, "definit": [65, 73, 74], "work": [65, 66, 125, 320, 328], "shared_memory_nam": 66, "stride": 66, "numpi": [66, 71, 114, 115, 119, 151, 153, 237, 238, 254, 259, 260, 261, 262, 263, 264, 265, 291], "memori": [66, 71, 72, 256, 320], "objectinsubprocess": [66, 67], "serial": [66, 69, 71, 114, 115, 117, 119, 128, 129, 133, 134, 136, 169, 172, 175, 179, 180, 277], "pretti": 66, "fast": [66, 161], "larg": [66, 320], "regularli": 66, "deal": [66, 250], "sens": 66, "provid": [66, 120, 196, 201, 202, 204, 205, 206, 207, 208, 210, 216, 217, 218, 219, 220, 221, 227, 294, 319, 320, 321, 324, 327, 329], "wai": [66, 256, 297, 319, 320, 327], "via": [66, 100, 125, 134, 190, 264, 319], "avoid": [66, 289, 320, 327], "slow": [66, 71], "mayb": [66, 73, 74], "write": [66, 79, 81, 84, 125, 210, 232, 247, 250, 252, 256, 320], "look": [66, 120, 297, 319, 327, 329], "data_buf": 66, "zero": [66, 164, 171, 270], "400": 66, "display_buf": 66, "preprocessor": 66, "displai": [66, 88, 123, 125, 228, 256, 324], "record": [66, 235], "num_imag": 66, "show": [66, 324, 328, 329], "payoff": 66, "its": [66, 161, 166, 168, 171, 174, 177, 179, 217, 218, 219, 221, 227, 228, 324], "own": [66, 327], "AND": 66, "realli": 66, "memmap": 66, "axi": [66, 161, 164, 166, 168, 171, 174, 177, 179, 183, 185, 188, 212, 297, 306, 319, 327], "keepdim": 66, "refer": [66, 172, 204, 208, 218, 220, 221, 254, 260, 275], "full": [66, 115, 319, 329], "equival": [66, 328, 329], "argmax": 66, "along": [66, 73, 74, 79, 161, 166, 168, 171, 174, 177, 179, 256, 297, 298], "argmin": 66, "detail": [66, 133], "argpartit": 66, "kth": 66, "kind": 66, "introselect": 66, "partit": 66, "version": [66, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 238, 325, 327, 328], "8": [66, 327, 328], "argsort": 66, "sort": [66, 227], "astyp": 66, "k": 66, "cast": 66, "unsaf": 66, "subok": 66, "typecod": 66, "layout": [66, 203], "fortran": 66, "contigu": 66, "close": [66, 79, 81, 84, 112, 114, 115, 117, 119, 125, 128, 133, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 185, 216, 217, 219, 232, 254, 256, 297, 324], "appear": [66, 324, 327], "equiv": 66, "safe": 66, "same_kind": 66, "backward": 66, "compat": [66, 79, 328], "preserv": 66, "within": [66, 74, 161, 164, 166, 168, 171, 174, 177, 179, 225, 228, 237, 306, 324, 327, 328, 329], "float64": 66, "float32": 66, "convers": [66, 114, 115], "sub": [66, 210, 232, 284], "forc": 66, "newli": [66, 256], "alloc": [66, 71], "satisfi": [66, 324], "arr_t": 66, "unless": [66, 320], "other": [66, 71, 125, 148, 209, 238, 319, 320, 324, 329], "condit": 66, "descript": 66, "17": 66, "one": [66, 73, 74, 84, 161, 164, 166, 168, 171, 174, 177, 179, 209, 217, 218, 220, 221, 256, 319, 324, 329], "field": [66, 319, 327], "9": [66, 327, 328], "numer": [66, 268, 269, 270, 326], "mode": [66, 79, 81, 84, 112, 114, 115, 117, 119, 125, 172, 174, 177, 192, 201, 202, 210, 212, 254, 256, 324, 325, 327, 329], "length": [66, 222, 223, 297, 298, 306], "long": 66, "enough": 66, "store": [66, 79, 81, 84, 112, 117, 119, 247, 249, 250, 252, 320], "convert": [66, 112, 114, 117, 119, 171, 174, 228, 229, 247, 249, 250, 252, 289, 300], "complexwarn": 66, "5": [66, 237, 260, 319, 324, 325, 327, 329], "byteswap": 66, "inplac": 66, "swap": 66, "toggl": 66, "low": [66, 297, 325], "endian": 66, "big": [66, 232], "represent": [66, 79, 81, 84, 227, 228, 247, 249, 250, 252, 311, 324], "place": [66, 227, 319, 327], "imaginari": 66, "part": [66, 227, 320], "individu": [66, 207, 326], "view": [66, 71, 76, 190, 191, 192, 193, 247, 252, 256, 320, 326], "256": 66, "8755": 66, "int16": 66, "hex": 66, "0x1": 66, "0x100": 66, "0x2233": 66, "13090": 66, "0x3322": 66, "b": [66, 133, 134], "ceg": 66, "fac": 66, "s3": 66, "newbyteord": 66, "produc": [66, 310], "differ": [66, 183, 185, 188, 196, 201, 216, 218, 220, 221, 227, 234, 319, 321, 324, 326, 327, 328, 329], "3": [66, 247, 252, 265, 268, 269, 284, 304, 305, 306, 324, 327, 328], "choos": [66, 324], "choic": [66, 324], "index": [66, 79, 97, 98, 125, 133, 183, 185, 188, 205, 210, 227, 232, 252, 254, 256, 268, 269, 270, 291, 319, 327], "clip": 66, "One": [66, 84], "compress": [66, 232], "select": [66, 123, 125, 151, 153, 324, 329], "slice": [66, 69, 79, 291, 306], "conj": 66, "conjug": 66, "wise": 66, "match": [66, 230, 270, 306, 319, 329], "veri": 66, "similar": [66, 218, 220, 221, 319, 320, 327], "behavior": [66, 68, 218, 220, 221, 298, 320, 324, 329], "copyto": 66, "prefer": 66, "6": [66, 252, 324, 327], "c_contigu": 66, "cumprod": 66, "cumul": 66, "product": [66, 161, 320, 326, 329], "cumsum": 66, "diagon": 66, "axis1": 66, "axis2": 66, "In": [66, 250, 319, 320, 324, 327, 329], "previou": [66, 119, 205], "restrict": 66, "dump": 66, "pickl": 66, "back": [66, 247, 250, 260, 324, 329], "pathlib": 66, "now": [66, 202, 247, 328], "scalar": 66, "assign": [66, 224], "flatten": [66, 268], "collaps": 66, "major": 66, "style": [66, 329], "column": 66, "ravel": [66, 268], "d": [66, 119, 310, 311], "getfield": 66, "certain": [66, 327], "fit": [66, 198, 199, 268, 269], "complex128": 66, "take": [66, 225, 228, 230, 237, 298], "12": [66, 327], "larger": 66, "itself": [66, 227], "skip": 66, "diag": 66, "j": [66, 148], "item": [66, 227, 317, 319, 327], "variabl": [66, 148, 209, 222, 223, 225, 234, 235, 237, 320, 328], "case": [66, 320], "int_typ": 66, "interpret": 66, "singl": [66, 79, 148, 161, 166, 168, 171, 174, 177, 179, 263, 291, 297], "nd": 66, "suitabl": 66, "longdoubl": 66, "clongdoubl": 66, "becaus": [66, 319], "lose": 66, "inform": [66, 114, 115, 117, 128, 133, 168, 169, 205, 207, 256, 283, 286, 297, 319, 320, 327, 328], "void": 66, "buffer": [66, 114, 115, 117, 119, 232, 254, 256], "defin": [66, 87, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 217, 219, 221, 224, 250, 306, 319, 324, 327], "speed": [66, 133, 161, 174, 177, 185, 320, 325], "up": [66, 79, 81, 84, 117, 120, 125, 166, 191, 192, 196, 210, 212, 288, 324, 327, 329], "arithmet": 66, "optim": [66, 196, 329], "math": 66, "random": [66, 69, 119], "seed": 66, "123": 66, "randint": 66, "7": [66, 260, 324, 325, 327, 328], "itemset": 66, "There": [66, 250, 329], "least": 66, "last": [66, 227, 297, 328], "Then": [66, 324], "faster": [66, 209], "two": [66, 227, 256, 319, 327], "first": [66, 71, 183, 185, 188, 190, 209, 227, 250, 297, 319, 324, 327, 328, 329], "compar": [66, 198], "syntax": 66, "some": [66, 71, 79, 81, 84, 247, 249, 250, 252, 320, 324, 328, 329], "increas": [66, 320], "particular": [66, 329], "howev": [66, 320, 329], "discourag": 66, "among": 66, "complic": 66, "loop": [66, 204, 324], "amax": 66, "amin": 66, "new_ord": 66, "arr": 66, "newbytord": 66, "below": [66, 319, 320, 324, 325, 327, 328], "opposit": 66, "littl": 66, "byteord": 66, "ignor": [66, 247, 320], "new_arr": 66, "reflect": [66, 327], "rearrang": 66, "equal": [66, 227, 237], "greater": [66, 237], "behind": 66, "undefin": 66, "sequenc": [66, 216, 217, 218, 219, 220, 221, 291, 324], "final": [66, 196, 216, 217, 219, 319, 327], "them": [66, 217, 219, 224, 225, 227, 320, 328], "sinc": [66, 298, 329], "22": [66, 212], "algorithm": 66, "etc": [66, 79, 81, 84, 117, 161, 164, 166, 168, 171, 174, 177, 179, 247, 249, 250, 252, 294, 297, 326], "unspecifi": 66, "come": [66, 119], "break": [66, 320], "ti": 66, "paritit": 66, "indirect": 66, "prod": 66, "ptp": 66, "peak": [66, 260, 268, 269, 270], "put": [66, 67, 236, 327], "repeat": [66, 123, 125, 308, 325, 327], "reshap": 66, "unlik": [66, 238], "free": [66, 329], "For": [66, 125, 161, 166, 168, 171, 174, 177, 179, 238, 284, 319, 320, 324, 327, 329], "11": [66, 172, 327, 328], "resiz": 66, "new_shap": 66, "refcheck": 66, "count": [66, 161, 204, 205, 208, 210, 212, 227, 237, 302, 319, 327], "valueerror": [66, 128, 131, 133, 136, 185, 227], "exist": [66, 128, 131, 133, 136, 183, 188, 218, 220, 221, 256, 285, 288, 320, 324], "pypi": 66, "reliabl": 66, "systemerror": 66, "behaviour": 66, "bug": [66, 320], "realloc": 66, "area": [66, 237], "necessari": [66, 123, 125, 128, 133, 136, 205, 217, 219, 234, 235, 281, 283, 319, 320, 321, 324, 327, 329], "consecut": 66, "shrink": 66, "enlarg": 66, "abov": [66, 327], "miss": [66, 224], "entri": [66, 216, 272, 319, 324, 327], "doesn": 66, "referenc": 66, "prevent": 66, "recent": 66, "cannot": 66, "round": 66, "around": [66, 73, 74, 324], "searchsort": 66, "v": [66, 148], "side": [66, 223, 297], "sorter": 66, "maintain": [66, 209, 216, 227], "setfield": 66, "val": [66, 87], "ey": 66, "int32": 66, "0e": 66, "000": 66, "5e": 66, "323": 66, "setflag": 66, "uic": 66, "writeabl": 66, "writebackifcopi": 66, "updateifcopi": 66, "These": [66, 201, 216, 217, 219, 230, 319, 328, 329], "how": [66, 69, 198, 219, 319, 320, 324, 327, 328], "actual": [66, 79, 81, 84, 114, 115, 223, 238, 258, 297, 320], "never": 66, "ultim": [66, 320], "owner": 66, "expos": 66, "interfac": [66, 117], "unpickl": 66, "describ": [66, 324], "properli": [66, 319, 329], "about": [66, 207, 286, 297, 320], "four": [66, 329], "w": [66, 79, 81, 84, 304], "appropri": [66, 320, 328], "compil": 66, "pyarray_resolvewritebackifcopi": 66, "upper": [66, 289], "letter": 66, "well": [66, 326], "f_contigu": 66, "owndata": 66, "stdin": 66, "quicksort": 66, "mergesort": 66, "heapsort": 66, "stabl": [66, 227], "both": [66, 79, 100, 161, 206, 250, 324, 328], "timsort": 66, "under": [66, 319, 324, 326, 327, 329], "cover": [66, 297, 329], "vari": 66, "datatyp": 66, "retain": 66, "15": [66, 270, 306, 328], "lexsort": 66, "kei": [66, 139, 141, 151, 153, 183, 185, 188, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 220, 221, 227, 228, 230, 310, 320, 326], "partial": 66, "s1": 66, "i8": 66, "squeez": 66, "ax": [66, 161, 164, 166, 168, 171, 174, 177, 179, 319], "std": 66, "ddof": 66, "swapax": 66, "interchang": 66, "tobyt": 66, "raw": 66, "short": 66, "exhibit": 66, "u2": 66, "x00": 66, "x01": 66, "x02": 66, "x03": 66, "tofil": 66, "fid": 66, "sep": 66, "text": [66, 289, 324, 328], "independ": [66, 329], "recov": 66, "fromfil": 66, "open": [66, 79, 81, 84, 156, 158, 185, 256, 320, 324, 328, 329], "filenam": [66, 84, 119, 232, 256, 286], "closest": 66, "conveni": 66, "quick": [66, 161], "storag": 66, "precis": [66, 329], "lost": 66, "good": [66, 320], "intend": [66, 228], "archiv": 66, "transport": 66, "overcom": 66, "expens": 66, "directli": [66, 73, 74, 114, 115, 204, 324], "bypass": 66, "gzipfil": 66, "fileno": 66, "bytesio": 66, "tolist": 66, "ndim": 66, "level": [66, 79, 203, 310], "deep": 66, "nearest": 66, "builtin": 66, "depth": 66, "possibli": [66, 196], "recreat": 66, "although": 66, "sometim": 66, "1d": 66, "almost": [66, 73], "uint32": 66, "a_list": 66, "a_tolist": 66, "addition": 66, "appli": [66, 161, 203, 225, 227, 237], "0d": 66, "typeerror": 66, "tostr": 66, "exactli": 66, "despit": 66, "19": 66, "transpos": 66, "effect": [66, 223, 268, 269, 270], "vector": 66, "simpli": [66, 223, 320], "addit": [66, 81, 128, 133, 161, 196, 202, 218, 220, 227, 256], "atleast2d": 66, "achiev": 66, "newaxi": 66, "matrix": [66, 133, 247], "permut": 66, "revers": [66, 227], "becom": 66, "altern": [66, 117, 247, 249, 250, 252, 320], "give": [66, 227, 319], "var": 66, "omit": 66, "former": [66, 254], "float_": 66, "descriptor": 66, "again": 66, "omiss": 66, "some_dtyp": 66, "reinterpret": 66, "ndarray_subclass": 66, "regular": [66, 320], "predict": 66, "superfici": 66, "shown": [66, 324, 328], "versu": 66, "int8": 66, "513": 66, "xv": 66, "underli": 66, "i1": 66, "recarrai": 66, "i2": 66, "ctype": 66, "simplifi": 66, "interact": [66, 327], "easier": [66, 227], "librari": [66, 284, 320, 326], "themselv": [66, 324], "possess": 66, "ctypeslib": 66, "public": 66, "guid": [66, 161, 320], "undocu": 66, "privat": 66, "_ctype": 66, "pointer": [66, 79, 81, 84, 324], "arbitrari": [66, 79, 81, 84, 324], "troubl": 66, "includ": [66, 139, 141, 161, 164, 166, 168, 171, 174, 177, 179, 196, 201, 202, 203, 205, 206, 209, 210, 216, 217, 218, 219, 220, 221, 224, 227, 247, 250, 252, 319, 324, 326, 327, 328, 329], "crash": [66, 320], "bewar": 66, "_array_interface_": 66, "data_a": 66, "kept": 66, "c_void_p": 66, "dealloc": 66, "spelt": 66, "basetyp": 66, "correspond": [66, 161, 166, 168, 174, 203, 218, 220, 221, 228, 230, 319, 327, 329], "p": [66, 79, 185, 304, 305, 306], "platform": 66, "c_intp": 66, "c_int": 66, "c_long": 66, "c_longlong": 66, "jump": 66, "next": [66, 190, 198, 205, 206, 254, 324, 329], "obj": [66, 128, 133, 185], "_as_parameter_": 66, "perhap": 66, "c_doubl": 66, "keep": [66, 219, 320], "shape_a": 66, "c_short": 66, "strides_a": 66, "as_paramet": 66, "31962608": 66, "c_uint32": 66, "__main__": 66, "lp_c_uint": 66, "0x7ff2fc1fc200": 66, "c_uint": 66, "c_uint64": 66, "c_ulong": 66, "4294967296": 66, "_intern": 66, "c_long_array_2": 66, "0x7ff2fc1fce60": 66, "0x7ff2fc1ff320": 66, "segment": [66, 256], "o": [66, 278, 284, 285, 289, 328], "borrow": [66, 79, 81, 84, 247, 249, 250, 252], "creation": 66, "subsequ": [66, 327], "while": [66, 67, 174, 319], "remain": [66, 161, 204, 208, 209, 219], "alreadi": [66, 218, 320, 328], "circumst": 66, "alter": [66, 161], "previous": 66, "onto": [66, 329], "fnc": 66, "carrai": 66, "ca": 66, "farrai": 66, "fa": 66, "lowercas": 66, "arbitrarili": 66, "truli": [66, 329], "simultan": [66, 84, 161, 320, 329], "dimension": 66, "higher": [66, 198], "dim": [66, 291], "hold": [66, 286], "items": 66, "flatit": 66, "similarli": [66, 250], "built": [66, 227, 321], "arang": 66, "sqrt": 66, "0j": 66, "1j": 66, "70710678": 66, "nbyte": [66, 79, 81, 84], "total": [66, 166, 198, 204, 210, 219, 237, 297, 319], "consum": 66, "480": 66, "usual": 66, "infer": 66, "unchang": 66, "incompat": 66, "modif": [66, 320], "desir": [66, 114, 115, 117, 119, 183, 185, 188, 201, 203, 256, 294], "obtain": 66, "suggest": 66, "int_": 66, "relev": [66, 207, 222], "further": 66, "overflow": 66, "fix": [66, 204, 320], "travers": 66, "explan": 66, "found": [66, 88, 112, 114, 115, 117, 119, 128, 133, 319, 320, 327, 328], "rst": 66, "imagin": 66, "40": 66, "known": [66, 329], "tell": [66, 319, 320], "lib": 66, "stride_trick": 66, "as_strid": 66, "13": 66, "14": [66, 306, 327], "18": 66, "21": 66, "23": 66, "48": 66, "224": 66, "1344": 66, "813": 66, "mytestclass": [67, 68, 69], "testclass": 67, "toi": 67, "subprocess": 67, "test_incorrect_thread_manag": 67, "custodi": [67, 73, 74], "test_lock_with_waitlist": 67, "stai": [67, 260], "objectsinsubprocess": 67, "mock": [67, 108], "_waitinglist": [67, 73], "test_object_in_subprocess_overhead": 67, "test_sending_shared_arrai": 67, "send": [67, 166, 191, 192, 193], "sharedndarrai": [67, 69, 232, 256, 320], "test_ndarraylike_behavior": 69, "broke": 69, "suppos": 69, "test_seri": 69, "deseri": 69, "test_serializing_and_deseri": 69, "shared_memory_s": 71, "spawn": 71, "proxi": [71, 72, 277, 328], "proxyobject": [71, 73, 74], "shared_numpy_arrai": 71, "which_mp_arrai": 71, "shared_mp_arrai": 72, "proxymanag": [72, 73, 74], "thin": [73, 74], "wrapper": [73, 74], "few": [73, 74, 324], "usag": [73, 74], "_custodi": 73, "switch_from": 73, "_wait_in_lin": 73, "immedi": 73, "acquir": [74, 112, 114, 115, 117, 119, 202, 203, 210, 212, 232, 254, 256, 319, 324, 329], "releas": [74, 209], "launch_custody_thread": 74, "feel": 74, "detect": [74, 203, 234, 235, 237, 238], "occour": 74, "file_nam": [79, 81, 84, 247, 250, 252], "datasourc": [79, 82, 84, 232], "bigdataview": [79, 247, 250], "sourc": [79, 81, 82, 84, 166, 212, 232, 325, 329], "hdf5": 79, "n5": 79, "multi": [79, 202, 205, 210, 218, 220, 221, 324, 329], "pyramid": [79, 81, 84], "subdivid": 79, "32x32x1": 79, "h5py": 79, "zarr": 79, "n5store": 79, "ds_name": 79, "dataset": 79, "metadata": [79, 81, 84, 202, 247, 252], "bigdataviewermetadata": 79, "set_metadata_from_configuration_experi": [79, 81, 84], "kw": [79, 81, 84, 247, 250, 252], "metdata": [79, 81, 84], "concept": [79, 81, 84, 247, 249, 250, 252], "microscopi": [79, 81, 84, 148, 196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 247, 249, 250, 252], "logger": [79, 81, 84], "log": [79, 81, 84, 114, 115, 207, 294], "dx": [79, 81, 84], "micron": [79, 81, 84, 161, 164, 166, 171, 174, 325], "dy": [79, 81, 84], "dz": [79, 81, 84], "dt": [79, 81, 84], "displac": [79, 81, 84], "dc": [79, 81, 84, 259], "shape_x": [79, 81, 84], "shape_i": [79, 81, 84], "shape_z": [79, 81, 84], "shape_t": [79, 81, 84], "shape_c": [79, 81, 84], "voxel_s": [79, 81, 84, 247, 249, 250, 252], "voxel": [79, 81, 84, 247, 249, 250, 252], "xyczt": [79, 81, 84, 247, 249, 250, 252], "clean": [79, 81, 84, 210, 212, 326], "leftov": [79, 81, 84], "get_slic": 79, "subdiv": 79, "grab": [79, 190], "timepoint": [79, 84, 202, 208, 327], "subdivis": 79, "dictproxi": [79, 81, 84, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 156, 158, 161, 164, 166, 171, 183, 188], "notimplementederror": [79, 81, 84], "deriv": [79, 81, 84], "getter": [79, 81, 84], "account": [79, 81, 84, 139, 141, 311], "xyz": [79, 161], "bdv": 79, "spec": [79, 247, 252], "rather": [79, 329], "file_typ": [82, 232, 247, 250, 252], "tif": [82, 84, 232, 291], "tifdatasourc": 82, "is_bigtiff": 84, "bigtiff": 84, "tifffil": 84, "save_directori": [84, 232, 283], "generate_image_nam": [84, 232], "current_channel": [84, 232], "current_time_point": [84, 232], "intern": [84, 212, 247, 249, 250, 252], "ch00_000000": [84, 232], "stack": [84, 117, 119, 198, 208, 210, 212, 234, 235, 324, 329], "At": 84, "imsav": 84, "dummi": [86, 222, 223, 224], "devic": [86, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 191, 192, 196, 198, 201, 205, 212, 218, 219, 220, 221, 254, 256, 319, 325, 327, 328, 329], "n_tri": 87, "retri": 87, "connect": [87, 94, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 125, 128, 129, 131, 133, 134, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 162, 164, 166, 168, 169, 171, 172, 174, 175, 177, 179, 180, 183, 185, 186, 188, 254, 256, 319, 327, 329], "startup": [87, 319, 327], "redial": 87, "baseexcept": 87, "dcam": [87, 329], "messag": [88, 191], "incorrect": 88, "device_typ": 88, "camera_id": 89, "is_synthet": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 192, 254, 320], "synthet": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 119, 120, 125, 158, 177, 256, 319, 321, 327], "dedic": [91, 92, 93, 95, 96, 100, 102], "multiproces": [91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 156, 183], "zoom": [93, 102, 201, 203, 243, 319, 326], "device_connect": [94, 96, 97, 98, 99, 100, 101, 102, 112, 114, 115, 117, 119, 128, 131, 133, 136, 139, 141, 144, 146, 151, 153, 156, 158, 161, 164, 166, 168, 171, 174, 177, 179, 185, 188, 254, 320], "acquisit": [95, 112, 114, 115, 117, 119, 123, 125, 139, 141, 166, 196, 201, 202, 204, 205, 206, 208, 209, 210, 212, 232, 254, 256, 324, 325, 326], "filterwheel": 96, "scan": [97, 117, 161, 177, 202, 212, 234, 235, 325, 329], "switch": [98, 133, 256, 260, 319, 327, 329], "analog": [98, 125, 166, 262, 263, 265, 325], "digit": [98, 100, 329], "trigger": [98, 100, 125, 158, 166, 175, 212, 236, 258, 329], "focus": [99, 151, 260, 294, 325, 329], "shutter": [100, 112, 114, 115, 119, 256, 326], "thorlabsshutt": 100, "syntheticshutt": 100, "ni": [100, 319, 327], "card": [100, 166, 256, 326], "thu": [100, 327, 329], "enabl": [100, 123, 125, 136, 161, 164, 166, 168, 171, 174, 177, 179, 185, 210, 320, 321, 325, 329], "dxl_lib": 108, "magicmock": 108, "nameerror": 112, "calculate_light_sheet_exposure_tim": [112, 114, 115, 117, 119], "full_chip_exposure_tim": [112, 114, 115, 117, 119], "shutter_width": [112, 114, 115, 117, 119], "exposur": [112, 114, 115, 117, 119, 123, 125, 139, 141, 151, 153, 166, 192, 212, 254, 256, 258, 319], "light": [112, 114, 115, 117, 119, 256, 327, 329], "sheet": [112, 114, 115, 117, 119, 256, 327, 329], "roll": [112, 114, 119], "exposure_tim": [112, 114, 115, 117, 119, 123, 125, 139, 141, 151, 153, 166, 256, 260, 319, 327], "camera_line_interv": [112, 114, 115, 117, 119, 256], "hamamatsuorca": [112, 115, 117, 119, 319, 327], "interv": [112, 114, 115, 117, 119, 256, 319, 329], "close_camera": [112, 114, 115, 117, 119], "get_line_interv": [112, 114, 115, 117, 119], "line_interv": [112, 117, 119, 327], "get_offset_variance_map": [112, 114, 115, 117, 119, 256], "filenotfounderror": [112, 114, 115, 117, 119, 291], "set_readout_direct": [112, 114, 115, 117, 119], "bottom": [112, 114, 115, 117, 119, 324, 327], "bytrigg": [112, 114, 115, 119], "diverg": [112, 114, 115, 119], "camera_control": [112, 114, 115, 117, 119], "camera_paramet": [112, 114, 115, 117, 119], "is_acquir": [112, 114, 115, 117, 119], "max_image_height": [112, 114, 115, 117, 119], "height": [112, 114, 115, 117, 119, 254, 288], "max_image_width": [112, 114, 115, 117, 119], "min_image_height": [112, 114, 115, 117, 119], "min_image_width": [112, 114, 115, 117, 119], "step_image_height": [112, 114, 115, 117, 119], "step_image_width": [112, 114, 115, 117, 119], "camerabas": [114, 117, 119], "orca": [114, 117], "flash": [114, 117, 325], "fusion": 114, "lightn": 114, "calculate_readout_tim": [114, 115, 117, 119], "assum": [114, 115, 128, 183, 185, 188, 212, 232, 243, 247, 250, 252, 284, 291, 319, 328], "c13440": [114, 115], "link": [114, 115, 284], "commun": [114, 115, 129, 134, 136, 162, 319, 327], "pull": [114, 115, 320, 327], "readout_tim": [114, 115, 117, 119, 153, 192, 254], "max_frame_r": [114, 115, 117, 119], "framer": [114, 115, 117, 119], "todo": [114, 115, 198, 232, 250, 256, 298, 311, 323], "think": [114, 115], "get_property_valu": [114, 115, 120], "close_image_seri": [114, 115, 117, 119], "seri": [114, 115, 117, 119], "stop": [114, 115, 117, 119, 125, 139, 141, 151, 153, 161, 164, 166, 168, 171, 174, 177, 179, 193, 216, 219, 227, 254, 256], "line_interval_tim": [114, 115, 117, 119], "get_minimum_waiting_tim": [114, 115, 117, 119], "cyclic_trigger_period": [114, 115, 117], "minimum_trigger_blank": [114, 115, 117], "minimum_trigger_interv": [114, 115, 117], "trigger_blank": [114, 115, 117], "bigger": [114, 115, 117], "trigger_interv": [114, 115, 117], "get_new_fram": [114, 115, 117, 119], "initialize_image_seri": [114, 115, 117, 119], "data_buff": [114, 115, 117, 119, 232, 254, 256], "number_of_fram": [114, 115, 117, 119, 254], "100": [114, 115, 117, 119, 191, 319, 325, 327], "report_set": [114, 115, 117, 119], "consol": [114, 115], "set_roi": [114, 115, 117, 119], "roi_height": [114, 115, 117, 119], "2048": [114, 115, 119, 327], "roi_width": [114, 115, 117, 119], "region": [114, 115, 117, 119, 203, 297], "success": [114, 115, 161, 166, 168, 171, 174, 177, 179, 201, 202, 206, 207, 209, 236, 256], "set_bin": [114, 115, 117, 119], "binning_str": [114, 115, 117, 119], "bin": [114, 115, 117, 119, 327], "1x1": [114, 115, 117, 327], "2x2": [114, 115, 117, 119], "4x4": [114, 115, 117, 119], "8x8": [114, 115, 117, 119], "16x16": [114, 115, 117], "1x2": [114, 115, 117], "2x4": [114, 115, 117], "set_exposure_tim": [114, 115, 117, 119], "unit": [114, 115, 117, 119, 161, 164, 171, 258, 259, 260, 261, 262, 263, 265, 325, 329], "millisecond": [114, 115, 117, 119, 319, 321, 327], "set_line_interv": [114, 115, 117, 119], "set_sensor_mod": [114, 115, 117, 119], "sensor": [114, 115, 117, 119, 219, 256], "serial_numb": [114, 115, 117, 119, 172, 179, 319, 327], "chip": 115, "photometr": 117, "kinetix": 117, "warn": [117, 133], "hard": [117, 120, 198], "3200": 117, "successfulli": [117, 162, 286, 329], "down": [117, 260, 288, 324], "programm": 117, "static": [117, 198], "generate_new_fram": 119, "load_imag": [119, 256], "pre": [119, 123, 125, 224, 320, 324], "camera_exposure_tim": 119, "current_frame_idx": 119, "num_of_fram": [119, 256], "pre_frame_idx": 119, "random_imag": 119, "idprop": 120, "property_dict": 120, "property_valu": 120, "set_property_valu": 120, "calculate_all_waveform": [123, 125, 254], "sweep_tim": [123, 125, 139, 141, 151, 153, 166, 258, 259, 260, 261, 262, 263, 265, 327], "sweep": [123, 125, 139, 141, 151, 153, 166, 192, 254], "waveform_dict": [123, 125, 139, 141, 151, 153, 166], "etl": [123, 125, 294], "plu": [123, 125], "enable_microscop": [123, 125], "camera_delai": [123, 125, 258, 260], "camera_delay_perc": [123, 125, 139, 141, 151, 153, 166], "percentag": [123, 125, 203, 234, 235, 237, 238, 264], "camera_high_tim": [123, 125], "camera_pulse_perc": [123, 125], "daq_paramet": [123, 125], "remote_focus_ramp_fal": [123, 125, 139, 141, 151, 153, 166], "ramp": [123, 125, 139, 141, 151, 153, 260], "fall": [123, 125, 151, 153, 260], "sample_r": [123, 125, 139, 141, 151, 153, 166, 258, 259, 260, 261, 262, 263, 265, 327], "constant": [123, 125, 177, 212, 294, 326, 329], "waveform_expand_num": [123, 125], "expand": [123, 125, 308, 327], "waveform_repeat_num": [123, 125], "daqbas": 125, "add_camera": 125, "close_task": [125, 139, 141, 151, 153], "task": [125, 139, 141, 151, 153, 212, 225, 329], "counter": [125, 329], "create_camera_task": 125, "create_galvo_remote_focus_task": 125, "create_master_trigger_task": 125, "prepare_acquisit": [125, 254, 256], "channel_kei": [125, 139, 141, 151, 153], "prepar": [125, 139, 141, 151, 153, 196, 198, 206, 209, 212, 216, 217, 219, 254, 256], "run_acquisit": [125, 256], "set_external_trigg": 125, "external_trigg": 125, "extern": [125, 230, 327, 329], "start_task": [125, 139, 141, 151, 153], "won": 125, "run_task": 125, "stop_acquisit": 125, "stop_task": [125, 139, 141, 151, 153], "update_analog_task": 125, "board_nam": 125, "board": [125, 329], "write_waveforms_to_task": 125, "analog_output": 125, "is_updating_analog_task": 125, "trigger_mod": [125, 327], "wait_to_run_lock": 125, "filterwheelbas": [128, 133, 136], "asi": [128, 129, 161, 162, 212, 319, 327], "asiimag": [128, 161], "doc": [128, 161, 252, 284], "fw_1000": 128, "fw": 128, "1000_ascii_command_set": 128, "check_if_filter_in_filter_dictionari": [128, 131, 133, 136], "filter_nam": [128, 131, 133, 136], "filter_exist": [128, 131, 133, 136], "port": [128, 129, 133, 134, 136, 146, 162, 175, 185, 186, 319, 327, 329], "filter_change_delai": [128, 133, 136], "40m": 128, "adjac": 128, "set_filt": [128, 133, 136], "wait_until_don": [128, 133, 136, 161, 166, 168, 171, 174, 177, 179, 183, 185, 188, 254, 256], "active_filter_wheel": 128, "filter_dictionari": [128, 131, 133, 136], "tiger": [128, 129, 161, 162], "filter_wheel_posit": 128, "number_of_filter_wheel": [128, 133, 136], "wait_until_done_delai": [128, 133, 136], "wheel_posit": [128, 131, 133, 136], "comport": [129, 134, 136], "baudrat": [129, 134, 136, 319, 327], "115200": [129, 162, 319, 327], "25": [129, 134, 175], "build": [129, 134, 169, 175, 275, 283, 324], "asifilterwheel": 129, "com1": [129, 134, 136, 162], "baud": [129, 134, 136, 162, 175], "tiger_control": [129, 161], "tigercontrol": 129, "sutter": [133, 134, 175, 321], "lambda": [133, 134, 306], "manual": 133, "lb10": 133, "3_opman": 133, "retriev": [133, 166, 224, 283, 294, 320], "delay_matrix": 133, "page": [133, 148], "38": [133, 327], "num_byt": [133, 136], "userwarn": [133, 134, 174], "respond": 133, "init_finish": 133, "softwar": [133, 166, 168, 177, 179, 256, 319, 320, 322, 324, 325, 329, 330], "complet": [133, 209, 218, 220, 224, 324], "read_on_init": 133, "movement": [133, 161, 164, 166, 168, 171, 174, 177, 179, 205, 210, 319, 327], "sutterfilterwheel": [134, 319, 327], "9600": [134, 136, 162, 319, 327], "instal": [136, 256, 320, 326, 329, 330], "period": [136, 260], "galvo_id": [139, 141], "galvanomet": [139, 326], "adjust": [139, 141, 151, 153, 201, 202, 210, 256, 319, 329], "basi": [139, 141, 329], "channel_1": [139, 141], "channel_2": [139, 141], "prepare_task": [139, 141, 151, 153], "turn_off": [139, 141, 144, 146], "device_config": [139, 141, 144, 146, 151, 153, 320], "galvo_max_voltag": [139, 141, 166], "voltag": [139, 141, 151, 153, 166, 259, 260, 262, 265], "galvo_min_voltag": [139, 141, 166], "galvo_nam": [139, 141], "galvo_waveform": [139, 141, 320], "sawtooth": [139, 141, 260, 320], "rise": [139, 141, 260], "galvobas": 141, "laser_id": [144, 146], "initialize_las": [144, 146], "set_pow": [144, 146], "laser_intens": [144, 146], "power": [144, 146, 199, 319, 322, 324, 327], "intens": [144, 146, 232, 263, 268, 269, 270], "turn_on": [144, 146], "laserbas": 146, "calculate_entrance_pupil": 148, "entranc": 148, "pupil": 148, "incid": 148, "angl": 148, "fluoresc": 148, "interfer": 148, "contrast": 148, "carolin": 148, "ajo": 148, "franklin": 148, "prasad": 148, "ganesan": 148, "steven": 148, "boxer": 148, "biophi": 148, "volum": [148, 306], "89": 148, "issu": [148, 320, 328], "octob": 148, "2005": 148, "2759": 148, "2769": 148, "entrance_pupil_diamet": 148, "diamet": 148, "millimet": [148, 171], "nidaqmx": 151, "percent_smooth": [151, 153, 264, 327], "smooth": [151, 153, 264, 327], "remote_focus_delai": [151, 153, 166, 260], "remote_focus_max_voltag": [151, 153], "remote_focus_min_voltag": [151, 153], "remotefocusbas": 153, "volt": [153, 166, 259, 260, 261, 262, 263, 265, 329], "close_shutt": [156, 158], "open_shutt": [156, 158], "shutter_st": [156, 158], "state": [156, 158, 161, 216, 217, 219, 256, 308, 319, 324, 327], "shutterbas": 158, "deliv": [158, 329], "device_id": [161, 164, 166, 168, 171, 174, 177, 179], "stagebas": [161, 166, 168, 171, 174, 177, 179], "scientif": 161, "instrument": [161, 166, 171, 172, 319, 325], "serial_command": 161, "command_quick_start": 161, "firmwar": 161, "distanc": [161, 198, 205, 297, 304, 305, 306, 321], "10th": 161, "ever": 161, "rel": [161, 212, 302, 329], "ftp": [161, 329], "stilt": 161, "strain": 161, "system": [161, 225, 232, 256, 268, 269, 270, 319, 320, 325, 327, 328, 329], "get_abs_posit": [161, 164, 166, 168, 171, 174, 177, 179], "axis_ab": [161, 164, 166, 168, 171, 174, 177, 179], "ensur": [161, 164, 166, 168, 171, 174, 177, 179, 205, 206, 208, 209, 224, 320], "request": [161, 164, 166, 168, 171, 174, 177, 179, 295, 320], "absolut": [161, 164, 166, 168, 171, 174, 177, 179, 320], "get_axis_posit": [161, 177], "get_position_dict": [161, 164, 166, 168, 171, 174, 177, 179], "get_spe": [161, 177], "veloc": [161, 174, 177, 212, 319, 327, 329], "move_absolut": [161, 166, 168, 171, 174, 177, 179], "move_dictionari": [161, 164, 166, 168, 171, 174, 177, 179], "x_ab": [161, 164, 166, 168, 171, 174, 177, 179], "micromet": [161, 164, 166, 168, 171, 174, 177, 179, 321], "degre": [161, 164, 166, 168, 171, 174, 177, 179, 212], "spot": [161, 166, 168, 171, 174, 177, 179], "move_axis_absolut": [161, 166, 168, 171, 174, 177, 179], "abs_po": [161, 166, 168, 171, 174, 177, 179], "command": [161, 183, 188, 190, 256, 320, 328], "prefix": [161, 166], "x_min": [161, 166, 174, 319, 327], "report_posit": [161, 166, 168, 171, 174, 177, 179], "scanr": [161, 177], "start_position_mm": [161, 177], "end_position_mm": [161, 177], "enc_divid": [161, 177], "end": [161, 177, 198, 202, 209, 210, 216, 217, 219, 224, 227, 234, 235, 254, 256, 319, 320, 324], "everi": [161, 306, 319, 327, 329], "encod": [161, 177, 212, 329], "set_spe": [161, 177], "velocity_dict": [161, 177], "start_scan": [161, 177], "abruptli": [161, 164, 166, 168, 171, 174, 177], "stop_scan": [161, 177], "verify_abs_posit": [161, 164, 166, 168, 171, 174, 177, 179], "is_strict": [161, 164, 166, 168, 171, 174, 177, 179], "y_ab": [161, 164, 166, 168, 171, 174, 177, 179], "abs_posit": [161, 164, 166, 168, 171, 174, 177, 179], "verify_mov": 161, "submit": 161, "aren": 161, "res_dict": 161, "axes_map": [161, 164, 166, 168, 171, 174, 177, 179, 319, 327], "stage_feedback": [161, 164, 166, 168, 171, 174, 177, 179], "feedback": [161, 164, 166, 168, 171, 174, 177, 179, 328], "stage_limit": [161, 164, 166, 168, 171, 174, 177, 179], "com_port": [162, 175], "baud_rat": [162, 175], "asi_stag": 162, "x_po": [164, 171, 319], "y_po": [164, 171, 319], "matter": [164, 171], "piezo": 166, "nation": [166, 325], "calculate_waveform": 166, "logic": [166, 168, 174, 177, 179, 219, 220], "axes_channel": [166, 327], "trigger_sourc": [166, 327, 329], "volts_per_micron": [166, 327], "mad": [168, 169, 325], "citi": [168, 169, 325], "lab": [168, 169, 320, 325, 328], "mcl": 168, "mcl_control": 168, "serialnum": [169, 180], "stage_connect": [169, 172], "physik": [171, 172], "pi": [171, 172, 261, 265, 319, 327], "xyzf": 171, "position_dict": [171, 177, 179], "wait_on_target": 171, "pi_ax": 171, "pi_devic": [171, 172], "pi_tool": [171, 172], "controller_nam": 172, "reference_mod": 172, "863": 172, "0112345678": 172, "111": 172, "1dg": 172, "frf": [172, 319, 327], "mp": [174, 321], "285": [174, 321], "mp285": [174, 175], "device_ax": 174, "stage_x_po": 174, "stage_y_po": 174, "stage_z_po": 174, "sutterstag": 175, "load_sampl": 177, "mm": [177, 212], "divid": [177, 212, 237, 297], "unload_sampl": 177, "unload": [177, 256], "default_spe": 177, "thorlab": [179, 180, 319, 325, 327], "kim": [179, 180], "kim_ax": 179, "kim_control": [179, 180], "device_control": 183, "build_stage_dict": [183, 185, 188], "stage_posit": [183, 185, 188, 254, 327], "ideal": [183, 185, 188, 320, 324], "solvent": [183, 185, 188], "babb": [183, 185, 188, 327], "63x": [183, 185, 188, 327], "1x": [183, 185, 188, 327], "70775": [183, 185, 188], "2x": [183, 185, 188, 260, 325, 327], "72455": [183, 185, 188], "3x": [183, 185, 188, 327], "72710": [183, 185, 188], "4x": [183, 185, 188, 327], "72795": [183, 185, 188], "5x": [183, 185, 188, 327], "72850": [183, 185, 188], "6x": [183, 185, 188, 327], "72880": [183, 185, 188], "refract": [183, 185, 188, 268, 269, 270], "servo": [183, 185, 186, 188, 329], "read_posit": [183, 185, 188], "cur_posit": [183, 185, 188], "set_zoom": [183, 185, 188], "confirm": [183, 185, 188, 232, 324, 329], "tha": [183, 188], "zoomdict": [183, 185, 188], "zoomvalu": [183, 185, 188], "zoombas": [185, 188], "dynamixel": 185, "4096": 185, "addr_mx_goal_posit": 185, "goal": 185, "addr_mx_moving_spe": 185, "addr_mx_p_gain": 185, "addr_mx_present_posit": 185, "addr_mx_torque_en": 185, "torqu": 185, "addr_mx_torque_limit": 185, "goal_position_offset": 185, "port_num": [185, 186], "sleeptim": 185, "sleep": 185, "torque_dis": 185, "disabl": [185, 327], "torque_en": 185, "dynamixelzoom": [186, 319, 327], "dummyview": 190, "execut": [190, 196, 202, 204, 205, 209, 210, 216, 217, 218, 219, 220, 221, 236, 281, 324], "sec": 190, "append": [190, 227, 256, 300], "sent": 190, "oldest": 190, "pop": [190, 227], "move_stag": [190, 254, 256], "timecost": 191, "signal_pip": [191, 192, 193], "pipe": [191, 192, 193, 256], "data_pip": [191, 192, 193], "shutdown": [191, 192, 329], "generate_messag": 191, "listen": 191, "sendout": 191, "devices_dict": [192, 254], "calculate_exposure_sweep_tim": [192, 254], "signal_contain": 193, "signalcontain": [193, 225], "data_contain": 193, "datacontain": [193, 225], "signal_thread": 193, "data_thread": 193, "stop_flag": 193, "frame_id": [193, 196, 198, 203, 204, 207, 209, 210, 232, 234, 235], "signal_func": [193, 201, 202, 204, 205, 206, 208, 209, 210, 236], "data_func": [193, 203, 204, 207, 209, 256], "feature_list": [193, 225, 228, 229, 230, 256], "autofocu": [196, 324], "measur": [196, 297], "microscopemodel": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "associ": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 320], "config_t": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 232, 234, 324], "node": [196, 201, 202, 205, 209, 210, 216, 217, 218, 219, 220, 221, 225, 324], "relat": [196, 201, 202, 203, 205, 207, 210, 218, 220, 221, 289, 319, 327], "pre_func_sign": [196, 198, 212, 234, 235, 324], "in_func_sign": [196, 198, 234, 235, 324], "action": [196, 201, 210, 216, 220, 221], "end_func_sign": [196, 198, 234, 235, 324], "pre_func_data": [196, 198, 234, 235, 324], "applic": [196, 217, 219, 320], "in_func_data": [196, 198, 234, 235, 324], "end_func_data": [196, 198, 234, 235, 324], "util": 196, "involv": [196, 201, 202, 204, 205, 206, 207, 208, 209, 210, 217, 219], "autom": [196, 205, 326], "respons": [196, 199, 201, 203, 205, 216, 217, 218, 219, 220, 221, 224, 326], "carri": [196, 201], "device_ref": 198, "autofocus_frame_queu": 198, "autofocus_pos_queu": 198, "queue": [198, 236, 329], "max_entropi": 198, "f_frame_id": 198, "frame_num": 198, "init_po": 198, "f_po": [198, 319], "focus_po": 198, "target_frame_id": 198, "get_frames_num": 198, "plot_data": 198, "total_frame_num": 198, "fine_step_s": 198, "fine": [198, 320], "fine_pos_offset": 198, "coarse_step_s": 198, "coars": [198, 325], "coarse_step": 198, "signal_id": 198, "target_channel": 198, "routin": [198, 199, 295, 326, 328], "get_autofocus_frame_num": 198, "best": [198, 320], "get_step": 198, "step_siz": [198, 319, 327], "autofocus": 198, "travel": 198, "pos_offset": 198, "figur": [198, 320], "robust_autofocu": 198, "robust": 198, "alpha": [198, 199], "unfortun": 198, "unstabl": 198, "x_offset": [199, 319, 327], "y_offset": [199, 319, 327], "tent": 199, "curv": 199, "resolution_mod": 201, "zoom_valu": 201, "reconfigur": [201, 324], "cleanup": [201, 205, 209, 210, 212, 216, 217, 219, 225, 256, 324], "accordingli": [201, 205, 208], "typic": [201, 205, 206, 207, 216, 217, 219, 220, 224, 228, 230, 260, 320], "adapt": 201, "resum": [201, 205, 256], "continu": [202, 204, 205, 210, 328, 329], "scanrang": 202, "n_plane": [202, 327], "offset_start": 202, "offset_end": 202, "offset_step_s": 202, "need_to_move_new_plan": 202, "offset_update_tim": 202, "conpro_cycling_mod": 202, "cycl": [202, 210], "per_stack": [202, 210], "device_rel": [202, 210, 218, 220, 221, 324], "pre_signal_func": [202, 209, 210], "signal_end": [202, 210], "generate_meta_data": [202, 232], "update_channel": [202, 210], "capabl": [202, 218, 220], "overlap": [203, 243, 297, 298], "target_resolut": [203, 243], "nanoscal": [203, 243, 327], "target_zoom": [203, 243], "grid": [203, 298], "interest": 203, "preprocess": [203, 237], "box": [203, 306, 324, 328, 329], "step_by_fram": 204, "data_fram": 204, "ontain": 204, "flexibl": [204, 208, 329], "dynam": [204, 208, 230, 324], "track": [204, 209, 216, 219, 234, 235, 298], "decrement": 204, "advanc": [205, 319, 320, 324], "tabl": [205, 224, 300], "pre_z": 205, "current_idx": 205, "multiposition_t": 205, "position_count": 205, "stage_distance_threshold": 205, "paus": [205, 208, 256, 319], "proper": [205, 328, 329], "virtual": 206, "primari": [206, 324], "readi": [206, 237], "transit": [206, 217, 219], "prepare_next_channel": [206, 254], "captur": [207, 234, 235], "pause_num": 208, "microscopest": [208, 232, 243, 324], "synchron": [208, 209, 329], "pause_signal_lock": 209, "pause_data_lock": 209, "first_enter_nod": 209, "variablewithlock": 209, "enter": [209, 328], "pre_data_func": [209, 210], "manner": [209, 319, 327], "slower": 209, "improv": [209, 320], "proce": 209, "help": [209, 319, 320, 327], "held": 209, "get_origin": 210, "saving_flag": 210, "saving_dir": 210, "origin": [210, 328], "number_z_step": 210, "start_z_posit": 210, "start_focu": 210, "z_step_siz": 210, "focus_step_s": 210, "current_position_idx": 210, "being": [210, 272], "current_z_posit": 210, "current_focus_posit": 210, "need_to_move_new_posit": 210, "need_to_move_z_posit": 210, "z_position_moved_tim": 210, "stack_cycling_mod": 210, "image_writ": 210, "imagewrit": [210, 324], "in_data_func": 210, "incom": 210, "end_data_func": 210, "receiv": [210, 220, 221, 234, 235, 256], "cleanup_data_func": 210, "reset": [212, 216, 217, 219], "inject": 212, "rotari": 212, "45": 212, "396": 212, "nm": [212, 268, 269, 270, 325], "quadratur": 212, "88": 212, "motion": [212, 325], "optic": [212, 268, 269, 270, 327], "root": [216, 217, 219, 225, 247, 250, 252, 310, 311], "cleanup_list": [216, 217, 219], "tree": [216, 217, 218, 219, 220, 221, 225, 324], "consist": [216, 219, 319, 320], "treenod": [216, 217, 218, 219, 220], "curr_nod": [216, 219], "end_flag": [216, 219], "is_clos": [216, 219], "serv": [216, 222, 223], "special": [217, 218, 219], "extend": [217, 219, 227, 235], "analysi": [217, 256, 295, 324], "mark": [217, 218, 256], "feature_nam": [218, 220, 221], "func_dict": [218, 220, 221], "node_typ": [218, 220, 221, 324], "need_respons": [218, 220, 221, 324], "those": [218, 220, 221], "is_mark": 218, "node_nam": [218, 220, 221], "node_func": [218, 220, 221], "is_initi": [218, 220, 221], "sibl": [218, 220, 221, 225], "statu": [218, 295], "meet": [218, 320], "criteria": 218, "set_properti": [218, 220, 221], "pair": [218, 220, 221, 256, 324], "number_of_execut": 219, "remaining_number_of_execut": 219, "wait_respons": [219, 220], "placehold": [222, 223, 238], "unus": [222, 223], "often": [222, 327], "situat": [222, 223], "context": 222, "feature_modul": 224, "func_typ": 224, "essenti": 224, "init": [224, 324], "dummy_func": 224, "dummy_tru": 224, "signalnod": 225, "datanod": 225, "shared_vari": 225, "create_nod": 225, "build_feature_tre": 225, "assist": 225, "custom": [227, 234, 235, 326, 329], "particularli": 227, "shared_list__": 227, "__name__": 227, "__str__": 227, "compon": [227, 329], "meaning": 227, "shallow": 227, "occurr": 227, "9223372036854775807": 227, "indexerror": 227, "IN": 227, "ascend": 227, "descend": 227, "transmit": 228, "valid": [228, 229], "parenthes": [228, 324, 328], "bracket": [228, 327], "network": 228, "func1": [228, 230], "arg1": [228, 230], "arg2": [228, 230], "func2": [228, 230], "func3": [228, 230], "arg3": [228, 230], "func4": [228, 230], "feature_parameter_setting_path": 230, "function_nam": 230, "yml": [230, 286], "inspect": 230, "value1": 230, "value2": 230, "sub_dir": 232, "image_nam": 232, "disk": [232, 284, 285, 286], "ext": 232, "meta": 232, "save_imag": 232, "data_sourc": 232, "mip": 232, "project": [232, 327], "mip_directori": 232, "num_of_channel": 232, "calculate_and_check_disk_spac": 232, "suffici": [232, 234, 235], "wherea": [232, 327], "64": 232, "color": 232, "vestigi": 232, "delet": [232, 284, 326], "75": [234, 235], "detect_func": [234, 235], "consid": [234, 235, 237, 238, 320], "detect_tissu": [234, 235], "phase": [234, 235, 261, 262, 265, 327], "increment": [234, 235, 319, 325], "position_record": [235, 236], "detecttissueinstack": [235, 324], "position_flag": 236, "remove_posit": 236, "slide": 237, "approach": [237, 329], "service_url": 241, "flipx": 243, "flipi": 243, "debug": 243, "outer": 243, "active_microscope_nam": 243, "img": 244, "xl": 244, "yl": 244, "xu": 244, "yu": 244, "65535": 244, "xmlmetadata": [247, 252], "xml": [247, 250, 252, 310, 311], "section": [247, 326, 328], "arxiv": 247, "org": [247, 252, 284], "ab": 247, "1412": 247, "0488": 247, "affine_matrix_to_stage_posit": 247, "mat": 247, "affin": 247, "parse_xml": [247, 250], "pars": [247, 250, 294, 310, 311], "stage_positions_to_affine_matrix": 247, "to_xml": [247, 250, 252], "write_xml": [247, 250, 252], "header": [247, 250, 252, 302], "om": [250, 252, 311], "proprietari": 250, "address": [250, 328], "_xml_dict": 250, "ome_tiff_xml_dict": [250, 252], "Will": [250, 321], "xml_tool": 250, "openmicroscopi": 252, "html": [252, 284], "uid": 252, "heirarch": 252, "ome_dict": 252, "is_virtu": 254, "listproxi": 254, "update_data_buff": [254, 256], "img_width": [254, 256], "img_height": [254, 256], "move_stage_offset": 254, "former_microscop": 254, "end_acquisit": [254, 256], "get_readout_tim": [254, 256], "assemble_device_config_list": 254, "device_nam": [254, 320], "device_name_dict": 254, "assembl": 254, "config": [254, 327, 328], "device_config_list": 254, "device_name_list": 254, "get_stage_posit": [254, 256], "load_and_start_devic": 254, "is_list": 254, "device_ref_nam": 254, "pos_dict": [254, 256, 272], "update_focu": 254, "central": 254, "stop_stag": [254, 256], "explicitli": 254, "turn_off_las": 254, "turn_on_las": 254, "event_queu": 256, "architectur": [256, 320, 325, 326], "leverag": [256, 320], "cuda": [256, 295, 325, 328], "engin": 256, "get_data_buff": 256, "create_pip": 256, "release_pip": 256, "run_command": 256, "run_data_process": 256, "run_single_channel_acquisit": 256, "run_single_acquisit": 256, "snap_imag": 256, "run_live_acquisit": 256, "run_z_stack_acquisit": 256, "run_single_channel_acquisition_with_featur": 256, "change_resolut": 256, "resolution_valu": 256, "pipe_nam": 256, "duplex": 256, "end1": 256, "disconnect": 256, "get_active_microscop": 256, "get_camera_line_interval_and_exposure_tim": 256, "number_of_pixel": 256, "512": 256, "get_feature_list": 256, "idx": 256, "feature_list_str": 256, "get_microscope_info": 256, "offset_variance_map": 256, "ret_pos_dict": 256, "load_feature_list_from_str": 256, "load_feature_record": 256, "folder": [256, 284, 291, 320, 328], "pause_data_thread": 256, "turn_off_flag": 256, "resume_data_thread": 256, "stream": 256, "gui": [256, 300, 326], "recalcul": 256, "therebi": 256, "peopl": 256, "due": 256, "update_ilastik_set": 256, "display_segment": 256, "mark_posit": 256, "target_label": 256, "ilastik": [256, 327], "label": 256, "100000": [258, 259, 260, 261, 262, 263, 265, 319, 327], "meant": 258, "visual": [258, 328], "hz": [258, 259, 260, 261, 262, 263, 265], "exposure_start": 258, "exposure_end": 258, "reson": 259, "drive": [259, 262, 265, 326], "typical_galvo": [259, 261], "24": 260, "linearli": 260, "drop": [260, 324], "right": [260, 288, 297, 324, 328, 329], "exchang": 260, "etl_ramp": 260, "tunable_lens_ramp": 260, "etl_delai": 260, "duty_cycl": [261, 265, 327], "5707963267948966": 261, "radian": [261, 262, 265], "sine": [262, 327], "typical_las": [262, 265], "pulse_width": 263, "ttl": 263, "typical_ttl_puls": 263, "convolut": 264, "smoothed_waveform": 264, "141592653589793": 265, "na": [268, 269, 270], "wvl": [268, 269, 270], "waist": [268, 269, 270], "apertur": [268, 269, 270], "wavelength": [268, 269, 270, 327], "r0": [268, 270], "z0": [268, 270], "w0": [268, 270], "i0": [268, 270], "bg0": 268, "rl": 270, "zl": 270, "33": 270, "488": [270, 325, 327], "bg": 270, "common": [272, 329], "model": [272, 320, 322, 324, 326], "variabletyp": 274, "ref_nam": 275, "funclist": 276, "new_func": 276, "module_nam": 278, "file_path": [278, 285], "statement": [281, 320], "wrap_func": 281, "saving_set": 283, "popup": [283, 324], "walk": 284, "everyth": 284, "reachabl": 284, "symbol": 284, "caution": 284, "danger": 284, "config_data": 285, "file_directori": 286, "content_dict": 286, "image_width": 288, "300": 288, "image_height": 288, "200": [288, 319, 327], "draw": 288, "arrow": 288, "ojbect": 288, "piec": [289, 321], "font": 289, "font_siz": 289, "fp": 291, "lazi": 291, "pil": 291, "containt": 291, "low_res_fp": 291, "2022": 291, "07": 291, "02": [291, 328], "cell_001": 291, "low_r": 291, "imshow": 291, "500": [291, 319, 327], "parser": [293, 294], "argumentpars": [293, 294], "argumentparserobject": 293, "argpars": [294, 295], "namespac": [294, 295, 311], "logging_path": 294, "gpu": [295, 325, 326], "dist": 297, "roi_length": 297, "roi": [297, 298], "watch": 297, "sign": [297, 298, 304, 305], "num_til": 297, "x_start": 298, "x_tile": 298, "x_length": 298, "x_overlap": 298, "y_start": 298, "y_tile": 298, "y_length": 298, "y_overlap": 298, "z_start": 298, "z_tile": 298, "z_length": 298, "z_overlap": 298, "theta_start": 298, "theta_til": 298, "theta_length": 298, "theta_overlap": 298, "f_start": 298, "f_tile": 298, "f_length": 298, "f_overlap": 298, "fov": 298, "rotat": [298, 327], "n_posit": 298, "po": 300, "redraw": 300, "panda": 300, "datafram": 300, "multi_position_t": 300, "multiposit": 300, "begin_start": 302, "half": 304, "subsample_z": 306, "nxnxn": 306, "euclidean": 306, "subsampl": [306, 327], "128": 306, "29": 306, "waveform_template_nam": 308, "waveform_template_dict": 308, "microscope_state_dict": 308, "repeat_num": 308, "expand_num": 308, "tag": 310, "elementtre": 311, "etre": 311, "fullnam": [316, 317], "escap": [316, 317], "underlin": [316, 317], "rubric": 317, "endfor": 317, "endif": 317, "endblock": 317, "302158": [319, 327], "302352": [319, 327], "filter_wheel": [319, 327], "com19": [319, 327], "number_of_wheel": [319, 327], "controllernam": [319, 327], "884": [319, 327], "l": [319, 325, 327], "509": [319, 325, 327], "20dg10": [319, 325, 327], "40dg10": [319, 327], "060": [319, 327], "dg": [319, 327], "406": [319, 327], "4pd": [319, 327], "nostag": [319, 327], "refmod": [319, 327], "119060508": [319, 327], "74000375": [319, 327], "servo_id": [319, 327], "com18": [319, 327], "1000000": [319, 327], "manufactur": [319, 321, 327, 329], "123456789": [319, 327], "com7": [319, 327], "instanti": [319, 327], "eg": [319, 327], "emploi": [319, 327], "syntheticstag": [319, 327], "987654321": [319, 327], "notic": [319, 327], "syntheticzoom": [319, 327], "abbrevi": 319, "y_unload_posit": 319, "10000": [319, 327], "y_load_posit": 319, "90000": 319, "startfocu": 319, "75000": 319, "x_max": [319, 327], "33500": 319, "16000": 319, "y_max": [319, 327], "y_min": [319, 327], "z_max": [319, 327], "50000": 319, "z_min": [319, 327], "25000": 319, "f_max": [319, 327], "f_min": [319, 327], "theta_max": [319, 327], "360": [319, 327], "theta_min": [319, 327], "x_rot_posit": 319, "y_rot_posit": 319, "z_rot_posit": 319, "x_step": [319, 327], "y_step": [319, 327], "z_step": [319, 327], "theta_step": [319, 327], "f_step": [319, 327], "25250": 319, "40000": 319, "z_po": 319, "70000": 319, "theta_po": 319, "1000": [319, 320, 327], "z_offset": [319, 327], "f_offset": [319, 327], "theta_offset": [319, 327], "explicil": [319, 327], "explictli": 319, "fashion": 319, "queri": 319, "awar": 319, "pimikromov": 319, "physic": [319, 327], "third": [319, 327], "spinbox": [319, 327], "develop": [319, 326, 327, 329], "plan": [319, 327], "go": [319, 327, 328], "forward": [319, 327], "widget": [319, 327], "tab": 319, "interval_tim": [319, 327], "eventu": 319, "frequent": [319, 328], "ch00": 319, "ch01": 319, "ch02": 319, "laser_pow": [319, 327], "inclus": 319, "stack_acquisit": [319, 327], "start_po": [319, 327], "end_po": [319, 327], "stack_paus": [319, 327], "5000": [319, 327], "welcom": 320, "pleas": [320, 328], "fork": 320, "branch": 320, "review": 320, "practic": 320, "outlin": 320, "refactor": 320, "reach": 320, "prior": [320, 329], "happi": 320, "bring": 320, "discuss": 320, "strong": 320, "especi": 320, "disrupt": 320, "clariti": 320, "team": 320, "merg": 320, "pep8": 320, "importantli": 320, "camelcas": 320, "lowercase_and_separated_by_underscor": 320, "numpydoc": 320, "commit": 320, "workflow": [320, 324], "enforc": 320, "ruff": 320, "linter": 320, "black": 320, "formatt": 320, "vscode": 320, "whatev": [320, 329], "conda": [320, 328], "aslm": [320, 321, 324, 326, 327, 328, 329], "pip": [320, 328], "cd": [320, 328], "rare": 320, "complain": 320, "start_stag": 320, "exec": 320, "device_startup_funct": 320, "start_": 320, "noqa": 320, "comment": 320, "easi": [320, 328], "opportun": 320, "alert": 320, "pytest": 320, "appl": 320, "encount": 320, "resolv": 320, "oserror": 320, "ulimit": 320, "hand": 320, "abstract": [321, 326], "layer": [321, 326], "divers": [321, 329], "equip": [321, 325], "accompani": 321, "contribut": [321, 324, 326], "encourag": [322, 324], "engag": [322, 324], "collabor": [322, 324], "guidelin": [322, 326], "snap": 324, "pictur": 324, "common_featur": 324, "zstackacquisit": 324, "discret": 324, "cosin": 324, "volumesearch": 324, "ilastiksegment": 324, "detecttissueinstackandrecord": 324, "removeemptyposit": 324, "constantvelocityacquisit": 324, "changeresolut": 324, "conproacquisit": 324, "findtissuesimple2d": 324, "loopbycount": 324, "movetonextpositioninmultipositiont": 324, "preparenextchannel": 324, "stackpaus": 324, "waittocontinu": 324, "dictat": 324, "cleanup_func_sign": 324, "cleanup_func_data": 324, "acqusit": 324, "failsaf": 324, "latter": 324, "inde": 324, "proceed": 324, "intellig": 324, "explain": 324, "decor": 324, "featurelist": 324, "tool": [324, 329], "feature_related_funct": 324, "feature_exampl": 324, "selected_channel": 324, "ve": 324, "navig": [324, 328], "menu": 324, "4a": 324, "dialog": 324, "analys": 324, "whole": 324, "preview": 324, "ok": 324, "click": [324, 328, 329], "button": [324, 329], "graphic": [324, 328], "omicron": 325, "lighthub": 325, "ultra": 325, "acc": 325, "642": 325, "561": 325, "mix": [325, 329], "obi": 325, "unidirect": 325, "bidirect": 325, "repeatablil": 325, "borderlin": 325, "nvidia": [325, 328], "titan": 325, "rtx": 325, "driver": [325, 328, 329], "456": 325, "71": 325, "grabber": [325, 329], "optotun": 325, "electrotun": 325, "len": [325, 329], "blink": 325, "pxie": [325, 329], "1073": 325, "chassi": 325, "pxi6733": [325, 327], "pxi6259": [325, 327, 329], "32mm": 325, "position": 325, "nano": 325, "ut": 326, "southwestern": 326, "ecosystem": 326, "aim": 326, "recip": 326, "maker": 326, "repositori": [326, 328], "minim": 326, "priorit": 326, "stabil": 326, "brutal": 326, "obviou": 326, "maxim": 326, "biolog": 326, "download": [326, 329], "git": 326, "environ": [326, 327], "troubleshoot": 326, "multiscal": 326, "expans": 326, "opm": 326, "v2": 326, "ct": 326, "v1": 326, "tirf": 326, "voicecoil": 326, "deform": 326, "mirror": 326, "mechan": [326, 327], "introduct": 326, "edit": 326, "zach": 326, "marin": 326, "anni": 326, "wang": 326, "dax": 326, "collison": 326, "kevin": 326, "dean": [326, 328], "sampath": 326, "rapuri": 326, "renil": 326, "gupta": 326, "samir": 326, "mamtani": 326, "andrew": 326, "jamieson": 326, "york": 326, "nathaniel": 326, "thayer": 326, "confus": 327, "recommend": [327, 328], "anaconda": [327, 328], "prompt": [327, 328, 329], "sh": [327, 328], "thereaft": 327, "conflict": 327, "master_trigger_out_lin": [327, 329], "camera_trigger_out_lin": [327, 329], "laser_port_switch": 327, "laser_switch_st": 327, "pixel_size_in_micron": 327, "sensor_mod": 327, "readout_direct": 327, "lightsheet_rolling_shutter_width": 327, "608": 327, "defect_correct_mod": 327, "readout_spe": 327, "trigger_act": 327, "trigger_polar": 327, "throughout": 327, "000075": 327, "display_acquisition_subsampl": 327, "average_frame_r": 327, "969": 327, "frames_to_averag": 327, "exposure_time_rang": 327, "remote_focus_devic": 327, "ao2": [327, 329], "ramp_rising_perc": 327, "85": 327, "ramp_falling_perc": 327, "ao0": [327, 329], "99": 327, "57079": 327, "wheel_numb": 327, "filter_wheel_delai": 327, "030": 327, "available_filt": 327, "rfp": 327, "595": 327, "31": 327, "far": [327, 328], "red": 327, "blp01": 327, "647r": 327, "blocked1": 327, "blocked2": 327, "blocked3": 327, "blocked4": 327, "blocked5": 327, "blocked6": 327, "earlier": 327, "joystick_ax": 327, "agre": [327, 329], "vertic": 327, "vice": 327, "versa": 327, "mention": 327, "627": 327, "1711": 327, "2301": 327, "2710": 327, "3079": 327, "3383": 327, "609": 327, "255": 327, "044": 327, "port0": [327, 329], "line0": 327, "onoff": 327, "line2": 327, "luxx": 327, "87": 327, "remote_focus_const": 327, "336": 327, "percent_delai": 327, "562nm": 327, "galvo_const": 327, "mesoscal": 327, "other_const": 327, "duty_wait_dur": 327, "confoc": 327, "url": 327, "127": 327, "desktop": 328, "friendli": 328, "head": 328, "miniconda": 328, "websit": 328, "handi": 328, "cheatsheet": 328, "accustom": 328, "pin": [328, 329], "taskbar": 328, "mycomput": 328, "firewal": 328, "utsw": 328, "campu": 328, "circumv": 328, "activatin": 328, "upgrad": 328, "clone": 328, "mkdir": 328, "myfoldernam": 328, "thedeanlab": 328, "completet": 328, "upon": [328, 329], "shortcut": 328, "windir": 328, "system32": 328, "cmd": 328, "ex": 328, "script": 328, "bat": 328, "acceler": 328, "tensorflow": 328, "pytorch": 328, "cupi": 328, "excel": 328, "cudnn": 328, "sdk": [328, 329], "450": 328, "80": 328, "tensorrt": 328, "microsoft": 328, "redistribut": 328, "studio": 328, "2015": 328, "2017": 328, "2019": 328, "http_proxi": 328, "swmed": 328, "edu": 328, "3128": 328, "https_proxi": 328, "typo": 328, "perspect": 328, "onlin": 328, "usersuserprofil": 328, "condarc": 328, "usersuserprofilepippip": 328, "ini": 328, "password": 328, "8080": 328, "sever": 329, "6733": 329, "daqmx": 329, "recogn": 329, "visibl": 329, "pinout": 329, "scb": 329, "68a": 329, "breakout": 329, "mislead": 329, "aspect": 329, "wire": 329, "receipt": 329, "determinist": 329, "jitter": 329, "anticip": 329, "dev1": 329, "dev2": 329, "commonli": 329, "line1": 329, "pfi0": 329, "p0": 329, "pfio": 329, "gate": 329, "attach": 329, "outsid": 329, "bank": 329, "ao6": 329, "ao8": 329, "ao9": 329, "ao10": 329, "compet": 329, "ao": 329, "distribut": 329, "across": 329, "ao14": 329, "ao19": 329, "usb": 329, "came": 329, "hcimagel": 329, "intal": 329, "silicon": 329, "firebird": 329, "framegrabb": 329, "apporpri": 329, "x16": 329, "slot": 329, "motherboard": 329, "excap": 329, "ctr0": 329, "pvcam": 329, "term": 329, "unknown": 329, "broadcom": 329, "pci": 329, "kit": 329, "bridg": 329, "dev": 329, "_": 329, "abl": 329, "pvcamtest": 329, "voic": 329, "coil": 329, "actuat": 329, "plai": 329, "crucial": 329, "role": 329, "aberr": 329, "electromagnet": 329, "axial": 329, "focal": 329, "shift": 329, "sca814": 329, "lfa": 329, "2010": 329, "empow": 329, "cater": 329, "modal": 329, "suit": 329, "seamless": 329, "versatil": 329, "tailor": 329, "research": 329, "sync": 329, "less": 329, "perz": 329, "damag": 329}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [9, 0, 0, "-", "controller"], [16, 0, 0, "-", "model"], [266, 0, 0, "-", "tools"], [312, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_experiment_config"], [8, 1, 1, "", "verify_waveform_constants"]], "aslm.controller": [[10, 0, 0, "-", "configuration_controller"], [12, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[11, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "camera_config_dict"], [11, 4, 1, "", "camera_flip_flags"], [11, 4, 1, "", "camera_pixels"], [11, 3, 1, "id0", "change_microscope"], [11, 4, 1, "", "channels_info"], [11, 4, 1, "", "daq_sample_rate"], [11, 4, 1, "", "filter_wheel_setting_dict"], [11, 4, 1, "", "galvo_parameter_dict"], [11, 3, 1, "id1", "get_microscope_configuration_dict"], [11, 3, 1, "id2", "get_stage_position_limits"], [11, 4, 1, "", "lasers_info"], [11, 4, 1, "", "number_of_channels"], [11, 4, 1, "", "remote_focus_dict"], [11, 4, 1, "", "stage_default_position"], [11, 4, 1, "", "stage_flip_flags"], [11, 4, 1, "", "stage_setting_dict"], [11, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[13, 2, 1, "", "SelfLockThread"], [14, 2, 1, "", "SynchronizedThreadPool"], [15, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "daemon"], [13, 3, 1, "", "getName"], [13, 4, 1, "", "ident"], [13, 3, 1, "", "isDaemon"], [13, 3, 1, "", "isLocked"], [13, 3, 1, "", "is_alive"], [13, 3, 1, "", "join"], [13, 4, 1, "", "name"], [13, 4, 1, "", "native_id"], [13, 3, 1, "", "run"], [13, 3, 1, "", "setDaemon"], [13, 3, 1, "", "setName"], [13, 3, 1, "", "start"], [13, 3, 1, "", "unlock"], [13, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [14, 3, 1, "", "createThread"], [14, 3, 1, "", "getRunningThread"], [14, 3, 1, "", "globaltrace"], [14, 3, 1, "", "killThreadInList"], [14, 3, 1, "", "localtrace"], [14, 3, 1, "", "moveToDelete"], [14, 3, 1, "", "registerResource"], [14, 3, 1, "", "removeThread"], [14, 3, 1, "", "threadTaskWrapping"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, 3, 1, "", "__init__"]], "aslm.model": [[17, 0, 0, "-", "analysis"], [58, 0, 0, "-", "concurrency"], [77, 0, 0, "-", "data_sources"], [85, 0, 0, "-", "device_startup_functions"], [103, 0, 0, "-", "devices"], [189, 0, 0, "-", "dummy"], [194, 0, 0, "-", "features"], [245, 0, 0, "-", "metadata_sources"], [253, 0, 0, "-", "microscope"], [255, 0, 0, "-", "model"], [257, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[18, 0, 0, "-", "boundary_detect"], [23, 0, 0, "-", "camera"], [28, 0, 0, "-", "detection"], [38, 0, 0, "-", "image_contrast"], [44, 0, 0, "-", "image_decorrelation"], [53, 0, 0, "-", "image_transform"], [56, 0, 0, "-", "spectral_unmixing"]], "aslm.model.analysis.boundary_detect": [[19, 1, 1, "", "binary_detect"], [20, 1, 1, "", "find_tissue_boundary_2d"], [21, 1, 1, "", "has_tissue"], [22, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[24, 1, 1, "", "compute_flatfield_map"], [25, 1, 1, "", "compute_noise_sigma"], [26, 1, 1, "", "compute_scmos_offset_and_variance_map"], [27, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[29, 1, 1, "", "add_median_border"], [30, 1, 1, "", "combine_images"], [31, 1, 1, "", "log_detection"], [32, 1, 1, "", "make_inside_image"], [33, 1, 1, "", "make_normalized_image"], [34, 1, 1, "", "make_sphere_3D"], [35, 1, 1, "", "multiscale_surface_filter_3D"], [36, 1, 1, "", "surface_filter_gauss_3D"], [37, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[39, 1, 1, "", "estimate_and_correct_flatfield"], [40, 1, 1, "", "estimate_image_resolution"], [41, 1, 1, "", "fast_normalized_dct_shannon_entropy"], [42, 1, 1, "", "image_intensity"], [43, 1, 1, "", "normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[45, 1, 1, "", "apodize_image"], [46, 1, 1, "", "get_correlation_coefficient"], [47, 1, 1, "", "get_decorrelation_local_maxima"], [48, 1, 1, "", "get_image_decorrelation"], [49, 1, 1, "", "get_radial_average"], [50, 1, 1, "", "image_to_polar"], [51, 1, 1, "", "linear_map"], [52, 1, 1, "", "main_image_decorr"]], "aslm.model.analysis.image_transform": [[54, 1, 1, "", "deskew_image"], [55, 1, 1, "", "initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[57, 1, 1, "", "to_do"]], "aslm.model.concurrency": [[59, 0, 0, "-", "concurrency_tools"], [70, 0, 0, "-", "proxy_objects"], [75, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[60, 2, 1, "", "CustodyThread"], [61, 5, 1, "", "FancyThread"], [62, 2, 1, "", "MyTestClass"], [63, 2, 1, "", "ObjectInSubprocess"], [64, 5, 1, "", "PoliteThread"], [65, 2, 1, "", "ResultThread"], [66, 2, 1, "", "SharedNDArray"], [67, 2, 1, "", "TestObjectInSubprocess"], [68, 2, 1, "", "TestResultThreadAndCustodyThread"], [69, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[60, 3, 1, "", "__init__"], [60, 4, 1, "", "daemon"], [60, 3, 1, "", "getName"], [60, 3, 1, "", "get_result"], [60, 4, 1, "", "ident"], [60, 3, 1, "", "isDaemon"], [60, 3, 1, "", "is_alive"], [60, 3, 1, "", "join"], [60, 4, 1, "", "name"], [60, 4, 1, "", "native_id"], [60, 3, 1, "", "run"], [60, 3, 1, "", "setDaemon"], [60, 3, 1, "", "setName"], [60, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "run"], [62, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[63, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[65, 3, 1, "", "__init__"], [65, 4, 1, "", "daemon"], [65, 3, 1, "", "getName"], [65, 3, 1, "", "get_result"], [65, 4, 1, "", "ident"], [65, 3, 1, "", "isDaemon"], [65, 3, 1, "", "is_alive"], [65, 3, 1, "", "join"], [65, 4, 1, "", "name"], [65, 4, 1, "", "native_id"], [65, 3, 1, "", "run"], [65, 3, 1, "", "setDaemon"], [65, 3, 1, "", "setName"], [65, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[66, 5, 1, "", "ALIGNED"], [66, 5, 1, "", "BEHAVED"], [66, 5, 1, "", "CARRAY"], [66, 5, 1, "", "C_CONTIGUOUS"], [66, 5, 1, "", "FARRAY"], [66, 5, 1, "", "FNC"], [66, 5, 1, "", "FORC"], [66, 5, 1, "", "F_CONTIGUOUS"], [66, 5, 1, "", "OWNDATA"], [66, 5, 1, "", "T"], [66, 5, 1, "", "UPDATEIFCOPY"], [66, 5, 1, "", "WRITEABLE"], [66, 5, 1, "", "WRITEBACKIFCOPY"], [66, 3, 1, "", "__init__"], [66, 3, 1, "", "all"], [66, 3, 1, "", "any"], [66, 3, 1, "", "argmax"], [66, 3, 1, "", "argmin"], [66, 3, 1, "", "argpartition"], [66, 3, 1, "", "argsort"], [66, 3, 1, "", "astype"], [66, 5, 1, "", "base"], [66, 3, 1, "", "byteswap"], [66, 3, 1, "", "choose"], [66, 3, 1, "", "clip"], [66, 3, 1, "", "compress"], [66, 3, 1, "", "conj"], [66, 3, 1, "", "conjugate"], [66, 3, 1, "", "copy"], [66, 5, 1, "", "ctypes"], [66, 3, 1, "", "cumprod"], [66, 3, 1, "", "cumsum"], [66, 5, 1, "", "data"], [66, 3, 1, "", "diagonal"], [66, 5, 1, "", "dtype"], [66, 3, 1, "", "dump"], [66, 3, 1, "", "dumps"], [66, 3, 1, "", "fill"], [66, 5, 1, "", "flags"], [66, 5, 1, "", "flat"], [66, 3, 1, "", "flatten"], [66, 3, 1, "", "getfield"], [66, 5, 1, "", "imag"], [66, 3, 1, "", "item"], [66, 3, 1, "", "itemset"], [66, 5, 1, "", "itemsize"], [66, 3, 1, "", "max"], [66, 3, 1, "", "mean"], [66, 3, 1, "", "min"], [66, 5, 1, "", "nbytes"], [66, 5, 1, "", "ndim"], [66, 3, 1, "", "newbyteorder"], [66, 3, 1, "", "nonzero"], [66, 3, 1, "", "partition"], [66, 3, 1, "", "prod"], [66, 3, 1, "", "ptp"], [66, 3, 1, "", "put"], [66, 3, 1, "", "ravel"], [66, 5, 1, "", "real"], [66, 3, 1, "", "repeat"], [66, 3, 1, "", "reshape"], [66, 3, 1, "", "resize"], [66, 3, 1, "", "round"], [66, 3, 1, "", "searchsorted"], [66, 3, 1, "", "setfield"], [66, 3, 1, "", "setflags"], [66, 5, 1, "", "shape"], [66, 5, 1, "", "size"], [66, 3, 1, "", "sort"], [66, 3, 1, "", "squeeze"], [66, 3, 1, "", "std"], [66, 5, 1, "", "strides"], [66, 3, 1, "", "sum"], [66, 3, 1, "", "swapaxes"], [66, 3, 1, "", "take"], [66, 3, 1, "", "tobytes"], [66, 3, 1, "", "tofile"], [66, 3, 1, "", "tolist"], [66, 3, 1, "", "tostring"], [66, 3, 1, "", "trace"], [66, 3, 1, "", "transpose"], [66, 3, 1, "", "var"], [66, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[67, 2, 1, "", "TestClass"], [67, 3, 1, "", "__init__"], [67, 3, 1, "", "run"], [67, 3, 1, "", "test_incorrect_thread_management"], [67, 3, 1, "", "test_lock_with_waitlist"], [67, 3, 1, "", "test_object_in_subprocess_overhead"], [67, 3, 1, "", "test_sending_shared_arrays"], [67, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[68, 3, 1, "", "__init__"], [68, 3, 1, "", "run"], [68, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[69, 3, 1, "", "__init__"], [69, 3, 1, "", "run"], [69, 3, 1, "", "test_ndarraylike_behavior"], [69, 3, 1, "", "test_serialization"], [69, 3, 1, "", "test_serializing_and_deserializing"], [69, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[71, 2, 1, "", "ProxyManager"], [72, 2, 1, "", "ProxyObject"], [73, 1, 1, "", "launch_custody_thread"], [74, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[71, 3, 1, "", "__init__"], [71, 3, 1, "", "proxy_object"], [71, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[72, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[76, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[76, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[78, 0, 0, "-", "bdv_data_source"], [80, 0, 0, "-", "data_source"], [82, 1, 1, "", "get_data_source"], [83, 0, 0, "-", "tiff_data_source"]], "aslm.model.data_sources.bdv_data_source": [[79, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[79, 3, 1, "", "__init__"], [79, 5, 1, "", "bits"], [79, 3, 1, "id6", "close"], [79, 4, 1, "", "data"], [79, 5, 1, "", "dc"], [79, 5, 1, "", "ds_name"], [79, 5, 1, "", "dt"], [79, 5, 1, "", "dx"], [79, 5, 1, "", "dy"], [79, 5, 1, "", "dz"], [79, 5, 1, "", "file_name"], [79, 3, 1, "", "get_slice"], [79, 5, 1, "", "image"], [79, 5, 1, "", "logger"], [79, 5, 1, "id0", "metadata"], [79, 4, 1, "id10", "mode"], [79, 4, 1, "id11", "nbytes"], [79, 5, 1, "", "positions"], [79, 3, 1, "id7", "read"], [79, 4, 1, "", "resolutions"], [79, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [79, 5, 1, "", "setup"], [79, 4, 1, "id12", "shape"], [79, 5, 1, "", "shape_c"], [79, 5, 1, "", "shape_t"], [79, 5, 1, "", "shape_x"], [79, 5, 1, "", "shape_y"], [79, 5, 1, "", "shape_z"], [79, 4, 1, "", "shapes"], [79, 4, 1, "", "subdivisions"], [79, 4, 1, "id13", "voxel_size"], [79, 3, 1, "id9", "write"]], "aslm.model.data_sources.data_source": [[81, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[81, 3, 1, "", "__init__"], [81, 5, 1, "", "bits"], [81, 3, 1, "id1", "close"], [81, 4, 1, "", "data"], [81, 5, 1, "", "dc"], [81, 5, 1, "", "dt"], [81, 5, 1, "", "dx"], [81, 5, 1, "", "dy"], [81, 5, 1, "", "dz"], [81, 5, 1, "", "file_name"], [81, 5, 1, "", "logger"], [81, 5, 1, "", "metadata"], [81, 4, 1, "id5", "mode"], [81, 4, 1, "id6", "nbytes"], [81, 5, 1, "", "positions"], [81, 3, 1, "id2", "read"], [81, 3, 1, "id3", "set_metadata_from_configuration_experiment"], [81, 4, 1, "id7", "shape"], [81, 5, 1, "", "shape_c"], [81, 5, 1, "", "shape_t"], [81, 5, 1, "", "shape_x"], [81, 5, 1, "", "shape_y"], [81, 5, 1, "", "shape_z"], [81, 4, 1, "id8", "voxel_size"], [81, 3, 1, "id4", "write"]], "aslm.model.data_sources.tiff_data_source": [[84, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[84, 3, 1, "", "__init__"], [84, 5, 1, "", "bits"], [84, 3, 1, "id5", "close"], [84, 4, 1, "", "data"], [84, 5, 1, "", "dc"], [84, 5, 1, "", "dt"], [84, 5, 1, "", "dx"], [84, 5, 1, "", "dy"], [84, 5, 1, "", "dz"], [84, 5, 1, "", "file_name"], [84, 3, 1, "id6", "generate_image_name"], [84, 5, 1, "", "image"], [84, 5, 1, "", "logger"], [84, 5, 1, "id0", "metadata"], [84, 4, 1, "id10", "mode"], [84, 4, 1, "id11", "nbytes"], [84, 5, 1, "", "positions"], [84, 3, 1, "id7", "read"], [84, 5, 1, "", "save_directory"], [84, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [84, 4, 1, "id12", "shape"], [84, 5, 1, "", "shape_c"], [84, 5, 1, "", "shape_t"], [84, 5, 1, "", "shape_x"], [84, 5, 1, "", "shape_y"], [84, 5, 1, "", "shape_z"], [84, 4, 1, "id13", "voxel_size"], [84, 3, 1, "id9", "write"]], "aslm.model.device_startup_functions": [[86, 2, 1, "", "DummyDeviceConnection"], [87, 1, 1, "", "auto_redial"], [88, 1, 1, "", "device_not_found"], [89, 1, 1, "", "load_camera_connection"], [90, 1, 1, "", "load_devices"], [91, 1, 1, "", "load_filter_wheel_connection"], [92, 1, 1, "", "load_stages"], [93, 1, 1, "", "load_zoom_connection"], [94, 1, 1, "", "start_camera"], [95, 1, 1, "", "start_daq"], [96, 1, 1, "", "start_filter_wheel"], [97, 1, 1, "", "start_galvo"], [98, 1, 1, "", "start_lasers"], [99, 1, 1, "", "start_remote_focus_device"], [100, 1, 1, "", "start_shutter"], [101, 1, 1, "", "start_stage"], [102, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[86, 3, 1, "", "__init__"]], "aslm.model.devices": [[104, 0, 0, "-", "APIs"], [110, 0, 0, "-", "camera"], [121, 0, 0, "-", "daq"], [126, 0, 0, "-", "filter_wheel"], [137, 0, 0, "-", "galvo"], [142, 0, 0, "-", "lasers"], [147, 0, 0, "-", "objectives"], [149, 0, 0, "-", "remote_focus"], [154, 0, 0, "-", "shutter"], [159, 0, 0, "-", "stages"], [181, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[105, 0, 0, "-", "coherent"], [106, 0, 0, "-", "dynamixel"], [109, 0, 0, "-", "omicron"]], "aslm.model.devices.APIs.dynamixel": [[107, 0, 0, "-", "dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[108, 1, 1, "", "create_mock_dxl_device"]], "aslm.model.devices.camera": [[111, 0, 0, "-", "camera_base"], [113, 0, 0, "-", "camera_hamamatsu"], [116, 0, 0, "-", "camera_photometrics"], [118, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[112, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "calculate_light_sheet_exposure_time"], [112, 5, 1, "", "camera_controller"], [112, 5, 1, "", "camera_parameters"], [112, 3, 1, "", "close_camera"], [112, 5, 1, "", "configuration"], [112, 3, 1, "", "get_line_interval"], [112, 3, 1, "", "get_offset_variance_maps"], [112, 5, 1, "", "is_acquiring"], [112, 5, 1, "", "max_image_height"], [112, 5, 1, "", "max_image_width"], [112, 5, 1, "", "min_image_height"], [112, 5, 1, "", "min_image_width"], [112, 4, 1, "", "offset"], [112, 3, 1, "", "set_readout_direction"], [112, 5, 1, "", "step_image_height"], [112, 5, 1, "", "step_image_width"], [112, 4, 1, "", "variance"], [112, 5, 1, "", "x_pixels"], [112, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[114, 2, 1, "", "HamamatsuOrca"], [115, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "calculate_light_sheet_exposure_time"], [114, 3, 1, "", "calculate_readout_time"], [114, 5, 1, "", "camera_controller"], [114, 5, 1, "", "camera_parameters"], [114, 3, 1, "", "close_camera"], [114, 3, 1, "", "close_image_series"], [114, 5, 1, "", "configuration"], [114, 3, 1, "", "get_line_interval"], [114, 3, 1, "", "get_minimum_waiting_time"], [114, 3, 1, "", "get_new_frame"], [114, 3, 1, "", "get_offset_variance_maps"], [114, 3, 1, "", "initialize_image_series"], [114, 5, 1, "", "is_acquiring"], [114, 4, 1, "", "max_image_height"], [114, 4, 1, "", "max_image_width"], [114, 4, 1, "", "min_image_height"], [114, 4, 1, "", "min_image_width"], [114, 4, 1, "", "offset"], [114, 3, 1, "", "report_settings"], [114, 4, 1, "", "serial_number"], [114, 3, 1, "", "set_ROI"], [114, 3, 1, "", "set_binning"], [114, 3, 1, "", "set_exposure_time"], [114, 3, 1, "", "set_line_interval"], [114, 3, 1, "", "set_readout_direction"], [114, 3, 1, "", "set_sensor_mode"], [114, 4, 1, "", "step_image_height"], [114, 4, 1, "", "step_image_width"], [114, 4, 1, "", "variance"], [114, 5, 1, "", "x_pixels"], [114, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[115, 3, 1, "", "__init__"], [115, 3, 1, "", "calculate_light_sheet_exposure_time"], [115, 3, 1, "", "calculate_readout_time"], [115, 5, 1, "", "camera_controller"], [115, 5, 1, "", "camera_parameters"], [115, 3, 1, "", "close_camera"], [115, 3, 1, "", "close_image_series"], [115, 5, 1, "", "configuration"], [115, 3, 1, "", "get_line_interval"], [115, 3, 1, "", "get_minimum_waiting_time"], [115, 3, 1, "", "get_new_frame"], [115, 3, 1, "", "get_offset_variance_maps"], [115, 3, 1, "", "initialize_image_series"], [115, 5, 1, "", "is_acquiring"], [115, 4, 1, "", "max_image_height"], [115, 4, 1, "", "max_image_width"], [115, 4, 1, "", "min_image_height"], [115, 4, 1, "", "min_image_width"], [115, 4, 1, "", "offset"], [115, 3, 1, "", "report_settings"], [115, 4, 1, "", "serial_number"], [115, 3, 1, "", "set_ROI"], [115, 3, 1, "", "set_binning"], [115, 3, 1, "", "set_exposure_time"], [115, 3, 1, "", "set_line_interval"], [115, 3, 1, "", "set_readout_direction"], [115, 3, 1, "", "set_sensor_mode"], [115, 4, 1, "", "step_image_height"], [115, 4, 1, "", "step_image_width"], [115, 4, 1, "", "variance"], [115, 5, 1, "", "x_pixels"], [115, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[117, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[117, 3, 1, "", "__init__"], [117, 3, 1, "", "calculate_light_sheet_exposure_time"], [117, 3, 1, "", "calculate_readout_time"], [117, 5, 1, "", "camera_controller"], [117, 5, 1, "", "camera_parameters"], [117, 3, 1, "", "close_camera"], [117, 3, 1, "", "close_image_series"], [117, 5, 1, "", "configuration"], [117, 3, 1, "", "get_line_interval"], [117, 3, 1, "", "get_minimum_waiting_time"], [117, 3, 1, "", "get_new_frame"], [117, 3, 1, "", "get_offset_variance_maps"], [117, 3, 1, "", "initialize_image_series"], [117, 5, 1, "", "is_acquiring"], [117, 5, 1, "", "max_image_height"], [117, 5, 1, "", "max_image_width"], [117, 5, 1, "", "min_image_height"], [117, 5, 1, "", "min_image_width"], [117, 4, 1, "", "offset"], [117, 3, 1, "", "report_settings"], [117, 4, 1, "", "serial_number"], [117, 3, 1, "", "set_ROI"], [117, 3, 1, "", "set_binning"], [117, 3, 1, "", "set_exposure_time"], [117, 3, 1, "", "set_line_interval"], [117, 3, 1, "", "set_readout_direction"], [117, 3, 1, "", "set_sensor_mode"], [117, 5, 1, "", "step_image_height"], [117, 5, 1, "", "step_image_width"], [117, 4, 1, "", "variance"], [117, 5, 1, "", "x_pixels"], [117, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[119, 2, 1, "", "SyntheticCamera"], [120, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[119, 3, 1, "", "__init__"], [119, 3, 1, "", "calculate_light_sheet_exposure_time"], [119, 3, 1, "", "calculate_readout_time"], [119, 5, 1, "", "camera_controller"], [119, 5, 1, "", "camera_exposure_time"], [119, 5, 1, "", "camera_parameters"], [119, 3, 1, "", "close_camera"], [119, 3, 1, "", "close_image_series"], [119, 5, 1, "", "configuration"], [119, 5, 1, "", "current_frame_idx"], [119, 5, 1, "", "data_buffer"], [119, 3, 1, "", "generate_new_frame"], [119, 3, 1, "", "get_line_interval"], [119, 3, 1, "", "get_minimum_waiting_time"], [119, 3, 1, "", "get_new_frame"], [119, 3, 1, "", "get_offset_variance_maps"], [119, 3, 1, "", "initialize_image_series"], [119, 5, 1, "", "is_acquiring"], [119, 3, 1, "", "load_images"], [119, 5, 1, "", "max_image_height"], [119, 5, 1, "", "max_image_width"], [119, 5, 1, "", "min_image_height"], [119, 5, 1, "", "min_image_width"], [119, 5, 1, "", "num_of_frame"], [119, 4, 1, "", "offset"], [119, 5, 1, "", "pre_frame_idx"], [119, 5, 1, "", "random_image"], [119, 3, 1, "", "report_settings"], [119, 5, 1, "", "serial_number"], [119, 3, 1, "", "set_ROI"], [119, 3, 1, "", "set_binning"], [119, 3, 1, "", "set_exposure_time"], [119, 3, 1, "", "set_line_interval"], [119, 3, 1, "", "set_readout_direction"], [119, 3, 1, "", "set_sensor_mode"], [119, 5, 1, "", "step_image_height"], [119, 5, 1, "", "step_image_width"], [119, 4, 1, "", "variance"], [119, 5, 1, "", "x_pixels"], [119, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "get_property_value"], [120, 3, 1, "", "set_property_value"]], "aslm.model.devices.daq": [[122, 0, 0, "-", "daq_base"], [124, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[123, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[123, 3, 1, "", "__init__"], [123, 3, 1, "", "calculate_all_waveforms"], [123, 5, 1, "", "camera_delay"], [123, 5, 1, "", "camera_delay_percent"], [123, 5, 1, "", "camera_high_time"], [123, 5, 1, "", "camera_pulse_percent"], [123, 5, 1, "", "configuration"], [123, 5, 1, "", "daq_parameters"], [123, 3, 1, "", "enable_microscope"], [123, 5, 1, "", "microscope_name"], [123, 5, 1, "", "remote_focus_ramp_falling"], [123, 5, 1, "", "sample_rate"], [123, 5, 1, "", "sweep_time"], [123, 5, 1, "", "waveform_constants"], [123, 5, 1, "", "waveform_dict"], [123, 5, 1, "", "waveform_expand_num"], [123, 5, 1, "", "waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[125, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[125, 3, 1, "", "__init__"], [125, 3, 1, "", "add_camera"], [125, 5, 1, "", "analog_outputs"], [125, 3, 1, "", "calculate_all_waveforms"], [125, 5, 1, "", "camera"], [125, 5, 1, "", "camera_delay"], [125, 5, 1, "", "camera_delay_percent"], [125, 5, 1, "", "camera_high_time"], [125, 5, 1, "", "camera_pulse_percent"], [125, 3, 1, "", "close_tasks"], [125, 5, 1, "", "configuration"], [125, 3, 1, "", "create_camera_task"], [125, 3, 1, "", "create_galvo_remote_focus_tasks"], [125, 3, 1, "", "create_master_trigger_task"], [125, 5, 1, "", "daq_parameters"], [125, 3, 1, "", "enable_microscope"], [125, 5, 1, "", "is_updating_analog_task"], [125, 5, 1, "", "microscope_name"], [125, 3, 1, "", "prepare_acquisition"], [125, 5, 1, "", "remote_focus_ramp_falling"], [125, 3, 1, "", "run_acquisition"], [125, 5, 1, "", "sample_rate"], [125, 3, 1, "", "set_external_trigger"], [125, 3, 1, "", "start_tasks"], [125, 3, 1, "", "stop_acquisition"], [125, 3, 1, "", "stop_tasks"], [125, 5, 1, "", "sweep_time"], [125, 5, 1, "", "trigger_mode"], [125, 3, 1, "", "update_analog_task"], [125, 5, 1, "", "wait_to_run_lock"], [125, 5, 1, "", "waveform_constants"], [125, 5, 1, "", "waveform_dict"], [125, 5, 1, "", "waveform_expand_num"], [125, 5, 1, "", "waveform_repeat_num"], [125, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[127, 0, 0, "-", "filter_wheel_asi"], [130, 0, 0, "-", "filter_wheel_base"], [132, 0, 0, "-", "filter_wheel_sutter"], [135, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[128, 2, 1, "", "ASIFilterWheel"], [129, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[128, 3, 1, "", "__init__"], [128, 5, 1, "", "active_filter_wheel"], [128, 3, 1, "", "check_if_filter_in_filter_dictionary"], [128, 3, 1, "", "close"], [128, 3, 1, "", "filter_change_delay"], [128, 5, 1, "", "filter_dictionary"], [128, 5, 1, "", "filter_wheel"], [128, 5, 1, "", "filter_wheel_position"], [128, 5, 1, "", "microscope_name"], [128, 5, 1, "", "number_of_filter_wheels"], [128, 3, 1, "", "set_filter"], [128, 5, 1, "", "wait_until_done_delay"], [128, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[131, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[131, 3, 1, "", "__init__"], [131, 3, 1, "", "check_if_filter_in_filter_dictionary"], [131, 5, 1, "", "filter_dictionary"], [131, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[133, 2, 1, "", "SutterFilterWheel"], [134, 5, 1, "", "baudrate"], [134, 1, 1, "", "build_filter_wheel_connection"], [134, 5, 1, "", "comport"], [134, 5, 1, "", "timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[133, 3, 1, "", "__init__"], [133, 3, 1, "", "check_if_filter_in_filter_dictionary"], [133, 3, 1, "", "close"], [133, 5, 1, "", "delay_matrix"], [133, 3, 1, "", "filter_change_delay"], [133, 5, 1, "", "filter_dictionary"], [133, 5, 1, "", "init_finished"], [133, 5, 1, "", "microscope_name"], [133, 5, 1, "", "number_of_filter_wheels"], [133, 3, 1, "", "read"], [133, 5, 1, "", "read_on_init"], [133, 5, 1, "", "serial"], [133, 3, 1, "", "set_filter"], [133, 5, 1, "", "speed"], [133, 5, 1, "", "wait_until_done"], [133, 5, 1, "", "wait_until_done_delay"], [133, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[136, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[136, 3, 1, "", "__init__"], [136, 5, 1, "", "baudrate"], [136, 3, 1, "", "check_if_filter_in_filter_dictionary"], [136, 3, 1, "", "close"], [136, 5, 1, "", "comport"], [136, 3, 1, "", "filter_change_delay"], [136, 5, 1, "id0", "filter_dictionary"], [136, 5, 1, "", "number_of_filter_wheels"], [136, 3, 1, "", "read"], [136, 3, 1, "", "set_filter"], [136, 5, 1, "id1", "wheel_position"]], "aslm.model.devices.galvo": [[138, 0, 0, "-", "galvo_base"], [140, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[139, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[139, 3, 1, "", "__init__"], [139, 3, 1, "", "adjust"], [139, 5, 1, "", "camera_delay_percent"], [139, 3, 1, "", "close_task"], [139, 5, 1, "", "configuration"], [139, 5, 1, "", "device_config"], [139, 5, 1, "", "galvo_max_voltage"], [139, 5, 1, "", "galvo_min_voltage"], [139, 5, 1, "", "galvo_name"], [139, 5, 1, "", "galvo_waveform"], [139, 5, 1, "", "microscope_name"], [139, 3, 1, "", "prepare_task"], [139, 5, 1, "", "remote_focus_ramp_falling"], [139, 5, 1, "", "sample_rate"], [139, 5, 1, "", "samples"], [139, 3, 1, "", "start_task"], [139, 3, 1, "", "stop_task"], [139, 5, 1, "", "sweep_time"], [139, 3, 1, "", "turn_off"], [139, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[141, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[141, 3, 1, "", "__init__"], [141, 3, 1, "", "adjust"], [141, 5, 1, "", "camera_delay_percent"], [141, 3, 1, "", "close_task"], [141, 5, 1, "", "configuration"], [141, 5, 1, "", "device_config"], [141, 5, 1, "", "galvo_max_voltage"], [141, 5, 1, "", "galvo_min_voltage"], [141, 5, 1, "", "galvo_name"], [141, 5, 1, "", "galvo_waveform"], [141, 5, 1, "", "microscope_name"], [141, 3, 1, "", "prepare_task"], [141, 5, 1, "", "remote_focus_ramp_falling"], [141, 5, 1, "", "sample_rate"], [141, 5, 1, "", "samples"], [141, 3, 1, "", "start_task"], [141, 3, 1, "", "stop_task"], [141, 5, 1, "", "sweep_time"], [141, 3, 1, "", "turn_off"], [141, 5, 1, "", "waveform_dict"]], "aslm.model.devices.lasers": [[143, 0, 0, "-", "laser_base"], [145, 0, 0, "-", "laser_synthetic"]], "aslm.model.devices.lasers.laser_base": [[144, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[144, 3, 1, "", "__init__"], [144, 3, 1, "", "close"], [144, 5, 1, "", "configuration"], [144, 5, 1, "", "device_config"], [144, 3, 1, "", "initialize_laser"], [144, 5, 1, "", "microscope_name"], [144, 3, 1, "", "set_power"], [144, 3, 1, "", "turn_off"], [144, 3, 1, "", "turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[146, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[146, 3, 1, "", "__init__"], [146, 3, 1, "", "close"], [146, 5, 1, "", "configuration"], [146, 5, 1, "", "device_config"], [146, 3, 1, "", "initialize_laser"], [146, 5, 1, "", "microscope_name"], [146, 3, 1, "", "set_power"], [146, 3, 1, "", "turn_off"], [146, 3, 1, "", "turn_on"]], "aslm.model.devices.objectives": [[148, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[148, 3, 1, "", "__init__"], [148, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[150, 0, 0, "-", "remote_focus_base"], [152, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[151, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[151, 3, 1, "", "__init__"], [151, 3, 1, "", "adjust"], [151, 5, 1, "", "camera_delay_percent"], [151, 3, 1, "", "close_task"], [151, 5, 1, "", "configuration"], [151, 5, 1, "", "device_config"], [151, 5, 1, "", "microscope_name"], [151, 5, 1, "", "percent_smoothing"], [151, 3, 1, "", "prepare_task"], [151, 5, 1, "", "remote_focus_delay"], [151, 5, 1, "", "remote_focus_max_voltage"], [151, 5, 1, "", "remote_focus_min_voltage"], [151, 5, 1, "", "remote_focus_ramp_falling"], [151, 5, 1, "", "sample_rate"], [151, 5, 1, "", "samples"], [151, 3, 1, "", "start_task"], [151, 3, 1, "", "stop_task"], [151, 5, 1, "", "sweep_time"], [151, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[153, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[153, 3, 1, "", "__init__"], [153, 3, 1, "", "adjust"], [153, 5, 1, "", "camera_delay_percent"], [153, 3, 1, "", "close_task"], [153, 5, 1, "", "configuration"], [153, 5, 1, "", "device_config"], [153, 5, 1, "", "microscope_name"], [153, 3, 1, "", "move"], [153, 5, 1, "", "percent_smoothing"], [153, 3, 1, "", "prepare_task"], [153, 5, 1, "", "remote_focus_delay"], [153, 5, 1, "", "remote_focus_max_voltage"], [153, 5, 1, "", "remote_focus_min_voltage"], [153, 5, 1, "", "remote_focus_ramp_falling"], [153, 5, 1, "", "sample_rate"], [153, 5, 1, "", "samples"], [153, 3, 1, "", "start_task"], [153, 3, 1, "", "stop_task"], [153, 5, 1, "", "sweep_time"], [153, 5, 1, "", "waveform_dict"]], "aslm.model.devices.shutter": [[155, 0, 0, "-", "laser_shutter_base"], [157, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[156, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[156, 3, 1, "", "__init__"], [156, 3, 1, "", "close_shutter"], [156, 3, 1, "", "open_shutter"], [156, 5, 1, "", "shutter_state"], [156, 4, 1, "", "state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[158, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[158, 3, 1, "", "__init__"], [158, 3, 1, "", "close_shutter"], [158, 3, 1, "", "open_shutter"], [158, 5, 1, "", "shutter_state"], [158, 4, 1, "", "state"]], "aslm.model.devices.stages": [[160, 0, 0, "-", "stage_asi"], [163, 0, 0, "-", "stage_base"], [165, 0, 0, "-", "stage_galvo"], [167, 0, 0, "-", "stage_mcl"], [170, 0, 0, "-", "stage_pi"], [173, 0, 0, "-", "stage_sutter"], [176, 0, 0, "-", "stage_synthetic"], [178, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[161, 2, 1, "", "ASIStage"], [162, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[161, 3, 1, "", "__init__"], [161, 5, 1, "", "axes"], [161, 5, 1, "", "axes_mapping"], [161, 3, 1, "", "close"], [161, 3, 1, "", "get_abs_position"], [161, 3, 1, "", "get_axis_position"], [161, 3, 1, "", "get_position_dict"], [161, 3, 1, "", "get_speed"], [161, 3, 1, "", "move_absolute"], [161, 3, 1, "", "move_axis_absolute"], [161, 3, 1, "", "report_position"], [161, 3, 1, "", "scanr"], [161, 3, 1, "", "set_speed"], [161, 5, 1, "", "stage_feedback"], [161, 5, 1, "", "stage_limits"], [161, 3, 1, "", "start_scan"], [161, 3, 1, "", "stop"], [161, 3, 1, "", "stop_scan"], [161, 5, 1, "", "tiger_controller"], [161, 3, 1, "", "verify_abs_position"], [161, 3, 1, "", "verify_move"]], "aslm.model.devices.stages.stage_base": [[164, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[164, 3, 1, "", "__init__"], [164, 5, 1, "", "axes"], [164, 5, 1, "", "axes_mapping"], [164, 3, 1, "", "close"], [164, 3, 1, "", "get_abs_position"], [164, 3, 1, "", "get_position_dict"], [164, 5, 1, "", "stage_feedback"], [164, 5, 1, "", "stage_limits"], [164, 3, 1, "", "stop"], [164, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[166, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[166, 3, 1, "", "__init__"], [166, 5, 1, "", "axes"], [166, 5, 1, "", "axes_channels"], [166, 5, 1, "", "axes_mapping"], [166, 3, 1, "", "calculate_waveform"], [166, 5, 1, "", "camera_delay_percent"], [166, 3, 1, "", "close"], [166, 5, 1, "", "configuration"], [166, 5, 1, "", "daq"], [166, 5, 1, "", "exposure_times"], [166, 5, 1, "", "galvo_max_voltage"], [166, 5, 1, "", "galvo_min_voltage"], [166, 3, 1, "", "get_abs_position"], [166, 3, 1, "", "get_position_dict"], [166, 5, 1, "", "microscope_name"], [166, 3, 1, "", "move_absolute"], [166, 3, 1, "", "move_axis_absolute"], [166, 5, 1, "", "remote_focus_delay"], [166, 5, 1, "", "remote_focus_ramp_falling"], [166, 3, 1, "", "report_position"], [166, 5, 1, "", "sample_rate"], [166, 5, 1, "", "samples"], [166, 5, 1, "", "stage_feedback"], [166, 5, 1, "", "stage_limits"], [166, 3, 1, "", "stop"], [166, 5, 1, "", "sweep_time"], [166, 5, 1, "", "sweep_times"], [166, 5, 1, "", "trigger_source"], [166, 3, 1, "", "verify_abs_position"], [166, 5, 1, "", "volts_per_micron"], [166, 5, 1, "", "waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[168, 2, 1, "", "MCLStage"], [169, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[168, 3, 1, "", "__init__"], [168, 5, 1, "", "axes"], [168, 5, 1, "", "axes_mapping"], [168, 3, 1, "", "close"], [168, 3, 1, "", "get_abs_position"], [168, 3, 1, "", "get_position_dict"], [168, 5, 1, "", "handle"], [168, 5, 1, "", "mcl_controller"], [168, 3, 1, "", "move_absolute"], [168, 3, 1, "", "move_axis_absolute"], [168, 3, 1, "", "report_position"], [168, 5, 1, "", "stage_feedback"], [168, 5, 1, "", "stage_limits"], [168, 3, 1, "", "stop"], [168, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[171, 2, 1, "", "PIStage"], [172, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[171, 3, 1, "", "__init__"], [171, 5, 1, "", "axes"], [171, 5, 1, "", "axes_mapping"], [171, 3, 1, "", "close"], [171, 3, 1, "", "get_abs_position"], [171, 3, 1, "", "get_position_dict"], [171, 3, 1, "", "move_absolute"], [171, 3, 1, "", "move_axis_absolute"], [171, 5, 1, "", "pi_axes"], [171, 5, 1, "", "pi_device"], [171, 5, 1, "", "pi_tools"], [171, 3, 1, "", "report_position"], [171, 5, 1, "", "stage_feedback"], [171, 5, 1, "", "stage_limits"], [171, 3, 1, "", "stop"], [171, 3, 1, "", "verify_abs_position"], [171, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[174, 2, 1, "", "SutterStage"], [175, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[174, 3, 1, "", "__init__"], [174, 5, 1, "", "axes"], [174, 5, 1, "", "axes_mapping"], [174, 3, 1, "", "close"], [174, 5, 1, "", "device_axes"], [174, 3, 1, "", "get_abs_position"], [174, 3, 1, "", "get_position_dict"], [174, 3, 1, "", "move_absolute"], [174, 3, 1, "", "move_axis_absolute"], [174, 3, 1, "", "report_position"], [174, 5, 1, "", "resolution"], [174, 5, 1, "", "speed"], [174, 5, 1, "", "stage"], [174, 5, 1, "", "stage_feedback"], [174, 5, 1, "", "stage_limits"], [174, 5, 1, "", "stage_x_pos"], [174, 5, 1, "", "stage_y_pos"], [174, 5, 1, "", "stage_z_pos"], [174, 3, 1, "", "stop"], [174, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[177, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[177, 3, 1, "", "__init__"], [177, 5, 1, "", "axes"], [177, 5, 1, "", "axes_mapping"], [177, 3, 1, "", "close"], [177, 5, 1, "", "default_speed"], [177, 3, 1, "", "get_abs_position"], [177, 3, 1, "", "get_axis_position"], [177, 3, 1, "", "get_position_dict"], [177, 3, 1, "", "get_speed"], [177, 3, 1, "", "load_sample"], [177, 3, 1, "", "move_absolute"], [177, 3, 1, "", "move_axis_absolute"], [177, 3, 1, "", "report_position"], [177, 3, 1, "", "scanr"], [177, 3, 1, "", "set_speed"], [177, 5, 1, "", "stage_feedback"], [177, 5, 1, "", "stage_limits"], [177, 3, 1, "", "start_scan"], [177, 3, 1, "", "stop"], [177, 3, 1, "", "stop_scan"], [177, 3, 1, "", "unload_sample"], [177, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[179, 2, 1, "", "TLKIMStage"], [180, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[179, 3, 1, "", "__init__"], [179, 5, 1, "", "axes"], [179, 5, 1, "", "axes_mapping"], [179, 3, 1, "", "close"], [179, 3, 1, "", "get_abs_position"], [179, 3, 1, "", "get_position_dict"], [179, 5, 1, "", "kim_axes"], [179, 5, 1, "", "kim_controller"], [179, 3, 1, "", "move_absolute"], [179, 3, 1, "", "move_axis_absolute"], [179, 3, 1, "", "report_position"], [179, 5, 1, "", "serial_number"], [179, 5, 1, "", "stage_feedback"], [179, 5, 1, "", "stage_limits"], [179, 3, 1, "", "stop"], [179, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[182, 0, 0, "-", "zoom_base"], [184, 0, 0, "-", "zoom_dynamixel"], [187, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[183, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[183, 3, 1, "", "__init__"], [183, 3, 1, "", "build_stage_dict"], [183, 5, 1, "", "configuration"], [183, 3, 1, "", "move"], [183, 3, 1, "", "read_position"], [183, 3, 1, "", "set_zoom"], [183, 5, 1, "", "zoomdict"], [183, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[185, 2, 1, "", "DynamixelZoom"], [186, 1, 1, "", "build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[185, 3, 1, "", "__init__"], [185, 5, 1, "", "addr_mx_goal_position"], [185, 5, 1, "", "addr_mx_moving_speed"], [185, 5, 1, "", "addr_mx_p_gain"], [185, 5, 1, "", "addr_mx_present_position"], [185, 5, 1, "", "addr_mx_torque_enable"], [185, 5, 1, "", "addr_mx_torque_limit"], [185, 3, 1, "", "build_stage_dict"], [185, 5, 1, "", "configuration"], [185, 5, 1, "", "dynamixel"], [185, 5, 1, "", "goal_position_offset"], [185, 5, 1, "", "id"], [185, 3, 1, "", "move"], [185, 5, 1, "", "port_num"], [185, 3, 1, "", "read_position"], [185, 3, 1, "", "set_zoom"], [185, 5, 1, "", "sleeptime"], [185, 5, 1, "", "timeout"], [185, 5, 1, "", "torque_disable"], [185, 5, 1, "", "torque_enable"], [185, 5, 1, "", "zoomdict"], [185, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_synthetic": [[188, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[188, 3, 1, "", "__init__"], [188, 3, 1, "", "build_stage_dict"], [188, 5, 1, "", "configuration"], [188, 3, 1, "", "move"], [188, 3, 1, "", "read_position"], [188, 3, 1, "", "set_zoom"], [188, 5, 1, "", "zoomdict"], [188, 5, 1, "", "zoomvalue"]], "aslm.model.dummy": [[190, 2, 1, "", "DummyController"], [191, 2, 1, "", "DummyDevice"], [192, 2, 1, "", "DummyMicroscope"], [193, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[190, 3, 1, "", "__init__"], [190, 3, 1, "", "clear"], [190, 3, 1, "", "execute"], [190, 3, 1, "", "pop"]], "aslm.model.dummy.DummyDevice": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "clear"], [191, 5, 1, "", "data_pipe"], [191, 3, 1, "", "generate_message"], [191, 3, 1, "", "listen"], [191, 3, 1, "", "sendout"], [191, 3, 1, "id0", "setup"], [191, 3, 1, "", "shutdown"], [191, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyMicroscope": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "calculate_exposure_sweep_times"], [192, 5, 1, "", "data_pipe"], [192, 3, 1, "", "setup"], [192, 3, 1, "", "shutdown"], [192, 5, 1, "", "signal_pipe"]], "aslm.model.dummy.DummyModel": [[193, 3, 1, "", "__init__"], [193, 5, 1, "", "configuration"], [193, 5, 1, "", "data"], [193, 5, 1, "", "data_container"], [193, 3, 1, "id0", "data_func"], [193, 5, 1, "", "data_pipe"], [193, 5, 1, "", "data_thread"], [193, 5, 1, "", "frame_id"], [193, 5, 1, "", "signal_container"], [193, 3, 1, "", "signal_func"], [193, 5, 1, "", "signal_pipe"], [193, 5, 1, "", "signal_thread"], [193, 3, 1, "", "start"], [193, 5, 1, "", "stop_flag"]], "aslm.model.features": [[195, 0, 0, "-", "auto_tile_scan"], [197, 0, 0, "-", "autofocus"], [200, 0, 0, "-", "common_features"], [211, 0, 0, "-", "constant_velocity_acquisition"], [213, 0, 0, "-", "dummy_detective"], [215, 0, 0, "-", "feature_container"], [226, 0, 0, "-", "feature_related_functions"], [231, 0, 0, "-", "image_writer"], [233, 0, 0, "-", "remove_empty_tiles"], [239, 0, 0, "-", "restful_features"], [242, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[196, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "end_func_data"], [196, 3, 1, "", "end_func_signal"], [196, 3, 1, "", "in_func_data"], [196, 3, 1, "", "in_func_signal"], [196, 3, 1, "", "pre_func_data"], [196, 3, 1, "", "pre_func_signal"]], "aslm.model.features.autofocus": [[198, 2, 1, "", "Autofocus"], [199, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[198, 3, 1, "", "__init__"], [198, 5, 1, "", "autofocus_frame_queue"], [198, 5, 1, "", "autofocus_pos_queue"], [198, 5, 1, "", "coarse_step_size"], [198, 5, 1, "", "coarse_steps"], [198, 3, 1, "", "end_func_data"], [198, 3, 1, "", "end_func_signal"], [198, 5, 1, "", "f_frame_id"], [198, 5, 1, "", "f_pos"], [198, 5, 1, "", "fine_pos_offset"], [198, 5, 1, "", "fine_step_size"], [198, 5, 1, "", "focus_pos"], [198, 5, 1, "", "frame_num"], [198, 3, 1, "", "get_autofocus_frame_num"], [198, 5, 1, "", "get_frames_num"], [198, 3, 1, "", "get_steps"], [198, 3, 1, "", "in_func_data"], [198, 3, 1, "", "in_func_signal"], [198, 5, 1, "", "init_pos"], [198, 5, 1, "", "max_entropy"], [198, 5, 1, "", "plot_data"], [198, 3, 1, "", "pre_func_data"], [198, 3, 1, "", "pre_func_signal"], [198, 3, 1, "", "robust_autofocus"], [198, 3, 1, "id0", "run"], [198, 5, 1, "", "signal_id"], [198, 5, 1, "", "target_channel"], [198, 5, 1, "", "target_frame_id"], [198, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[201, 2, 1, "", "ChangeResolution"], [202, 2, 1, "", "ConProAcquisition"], [203, 2, 1, "", "FindTissueSimple2D"], [204, 2, 1, "", "LoopByCount"], [205, 2, 1, "", "MoveToNextPositionInMultiPositionTable"], [206, 2, 1, "", "PrepareNextChannel"], [207, 2, 1, "", "Snap"], [208, 2, 1, "", "StackPause"], [209, 2, 1, "", "WaitToContinue"], [210, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "cleanup"], [201, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ConProAcquisition": [[202, 3, 1, "", "__init__"], [202, 3, 1, "", "generate_meta_data"], [202, 3, 1, "", "pre_signal_func"], [202, 3, 1, "", "signal_end"], [202, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.FindTissueSimple2D": [[203, 3, 1, "", "__init__"], [203, 3, 1, "", "data_func"]], "aslm.model.features.common_features.LoopByCount": [[204, 3, 1, "", "__init__"], [204, 3, 1, "", "data_func"], [204, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[205, 3, 1, "", "__init__"], [205, 3, 1, "", "cleanup"], [205, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.PrepareNextChannel": [[206, 3, 1, "", "__init__"], [206, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.Snap": [[207, 3, 1, "", "__init__"], [207, 3, 1, "", "data_func"]], "aslm.model.features.common_features.StackPause": [[208, 3, 1, "", "__init__"], [208, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.WaitToContinue": [[209, 3, 1, "", "__init__"], [209, 3, 1, "", "cleanup"], [209, 3, 1, "", "data_func"], [209, 3, 1, "", "pre_data_func"], [209, 3, 1, "", "pre_signal_func"], [209, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ZStackAcquisition": [[210, 3, 1, "", "__init__"], [210, 3, 1, "", "cleanup_data_func"], [210, 3, 1, "", "end_data_func"], [210, 3, 1, "", "in_data_func"], [210, 3, 1, "", "pre_data_func"], [210, 3, 1, "", "pre_signal_func"], [210, 3, 1, "", "signal_end"], [210, 3, 1, "", "signal_func"], [210, 3, 1, "", "update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[212, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[212, 3, 1, "", "__init__"], [212, 3, 1, "", "cleanup"], [212, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[214, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[214, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[216, 2, 1, "", "Container"], [217, 2, 1, "", "DataContainer"], [218, 2, 1, "", "DataNode"], [219, 2, 1, "", "SignalContainer"], [220, 2, 1, "", "SignalNode"], [221, 2, 1, "", "TreeNode"], [222, 1, 1, "", "dummy_True"], [223, 1, 1, "", "dummy_func"], [224, 1, 1, "", "get_registered_funcs"], [225, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[216, 3, 1, "", "__init__"], [216, 3, 1, "", "cleanup"], [216, 3, 1, "", "reset"]], "aslm.model.features.feature_container.DataContainer": [[217, 3, 1, "", "__init__"], [217, 3, 1, "", "cleanup"], [217, 3, 1, "", "reset"], [217, 3, 1, "", "run"]], "aslm.model.features.feature_container.DataNode": [[218, 3, 1, "", "__init__"], [218, 3, 1, "", "run"], [218, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.SignalContainer": [[219, 3, 1, "", "__init__"], [219, 3, 1, "", "cleanup"], [219, 3, 1, "", "reset"], [219, 3, 1, "", "run"]], "aslm.model.features.feature_container.SignalNode": [[220, 3, 1, "", "__init__"], [220, 3, 1, "", "run"], [220, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.TreeNode": [[221, 3, 1, "", "__init__"], [221, 3, 1, "", "set_property"]], "aslm.model.features.feature_related_functions": [[227, 2, 1, "", "SharedList"], [228, 1, 1, "", "convert_feature_list_to_str"], [229, 1, 1, "", "convert_str_to_feature_list"], [230, 1, 1, "", "load_dynamic_parameter_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[227, 3, 1, "", "__init__"], [227, 3, 1, "", "append"], [227, 3, 1, "", "clear"], [227, 3, 1, "", "copy"], [227, 3, 1, "", "count"], [227, 3, 1, "", "extend"], [227, 3, 1, "", "index"], [227, 3, 1, "", "insert"], [227, 3, 1, "", "pop"], [227, 3, 1, "", "remove"], [227, 3, 1, "", "reverse"], [227, 3, 1, "", "sort"]], "aslm.model.features.image_writer": [[232, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[232, 3, 1, "", "__init__"], [232, 3, 1, "", "calculate_and_check_disk_space"], [232, 3, 1, "id0", "close"], [232, 5, 1, "", "config_table"], [232, 5, 1, "", "current_time_point"], [232, 5, 1, "", "data_buffer"], [232, 5, 1, "", "data_source"], [232, 5, 1, "", "file_type"], [232, 3, 1, "id1", "generate_image_name"], [232, 3, 1, "id2", "generate_meta_data"], [232, 5, 1, "", "mip"], [232, 5, 1, "", "mip_directory"], [232, 5, 1, "", "model"], [232, 5, 1, "", "num_of_channels"], [232, 5, 1, "", "save_directory"], [232, 3, 1, "id3", "save_image"], [232, 5, 1, "", "sub_dir"]], "aslm.model.features.remove_empty_tiles": [[234, 2, 1, "", "DetectTissueInStack"], [235, 2, 1, "", "DetectTissueInStackAndRecord"], [236, 2, 1, "", "RemoveEmptyPositions"], [237, 1, 1, "", "detect_tissue"], [238, 1, 1, "", "detect_tissue2"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[234, 3, 1, "", "__init__"], [234, 3, 1, "", "end_func_data"], [234, 3, 1, "", "end_func_signal"], [234, 3, 1, "", "in_func_data"], [234, 3, 1, "", "in_func_signal"], [234, 3, 1, "", "pre_func_data"], [234, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[235, 3, 1, "", "__init__"], [235, 3, 1, "", "end_func_data"], [235, 3, 1, "", "end_func_signal"], [235, 3, 1, "", "in_func_data"], [235, 3, 1, "", "in_func_signal"], [235, 3, 1, "", "pre_func_data"], [235, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[236, 3, 1, "", "__init__"], [236, 3, 1, "", "signal_func"]], "aslm.model.features.restful_features": [[240, 2, 1, "", "IlastikSegmentation"], [241, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[240, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[243, 2, 1, "", "VolumeSearch"], [244, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[243, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[246, 0, 0, "-", "bdv_metadata"], [248, 0, 0, "-", "metadata"], [251, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[247, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[247, 3, 1, "", "__init__"], [247, 3, 1, "", "affine_matrix_to_stage_positions"], [247, 3, 1, "", "parse_xml"], [247, 4, 1, "", "shape"], [247, 3, 1, "", "stage_positions_to_affine_matrix"], [247, 3, 1, "", "to_xml"], [247, 4, 1, "", "voxel_size"], [247, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[249, 2, 1, "", "Metadata"], [250, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[249, 3, 1, "", "__init__"], [249, 4, 1, "", "shape"], [249, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[250, 3, 1, "", "__init__"], [250, 4, 1, "", "shape"], [250, 3, 1, "", "to_xml"], [250, 4, 1, "", "voxel_size"], [250, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[252, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[252, 3, 1, "", "__init__"], [252, 3, 1, "", "ome_tiff_xml_dict"], [252, 4, 1, "", "shape"], [252, 3, 1, "", "to_xml"], [252, 4, 1, "", "voxel_size"], [252, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[254, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[254, 3, 1, "", "__init__"], [254, 3, 1, "", "assemble_device_config_lists"], [254, 3, 1, "", "calculate_all_waveform"], [254, 3, 1, "", "calculate_exposure_sweep_times"], [254, 5, 1, "", "configuration"], [254, 5, 1, "", "daq"], [254, 5, 1, "", "data_buffer"], [254, 3, 1, "id0", "end_acquisition"], [254, 3, 1, "id1", "get_readout_time"], [254, 3, 1, "", "get_stage_position"], [254, 3, 1, "", "load_and_start_devices"], [254, 5, 1, "", "microscope_name"], [254, 3, 1, "", "move_stage"], [254, 3, 1, "id2", "move_stage_offset"], [254, 5, 1, "", "number_of_frames"], [254, 3, 1, "", "prepare_acquisition"], [254, 3, 1, "", "prepare_next_channel"], [254, 3, 1, "", "stop_stage"], [254, 3, 1, "", "terminate"], [254, 3, 1, "", "turn_off_lasers"], [254, 3, 1, "", "turn_on_laser"], [254, 3, 1, "id3", "update_data_buffer"]], "aslm.model.model": [[256, 2, 1, "", "Model"]], "aslm.model.model.Model": [[256, 5, 1, "", "USE_GPU"], [256, 3, 1, "", "__init__"], [256, 5, 1, "", "args"], [256, 3, 1, "", "change_resolution"], [256, 5, 1, "", "configuration"], [256, 3, 1, "id0", "create_pipe"], [256, 3, 1, "id1", "end_acquisition"], [256, 5, 1, "", "event_queue"], [256, 3, 1, "", "get_active_microscope"], [256, 3, 1, "", "get_camera_line_interval_and_exposure_time"], [256, 3, 1, "id2", "get_data_buffer"], [256, 3, 1, "", "get_feature_list"], [256, 3, 1, "", "get_microscope_info"], [256, 3, 1, "", "get_offset_variance_maps"], [256, 3, 1, "", "get_readout_time"], [256, 3, 1, "", "get_stage_position"], [256, 3, 1, "", "load_feature_list_from_str"], [256, 3, 1, "", "load_feature_records"], [256, 3, 1, "", "load_images"], [256, 3, 1, "id3", "move_stage"], [256, 3, 1, "", "pause_data_thread"], [256, 3, 1, "id4", "prepare_acquisition"], [256, 3, 1, "id5", "release_pipe"], [256, 3, 1, "", "resume_data_thread"], [256, 3, 1, "", "run_acquisition"], [256, 3, 1, "id6", "run_command"], [256, 3, 1, "id7", "run_data_process"], [256, 3, 1, "id8", "run_live_acquisition"], [256, 3, 1, "", "run_single_acquisition"], [256, 3, 1, "", "run_single_channel_acquisition"], [256, 3, 1, "", "run_single_channel_acquisition_with_features"], [256, 3, 1, "", "run_z_stack_acquisition"], [256, 3, 1, "id9", "snap_image"], [256, 3, 1, "", "stop_stage"], [256, 3, 1, "id10", "update_data_buffer"], [256, 3, 1, "", "update_ilastik_setting"]], "aslm.model.waveforms": [[258, 1, 1, "", "camera_exposure"], [259, 1, 1, "", "dc_value"], [260, 1, 1, "", "remote_focus_ramp"], [261, 1, 1, "", "sawtooth"], [262, 1, 1, "", "sine_wave"], [263, 1, 1, "", "single_pulse"], [264, 1, 1, "", "smooth_waveform"], [265, 1, 1, "", "square"]], "aslm.tools": [[267, 0, 0, "-", "beams"], [271, 0, 0, "-", "common_dict_tools"], [273, 0, 0, "-", "common_functions"], [279, 0, 0, "-", "decorators"], [282, 0, 0, "-", "file_functions"], [287, 0, 0, "-", "image"], [290, 0, 0, "-", "image_loaders"], [292, 0, 0, "-", "main_functions"], [296, 0, 0, "-", "multipos_table_tools"], [301, 0, 0, "-", "project_stats"], [303, 0, 0, "-", "sdf"], [307, 0, 0, "-", "waveform_template_funcs"], [309, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[268, 1, 1, "", "fit_gaussian_beam_error"], [269, 1, 1, "", "fit_gaussian_beam_mse"], [270, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[272, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[274, 2, 1, "", "VariableWithLock"], [275, 1, 1, "", "build_ref_name"], [276, 1, 1, "", "combine_funcs"], [277, 1, 1, "", "copy_proxy_object"], [278, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[274, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[280, 2, 1, "", "FeatureList"], [281, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[280, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[283, 1, 1, "", "create_save_path"], [284, 1, 1, "", "delete_folder"], [285, 1, 1, "", "load_yaml_file"], [286, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[288, 1, 1, "", "create_arrow_image"], [289, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[291, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[291, 3, 1, "", "__init__"], [291, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[293, 1, 1, "", "create_parser"], [294, 1, 1, "", "evaluate_parser_input_arguments"], [295, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[297, 1, 1, "", "calc_num_tiles"], [298, 1, 1, "", "compute_tiles_from_bounding_box"], [299, 1, 1, "", "sign"], [300, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[302, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[304, 1, 1, "", "box"], [305, 1, 1, "", "sphere"], [306, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[308, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[310, 1, 1, "", "dict_to_xml"], [311, 1, 1, "", "parse_xml"]], "aslm.view": [[313, 0, 0, "-", "custom_widgets"], [314, 0, 0, "-", "main_window_content"], [315, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 319, 322, 325], "config": [0, 1, 2, 3, 4, 5, 6, 7, 8], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_experiment_config": 7, "verify_waveform_const": 8, "control": [9, 10, 11, 12, 13, 14, 15, 329], "configuration_control": [10, 11], "configurationcontrol": 11, "thread_pool": [12, 13, 14, 15], "selflockthread": 13, "synchronizedthreadpool": 14, "threadwaitlist": 15, "model": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 323], "analysi": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], "boundary_detect": [18, 19, 20, 21, 22], "binary_detect": 19, "find_tissue_boundary_2d": 20, "has_tissu": 21, "map_boundari": 22, "camera": [23, 24, 25, 26, 27, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 327, 329], "compute_flatfield_map": 24, "compute_noise_sigma": 25, "compute_scmos_offset_and_variance_map": 26, "compute_signal_to_nois": 27, "detect": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37], "add_median_bord": 29, "combine_imag": 30, "log_detect": 31, "make_inside_imag": 32, "make_normalized_imag": 33, "make_sphere_3d": 34, "multiscale_surface_filter_3d": 35, "surface_filter_gauss_3d": 36, "three_level_segment": 37, "image_contrast": [38, 39, 40, 41, 42, 43], "estimate_and_correct_flatfield": 39, "estimate_image_resolut": 40, "fast_normalized_dct_shannon_entropi": 41, "image_intens": 42, "normalized_dct_shannon_entropi": 43, "image_decorrel": [44, 45, 46, 47, 48, 49, 50, 51, 52], "apodize_imag": 45, "get_correlation_coeffici": 46, "get_decorrelation_local_maxima": 47, "get_image_decorrel": 48, "get_radial_averag": 49, "image_to_polar": 50, "linear_map": 51, "main_image_decorr": 52, "image_transform": [53, 54, 55], "deskew_imag": 54, "initiate_gpu": 55, "spectral_unmix": [56, 57], "to_do": 57, "concurr": [58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76], "concurrency_tool": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "custodythread": 60, "fancythread": 61, "mytestclass": 62, "objectinsubprocess": 63, "politethread": 64, "resultthread": 65, "sharedndarrai": 66, "testobjectinsubprocess": 67, "testresultthreadandcustodythread": 68, "testsharedndarrai": 69, "proxy_object": [70, 71, 72, 73, 74], "proxymanag": 71, "proxyobject": 72, "launch_custody_thread": 73, "launch_thread": 74, "write_paramet": [75, 76], "write_param": 76, "data_sourc": [77, 78, 79, 80, 81, 82, 83, 84], "bdv_data_sourc": [78, 79], "bigdataviewerdatasourc": 79, "datasourc": 81, "get_data_sourc": 82, "tiff_data_sourc": [83, 84], "tiffdatasourc": 84, "device_startup_funct": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102], "dummydeviceconnect": 86, "auto_redi": 87, "device_not_found": 88, "load_camera_connect": 89, "load_devic": 90, "load_filter_wheel_connect": 91, "load_stag": 92, "load_zoom_connect": 93, "start_camera": 94, "start_daq": 95, "start_filter_wheel": 96, "start_galvo": 97, "start_las": 98, "start_remote_focus_devic": 99, "start_shutt": 100, "start_stag": 101, "start_zoom": 102, "devic": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "api": [104, 105, 106, 107, 108, 109, 318, 327], "coher": [105, 329], "dynamixel": [106, 107, 108, 329], "dynamixel_funct": [107, 108], "create_mock_dxl_devic": 108, "omicron": [109, 329], "camera_bas": [111, 112], "camerabas": 112, "camera_hamamatsu": [113, 114, 115], "hamamatsuorca": 114, "hamamatsuorcalightn": 115, "camera_photometr": [116, 117], "photometricskinetix": 117, "camera_synthet": [118, 119, 120], "syntheticcamera": 119, "syntheticcameracontrol": 120, "daq": [121, 122, 123, 124, 125, 327], "daq_bas": [122, 123], "daqbas": 123, "daq_synthet": [124, 125], "syntheticdaq": 125, "filter_wheel": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136], "filter_wheel_asi": [127, 128, 129], "asifilterwheel": 128, "build_filter_wheel_connect": [129, 134], "filter_wheel_bas": [130, 131], "filterwheelbas": 131, "filter_wheel_sutt": [132, 133, 134], "sutterfilterwheel": 133, "filter_wheel_synthet": [135, 136], "syntheticfilterwheel": 136, "galvo": [137, 138, 139, 140, 141, 327, 329], "galvo_bas": [138, 139], "galvobas": 139, "galvo_synthet": [140, 141], "syntheticgalvo": 141, "laser": [142, 143, 144, 145, 146, 327, 329], "laser_bas": [143, 144], "laserbas": 144, "laser_synthet": [145, 146], "syntheticlas": 146, "object": [147, 148, 324], "remote_focu": [149, 150, 151, 152, 153], "remote_focus_bas": [150, 151], "remotefocusbas": 151, "remote_focus_synthet": [152, 153], "syntheticremotefocu": 153, "shutter": [154, 155, 156, 157, 158, 327, 329], "laser_shutter_bas": [155, 156], "shutterbas": 156, "laser_shutter_synthet": [157, 158], "syntheticshutt": 158, "stage": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 319, 327, 329], "stage_asi": [160, 161, 162], "asistag": 161, "build_asi_stage_connect": 162, "stage_bas": [163, 164], "stagebas": 164, "stage_galvo": [165, 166], "galvonistag": 166, "stage_mcl": [167, 168, 169], "mclstage": 168, "build_mclstage_connect": 169, "stage_pi": [170, 171, 172], "pistag": 171, "build_pistage_connect": 172, "stage_sutt": [173, 174, 175], "sutterstag": 174, "build_mp285_connect": 175, "stage_synthet": [176, 177], "syntheticstag": 177, "stage_tl_kcube_inerti": [178, 179, 180], "tlkimstag": 179, "build_tlkimstage_connect": 180, "zoom": [181, 182, 183, 184, 185, 186, 187, 188, 327, 329], "zoom_bas": [182, 183], "zoombas": 183, "zoom_dynamixel": [184, 185, 186], "dynamixelzoom": 185, "build_dynamixel_zoom_connect": 186, "zoom_synthet": [187, 188], "syntheticzoom": 188, "dummi": [189, 190, 191, 192, 193], "dummycontrol": 190, "dummydevic": 191, "dummymicroscop": 192, "dummymodel": 193, "featur": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 323, 324], "auto_tile_scan": [195, 196], "calculatefocusrang": 196, "paramet": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 234, 235, 236, 237, 238, 324], "attribut": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 219, 220, 221, 227, 234, 235, 236], "method": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 227, 234, 235, 236], "note": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 237, 238], "return": [196, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 218, 220, 221, 222, 223, 224, 225, 228, 234, 235, 236, 237, 238], "autofocu": [197, 198, 199], "power_t": 199, "common_featur": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "changeresolut": 201, "conproacquisit": 202, "findtissuesimple2d": 203, "loopbycount": 204, "movetonextpositioninmultipositiont": 205, "preparenextchannel": 206, "snap": 207, "stackpaus": 208, "waittocontinu": 209, "zstackacquisit": 210, "constant_velocity_acquisit": [211, 212], "constantvelocityacquisit": 212, "dummy_detect": [213, 214], "feature_contain": [215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "contain": [216, 324], "datacontain": 217, "datanod": 218, "signalcontain": 219, "signalnod": 220, "treenod": 221, "dummy_tru": 222, "dummy_func": 223, "get_registered_func": 224, "load_featur": 225, "feature_related_funct": [226, 227, 228, 229, 230], "sharedlist": 227, "convert_feature_list_to_str": 228, "exampl": [228, 230, 237, 319], "convert_str_to_feature_list": 229, "load_dynamic_parameter_funct": 230, "image_writ": [231, 232], "imagewrit": 232, "remove_empty_til": [233, 234, 235, 236, 237, 238], "detecttissueinstack": 234, "detecttissueinstackandrecord": 235, "removeemptyposit": 236, "detect_tissu": 237, "detect_tissue2": 238, "restful_featur": [239, 240, 241], "ilastiksegment": 240, "prepare_servic": 241, "volume_search": [242, 243, 244], "volumesearch": 243, "draw_box": 244, "metadata_sourc": [245, 246, 247, 248, 249, 250, 251, 252], "bdv_metadata": [246, 247], "bigdataviewermetadata": 247, "metadata": [248, 249, 250], "xmlmetadata": 250, "ome_tiff_metadata": [251, 252], "ometiffmetadata": 252, "microscop": [253, 254, 319, 325, 327], "waveform": [257, 258, 259, 260, 261, 262, 263, 264, 265, 327], "camera_exposur": 258, "dc_valu": 259, "remote_focus_ramp": 260, "sawtooth": 261, "sine_wav": 262, "single_puls": 263, "smooth_waveform": 264, "squar": 265, "tool": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "beam": [267, 268, 269, 270], "fit_gaussian_beam_error": 268, "fit_gaussian_beam_ms": 269, "gaussian_beam": 270, "common_dict_tool": [271, 272], "update_stage_dict": 272, "common_funct": [273, 274, 275, 276, 277, 278], "variablewithlock": 274, "build_ref_nam": 275, "combine_func": 276, "copy_proxy_object": 277, "load_module_from_fil": 278, "decor": [279, 280, 281], "featurelist": 280, "function_tim": 281, "file_funct": [282, 283, 284, 285, 286], "create_save_path": 283, "delete_fold": 284, "load_yaml_fil": 285, "save_yaml_fil": 286, "imag": [287, 288, 289], "create_arrow_imag": 288, "text_arrai": 289, "image_load": [290, 291], "lazytiff": 291, "main_funct": [292, 293, 294, 295], "create_pars": 293, "evaluate_parser_input_argu": 294, "identify_gpu": 295, "multipos_table_tool": [296, 297, 298, 299, 300], "calc_num_til": 297, "compute_tiles_from_bounding_box": 298, "sign": 299, "update_t": 300, "project_stat": [301, 302], "countlin": 302, "sdf": [303, 304, 305, 306], "box": 304, "sphere": 305, "volume_from_sdf": 306, "waveform_template_func": [307, 308], "get_waveform_template_paramet": 308, "xml_tool": [309, 310, 311], "dict_to_xml": 310, "parse_xml": 311, "view": [312, 313, 314, 315], "custom_widget": 313, "main_window_cont": 314, "popup": 315, "refer": 318, "configur": [319, 327], "yaml": 319, "hardwar": [319, 321, 327, 329], "section": [319, 327], "gui": [319, 327], "channel": 319, "stack": 319, "acquisit": [319, 329], "timepoint": 319, "contribut": [320, 322], "guidelin": 320, "gener": 320, "principl": 320, "code": 320, "style": 320, "dictionari": 320, "pars": 320, "unit": [320, 321], "test": 320, "develop": 320, "mac": 320, "ad": [321, 323], "new": [321, 323], "scientif": 321, "how": 321, "add": 321, "introduct": 324, "current": 324, "implement": [324, 325], "The": 324, "creat": 324, "custom": 324, "combin": 324, "load": 324, "function": 324, "edit": 324, "delet": 324, "multiscal": 325, "expans": 325, "opm": 325, "v2": 325, "ct": 325, "v1": 325, "spectral": 325, "tirf": 325, "autonom": 326, "softwar": [326, 327, 328], "light": 326, "microscopi": 326, "project": 326, "philosophi": 326, "content": 326, "author": 326, "index": 326, "search": 326, "file": 327, "remot": 327, "focu": 327, "filter": [327, 329], "wheel": [327, 329], "ax": 327, "definit": 327, "joystick": 327, "constant": 327, "other": 327, "templat": 327, "rest": 327, "instal": 328, "download": 328, "git": 328, "setup": 328, "your": 328, "python": 328, "environ": 328, "gpu": 328, "depend": 328, "troubleshoot": 328, "support": 329, "data": 329, "card": 329, "ni": 329, "pcie": 329, "6738": 329, "pxi": 329, "6259": 329, "hamamatsu": 329, "flash": 329, "4": 329, "0": 329, "fusion": 329, "lightn": 329, "photometr": 329, "iri": 329, "15": 329, "voicecoil": 329, "equip": 329, "solut": 329, "thorlab": 329, "blink": 329, "asi": 329, "tiger": 329, "sutter": 329, "physik": 329, "instrument": 329, "analog": 329, "piezo": 329, "etc": 329, "deform": 329, "mirror": 329, "imagin": 329, "optic": 329, "galvanomet": 329, "cambridg": 329, "technologi": 329, "novanta": 329, "scannermax": 329, "mechan": 329, "user": 330, "guid": 330}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_experiment_config": [[7, "aslm-config-config-verify-experiment-config"]], "aslm.config.config.verify_waveform_constants": [[8, "aslm-config-config-verify-waveform-constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[13, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.model": [[16, "module-aslm.model"]], "aslm.model.analysis": [[17, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[18, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[19, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[20, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[21, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[22, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[23, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[24, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[25, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[26, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[27, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[28, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[29, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[30, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[31, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[32, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[33, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[34, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[35, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[36, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[37, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[38, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield": [[39, "aslm-model-analysis-image-contrast-estimate-and-correct-flatfield"]], "aslm.model.analysis.image_contrast.estimate_image_resolution": [[40, "aslm-model-analysis-image-contrast-estimate-image-resolution"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[41, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_contrast.image_intensity": [[42, "aslm-model-analysis-image-contrast-image-intensity"]], "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy": [[43, "aslm-model-analysis-image-contrast-normalized-dct-shannon-entropy"]], "aslm.model.analysis.image_decorrelation": [[44, "module-aslm.model.analysis.image_decorrelation"]], "aslm.model.analysis.image_decorrelation.apodize_image": [[45, "aslm-model-analysis-image-decorrelation-apodize-image"]], "aslm.model.analysis.image_decorrelation.get_correlation_coefficient": [[46, "aslm-model-analysis-image-decorrelation-get-correlation-coefficient"]], "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima": [[47, "aslm-model-analysis-image-decorrelation-get-decorrelation-local-maxima"]], "aslm.model.analysis.image_decorrelation.get_image_decorrelation": [[48, "aslm-model-analysis-image-decorrelation-get-image-decorrelation"]], "aslm.model.analysis.image_decorrelation.get_radial_average": [[49, "aslm-model-analysis-image-decorrelation-get-radial-average"]], "aslm.model.analysis.image_decorrelation.image_to_polar": [[50, "aslm-model-analysis-image-decorrelation-image-to-polar"]], "aslm.model.analysis.image_decorrelation.linear_map": [[51, "aslm-model-analysis-image-decorrelation-linear-map"]], "aslm.model.analysis.image_decorrelation.main_image_decorr": [[52, "aslm-model-analysis-image-decorrelation-main-image-decorr"]], "aslm.model.analysis.image_transform": [[53, "module-aslm.model.analysis.image_transform"]], "aslm.model.analysis.image_transform.deskew_image": [[54, "aslm-model-analysis-image-transform-deskew-image"]], "aslm.model.analysis.image_transform.initiate_gpu": [[55, "aslm-model-analysis-image-transform-initiate-gpu"]], "aslm.model.analysis.spectral_unmixing": [[56, "module-aslm.model.analysis.spectral_unmixing"]], "aslm.model.analysis.spectral_unmixing.to_do": [[57, "aslm-model-analysis-spectral-unmixing-to-do"]], "aslm.model.concurrency": [[58, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[59, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[60, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[61, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[62, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[63, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[64, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[65, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[66, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[67, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[68, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[69, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[70, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[71, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[72, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[73, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[74, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.write_parameters": [[75, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[76, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[77, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[78, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[79, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[80, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[81, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[82, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[83, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[84, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.device_startup_functions": [[85, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[86, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[87, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[88, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[89, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[90, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[91, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[92, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[93, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[94, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[95, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[96, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[97, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[98, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[99, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[100, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[101, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[102, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[103, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[104, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[105, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[106, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[107, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device": [[108, "aslm-model-devices-apis-dynamixel-dynamixel-functions-create-mock-dxl-device"]], "aslm.model.devices.APIs.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[112, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[114, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[115, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[116, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[117, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[118, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[119, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[120, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[121, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[122, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[123, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[124, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[125, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[126, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[127, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[128, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[129, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[130, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[131, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[132, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[133, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[134, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[135, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[136, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[137, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[138, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[139, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[140, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[141, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.lasers": [[142, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[143, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[144, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[145, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[146, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.objectives": [[147, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[148, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[149, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[150, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[151, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[152, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[153, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[154, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[155, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[156, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[157, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[158, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[159, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[160, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[161, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[162, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[163, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[164, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[165, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[166, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[167, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[168, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[169, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[170, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[171, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[172, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[173, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[174, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[175, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[176, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[177, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[178, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[179, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[180, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[181, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[182, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[183, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_dynamixel": [[184, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[185, "aslm-model-devices-zoom-zoom-dynamixel-dynamixelzoom"]], "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection": [[186, "aslm-model-devices-zoom-zoom-dynamixel-build-dynamixel-zoom-connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[187, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[188, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[189, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[190, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[191, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[192, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[193, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[194, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[195, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[196, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "Parameters:": [[196, "parameters"], [196, "id1"], [196, "id2"], [196, "id4"], [196, "id6"], [196, "id8"], [196, "id10"], [201, "parameters"], [201, "id1"], [201, "id2"], [202, "parameters"], [202, "id3"], [202, "id6"], [202, "id8"], [202, "id10"], [203, "parameters"], [203, "id1"], [204, "parameters"], [204, "id1"], [204, "id2"], [205, "parameters"], [205, "id1"], [205, "id2"], [206, "parameters"], [206, "id1"], [207, "parameters"], [207, "id1"], [208, "parameters"], [208, "id1"], [209, "parameters"], [209, "id1"], [209, "id2"], [209, "id4"], [209, "id6"], [209, "id8"], [210, "parameters"], [210, "id1"], [210, "id2"], [210, "id4"], [210, "id6"], [210, "id8"], [210, "id10"], [210, "id12"], [210, "id14"], [216, "parameters"], [217, "parameters"], [217, "id3"], [218, "parameters"], [218, "id3"], [218, "id6"], [219, "parameters"], [219, "id3"], [220, "parameters"], [220, "id3"], [220, "id6"], [221, "parameters"], [221, "id3"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [227, "parameters"], [227, "id1"], [228, "parameters"], [230, "parameters"], [234, "parameters"], [234, "id2"], [235, "parameters"], [235, "id2"], [236, "parameters"], [237, "parameters"], [238, "parameters"]], "Attributes:": [[196, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [207, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [216, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [221, "attributes"], [227, "attributes"], [234, "attributes"], [235, "attributes"], [236, "attributes"]], "Methods:": [[196, "methods"], [201, "methods"], [202, "methods"], [203, "methods"], [204, "methods"], [205, "methods"], [206, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [216, "methods"], [217, "methods"], [218, "methods"], [219, "methods"], [220, "methods"], [221, "methods"], [227, "methods"], [234, "methods"], [235, "methods"], [236, "methods"]], "Notes:": [[196, "notes"], [201, "notes"], [202, "notes"], [203, "notes"], [204, "notes"], [205, "notes"], [206, "notes"], [207, "notes"], [208, "notes"], [209, "notes"], [210, "notes"], [216, "notes"], [217, "notes"], [217, "id6"], [218, "notes"], [219, "notes"], [219, "id6"], [220, "notes"], [221, "notes"], [222, "notes"], [223, "notes"], [224, "notes"], [225, "notes"], [227, "notes"], [228, "notes"], [230, "notes"], [237, "notes"], [238, "notes"]], "Returns:": [[196, "returns"], [196, "id3"], [196, "id5"], [196, "id7"], [196, "id9"], [196, "id11"], [201, "returns"], [201, "id3"], [202, "returns"], [202, "id7"], [202, "id9"], [202, "id11"], [203, "returns"], [204, "returns"], [204, "id3"], [205, "returns"], [205, "id3"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [209, "id3"], [209, "id5"], [209, "id7"], [209, "id9"], [210, "returns"], [210, "id3"], [210, "id5"], [210, "id7"], [210, "id9"], [210, "id11"], [210, "id13"], [210, "id15"], [218, "returns"], [218, "id9"], [220, "returns"], [220, "id9"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [228, "returns"], [234, "returns"], [234, "id1"], [234, "id3"], [234, "id4"], [234, "id5"], [234, "id6"], [235, "returns"], [235, "id1"], [235, "id3"], [235, "id4"], [235, "id5"], [235, "id6"], [236, "returns"], [237, "returns"], [238, "returns"]], "aslm.model.features.autofocus": [[197, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[198, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[199, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[200, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[201, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[202, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[203, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[204, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[205, "aslm-model-features-common-features-movetonextpositioninmultipositiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[206, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[207, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[208, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[209, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[210, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[211, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[212, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[213, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[214, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[215, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[216, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[217, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[218, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[219, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[220, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[221, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[222, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[223, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[224, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[225, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[226, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[227, "aslm-model-features-feature-related-functions-sharedlist"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[228, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "Example:": [[228, "example"], [230, "example"], [237, "example"]], "]": [[228, "id3"], [230, "id5"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[229, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions": [[230, "aslm-model-features-feature-related-functions-load-dynamic-parameter-functions"]], "aslm.model.features.image_writer": [[231, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[232, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.remove_empty_tiles": [[233, "module-aslm.model.features.remove_empty_tiles"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[234, "aslm-model-features-remove-empty-tiles-detecttissueinstack"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[235, "aslm-model-features-remove-empty-tiles-detecttissueinstackandrecord"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[236, "aslm-model-features-remove-empty-tiles-removeemptypositions"]], "aslm.model.features.remove_empty_tiles.detect_tissue": [[237, "aslm-model-features-remove-empty-tiles-detect-tissue"]], "aslm.model.features.remove_empty_tiles.detect_tissue2": [[238, "aslm-model-features-remove-empty-tiles-detect-tissue2"]], "aslm.model.features.restful_features": [[239, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[240, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[241, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[242, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[243, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[244, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[245, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[246, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[247, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[248, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[249, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[250, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[251, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[252, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[253, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[254, "aslm-model-microscope-microscope"]], "aslm.model.model": [[255, "module-aslm.model.model"]], "aslm.model.model.Model": [[256, "aslm-model-model-model"]], "aslm.model.waveforms": [[257, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[258, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[259, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[260, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[261, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[262, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[263, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[264, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[265, "aslm-model-waveforms-square"]], "aslm.tools": [[266, "module-aslm.tools"]], "aslm.tools.beams": [[267, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[268, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[269, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[270, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[271, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[272, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[273, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[274, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[275, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[276, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[277, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[278, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[279, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[280, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[281, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[282, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[283, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[284, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[285, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[286, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[287, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[288, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[289, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[290, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[291, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[292, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[293, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[294, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[295, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[296, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[297, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[298, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[299, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[300, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[301, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[302, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[303, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[304, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[305, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[306, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[307, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[308, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[309, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[310, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[311, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[312, "module-aslm.view"]], "aslm.view.custom_widgets": [[313, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[314, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[315, "module-aslm.view.popups"]], "API Reference": [[318, "api-reference"]], "Configuring ASLM": [[319, "configuring-aslm"]], "Configuration.yaml": [[319, "configuration-yaml"]], "Hardware Section": [[319, "hardware-section"], [327, "hardware-section"]], "Microscope Section": [[319, "microscope-section"], [327, "microscope-section"]], "Configuring stages": [[319, "configuring-stages"]], "GUI Section": [[319, "gui-section"], [327, "gui-section"]], "Channels": [[319, "channels"]], "Stack Acquisition": [[319, "stack-acquisition"]], "Timepoint": [[319, "timepoint"]], "Example YAML Configuration": [[319, "example-yaml-configuration"]], "Contributing Guidelines": [[320, "contributing-guidelines"]], "General principles": [[320, "general-principles"]], "Coding style": [[320, "coding-style"]], "Dictionary Parsing": [[320, "dictionary-parsing"]], "Unit tests": [[320, "unit-tests"]], "Developing with a Mac": [[320, "developing-with-a-mac"]], "Adding New Hardware": [[321, "adding-new-hardware"]], "Scientific Units": [[321, "scientific-units"]], "How to Add New Hardware": [[321, "how-to-add-new-hardware"]], "Contributing to ASLM": [[322, "contributing-to-aslm"]], "Adding New Model Features": [[323, "adding-new-model-features"]], "Feature Container": [[324, "feature-container"]], "Introduction": [[324, "introduction"]], "Currently Implemented Features": [[324, "currently-implemented-features"]], "The Feature Object": [[324, "the-feature-object"]], "Creating Custom Features": [[324, "creating-custom-features"]], "Combining Features": [[324, "combining-features"]], "Loading Custom Functions": [[324, "loading-custom-functions"]], "Editing Function Parameters": [[324, "editing-function-parameters"]], "Deleting Features": [[324, "deleting-features"]], "Microscope Implementations": [[325, "microscope-implementations"]], "Multiscale Microscope": [[325, "multiscale-microscope"]], "Expansion ASLM": [[325, "expansion-aslm"]], "OPM-V2": [[325, "opm-v2"]], "CT-ASLM-V1": [[325, "ct-aslm-v1"]], "CT-ASLM-V2": [[325, "ct-aslm-v2"]], "Spectral TIRF": [[325, "spectral-tirf"]], "Autonomous Software for Light Microscopy": [[326, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[326, "project-philosophy"]], "Contents": [[326, "contents"]], "Authors": [[326, "authors"]], "Index and search": [[326, "index-and-search"]], "Software Configuration": [[327, "software-configuration"]], "Configuration File": [[327, "configuration-file"]], "DAQ Section": [[327, "daq-section"]], "Camera Section": [[327, "camera-section"]], "Remote Focus Section": [[327, "remote-focus-section"]], "Galvo Section": [[327, "galvo-section"]], "Filter Wheel Section": [[327, "filter-wheel-section"]], "Stage Section": [[327, "stage-section"]], "Stage Axes Definition": [[327, "stage-axes-definition"]], "Joystick Axes Definition": [[327, "joystick-axes-definition"]], "Zoom Section": [[327, "zoom-section"]], "Shutter Section": [[327, "shutter-section"]], "Laser Section": [[327, "laser-section"]], "Waveform Constants File": [[327, "waveform-constants-file"]], "Remote Constants Section": [[327, "remote-constants-section"]], "Galvo Constants Section": [[327, "galvo-constants-section"]], "Other Constants Section": [[327, "other-constants-section"]], "Waveform Templates File": [[327, "waveform-templates-file"]], "Rest API Configuration File": [[327, "rest-api-configuration-file"]], "Software Installation": [[328, "software-installation"]], "Download Git": [[328, "download-git"]], "Setup your Python Environment": [[328, "setup-your-python-environment"]], "GPU Dependencies": [[328, "gpu-dependencies"]], "Troubleshooting": [[328, "troubleshooting"]], "Supported Hardware": [[329, "supported-hardware"]], "Data Acquisition Card": [[329, "data-acquisition-card"]], "NI": [[329, "ni"]], "PCIe-6738": [[329, "pcie-6738"]], "PXI-6259": [[329, "pxi-6259"]], "Cameras": [[329, "cameras"]], "Hamamatsu Flash 4.0, Fusion, and Lightning": [[329, "hamamatsu-flash-4-0-fusion-and-lightning"]], "Photometrics Iris 15": [[329, "photometrics-iris-15"]], "Voicecoil": [[329, "voicecoil"]], "Equipment Solutions": [[329, "equipment-solutions"]], "Thorlabs BLINK": [[329, "thorlabs-blink"]], "Stages": [[329, "stages"]], "ASI Tiger Controller": [[329, "asi-tiger-controller"]], "Sutter": [[329, "sutter"], [329, "id1"]], "Physik Instrumente": [[329, "physik-instrumente"]], "Thorlabs": [[329, "thorlabs"], [329, "id2"]], "Analog Controlled (Galvo/Piezo/etc.)": [[329, "analog-controlled-galvo-piezo-etc"]], "Deformable Mirrors": [[329, "deformable-mirrors"]], "Imagine Optics": [[329, "imagine-optics"]], "Filter Wheels": [[329, "filter-wheels"]], "ASI": [[329, "asi"]], "Galvanometers": [[329, "galvanometers"]], "Cambridge Technologies/Novanta": [[329, "cambridge-technologies-novanta"]], "ScannerMAX": [[329, "scannermax"]], "Lasers": [[329, "lasers"]], "Coherent": [[329, "coherent"]], "Omicron": [[329, "omicron"]], "Shutters": [[329, "shutters"]], "Mechanical Zoom": [[329, "mechanical-zoom"]], "Dynamixel": [[329, "dynamixel"]], "User Guide": [[330, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [9, "module-aslm.controller"], [10, "module-aslm.controller.configuration_controller"], [12, "module-aslm.controller.thread_pool"], [16, "module-aslm.model"], [17, "module-aslm.model.analysis"], [18, "module-aslm.model.analysis.boundary_detect"], [23, "module-aslm.model.analysis.camera"], [28, "module-aslm.model.analysis.detection"], [38, "module-aslm.model.analysis.image_contrast"], [44, "module-aslm.model.analysis.image_decorrelation"], [53, "module-aslm.model.analysis.image_transform"], [56, "module-aslm.model.analysis.spectral_unmixing"], [58, "module-aslm.model.concurrency"], [59, "module-aslm.model.concurrency.concurrency_tools"], [70, "module-aslm.model.concurrency.proxy_objects"], [75, "module-aslm.model.concurrency.write_parameters"], [77, "module-aslm.model.data_sources"], [78, "module-aslm.model.data_sources.bdv_data_source"], [80, "module-aslm.model.data_sources.data_source"], [83, "module-aslm.model.data_sources.tiff_data_source"], [85, "module-aslm.model.device_startup_functions"], [103, "module-aslm.model.devices"], [104, "module-aslm.model.devices.APIs"], [105, "module-aslm.model.devices.APIs.coherent"], [106, "module-aslm.model.devices.APIs.dynamixel"], [107, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"], [109, "module-aslm.model.devices.APIs.omicron"], [110, "module-aslm.model.devices.camera"], [111, "module-aslm.model.devices.camera.camera_base"], [113, "module-aslm.model.devices.camera.camera_hamamatsu"], [116, "module-aslm.model.devices.camera.camera_photometrics"], [118, "module-aslm.model.devices.camera.camera_synthetic"], [121, "module-aslm.model.devices.daq"], [122, "module-aslm.model.devices.daq.daq_base"], [124, "module-aslm.model.devices.daq.daq_synthetic"], [126, "module-aslm.model.devices.filter_wheel"], [127, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [130, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [132, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [135, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [137, "module-aslm.model.devices.galvo"], [138, "module-aslm.model.devices.galvo.galvo_base"], [140, "module-aslm.model.devices.galvo.galvo_synthetic"], [142, "module-aslm.model.devices.lasers"], [143, "module-aslm.model.devices.lasers.laser_base"], [145, "module-aslm.model.devices.lasers.laser_synthetic"], [147, "module-aslm.model.devices.objectives"], [149, "module-aslm.model.devices.remote_focus"], [150, "module-aslm.model.devices.remote_focus.remote_focus_base"], [152, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [154, "module-aslm.model.devices.shutter"], [155, "module-aslm.model.devices.shutter.laser_shutter_base"], [157, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [159, "module-aslm.model.devices.stages"], [160, "module-aslm.model.devices.stages.stage_asi"], [163, "module-aslm.model.devices.stages.stage_base"], [165, "module-aslm.model.devices.stages.stage_galvo"], [167, "module-aslm.model.devices.stages.stage_mcl"], [170, "module-aslm.model.devices.stages.stage_pi"], [173, "module-aslm.model.devices.stages.stage_sutter"], [176, "module-aslm.model.devices.stages.stage_synthetic"], [178, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [181, "module-aslm.model.devices.zoom"], [182, "module-aslm.model.devices.zoom.zoom_base"], [184, "module-aslm.model.devices.zoom.zoom_dynamixel"], [187, "module-aslm.model.devices.zoom.zoom_synthetic"], [189, "module-aslm.model.dummy"], [194, "module-aslm.model.features"], [195, "module-aslm.model.features.auto_tile_scan"], [197, "module-aslm.model.features.autofocus"], [200, "module-aslm.model.features.common_features"], [211, "module-aslm.model.features.constant_velocity_acquisition"], [213, "module-aslm.model.features.dummy_detective"], [215, "module-aslm.model.features.feature_container"], [226, "module-aslm.model.features.feature_related_functions"], [231, "module-aslm.model.features.image_writer"], [233, "module-aslm.model.features.remove_empty_tiles"], [239, "module-aslm.model.features.restful_features"], [242, "module-aslm.model.features.volume_search"], [245, "module-aslm.model.metadata_sources"], [246, "module-aslm.model.metadata_sources.bdv_metadata"], [248, "module-aslm.model.metadata_sources.metadata"], [251, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [253, "module-aslm.model.microscope"], [255, "module-aslm.model.model"], [257, "module-aslm.model.waveforms"], [266, "module-aslm.tools"], [267, "module-aslm.tools.beams"], [271, "module-aslm.tools.common_dict_tools"], [273, "module-aslm.tools.common_functions"], [279, "module-aslm.tools.decorators"], [282, "module-aslm.tools.file_functions"], [287, "module-aslm.tools.image"], [290, "module-aslm.tools.image_loaders"], [292, "module-aslm.tools.main_functions"], [296, "module-aslm.tools.multipos_table_tools"], [301, "module-aslm.tools.project_stats"], [303, "module-aslm.tools.sdf"], [307, "module-aslm.tools.waveform_template_funcs"], [309, "module-aslm.tools.xml_tools"], [312, "module-aslm.view"], [313, "module-aslm.view.custom_widgets"], [314, "module-aslm.view.main_window_content"], [315, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_experiment_config() (in module aslm.config.config)": [[7, "aslm.config.config.verify_experiment_config"]], "verify_waveform_constants() (in module aslm.config.config)": [[8, "aslm.config.config.verify_waveform_constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[11, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_flip_flags"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"], [11, "id0"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"], [11, "id1"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"], [11, "id2"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_flip_flags"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.run"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[15, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "aslm.model": [[16, "module-aslm.model"]], "aslm.model.analysis": [[17, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[18, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[19, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[20, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[21, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[22, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[23, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[24, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[25, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[26, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[27, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[28, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[29, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[30, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[31, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[32, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[33, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[34, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[35, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[36, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[37, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[38, "module-aslm.model.analysis.image_contrast"]], "estimate_and_correct_flatfield() (in module aslm.model.analysis.image_contrast)": [[39, "aslm.model.analysis.image_contrast.estimate_and_correct_flatfield"]], "estimate_image_resolution() (in module aslm.model.analysis.image_contrast)": [[40, "aslm.model.analysis.image_contrast.estimate_image_resolution"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[41, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "image_intensity() (in module aslm.model.analysis.image_contrast)": [[42, "aslm.model.analysis.image_contrast.image_intensity"]], "normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[43, "aslm.model.analysis.image_contrast.normalized_dct_shannon_entropy"]], "aslm.model.analysis.image_decorrelation": [[44, "module-aslm.model.analysis.image_decorrelation"]], "apodize_image() (in module aslm.model.analysis.image_decorrelation)": [[45, "aslm.model.analysis.image_decorrelation.apodize_image"]], "get_correlation_coefficient() (in module aslm.model.analysis.image_decorrelation)": [[46, "aslm.model.analysis.image_decorrelation.get_correlation_coefficient"]], "get_decorrelation_local_maxima() (in module aslm.model.analysis.image_decorrelation)": [[47, "aslm.model.analysis.image_decorrelation.get_decorrelation_local_maxima"]], "get_image_decorrelation() (in module aslm.model.analysis.image_decorrelation)": [[48, "aslm.model.analysis.image_decorrelation.get_image_decorrelation"]], "get_radial_average() (in module aslm.model.analysis.image_decorrelation)": [[49, "aslm.model.analysis.image_decorrelation.get_radial_average"]], "image_to_polar() (in module aslm.model.analysis.image_decorrelation)": [[50, "aslm.model.analysis.image_decorrelation.image_to_polar"]], "linear_map() (in module aslm.model.analysis.image_decorrelation)": [[51, "aslm.model.analysis.image_decorrelation.linear_map"]], "main_image_decorr() (in module aslm.model.analysis.image_decorrelation)": [[52, "aslm.model.analysis.image_decorrelation.main_image_decorr"]], "aslm.model.analysis.image_transform": [[53, "module-aslm.model.analysis.image_transform"]], "deskew_image() (in module aslm.model.analysis.image_transform)": [[54, "aslm.model.analysis.image_transform.deskew_image"]], "initiate_gpu() (in module aslm.model.analysis.image_transform)": [[55, "aslm.model.analysis.image_transform.initiate_gpu"]], "aslm.model.analysis.spectral_unmixing": [[56, "module-aslm.model.analysis.spectral_unmixing"]], "to_do() (in module aslm.model.analysis.spectral_unmixing)": [[57, "aslm.model.analysis.spectral_unmixing.to_do"]], "aslm.model.concurrency": [[58, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[59, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[60, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[61, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[62, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[63, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[63, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[64, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[65, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[66, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[67, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[68, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[69, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[70, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[71, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[72, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[72, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[73, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[74, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.write_parameters": [[75, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[76, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[76, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[77, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[78, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "bits (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.bits"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"], [79, "id5"], [79, "id6"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "dc (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dc"]], "ds_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.ds_name"]], "dt (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dt"]], "dx (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dx"]], "dy (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dy"]], "dz (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dz"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"]], "get_slice() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.get_slice"]], "image (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.image"]], "logger (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.logger"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [79, "id0"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "id10"]], "mode() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "id1"]], "nbytes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "id11"]], "nbytes() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.nbytes"]], "positions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.positions"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"], [79, "id3"], [79, "id7"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"], [79, "id2"], [79, "id8"]], "setup (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.setup"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "id12"]], "shape() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shape_c (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_c"]], "shape_t (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_t"]], "shape_x (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_x"]], "shape_y (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_y"]], "shape_z (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_z"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[79, "id13"]], "voxel_size() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[79, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"], [79, "id4"], [79, "id9"]], "aslm.model.data_sources.data_source": [[80, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[81, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.__init__"]], "bits (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.bits"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.close"], [81, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[81, "aslm.model.data_sources.data_source.DataSource.data"]], "dc (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.dc"]], "dt (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.dt"]], "dx (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.dx"]], "dy (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.dy"]], "dz (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.dz"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.file_name"]], "logger (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.logger"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.metadata"]], "mode (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.mode"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[81, "id5"]], "mode() (aslm.model.data_sources.data_source.datasource method)": [[81, "id0"]], "nbytes (aslm.model.data_sources.data_source.datasource property)": [[81, "id6"]], "nbytes() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.nbytes"]], "positions (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.positions"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.read"], [81, "id2"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"], [81, "id3"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[81, "id7"]], "shape() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.shape"]], "shape_c (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.shape_c"]], "shape_t (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.shape_t"]], "shape_x (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.shape_x"]], "shape_y (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.shape_y"]], "shape_z (aslm.model.data_sources.data_source.datasource attribute)": [[81, "aslm.model.data_sources.data_source.DataSource.shape_z"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[81, "id8"]], "voxel_size() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[81, "aslm.model.data_sources.data_source.DataSource.write"], [81, "id4"]], "get_data_source() (in module aslm.model.data_sources)": [[82, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[83, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "bits (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.bits"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"], [84, "id4"], [84, "id5"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "dc (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dc"]], "dt (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dt"]], "dx (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dx"]], "dy (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dy"]], "dz (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dz"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"], [84, "id6"]], "image (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.image"]], "logger (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.logger"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [84, "id0"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "id10"]], "mode() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "id1"]], "nbytes (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "id11"]], "nbytes() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.nbytes"]], "positions (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.positions"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"], [84, "id2"], [84, "id7"]], "save_directory (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.save_directory"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"], [84, "id8"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "id12"]], "shape() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "shape_c (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_c"]], "shape_t (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_t"]], "shape_x (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_x"]], "shape_y (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_y"]], "shape_z (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_z"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[84, "id13"]], "voxel_size() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[84, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"], [84, "id3"], [84, "id9"]], "aslm.model.device_startup_functions": [[85, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[86, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[86, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[94, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[95, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[96, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[97, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[98, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[99, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[100, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[101, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[102, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[103, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[104, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[105, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[106, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.dynamixel.dynamixel_functions": [[107, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "create_mock_dxl_device() (in module aslm.model.devices.apis.dynamixel.dynamixel_functions)": [[108, "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device"]], "aslm.model.devices.apis.omicron": [[109, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[110, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[111, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[112, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "camera_controller (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.close_camera"]], "configuration (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.get_line_interval"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.get_offset_variance_maps"]], "is_acquiring (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.min_image_width"]], "offset (aslm.model.devices.camera.camera_base.camerabase property)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.offset"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "step_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.step_image_width"]], "variance (aslm.model.devices.camera.camera_base.camerabase property)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.variance"]], "x_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[112, "aslm.model.devices.camera.camera_base.CameraBase.y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[113, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[114, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.y_pixels"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[115, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[116, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "configuration (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_width"]], "offset (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.offset"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_width"]], "variance (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.variance"]], "x_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[117, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[118, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_controller"]], "camera_exposure_time (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_exposure_time"]], "camera_parameters (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "configuration (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.configuration"]], "current_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.current_frame_idx"]], "data_buffer (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.data_buffer"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.is_acquiring"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "max_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_width"]], "num_of_frame (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.num_of_frame"]], "offset (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.offset"]], "pre_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.pre_frame_idx"]], "random_image (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.random_image"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "serial_number (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_width"]], "variance (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.variance"]], "x_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[119, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.y_pixels"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "set_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[120, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.set_property_value"]], "aslm.model.devices.daq": [[121, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[122, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[123, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "camera_delay (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.camera_pulse_percent"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "daq_parameters (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_base.daqbase method)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.enable_microscope"]], "microscope_name (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.microscope_name"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.sample_rate"]], "sweep_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.sweep_time"]], "waveform_constants (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[123, "aslm.model.devices.daq.daq_base.DAQBase.waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[124, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "analog_outputs (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.analog_outputs"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "camera (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera"]], "camera_delay (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_pulse_percent"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "daq_parameters (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.enable_microscope"]], "is_updating_analog_task (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.is_updating_analog_task"]], "microscope_name (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.microscope_name"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.remote_focus_ramp_falling"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "sample_rate (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sample_rate"]], "set_external_trigger() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.set_external_trigger"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "sweep_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sweep_time"]], "trigger_mode (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.trigger_mode"]], "update_analog_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.update_analog_task"]], "wait_to_run_lock (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.wait_to_run_lock"]], "waveform_constants (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_repeat_num"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[125, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[126, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[127, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "active_filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.active_filter_wheel"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_dictionary"]], "filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel"]], "filter_wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel_position"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.number_of_filter_wheels"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[128, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wheel_position"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[129, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[130, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[131, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[132, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"]], "delay_matrix (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.delay_matrix"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "init_finished (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.init_finished"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"]], "read_on_init (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read_on_init"]], "serial (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.serial"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "speed (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.speed"]], "wait_until_done (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[133, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "comport (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.comport"]], "timeout (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[134, "aslm.model.devices.filter_wheel.filter_wheel_sutter.timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[135, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"], [136, "id0"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[136, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"], [136, "id1"]], "aslm.model.devices.galvo": [[137, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[138, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[139, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[140, "module-aslm.model.devices.galvo.galvo_synthetic"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"]], "configuration (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.configuration"]], "device_config (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.samples"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[141, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.waveform_dict"]], "aslm.model.devices.lasers": [[142, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[143, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "configuration (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.configuration"]], "device_config (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_base.laserbase method)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_base.laserbase method)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_base.laserbase method)": [[144, "aslm.model.devices.lasers.laser_base.LaserBase.turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[145, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "configuration (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.configuration"]], "device_config (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[146, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_on"]], "aslm.model.devices.objectives": [[147, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[148, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[148, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[148, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[149, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[150, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[151, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[152, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "move() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.move"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[153, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.waveform_dict"]], "aslm.model.devices.shutter": [[154, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[155, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[156, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[156, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[156, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[156, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[156, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_base.shutterbase property)": [[156, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[157, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[158, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[158, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[158, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[158, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[158, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter property)": [[158, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[159, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[160, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes (aslm.model.devices.stages.stage_asi.asistage attribute)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_asi.asistage attribute)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_asi.asistage attribute)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"]], "tiger_controller (aslm.model.devices.stages.stage_asi.asistage attribute)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.tiger_controller"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"]], "verify_move() (aslm.model.devices.stages.stage_asi.asistage method)": [[161, "aslm.model.devices.stages.stage_asi.ASIStage.verify_move"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[162, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[163, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[164, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[164, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes (aslm.model.devices.stages.stage_base.stagebase attribute)": [[164, "aslm.model.devices.stages.stage_base.StageBase.axes"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[164, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "close() (aslm.model.devices.stages.stage_base.stagebase method)": [[164, "aslm.model.devices.stages.stage_base.StageBase.close"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[164, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[164, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"]], "stage_feedback (aslm.model.devices.stages.stage_base.stagebase attribute)": [[164, "aslm.model.devices.stages.stage_base.StageBase.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_base.stagebase attribute)": [[164, "aslm.model.devices.stages.stage_base.StageBase.stage_limits"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[164, "aslm.model.devices.stages.stage_base.StageBase.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[164, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[165, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes"]], "axes_channels (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_channels"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "calculate_waveform() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.calculate_waveform"]], "camera_delay_percent (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.camera_delay_percent"]], "close() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.close"]], "configuration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.configuration"]], "daq (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.daq"]], "exposure_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.exposure_times"]], "galvo_max_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_min_voltage"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "microscope_name (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.microscope_name"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "remote_focus_delay (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_delay"]], "remote_focus_ramp_falling (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_ramp_falling"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "sample_rate (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sample_rate"]], "samples (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.samples"]], "stage_feedback (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"]], "sweep_time (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_time"]], "sweep_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_times"]], "trigger_source (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.trigger_source"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "volts_per_micron (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.volts_per_micron"]], "waveform_dict (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[166, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[167, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "handle (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.handle"]], "mcl_controller (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.mcl_controller"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[168, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[169, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[170, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[171, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_pi.pistage attribute)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_pi.pistage attribute)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[171, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[172, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[173, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "device_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.device_axes"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stage_feedback (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_limits"]], "stage_x_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_x_pos"]], "stage_y_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_y_pos"]], "stage_z_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_z_pos"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[174, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[175, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[176, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.close"]], "default_speed (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.default_speed"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_speed"]], "load_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.load_sample"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop_scan"]], "unload_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.unload_sample"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[177, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[178, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "kim_axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_axes"]], "kim_controller (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_controller"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "serial_number (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.serial_number"]], "stage_feedback (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[179, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[180, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[181, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[182, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.configuration"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[183, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[184, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "dynamixelzoom (class in aslm.model.devices.zoom.zoom_dynamixel)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom"]], "__init__() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.__init__"]], "addr_mx_goal_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_goal_position"]], "addr_mx_moving_speed (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_moving_speed"]], "addr_mx_p_gain (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_p_gain"]], "addr_mx_present_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_present_position"]], "addr_mx_torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_enable"]], "addr_mx_torque_limit (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_limit"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.configuration"]], "dynamixel (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.dynamixel"]], "goal_position_offset (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.goal_position_offset"]], "id (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.id"]], "move() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.move"]], "port_num (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.port_num"]], "read_position() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.set_zoom"]], "sleeptime (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.sleeptime"]], "timeout (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.timeout"]], "torque_disable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_disable"]], "torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_enable"]], "zoomdict (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[185, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomvalue"]], "build_dynamixel_zoom_connection() (in module aslm.model.devices.zoom.zoom_dynamixel)": [[186, "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[187, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.configuration"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[188, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomvalue"]], "aslm.model.dummy": [[189, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[190, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[190, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[190, "aslm.model.dummy.DummyController.clear"]], "execute() (aslm.model.dummy.dummycontroller method)": [[190, "aslm.model.dummy.DummyController.execute"]], "pop() (aslm.model.dummy.dummycontroller method)": [[190, "aslm.model.dummy.DummyController.pop"]], "dummydevice (class in aslm.model.dummy)": [[191, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[191, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[191, "aslm.model.dummy.DummyDevice.clear"]], "data_pipe (aslm.model.dummy.dummydevice attribute)": [[191, "aslm.model.dummy.DummyDevice.data_pipe"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[191, "aslm.model.dummy.DummyDevice.generate_message"]], "listen() (aslm.model.dummy.dummydevice method)": [[191, "aslm.model.dummy.DummyDevice.listen"]], "sendout() (aslm.model.dummy.dummydevice method)": [[191, "aslm.model.dummy.DummyDevice.sendout"]], "setup() (aslm.model.dummy.dummydevice method)": [[191, "aslm.model.dummy.DummyDevice.setup"], [191, "id0"]], "shutdown() (aslm.model.dummy.dummydevice method)": [[191, "aslm.model.dummy.DummyDevice.shutdown"]], "signal_pipe (aslm.model.dummy.dummydevice attribute)": [[191, "aslm.model.dummy.DummyDevice.signal_pipe"]], "dummymicroscope (class in aslm.model.dummy)": [[192, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[192, "aslm.model.dummy.DummyMicroscope.__init__"]], "calculate_exposure_sweep_times() (aslm.model.dummy.dummymicroscope method)": [[192, "aslm.model.dummy.DummyMicroscope.calculate_exposure_sweep_times"]], "data_pipe (aslm.model.dummy.dummymicroscope attribute)": [[192, "aslm.model.dummy.DummyMicroscope.data_pipe"]], "setup() (aslm.model.dummy.dummymicroscope method)": [[192, "aslm.model.dummy.DummyMicroscope.setup"]], "shutdown() (aslm.model.dummy.dummymicroscope method)": [[192, "aslm.model.dummy.DummyMicroscope.shutdown"]], "signal_pipe (aslm.model.dummy.dummymicroscope attribute)": [[192, "aslm.model.dummy.DummyMicroscope.signal_pipe"]], "dummymodel (class in aslm.model.dummy)": [[193, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[193, "aslm.model.dummy.DummyModel.__init__"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.data"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[193, "aslm.model.dummy.DummyModel.data_func"], [193, "id0"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.data_pipe"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.data_thread"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.frame_id"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[193, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[193, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[193, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[194, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[195, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "end_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_data"]], "end_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_signal"]], "in_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_data"]], "in_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_signal"]], "pre_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_data"]], "pre_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[196, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_signal"]], "aslm.model.features.autofocus": [[197, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[198, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[198, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[198, "aslm.model.features.autofocus.Autofocus.run"], [198, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[198, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[199, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[200, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[201, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[201, "aslm.model.features.common_features.ChangeResolution.__init__"]], "cleanup() (aslm.model.features.common_features.changeresolution method)": [[201, "aslm.model.features.common_features.ChangeResolution.cleanup"]], "signal_func() (aslm.model.features.common_features.changeresolution method)": [[201, "aslm.model.features.common_features.ChangeResolution.signal_func"]], "conproacquisition (class in aslm.model.features.common_features)": [[202, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[202, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "generate_meta_data() (aslm.model.features.common_features.conproacquisition method)": [[202, "aslm.model.features.common_features.ConProAcquisition.generate_meta_data"]], "pre_signal_func() (aslm.model.features.common_features.conproacquisition method)": [[202, "aslm.model.features.common_features.ConProAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.conproacquisition method)": [[202, "aslm.model.features.common_features.ConProAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.conproacquisition method)": [[202, "aslm.model.features.common_features.ConProAcquisition.signal_func"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[203, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[203, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "data_func() (aslm.model.features.common_features.findtissuesimple2d method)": [[203, "aslm.model.features.common_features.FindTissueSimple2D.data_func"]], "loopbycount (class in aslm.model.features.common_features)": [[204, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[204, "aslm.model.features.common_features.LoopByCount.__init__"]], "data_func() (aslm.model.features.common_features.loopbycount method)": [[204, "aslm.model.features.common_features.LoopByCount.data_func"]], "signal_func() (aslm.model.features.common_features.loopbycount method)": [[204, "aslm.model.features.common_features.LoopByCount.signal_func"]], "movetonextpositioninmultipositiontable (class in aslm.model.features.common_features)": [[205, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[205, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.__init__"]], "cleanup() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[205, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.cleanup"]], "signal_func() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[205, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.signal_func"]], "preparenextchannel (class in aslm.model.features.common_features)": [[206, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[206, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "signal_func() (aslm.model.features.common_features.preparenextchannel method)": [[206, "aslm.model.features.common_features.PrepareNextChannel.signal_func"]], "snap (class in aslm.model.features.common_features)": [[207, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[207, "aslm.model.features.common_features.Snap.__init__"]], "data_func() (aslm.model.features.common_features.snap method)": [[207, "aslm.model.features.common_features.Snap.data_func"]], "stackpause (class in aslm.model.features.common_features)": [[208, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[208, "aslm.model.features.common_features.StackPause.__init__"]], "signal_func() (aslm.model.features.common_features.stackpause method)": [[208, "aslm.model.features.common_features.StackPause.signal_func"]], "waittocontinue (class in aslm.model.features.common_features)": [[209, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[209, "aslm.model.features.common_features.WaitToContinue.__init__"]], "cleanup() (aslm.model.features.common_features.waittocontinue method)": [[209, "aslm.model.features.common_features.WaitToContinue.cleanup"]], "data_func() (aslm.model.features.common_features.waittocontinue method)": [[209, "aslm.model.features.common_features.WaitToContinue.data_func"]], "pre_data_func() (aslm.model.features.common_features.waittocontinue method)": [[209, "aslm.model.features.common_features.WaitToContinue.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.waittocontinue method)": [[209, "aslm.model.features.common_features.WaitToContinue.pre_signal_func"]], "signal_func() (aslm.model.features.common_features.waittocontinue method)": [[209, "aslm.model.features.common_features.WaitToContinue.signal_func"]], "zstackacquisition (class in aslm.model.features.common_features)": [[210, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "cleanup_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.cleanup_data_func"]], "end_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.end_data_func"]], "in_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.in_data_func"]], "pre_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.signal_func"]], "update_channel() (aslm.model.features.common_features.zstackacquisition method)": [[210, "aslm.model.features.common_features.ZStackAcquisition.update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[211, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[212, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[212, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[212, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[212, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[213, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[214, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[214, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[215, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[216, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[216, "aslm.model.features.feature_container.Container.__init__"]], "cleanup() (aslm.model.features.feature_container.container method)": [[216, "aslm.model.features.feature_container.Container.cleanup"]], "reset() (aslm.model.features.feature_container.container method)": [[216, "aslm.model.features.feature_container.Container.reset"]], "datacontainer (class in aslm.model.features.feature_container)": [[217, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[217, "aslm.model.features.feature_container.DataContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.datacontainer method)": [[217, "aslm.model.features.feature_container.DataContainer.cleanup"]], "reset() (aslm.model.features.feature_container.datacontainer method)": [[217, "aslm.model.features.feature_container.DataContainer.reset"]], "run() (aslm.model.features.feature_container.datacontainer method)": [[217, "aslm.model.features.feature_container.DataContainer.run"]], "datanode (class in aslm.model.features.feature_container)": [[218, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[218, "aslm.model.features.feature_container.DataNode.__init__"]], "run() (aslm.model.features.feature_container.datanode method)": [[218, "aslm.model.features.feature_container.DataNode.run"]], "set_property() (aslm.model.features.feature_container.datanode method)": [[218, "aslm.model.features.feature_container.DataNode.set_property"]], "signalcontainer (class in aslm.model.features.feature_container)": [[219, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[219, "aslm.model.features.feature_container.SignalContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.signalcontainer method)": [[219, "aslm.model.features.feature_container.SignalContainer.cleanup"]], "reset() (aslm.model.features.feature_container.signalcontainer method)": [[219, "aslm.model.features.feature_container.SignalContainer.reset"]], "run() (aslm.model.features.feature_container.signalcontainer method)": [[219, "aslm.model.features.feature_container.SignalContainer.run"]], "signalnode (class in aslm.model.features.feature_container)": [[220, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[220, "aslm.model.features.feature_container.SignalNode.__init__"]], "run() (aslm.model.features.feature_container.signalnode method)": [[220, "aslm.model.features.feature_container.SignalNode.run"]], "set_property() (aslm.model.features.feature_container.signalnode method)": [[220, "aslm.model.features.feature_container.SignalNode.set_property"]], "treenode (class in aslm.model.features.feature_container)": [[221, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[221, "aslm.model.features.feature_container.TreeNode.__init__"]], "set_property() (aslm.model.features.feature_container.treenode method)": [[221, "aslm.model.features.feature_container.TreeNode.set_property"]], "dummy_true() (in module aslm.model.features.feature_container)": [[222, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[223, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[224, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[225, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[226, "module-aslm.model.features.feature_related_functions"]], "sharedlist (class in aslm.model.features.feature_related_functions)": [[227, "aslm.model.features.feature_related_functions.SharedList"]], "__init__() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.__init__"]], "append() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.append"]], "clear() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.clear"]], "copy() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.copy"]], "count() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.count"]], "extend() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.extend"]], "index() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.index"]], "insert() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.insert"]], "pop() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.pop"]], "remove() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.remove"]], "reverse() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.reverse"]], "sort() (aslm.model.features.feature_related_functions.sharedlist method)": [[227, "aslm.model.features.feature_related_functions.SharedList.sort"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[228, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[229, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "load_dynamic_parameter_functions() (in module aslm.model.features.feature_related_functions)": [[230, "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions"]], "aslm.model.features.image_writer": [[231, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[232, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.__init__"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.close"], [232, "id0"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.config_table"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.current_time_point"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.data_buffer"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.data_source"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.file_type"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.generate_image_name"], [232, "id1"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"], [232, "id2"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.mip"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.mip_directory"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.model"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.num_of_channels"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.save_directory"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[232, "aslm.model.features.image_writer.ImageWriter.save_image"], [232, "id3"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[232, "aslm.model.features.image_writer.ImageWriter.sub_dir"]], "aslm.model.features.remove_empty_tiles": [[233, "module-aslm.model.features.remove_empty_tiles"]], "detecttissueinstack (class in aslm.model.features.remove_empty_tiles)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[234, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_signal"]], "detecttissueinstackandrecord (class in aslm.model.features.remove_empty_tiles)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[235, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_signal"]], "removeemptypositions (class in aslm.model.features.remove_empty_tiles)": [[236, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions"]], "__init__() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[236, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.__init__"]], "signal_func() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[236, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.signal_func"]], "detect_tissue() (in module aslm.model.features.remove_empty_tiles)": [[237, "aslm.model.features.remove_empty_tiles.detect_tissue"]], "detect_tissue2() (in module aslm.model.features.remove_empty_tiles)": [[238, "aslm.model.features.remove_empty_tiles.detect_tissue2"]], "aslm.model.features.restful_features": [[239, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[240, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[240, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[241, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[242, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[243, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[243, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[244, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[245, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[246, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "affine_matrix_to_stage_positions() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.affine_matrix_to_stage_positions"]], "parse_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[247, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[248, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[249, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[249, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[249, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[249, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[250, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[250, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[250, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[250, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[250, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[250, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[251, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[252, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[252, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[252, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[252, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[252, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[252, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[252, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[253, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[254, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.__init__"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.microscope.microscope attribute)": [[254, "aslm.model.microscope.Microscope.configuration"]], "daq (aslm.model.microscope.microscope attribute)": [[254, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[254, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.end_acquisition"], [254, "id0"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.get_readout_time"], [254, "id1"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.get_stage_position"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[254, "aslm.model.microscope.Microscope.microscope_name"]], "move_stage() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.move_stage_offset"], [254, "id2"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[254, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.prepare_next_channel"]], "stop_stage() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.terminate"]], "turn_off_lasers() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.turn_off_lasers"]], "turn_on_laser() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.turn_on_laser"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[254, "aslm.model.microscope.Microscope.update_data_buffer"], [254, "id3"]], "aslm.model.model": [[255, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[256, "aslm.model.model.Model"]], "use_gpu (aslm.model.model.model attribute)": [[256, "aslm.model.model.Model.USE_GPU"]], "__init__() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.__init__"]], "args (aslm.model.model.model attribute)": [[256, "aslm.model.model.Model.args"]], "change_resolution() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[256, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.create_pipe"], [256, "id0"]], "end_acquisition() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.end_acquisition"], [256, "id1"]], "event_queue (aslm.model.model.model attribute)": [[256, "aslm.model.model.Model.event_queue"]], "get_active_microscope() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_active_microscope"]], "get_camera_line_interval_and_exposure_time() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_camera_line_interval_and_exposure_time"]], "get_data_buffer() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_data_buffer"], [256, "id2"]], "get_feature_list() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_offset_variance_maps"]], "get_readout_time() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_readout_time"]], "get_stage_position() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.get_stage_position"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.load_images"]], "move_stage() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.move_stage"], [256, "id3"]], "pause_data_thread() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.pause_data_thread"]], "prepare_acquisition() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.prepare_acquisition"], [256, "id4"]], "release_pipe() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.release_pipe"], [256, "id5"]], "resume_data_thread() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_command"], [256, "id6"]], "run_data_process() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_data_process"], [256, "id7"]], "run_live_acquisition() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_live_acquisition"], [256, "id8"]], "run_single_acquisition() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_single_acquisition"]], "run_single_channel_acquisition() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_single_channel_acquisition"]], "run_single_channel_acquisition_with_features() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_single_channel_acquisition_with_features"]], "run_z_stack_acquisition() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.run_z_stack_acquisition"]], "snap_image() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.snap_image"], [256, "id9"]], "stop_stage() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.stop_stage"]], "update_data_buffer() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.update_data_buffer"], [256, "id10"]], "update_ilastik_setting() (aslm.model.model.model method)": [[256, "aslm.model.model.Model.update_ilastik_setting"]], "aslm.model.waveforms": [[257, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[258, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[259, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[260, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[261, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[262, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[263, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[264, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[265, "aslm.model.waveforms.square"]], "aslm.tools": [[266, "module-aslm.tools"]], "aslm.tools.beams": [[267, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[268, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[269, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[270, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[271, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[272, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[273, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[274, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[274, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[275, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[276, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[277, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[278, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[279, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[280, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[280, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[281, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[282, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[283, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[284, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[285, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[286, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[287, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[288, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[289, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[290, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[291, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[291, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[291, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[292, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[293, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[294, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[295, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[296, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[297, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[298, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[299, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[300, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[301, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[302, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[303, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[304, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[305, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[306, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[307, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[308, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[309, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[310, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[311, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[312, "module-aslm.view"]], "aslm.view.custom_widgets": [[313, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[314, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[315, "module-aslm.view.popups"]]}})