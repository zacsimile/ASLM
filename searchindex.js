Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_experiment_config", "_autosummary/aslm.config.config.verify_waveform_constants", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.log_files", "_autosummary/aslm.log_files.filters", "_autosummary/aslm.log_files.filters.NonPerfFilter", "_autosummary/aslm.log_files.filters.PerformanceFilter", "_autosummary/aslm.log_files.log_functions", "_autosummary/aslm.log_files.log_functions.find_filename", "_autosummary/aslm.log_files.log_functions.log_setup", "_autosummary/aslm.log_files.log_functions.main_process_listener", "_autosummary/aslm.log_files.log_functions.update_nested_dict", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.SharedList", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.remove_empty_tiles", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.custom_widgets", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing/contributing_guidelines", "contributing/contributing_hardware", "contributing/contributing_home", "contributing/contributing_model", "contributing/sphinx_numpydoc", "feature_container/feature_container_home", "implementations", "index", "software_configuration", "software_installation", "supported_hardware"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_experiment_config.rst", "_autosummary/aslm.config.config.verify_waveform_constants.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.log_files.rst", "_autosummary/aslm.log_files.filters.rst", "_autosummary/aslm.log_files.filters.NonPerfFilter.rst", "_autosummary/aslm.log_files.filters.PerformanceFilter.rst", "_autosummary/aslm.log_files.log_functions.rst", "_autosummary/aslm.log_files.log_functions.find_filename.rst", "_autosummary/aslm.log_files.log_functions.log_setup.rst", "_autosummary/aslm.log_files.log_functions.main_process_listener.rst", "_autosummary/aslm.log_files.log_functions.update_nested_dict.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.SharedList.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.remove_empty_tiles.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.rst", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.custom_widgets.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing/contributing_guidelines.rst", "contributing/contributing_hardware.rst", "contributing/contributing_home.rst", "contributing/contributing_model.rst", "contributing/sphinx_numpydoc.rst", "feature_container/feature_container_home.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_experiment_config", "aslm.config.config.verify_waveform_constants", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.log_files", "aslm.log_files.filters", "aslm.log_files.filters.NonPerfFilter", "aslm.log_files.filters.PerformanceFilter", "aslm.log_files.log_functions", "aslm.log_files.log_functions.find_filename", "aslm.log_files.log_functions.log_setup", "aslm.log_files.log_functions.main_process_listener", "aslm.log_files.log_functions.update_nested_dict", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.dynamixel.dynamixel_functions", "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_dynamixel", "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.SharedList", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.remove_empty_tiles", "aslm.model.features.remove_empty_tiles.DetectTissueInStack", "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "aslm.model.features.remove_empty_tiles.detect_tissue", "aslm.model.features.remove_empty_tiles.detect_tissue2", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.custom_widgets", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "&lt;no title&gt;", "Feature Container", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Configuration Overview", "Software Installation", "Supported Hardware"], "terms": {"modul": [0, 9, 13, 16, 18, 19, 25, 26, 49, 51, 55, 56, 60, 61, 62, 88, 89, 90, 91, 94, 95, 106, 111, 122, 127, 134, 139, 144, 166, 179, 209, 210, 230, 251, 263, 296, 297, 298, 299, 301, 308, 309, 310, 314], "function": [1, 8, 13, 14, 20, 23, 24, 27, 32, 37, 39, 41, 44, 45, 47, 51, 55, 56, 57, 60, 61, 62, 64, 70, 72, 92, 99, 100, 102, 104, 112, 117, 118, 145, 152, 155, 158, 163, 169, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 227, 239, 241, 242, 246, 250, 252, 253, 254, 256, 258, 260, 261, 262, 263, 264, 266, 267, 268, 272, 277, 280, 285, 287, 288, 289, 290, 291, 292, 293, 304, 308, 311, 312, 314], "manag": [2, 5, 6, 7, 8, 14, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 141, 143, 146, 149, 151, 156, 168, 173, 178, 187, 190, 191, 193, 195, 201, 202, 204, 313, 314], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 24, 56, 210, 232, 235, 237], "dictionari": [2, 5, 6, 8, 11, 21, 22, 24, 51, 55, 56, 75, 82, 83, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 136, 138, 146, 149, 151, 153, 154, 156, 157, 159, 162, 164, 168, 170, 171, 173, 175, 177, 178, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 205, 206, 209, 210, 213, 215, 217, 219, 232, 235, 237, 239, 241, 257, 268, 270, 271, 279, 292, 294, 295, 303, 309, 312], "recurs": [2, 24, 56, 213], "paramet": [2, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 21, 22, 23, 24, 28, 29, 30, 33, 34, 35, 48, 56, 64, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 105, 108, 110, 113, 114, 116, 118, 121, 124, 126, 129, 131, 133, 136, 138, 141, 143, 146, 147, 149, 151, 153, 154, 156, 157, 159, 160, 162, 164, 165, 168, 170, 171, 173, 175, 176, 177, 178, 183, 184, 214, 217, 228, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 260, 261, 262, 263, 266, 268, 269, 270, 271, 273, 274, 276, 278, 279, 281, 282, 283, 284, 286, 288, 289, 290, 292, 294, 295, 303, 308, 311, 312], "multiprocess": [2, 5, 6, 7, 8, 23, 58, 74, 77, 79, 143, 146, 149, 151, 156, 173, 241], "share": [2, 5, 6, 7, 8, 51, 56, 58, 59, 60, 110, 210, 212, 241, 304, 314], "object": [2, 5, 6, 7, 8, 11, 13, 14, 15, 51, 53, 55, 56, 58, 59, 60, 64, 66, 69, 71, 72, 79, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 105, 108, 110, 113, 114, 116, 124, 129, 131, 136, 138, 141, 143, 146, 147, 149, 151, 153, 156, 157, 159, 164, 168, 170, 173, 175, 176, 177, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 203, 205, 206, 210, 212, 217, 219, 220, 221, 225, 228, 232, 234, 239, 241, 257, 259, 262, 265, 273, 276, 278, 279, 284, 290, 303, 304, 310, 311, 312, 314], "e": [2, 4, 5, 6, 7, 8, 11, 34, 56, 69, 99, 100, 102, 104, 114, 119, 121, 124, 126, 147, 157, 168, 170, 173, 187, 188, 195, 212, 215, 217, 235, 281, 303, 304, 309, 313, 314], "g": [2, 5, 6, 7, 8, 11, 56, 69, 99, 100, 102, 104, 114, 119, 121, 124, 126, 133, 147, 157, 168, 170, 173, 187, 188, 195, 215, 217, 235, 281, 303, 309, 313, 314], "dict": [2, 5, 6, 7, 8, 11, 13, 14, 24, 28, 64, 66, 69, 75, 97, 99, 100, 102, 104, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 133, 136, 138, 146, 149, 151, 153, 154, 156, 157, 159, 162, 164, 168, 170, 171, 173, 175, 177, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 205, 206, 209, 217, 219, 239, 241, 257, 262, 268, 270, 271, 292, 294, 295, 303], "between": [2, 5, 6, 7, 8, 29, 56, 64, 66, 69, 102, 168, 170, 173, 188, 194, 202, 204, 212, 228, 253, 254, 260, 281, 303, 312, 314], "process": [2, 5, 6, 7, 8, 23, 53, 56, 58, 59, 61, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 203, 205, 210, 213, 219, 220, 221, 241, 304, 309], "we": [2, 6, 21, 53, 55, 56, 59, 64, 66, 69, 99, 100, 118, 121, 177, 217, 232, 235, 237, 239, 303, 304, 305, 306, 309, 312, 313, 314], "ar": [2, 6, 8, 11, 13, 24, 51, 55, 56, 69, 85, 99, 100, 102, 104, 110, 146, 149, 151, 153, 156, 159, 162, 164, 177, 178, 181, 183, 191, 194, 197, 201, 202, 203, 204, 205, 206, 209, 210, 213, 215, 217, 228, 235, 239, 241, 253, 254, 269, 276, 303, 304, 308, 309, 312, 313, 314], "ad": [2, 6, 8, 55, 56, 146, 210, 228, 278, 284, 306, 309, 311], "str": [2, 3, 4, 6, 11, 13, 14, 21, 22, 28, 29, 30, 33, 35, 56, 64, 66, 67, 69, 79, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 105, 108, 110, 113, 114, 116, 118, 119, 121, 124, 126, 129, 131, 133, 136, 138, 141, 143, 146, 147, 149, 151, 153, 156, 157, 159, 160, 162, 164, 165, 168, 170, 173, 175, 177, 178, 186, 187, 188, 189, 193, 195, 203, 205, 206, 209, 212, 213, 214, 215, 217, 228, 232, 235, 237, 239, 241, 255, 260, 263, 268, 269, 270, 271, 273, 274, 276, 279, 286, 292, 294, 308], "name": [2, 6, 11, 13, 14, 18, 19, 51, 53, 55, 56, 64, 66, 69, 79, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 105, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 133, 136, 138, 141, 143, 146, 149, 151, 153, 156, 157, 159, 162, 164, 168, 170, 173, 177, 178, 203, 205, 206, 212, 213, 215, 217, 228, 239, 241, 260, 263, 269, 271, 292, 303, 304, 308, 309, 312, 314], "insert": [2, 56, 212, 309, 314], "return": [2, 3, 4, 5, 6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 34, 45, 48, 51, 53, 55, 56, 59, 64, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 97, 99, 100, 102, 104, 105, 108, 110, 113, 114, 116, 118, 119, 121, 124, 126, 133, 136, 138, 141, 143, 146, 147, 149, 151, 153, 154, 156, 157, 159, 160, 162, 164, 165, 168, 170, 171, 173, 175, 176, 177, 178, 183, 184, 212, 214, 217, 232, 234, 235, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 260, 261, 262, 263, 266, 268, 270, 271, 273, 274, 276, 278, 279, 281, 282, 283, 284, 288, 289, 290, 292, 294, 295, 304, 308, 309], "type": [2, 3, 5, 6, 11, 13, 14, 15, 18, 19, 21, 24, 29, 30, 34, 35, 48, 56, 64, 66, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 97, 99, 100, 102, 104, 105, 108, 110, 113, 114, 116, 118, 119, 121, 124, 126, 129, 131, 133, 136, 138, 141, 143, 146, 147, 149, 151, 153, 154, 156, 157, 159, 160, 162, 164, 165, 168, 170, 171, 173, 175, 176, 177, 178, 181, 183, 184, 186, 187, 190, 195, 202, 203, 205, 206, 209, 212, 214, 217, 234, 235, 237, 239, 241, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 257, 260, 261, 262, 263, 266, 268, 270, 271, 273, 274, 276, 278, 281, 282, 283, 284, 288, 289, 290, 294, 295, 303, 308, 309, 311, 312, 314], "none": [2, 13, 14, 22, 28, 30, 40, 51, 53, 55, 56, 58, 59, 60, 61, 64, 66, 69, 99, 100, 102, 104, 110, 136, 138, 146, 149, 151, 153, 156, 159, 162, 164, 175, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 201, 202, 203, 204, 205, 206, 208, 212, 214, 217, 219, 220, 232, 234, 235, 237, 239, 241, 257, 270, 273, 278, 284, 286, 294, 308, 312], "exampl": [2, 3, 6, 21, 51, 55, 56, 60, 61, 67, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 146, 151, 153, 156, 159, 162, 164, 175, 176, 178, 217, 243, 244, 245, 246, 247, 248, 249, 250, 253, 269, 276, 290, 304, 305, 308, 309, 312, 313, 314], "establish": [3, 314], "program": [3, 13, 51, 55, 212, 304], "home": [3, 113], "directori": [3, 69, 195, 215, 217, 235, 268, 269, 271, 286, 312, 313], "appdata": [3, 303, 312], "local": [3, 14, 33, 56, 303, 312, 313], "window": [3, 222, 268, 303, 309, 312, 313, 314], "mac": [3, 303, 312, 313], "linux": [3, 303, 312, 313], "path": [3, 4, 5, 22, 56, 69, 215, 263, 268, 269, 270, 276, 279, 286, 313], "c": [3, 56, 64, 66, 69, 157, 237, 303, 312, 313], "user": [3, 56, 213, 241, 268, 303, 306, 309, 311, 312, 313, 314], "usernam": [3, 313], "get": [4, 11, 14, 55, 56, 64, 67, 97, 99, 100, 102, 104, 141, 143, 146, 162, 177, 183, 195, 209, 239, 241, 292, 304, 313], "variou": [4, 181, 239, 303, 312, 314], "configur": [4, 5, 6, 7, 8, 11, 22, 64, 66, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 171, 173, 175, 177, 178, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 213, 215, 217, 219, 228, 234, 235, 237, 239, 241, 279, 304, 309, 311, 313], "file": [4, 5, 6, 7, 22, 56, 64, 66, 67, 69, 97, 99, 100, 102, 104, 151, 213, 215, 217, 232, 234, 235, 237, 241, 263, 269, 270, 271, 276, 279, 286, 295, 303, 304, 309, 311, 313], "us": [4, 11, 13, 18, 19, 34, 51, 55, 56, 58, 59, 60, 61, 64, 104, 105, 151, 162, 175, 176, 177, 178, 181, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 217, 219, 220, 221, 222, 223, 228, 235, 237, 239, 241, 243, 244, 245, 246, 247, 248, 250, 274, 276, 286, 303, 304, 305, 308, 309, 312, 313, 314], "configuration_path": [4, 279], "contain": [4, 5, 7, 8, 22, 28, 29, 30, 56, 153, 154, 156, 157, 159, 162, 164, 178, 181, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 202, 203, 204, 205, 206, 209, 210, 213, 215, 219, 220, 222, 223, 239, 241, 268, 276, 284, 303, 308, 311, 312], "global": [4, 14, 33, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 141, 143, 146, 149, 151, 156, 168, 173, 241], "microscop": [4, 8, 11, 64, 66, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 177, 178, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 205, 206, 219, 220, 221, 228, 241, 292, 304, 309, 311, 314], "i": [4, 13, 14, 18, 19, 24, 30, 34, 38, 51, 55, 56, 60, 61, 64, 69, 73, 74, 97, 99, 100, 102, 104, 110, 113, 114, 116, 118, 121, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 176, 177, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 217, 219, 220, 221, 222, 223, 228, 235, 239, 241, 245, 253, 254, 255, 257, 269, 271, 279, 282, 284, 286, 290, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314], "hardwar": [4, 56, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 173, 217, 239, 306, 309, 311, 313], "setup": [4, 22, 64, 176, 239, 303, 311, 312, 314], "experiment_path": [4, 279], "per": [4, 13, 51, 55, 56, 64, 66, 69, 113, 124, 126, 151, 197, 309, 314], "experi": [4, 7, 64, 66, 69, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 228, 234, 235, 237, 271, 279, 304, 309, 312, 313], "waveform_constants_path": [4, 279], "remot": [4, 8, 11, 84, 108, 110, 136, 138, 151, 239, 245, 279, 310, 311], "focu": [4, 8, 11, 84, 108, 110, 136, 138, 151, 168, 170, 173, 181, 183, 195, 232, 239, 241, 245, 282, 303, 309, 310], "all": [4, 7, 13, 14, 29, 51, 55, 56, 69, 102, 104, 108, 110, 146, 149, 151, 153, 156, 159, 162, 164, 177, 195, 197, 212, 239, 241, 269, 276, 281, 303, 304, 308, 309, 312, 314], "magnif": [4, 168, 170, 173, 188], "rest_api_path": [4, 279], "rest": [4, 102, 279, 303, 311], "api": [4, 56, 74, 99, 100, 102, 105, 146, 156, 279, 303, 311, 314], "waveform_templates_path": [4, 279], "waveform": [4, 8, 108, 110, 124, 126, 136, 138, 151, 239, 241, 279, 292, 304, 311, 314], "templat": [4, 56, 279, 292, 311], "kwarg": [5, 13, 14, 51, 55, 56, 60, 61, 72, 203, 205, 206, 226, 241, 308], "load": [5, 22, 56, 75, 97, 99, 100, 102, 104, 113, 162, 210, 215, 239, 241, 263, 270, 276, 304, 311], "list": [5, 11, 28, 29, 44, 56, 83, 146, 149, 151, 153, 156, 159, 162, 164, 175, 178, 181, 183, 187, 188, 189, 190, 192, 194, 195, 201, 202, 204, 207, 208, 210, 212, 213, 214, 215, 219, 220, 221, 228, 232, 237, 239, 241, 260, 261, 262, 270, 273, 284, 303, 308, 309, 311, 312], "config_dict": 5, "amalgam": 5, "input": [5, 44, 56, 213, 223, 239, 268, 278, 279, 290, 314], "config_nam": 6, "new_config": 6, "bool": [6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 33, 35, 56, 64, 66, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 110, 113, 116, 118, 121, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 176, 177, 178, 181, 186, 187, 189, 190, 191, 192, 194, 195, 201, 203, 204, 205, 206, 207, 219, 220, 221, 222, 223, 228, 232, 239, 241, 253, 255, 271, 282, 284, 286, 308], "read": [6, 56, 64, 66, 69, 118, 121, 168, 170, 173, 312], "new": [6, 11, 23, 24, 56, 69, 146, 151, 153, 156, 159, 162, 164, 187, 191, 195, 197, 228, 239, 261, 268, 273, 284, 304, 306, 308, 309, 311, 312, 313], "updat": [6, 8, 24, 56, 110, 186, 187, 189, 190, 195, 203, 205, 206, 210, 215, 220, 239, 241, 257, 273, 284, 303, 311, 313], "info": [6, 11, 239], "subdictionari": 6, "replac": [6, 56, 215, 303, 312], "valu": [6, 8, 11, 13, 21, 24, 28, 48, 51, 55, 56, 99, 100, 105, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 181, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 203, 205, 206, 207, 212, 214, 215, 222, 228, 235, 244, 281, 290, 303, 304, 308, 309, 312, 313], "yaml": [6, 7, 22, 215, 270, 271, 304, 312], "true": [6, 13, 18, 19, 21, 31, 51, 55, 56, 99, 100, 102, 113, 118, 121, 146, 149, 151, 153, 156, 159, 162, 164, 178, 189, 203, 205, 207, 209, 219, 220, 221, 222, 239, 241, 253, 271, 286, 308, 309], "fals": [6, 13, 18, 19, 21, 33, 51, 53, 55, 56, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 100, 102, 104, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 177, 178, 189, 195, 203, 204, 205, 206, 212, 219, 220, 222, 223, 228, 239, 241, 253, 271, 282, 284, 308], "verifi": [7, 8, 146, 149, 151, 153, 156, 159, 162, 164], "waveform_const": [7, 108, 110, 312], "constant": [8, 108, 110, 162, 197, 279, 311, 314], "thi": [8, 13, 14, 18, 19, 22, 23, 24, 51, 53, 55, 56, 59, 60, 61, 64, 66, 69, 99, 100, 102, 110, 138, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 217, 219, 220, 221, 222, 223, 235, 239, 241, 255, 260, 261, 262, 263, 268, 269, 281, 286, 292, 303, 304, 305, 308, 309, 310, 311, 312, 313, 314], "check": [8, 13, 21, 56, 72, 113, 116, 118, 121, 168, 173, 181, 195, 219, 220, 241], "ensur": [8, 146, 149, 151, 153, 156, 159, 162, 164, 190, 191, 193, 194, 209, 239, 304], "given": [8, 13, 34, 51, 55, 56, 67, 99, 100, 102, 104, 113, 116, 118, 121, 124, 126, 138, 209, 212, 213, 215, 222, 284, 308, 309, 313], "conform": 8, "expect": [8, 55, 60, 64, 66, 69, 118, 146, 149, 151, 153, 156, 159, 162, 164, 195, 203, 205, 206, 208, 303, 304, 312], "structur": [8, 43, 56, 210, 237, 241, 309], "It": [8, 13, 14, 18, 19, 24, 51, 55, 56, 64, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201, 202, 203, 204, 205, 207, 208, 209, 210, 212, 215, 219, 220, 221, 222, 239, 268, 303, 308, 309, 311, 312, 313, 314], "relat": [8, 14, 178, 181, 186, 187, 188, 190, 192, 195, 203, 205, 206, 274, 303, 312], "devic": [8, 71, 72, 73, 74, 75, 79, 81, 82, 83, 84, 85, 86, 87, 176, 177, 178, 181, 183, 186, 190, 197, 203, 204, 205, 206, 239, 241, 303, 310, 311, 312], "laser": [8, 11, 83, 110, 141, 177, 239, 247, 248, 250, 303, 309, 310, 311], "galvo": [8, 11, 73, 82, 108, 110, 151, 177, 239, 244, 246, 279, 304, 310], "multipl": [8, 13, 33, 35, 44, 51, 55, 56, 191, 235, 308, 314], "The": [8, 11, 13, 14, 15, 18, 19, 51, 55, 56, 60, 61, 64, 72, 110, 118, 126, 131, 138, 146, 162, 168, 170, 173, 175, 176, 177, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 215, 219, 220, 221, 222, 223, 239, 245, 249, 257, 266, 281, 283, 286, 290, 303, 304, 308, 311, 312, 313, 314], "If": [8, 18, 19, 48, 51, 53, 55, 56, 58, 59, 61, 64, 66, 69, 97, 99, 100, 102, 104, 110, 113, 116, 118, 121, 146, 149, 151, 153, 156, 159, 162, 164, 170, 183, 209, 212, 214, 217, 219, 220, 222, 241, 253, 276, 279, 303, 304, 308, 309, 312, 313, 314], "miss": [8, 56, 209], "default": [8, 11, 13, 14, 22, 51, 55, 56, 99, 100, 102, 104, 114, 121, 146, 149, 151, 153, 156, 159, 162, 164, 181, 186, 188, 189, 193, 195, 197, 201, 202, 203, 204, 205, 206, 209, 212, 217, 219, 220, 221, 222, 223, 239, 241, 247, 271, 274, 279, 303, 304, 308, 309, 312, 314], "empti": [8, 11, 56, 118, 121, 146, 149, 151, 153, 156, 159, 162, 164, 181, 183, 188, 201, 202, 204, 212, 220, 221, 312], "necessari": [8, 56, 108, 110, 113, 118, 121, 190, 202, 204, 219, 220, 239, 266, 268, 303, 304, 305, 309, 312, 314], "valid": [8, 213, 214], "convert": [8, 56, 97, 99, 102, 104, 156, 159, 213, 214, 232, 234, 235, 237, 274, 284], "float": [8, 11, 13, 28, 29, 30, 33, 34, 35, 48, 51, 55, 56, 64, 66, 69, 97, 99, 100, 102, 104, 108, 110, 113, 114, 118, 119, 121, 124, 126, 133, 136, 138, 146, 149, 151, 153, 156, 159, 160, 162, 164, 168, 170, 173, 175, 176, 177, 183, 184, 187, 188, 190, 195, 219, 220, 222, 223, 228, 232, 239, 241, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 281, 282, 283, 289, 290, 303], "possibl": [8, 53, 56, 59, 222, 245, 306, 309, 312], "non": [8, 13, 18, 24, 51, 55, 56, 279], "exist": [8, 56, 113, 116, 118, 121, 168, 173, 203, 205, 206, 241, 270, 273, 304, 309], "zoom": [8, 78, 87, 186, 188, 228, 303, 311], "level": [8, 56, 64, 188, 294, 308], "remov": [8, 14, 56, 212, 221, 303, 309, 312], "from": [8, 11, 13, 14, 22, 23, 33, 36, 42, 51, 55, 56, 58, 60, 61, 64, 66, 69, 72, 75, 97, 99, 100, 102, 104, 118, 121, 133, 143, 151, 156, 159, 183, 189, 201, 202, 203, 204, 205, 206, 212, 215, 221, 234, 235, 237, 239, 241, 245, 263, 268, 269, 270, 274, 281, 286, 288, 289, 290, 294, 303, 304, 305, 308, 309, 311, 313, 314], "class": [10, 11, 12, 13, 14, 15, 17, 18, 19, 50, 51, 53, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 211, 212, 216, 217, 218, 219, 220, 221, 224, 225, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 258, 259, 263, 264, 265, 275, 276, 304, 305, 308], "base": [11, 13, 14, 15, 18, 19, 24, 29, 51, 53, 55, 56, 58, 59, 64, 66, 69, 71, 97, 99, 100, 102, 104, 105, 108, 110, 113, 116, 118, 121, 124, 126, 128, 129, 131, 133, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 176, 177, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 212, 215, 217, 219, 220, 221, 223, 225, 228, 232, 234, 235, 237, 239, 241, 259, 265, 276, 282, 284, 303, 304, 305, 313, 314], "__init__": [11, 13, 14, 15, 18, 19, 51, 53, 55, 56, 58, 59, 64, 66, 69, 71, 72, 97, 99, 100, 102, 104, 105, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 133, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 176, 177, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 201, 202, 203, 204, 205, 206, 212, 217, 219, 220, 221, 225, 228, 232, 234, 235, 237, 239, 241, 259, 265, 276, 308, 309], "initi": [11, 13, 14, 15, 18, 19, 22, 51, 53, 55, 56, 58, 59, 64, 66, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 105, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 147, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 176, 177, 178, 181, 183, 187, 194, 195, 203, 205, 206, 212, 219, 220, 232, 239, 241, 312, 314], "method": [11, 13, 14, 15, 18, 19, 51, 53, 55, 56, 58, 59, 64, 66, 69, 71, 97, 99, 100, 102, 104, 105, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 133, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 176, 177, 178, 183, 197, 199, 217, 223, 225, 228, 232, 234, 235, 237, 239, 241, 259, 265, 276, 308, 309], "attribut": [11, 13, 14, 15, 51, 55, 56, 64, 66, 69, 97, 99, 100, 102, 104, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 176, 177, 178, 232, 234, 235, 237, 239, 241, 276, 308], "change_microscop": 11, "accord": [11, 24, 56, 64, 66, 69, 99, 100, 102, 104, 212, 308], "result": [11, 55, 56, 61, 72, 99, 100, 102, 168, 170, 173, 181, 203, 205, 213, 222, 239, 262, 304], "get_microscope_configuration_dict": 11, "microscope_configuration_dict": 11, "get_stage_position_limit": 11, "suffix": 11, "posit": [11, 28, 30, 56, 64, 66, 69, 113, 116, 118, 121, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 175, 178, 183, 187, 188, 190, 195, 219, 220, 221, 228, 232, 239, 241, 257, 281, 282, 284, 303, 312, 314], "limit": [11, 56, 146, 149, 151, 153, 156, 159, 162, 164, 170, 239, 304, 308], "stage": [11, 77, 86, 168, 170, 173, 175, 177, 181, 183, 186, 187, 190, 191, 192, 193, 194, 195, 197, 219, 220, 228, 232, 239, 241, 304, 305, 309, 310, 311], "_min": 11, "_max": 11, "position_limit": 11, "depend": [11, 56, 113, 282, 309, 311], "min": [11, 28, 30, 56, 99, 124, 126, 136, 138, 303, 312], "max": [11, 56, 99, 102, 124, 126, 136, 138, 303, 312, 314], "x": [11, 30, 48, 56, 64, 66, 69, 97, 99, 100, 102, 104, 146, 149, 151, 153, 156, 159, 162, 164, 184, 195, 228, 232, 241, 253, 254, 273, 274, 276, 281, 282, 283, 284, 290, 303, 312], "2000": [11, 56, 303, 314], "y": [11, 30, 45, 56, 64, 66, 69, 97, 99, 100, 102, 104, 146, 149, 151, 153, 156, 159, 162, 164, 184, 195, 228, 232, 241, 273, 274, 276, 282, 284, 290, 303, 312], "z": [11, 45, 56, 64, 66, 69, 133, 146, 149, 151, 153, 156, 159, 162, 164, 190, 195, 197, 219, 220, 228, 232, 253, 254, 255, 282, 284, 290, 303, 309, 312], "theta": [11, 146, 149, 151, 153, 156, 159, 162, 164, 195, 232, 282, 303, 312], "0": [11, 29, 30, 34, 40, 56, 64, 72, 74, 82, 83, 86, 99, 100, 102, 114, 119, 121, 124, 126, 146, 149, 151, 153, 156, 159, 160, 162, 164, 168, 170, 173, 176, 177, 188, 212, 219, 220, 222, 223, 228, 237, 241, 243, 244, 245, 246, 247, 248, 250, 253, 254, 255, 274, 281, 286, 290, 294, 303, 308, 310, 312], "f": [11, 55, 56, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 183, 219, 220, 232, 282, 284, 303, 304, 310, 312, 314], "properti": [11, 13, 51, 55, 56, 64, 66, 69, 97, 99, 100, 102, 104, 105, 133, 141, 143, 203, 205, 206, 232, 234, 235, 237, 276, 304, 308, 309], "camera_config_dict": 11, "camera": [11, 28, 30, 56, 74, 79, 108, 110, 124, 126, 136, 138, 151, 177, 178, 192, 239, 241, 243, 303, 310, 311], "camera_set": 11, "set": [11, 13, 33, 51, 55, 56, 64, 66, 69, 97, 99, 100, 102, 104, 105, 110, 113, 118, 121, 129, 131, 146, 149, 151, 156, 159, 162, 168, 170, 173, 176, 178, 181, 186, 201, 202, 203, 204, 205, 206, 212, 215, 239, 241, 284, 303, 305, 308, 309, 312, 313], "camera_flip_flag": 11, "flip": [11, 228], "flag": [11, 56, 99, 100, 102, 104, 110, 113, 116, 118, 121, 176, 177, 178, 187, 189, 195, 201, 202, 204, 212, 221, 239, 241, 313], "flip_flag": 11, "camera_pixel": 11, "pixel": [11, 28, 29, 30, 34, 64, 66, 69, 97, 99, 100, 102, 104, 241, 253, 254, 255, 274, 290], "x_pixel": [11, 97, 99, 100, 102, 104, 312], "int": [11, 28, 29, 30, 33, 35, 56, 64, 66, 69, 72, 74, 82, 83, 86, 97, 99, 100, 102, 104, 105, 108, 110, 113, 114, 116, 118, 119, 121, 124, 126, 129, 131, 136, 138, 146, 147, 149, 151, 153, 154, 156, 159, 160, 162, 164, 168, 170, 171, 173, 176, 177, 178, 183, 187, 189, 190, 193, 195, 204, 217, 219, 220, 232, 237, 239, 241, 247, 249, 255, 273, 274, 281, 282, 283, 286, 290, 292, 303, 308], "number": [11, 13, 51, 55, 56, 64, 66, 69, 72, 97, 99, 100, 102, 104, 108, 110, 113, 118, 121, 124, 126, 136, 138, 146, 151, 154, 157, 164, 165, 170, 171, 178, 183, 187, 189, 193, 195, 204, 212, 217, 219, 220, 222, 239, 241, 281, 282, 283, 286, 292, 303, 304, 308, 311], "y_pixel": [11, 97, 99, 100, 102, 104, 312], "channels_info": 11, "channel": [11, 64, 66, 69, 108, 110, 124, 126, 136, 138, 151, 164, 177, 183, 187, 191, 195, 217, 239, 241, 312, 314], "popul": [11, 104], "combobox": 11, "avail": [11, 13, 51, 55, 56, 60, 113, 116, 118, 121, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 178, 217, 239, 303, 304, 309, 313, 314], "488nm": [11, 312], "561nm": 11, "642nm": [11, 312], "filter": [11, 76, 81, 113, 114, 116, 118, 119, 121, 239, 310, 311], "align": [11, 56, 118, 121, 146, 149, 151, 153, 156, 159, 162, 164, 312], "gfp": [11, 121, 312], "ff01": [11, 312], "515": [11, 312], "30": [11, 56, 290, 303, 312], "32": [11, 56, 217, 312], "daq_sample_r": 11, "daq": [11, 80, 83, 85, 136, 138, 151, 177, 239, 241, 303, 310], "sampl": [11, 108, 110, 124, 126, 136, 138, 151, 162, 253, 254, 255, 309, 310, 314], "rate": [11, 99, 100, 102, 104, 108, 110, 114, 119, 121, 124, 126, 136, 138, 147, 151, 160], "filter_wheel_setting_dict": 11, "wheel": [11, 76, 81, 113, 114, 116, 118, 119, 121, 239, 310, 311], "galvo_num": 11, "galvo_parameter_dict": 11, "lasers_info": 11, "laser_list": 11, "microscope_config": [11, 241], "microscope_nam": [11, 73, 79, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 108, 110, 113, 116, 118, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 177, 239, 241], "number_of_channel": 11, "remote_focus_dict": 11, "delay_perc": [11, 99, 312], "pulse_perc": [11, 99, 312], "remote_focus_paramet": 11, "percent": [11, 124, 126, 136, 138, 146, 151, 228, 243, 245, 246, 248, 250, 303], "delai": [11, 108, 110, 113, 118, 124, 126, 136, 138, 151, 156, 168, 170, 173, 239, 245, 248], "puls": [11, 108, 110, 146, 248, 312, 314], "stage_default_posit": 11, "current": [11, 13, 29, 51, 55, 56, 97, 99, 100, 102, 104, 105, 151, 162, 164, 168, 170, 173, 177, 183, 186, 187, 190, 195, 197, 201, 202, 203, 204, 205, 212, 217, 228, 239, 241, 303, 311, 312], "stage_flip_flag": 11, "stage_setting_dict": 11, "stage_step": 11, "step": [11, 56, 64, 66, 69, 97, 99, 100, 102, 104, 178, 181, 183, 186, 187, 188, 189, 190, 191, 194, 195, 197, 201, 202, 203, 205, 206, 303, 309, 312, 313], "size": [11, 28, 29, 30, 56, 64, 66, 69, 97, 99, 100, 102, 104, 183, 187, 195, 197, 217, 232, 234, 235, 237, 241, 253, 254, 255, 274, 281, 303, 312], "same": [11, 13, 28, 30, 51, 55, 56, 168, 170, 173, 181, 237, 271, 276, 308, 312], "group": [13, 51, 55], "target": [13, 14, 29, 51, 55, 60, 61, 156, 168, 170, 173, 188, 241, 257], "arg": [13, 14, 51, 55, 56, 60, 61, 72, 73, 175, 187, 202, 203, 204, 205, 207, 208, 213, 215, 241, 260, 279, 308, 309], "daemon": [13, 51, 55], "thread": [13, 14, 15, 51, 53, 55, 60, 61, 76, 77, 78, 80, 81, 85, 87, 178, 183, 190, 193, 194, 195, 241], "A": [13, 14, 15, 18, 19, 51, 55, 56, 60, 61, 146, 149, 151, 153, 156, 159, 162, 164, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 219, 220, 221, 222, 228, 270, 276, 281, 290, 304, 309, 312, 314], "custom": [13, 14, 15, 18, 19, 212, 219, 220, 311, 314], "self": [13, 55, 56, 99, 100, 108, 110, 118, 149, 156, 168, 170, 173, 183, 217, 228, 304, 308, 309], "lock": [13, 15, 56, 110, 194, 241], "capabl": [13, 15, 187, 203, 205], "extend": [13, 202, 204, 212, 220], "python": [13, 18, 19, 22, 51, 53, 55, 56, 59, 64, 66, 69, 234, 235, 237, 263, 269, 294, 303, 308, 309, 311, 312], "provid": [13, 14, 56, 105, 181, 186, 187, 189, 190, 191, 192, 193, 195, 201, 202, 203, 204, 205, 206, 212, 279, 303, 304, 305, 309, 312, 314], "abil": 13, "unlock": 13, "explicitli": [13, 239, 314], "scenario": 13, "where": [13, 51, 55, 56, 203, 205, 206, 207, 208, 213, 215, 217, 220, 241, 303, 305, 309, 312, 313], "synchron": [13, 14, 15, 193, 194, 314], "requir": [13, 38, 56, 85, 146, 149, 151, 153, 156, 159, 162, 164, 181, 186, 208, 219, 220, 222, 241, 308, 310, 313, 314], "addit": [13, 22, 56, 66, 113, 118, 146, 181, 187, 203, 205, 212, 241], "over": [13, 14, 29, 56, 213, 313], "execut": [13, 175, 181, 187, 189, 190, 194, 195, 201, 202, 203, 204, 205, 206, 221, 266, 309], "wait": [13, 51, 55, 60, 99, 100, 102, 104, 110, 113, 118, 121, 146, 151, 156, 159, 175, 194, 202, 204, 205, 239, 241, 309], "allow": [13, 14, 18, 19, 56, 187, 189, 193, 194, 195, 201, 203, 205, 206, 241, 303, 304, 309, 311, 312, 313, 314], "whether": [13, 14, 51, 55, 56, 74, 97, 99, 100, 102, 104, 146, 149, 151, 153, 156, 159, 162, 164, 181, 187, 189, 190, 195, 201, 203, 204, 205, 206, 217, 219, 220, 286], "islock": 13, "threadgroup": [13, 51, 55], "option": [13, 14, 22, 28, 29, 30, 51, 53, 55, 56, 64, 102, 110, 146, 149, 151, 153, 156, 159, 162, 164, 181, 186, 188, 189, 193, 195, 201, 202, 203, 204, 205, 206, 209, 212, 213, 215, 219, 220, 221, 222, 223, 232, 235, 237, 239, 247, 303, 308, 309], "callabl": [13, 14, 51, 53, 55, 59], "tupl": [13, 14, 35, 51, 55, 56, 64, 66, 69, 72, 156, 203, 205, 207, 208, 210, 213, 215, 232, 234, 235, 237, 274, 276, 288], "argument": [13, 14, 51, 53, 55, 56, 59, 60, 64, 66, 69, 72, 113, 118, 121, 187, 202, 203, 204, 205, 206, 207, 208, 213, 215, 241, 260, 278, 279, 308, 309], "keyword": [13, 14, 51, 55, 56, 60, 64, 66, 69, 203, 205, 206, 241, 308], "getnam": [13, 51, 55], "string": [13, 51, 53, 55, 56, 69, 113, 116, 118, 121, 129, 136, 162, 164, 170, 189, 212, 213, 214, 217, 241, 270, 271, 294, 308], "identif": [13, 51, 55, 212], "purpos": [13, 51, 55, 56, 61, 108, 110, 162, 313], "onli": [13, 51, 55, 56, 110, 146, 151, 197, 243, 290, 303, 304, 308, 312, 313, 314], "deprec": [13, 51, 55, 56], "instead": [13, 51, 55, 56, 61, 303, 308], "isdaemon": [13, 51, 55], "is_al": [13, 51, 55], "aliv": [13, 51, 55], "just": [13, 51, 55, 56, 309], "befor": [13, 51, 55, 56, 129, 131, 159, 175, 181, 187, 191, 195, 205, 212, 241, 284, 308, 309, 313], "run": [13, 14, 24, 51, 55, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 110, 178, 183, 201, 202, 203, 204, 205, 241, 303, 304, 309, 312, 313, 314], "start": [13, 18, 19, 30, 51, 55, 56, 102, 110, 124, 126, 136, 138, 146, 162, 178, 187, 195, 212, 239, 241, 245, 282, 286, 303, 304, 308, 309, 313, 314], "until": [13, 51, 55, 60, 110, 118, 146, 151, 153, 156, 159, 162, 164, 178, 194, 239, 241], "after": [13, 51, 55, 56, 105, 168, 173, 178, 186, 190, 195, 205, 241, 304, 308, 309, 312, 313], "termin": [13, 51, 55, 178, 201, 239, 241, 304, 312, 313, 314], "see": [13, 51, 55, 56, 60, 61, 235, 295, 304, 308, 309, 311, 312, 313], "also": [13, 51, 55, 56, 210, 217, 220, 304, 308, 313, 314], "enumer": [13, 51, 55], "join": [13, 51, 55, 61], "timeout": [13, 51, 55, 114, 119, 160, 170, 176, 241], "block": [13, 51, 55, 56, 64, 146, 151, 153, 156, 159, 162, 164, 301, 308], "call": [13, 14, 51, 53, 55, 56, 60, 61, 64, 110, 153, 183, 191, 208, 212, 217, 219, 220, 241, 303, 312, 313], "whose": [13, 18, 19, 51, 55, 56], "either": [13, 51, 55, 56, 104, 189, 209, 303, 308, 312], "normal": [13, 39, 42, 51, 55, 56, 97, 99, 100, 102, 104, 177, 239, 312], "through": [13, 18, 19, 24, 48, 51, 55, 56, 187, 195, 202, 203, 204, 205, 206, 215, 219, 228, 239, 309], "an": [13, 24, 28, 29, 30, 33, 35, 36, 48, 51, 53, 55, 56, 59, 60, 61, 72, 97, 99, 100, 102, 104, 146, 149, 151, 153, 156, 159, 162, 164, 170, 181, 188, 189, 195, 201, 202, 204, 212, 220, 221, 222, 223, 232, 235, 239, 241, 273, 279, 281, 284, 290, 295, 303, 304, 305, 308, 309, 312, 314], "unhandl": [13, 51, 55], "except": [13, 14, 51, 55, 56, 61, 72, 146, 149, 151, 153, 156, 159, 162, 164, 308], "occur": [13, 51, 55, 56, 146, 305], "when": [13, 51, 53, 55, 56, 61, 178, 194, 201, 202, 203, 204, 205, 206, 208, 212, 239, 241, 303, 304, 309, 312, 313, 314], "present": [13, 30, 51, 55, 97, 99, 100, 102, 104, 170, 209, 212, 213], "should": [13, 18, 19, 51, 55, 56, 60, 61, 99, 100, 102, 118, 146, 181, 189, 192, 194, 201, 202, 203, 204, 205, 206, 215, 219, 220, 222, 281, 303, 304, 308, 312, 313, 314], "point": [13, 51, 55, 56, 69, 201, 217, 273, 288, 289, 290, 303], "specifi": [13, 18, 19, 51, 55, 56, 118, 121, 162, 186, 188, 189, 193, 201, 202, 203, 204, 205, 206, 209, 213, 215, 217, 219, 220, 221, 222, 223, 268, 271, 303, 308, 309, 312], "oper": [13, 14, 51, 53, 55, 59, 159, 177, 178, 181, 197, 201, 207, 208, 217, 239, 305, 309, 310, 312, 313, 314], "second": [13, 51, 55, 56, 64, 66, 69, 99, 100, 102, 104, 124, 126, 138, 177, 239, 243, 244, 245, 246, 247, 248, 250, 303, 308, 312], "fraction": [13, 51, 55, 281, 282], "thereof": [13, 51, 55], "As": [13, 51, 53, 55, 56, 59, 309, 314], "alwai": [13, 51, 55, 56, 64, 66, 69, 207, 223], "you": [13, 51, 53, 55, 56, 58, 59, 60, 61, 212, 303, 304, 309, 312, 313, 314], "must": [13, 28, 30, 51, 55, 56, 60, 64, 118, 290, 304, 308, 309, 314], "decid": [13, 51, 55, 189, 190, 303, 312], "happen": [13, 51, 55, 309], "still": [13, 51, 55, 56, 194, 303, 312, 313, 314], "time": [13, 51, 55, 56, 64, 66, 69, 72, 97, 99, 100, 102, 104, 108, 110, 113, 118, 121, 124, 126, 136, 138, 146, 151, 160, 170, 175, 176, 177, 187, 193, 195, 197, 204, 217, 239, 241, 243, 266, 303, 305, 312, 314], "out": [13, 18, 19, 51, 55, 56, 99, 100, 118, 146, 149, 151, 153, 156, 159, 162, 164, 176, 181, 183, 186, 188, 212, 222, 228, 248, 281, 282, 303, 304, 308, 312, 314], "can": [13, 51, 53, 55, 56, 58, 61, 64, 66, 69, 102, 104, 113, 118, 181, 186, 189, 203, 205, 206, 212, 213, 214, 235, 241, 276, 303, 304, 305, 308, 309, 312, 313, 314], "ed": [13, 51, 55], "mani": [13, 51, 55, 56, 183, 204, 304, 309, 312, 314], "rais": [13, 51, 55, 56, 61, 64, 66, 69, 73, 97, 99, 100, 102, 104, 113, 116, 118, 119, 121, 159, 170, 212, 276, 308], "runtimeerror": [13, 51, 55, 56], "attempt": [13, 51, 55, 56, 72], "made": [13, 51, 55, 56], "would": [13, 51, 55, 56, 213, 215, 222, 303, 312, 314], "caus": [13, 51, 55, 56, 314], "deadlock": [13, 51, 55], "error": [13, 51, 55, 56, 61, 73, 118, 159, 253, 254, 270, 274, 304, 308, 313], "ha": [13, 51, 55, 56, 58, 118, 146, 149, 151, 153, 156, 159, 162, 164, 187, 195, 197, 201, 203, 205, 206, 270, 281, 303, 308, 309, 310, 312, 314], "been": [13, 51, 55, 187, 195, 201, 203, 205, 206, 219, 220, 314], "do": [13, 18, 19, 51, 55, 56, 99, 100, 110, 146, 208, 209, 232, 235, 237, 303, 304, 308, 309, 312, 313, 314], "so": [13, 51, 55, 56, 61, 110, 197, 303, 313, 314], "setdaemon": [13, 51, 55], "setnam": [13, 51, 55], "": [13, 34, 51, 53, 55, 56, 97, 99, 102, 104, 118, 160, 162, 186, 188, 201, 202, 204, 205, 209, 217, 221, 239, 241, 303, 304, 308, 309, 313], "activ": [13, 51, 55, 99, 100, 102, 104, 108, 110, 113, 178, 186, 187, 191, 192, 195, 241, 304, 311, 312, 313, 314], "most": [13, 51, 55, 56, 304, 312, 314], "onc": [13, 51, 55, 56, 212, 309, 312, 313, 314], "arrang": [13, 51, 55], "invok": [13, 51, 55, 56], "separ": [13, 51, 55, 56, 178, 235, 260, 304, 308, 310], "more": [13, 51, 55, 56, 146, 149, 151, 153, 156, 159, 162, 164, 303, 304, 311, 313, 314], "than": [13, 28, 30, 51, 55, 56, 64, 99, 100, 102, 222, 304, 314], "finish": [13, 159, 183], "boolean": [13, 51, 55, 56, 181, 186, 187, 189, 190, 191, 192, 194, 195, 201, 203, 204, 205, 206, 207], "indic": [13, 28, 51, 55, 56, 64, 181, 186, 187, 189, 190, 191, 192, 194, 195, 201, 203, 204, 205, 206, 217, 221, 223, 228, 239, 281, 309], "otherwis": [13, 14, 18, 19, 21, 51, 55, 56, 99, 100, 102, 177, 178, 203, 205, 206, 219, 220, 222, 239, 271, 308], "Its": [13, 51, 55], "inherit": [13, 51, 55, 56, 72, 203, 205], "creat": [13, 14, 51, 55, 56, 61, 93, 110, 146, 151, 153, 156, 159, 164, 210, 241, 244, 246, 247, 248, 250, 268, 273, 274, 282, 304, 308, 311, 313, 314], "main": [13, 23, 51, 55, 61, 181, 187, 188, 190, 191, 192, 193, 194, 195, 203, 205, 209, 221, 304, 309], "therefor": [13, 51, 55, 56], "entir": [13, 51, 55, 228], "exit": [13, 51, 53, 55, 129, 131, 189, 309], "left": [13, 51, 55, 56, 245, 273, 274, 281, 313], "ident": [13, 51, 55, 309, 312], "identifi": [13, 44, 45, 51, 55, 118, 203, 205, 206, 212, 314], "nonzero": [13, 51, 55, 56], "integ": [13, 51, 55, 56, 189, 243, 244, 245, 246, 248, 250, 304], "get_id": [13, 51, 55], "mai": [13, 51, 55, 56, 181, 194, 215, 304, 308, 309, 313, 314], "recycl": [13, 51, 55], "anoth": [13, 51, 55, 56, 61, 303, 304, 312, 313, 314], "even": [13, 33, 51, 55, 56], "semant": [13, 51, 55], "constructor": [13, 51, 55], "native_id": [13, 51, 55], "nativ": [13, 51, 55, 56], "integr": [13, 51, 55, 314], "id": [13, 51, 55, 73, 74, 82, 83, 86, 102, 104, 124, 126, 129, 131, 149, 153, 156, 162, 164, 170, 178, 181, 183, 188, 189, 192, 194, 195, 219, 220, 241], "neg": [13, 51, 55], "get_native_id": [13, 51, 55], "repres": [13, 51, 55, 189, 201, 203, 205, 206, 210, 213, 214, 219, 220, 221, 222, 303, 312], "report": [13, 51, 55, 146, 151, 153, 156, 159, 162, 164, 241, 304], "kernel": [13, 51, 55], "selflock": 13, "pool": 14, "featur": [14, 55, 178, 241, 304, 306, 311], "associ": [14, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 304], "differ": [14, 56, 168, 170, 173, 181, 186, 201, 203, 205, 206, 212, 219, 303, 305, 309, 311, 312, 313, 314], "resourc": [14, 51, 60, 201, 202, 204], "regist": [14, 209, 314], "wrap": [14, 266], "task": [14, 110, 124, 126, 136, 138, 197, 210, 314], "other": [14, 56, 58, 110, 133, 194, 223, 239, 303, 304, 308, 309, 314], "explicit": 14, "creation": [14, 56], "effici": [14, 34], "clear": [14, 56, 175, 176, 201, 202, 204, 212, 241], "move": [14, 56, 113, 118, 121, 138, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 183, 187, 190, 195, 219, 220, 228, 239, 241, 303, 309, 312, 314], "todeletelist": 14, "later": 14, "delet": [14, 217, 269, 311], "createthread": 14, "resourcenam": 14, "callback": 14, "cbarg": 14, "cbkarg": 14, "add": [14, 38, 203, 205, 278, 279, 303, 304, 309, 312, 313], "waitlist": [14, 15], "selflockthread": 14, "getrunningthread": 14, "globaltrac": 14, "frame": [14, 33, 34, 35, 99, 100, 102, 104, 178, 181, 183, 187, 188, 189, 192, 194, 195, 203, 219, 220, 228, 239, 241, 310, 314], "event": [14, 18, 19, 205, 206, 221, 241], "trace": [14, 56], "ani": [14, 51, 55, 56, 64, 66, 69, 146, 149, 151, 153, 156, 159, 162, 164, 191, 194, 203, 205, 208, 209, 219, 220, 308, 309, 314], "killthreadinlist": 14, "threadlist": 14, "kill": 14, "localtrac": 14, "movetodelet": 14, "taskthread": 14, "registerresourc": 14, "removethread": 14, "threadtaskwrap": 14, "dequ": 15, "waitlistlock": 15, "log": [18, 19, 22, 23, 64, 66, 69, 99, 100, 192, 279], "exclud": [18, 19], "perform": [18, 19, 28, 118, 178, 181, 186, 188, 189, 194, 195, 201, 202, 204, 208, 223, 239, 309, 311, 314], "messag": [18, 19, 73, 176], "design": [18, 19, 113, 116, 118, 121, 170, 202, 204, 207, 212, 215, 217, 309, 314], "record": [18, 19, 56, 178, 220], "spec": [18, 19, 64, 232, 237], "logger": [18, 19, 22, 64, 66, 69, 241], "which": [18, 19, 53, 56, 60, 64, 66, 69, 146, 149, 151, 153, 156, 159, 162, 164, 181, 189, 192, 194, 201, 202, 203, 204, 205, 206, 210, 213, 221, 228, 241, 288, 289, 303, 304, 309, 310, 312, 314], "togeth": [18, 19], "its": [18, 19, 56, 146, 151, 153, 156, 159, 162, 164, 202, 203, 204, 206, 212, 213, 309], "children": [18, 19], "have": [18, 19, 53, 56, 59, 110, 187, 195, 201, 202, 204, 208, 219, 220, 235, 303, 304, 308, 309, 312, 313, 314], "everi": [18, 19, 146, 290, 303, 312, 314], "logrecord": [18, 19], "includ": [19, 56, 124, 126, 146, 149, 151, 153, 156, 159, 162, 164, 181, 186, 187, 188, 190, 191, 194, 195, 201, 202, 203, 204, 205, 206, 209, 212, 232, 235, 237, 303, 308, 309, 311, 312, 313, 314], "k": [21, 56], "v": [21, 56, 133], "ve": [21, 309], "met": [21, 24], "condit": [21, 24, 56], "kei": [21, 24, 56, 124, 126, 136, 138, 168, 170, 173, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 205, 206, 212, 213, 215, 294, 304, 311], "filenam": [21, 56, 69, 104, 217, 241, 271], "test": [21, 56, 93, 162, 175, 176, 177, 178], "logging_configur": 22, "logging_path": [22, 279], "inform": [22, 56, 99, 100, 102, 113, 118, 153, 154, 190, 192, 241, 268, 271, 281, 303, 304, 312, 313], "format": [22, 56, 64, 66, 69, 108, 110, 213, 217, 232, 235, 303, 304, 308, 309, 312], "here": [22, 24, 99, 100, 245, 303, 304, 305, 308, 312], "http": [22, 34, 64, 66, 69, 113, 118, 146, 232, 234, 235, 237, 269, 308, 312, 313, 314], "doc": [22, 113, 146, 237, 269, 308], "org": [22, 232, 237, 269], "3": [22, 56, 232, 237, 250, 253, 254, 269, 288, 289, 290, 308, 309, 310, 312, 313], "librari": [22, 56, 269, 304, 311], "config": [22, 239, 311, 312, 313], "html": [22, 237, 269, 308], "dictschema": 22, "rel": [22, 146, 197, 286, 314], "locat": [22, 28, 56, 118, 168, 170, 173, 279, 303, 313, 314], "folder": [22, 241, 269, 276, 304, 313], "store": [22, 56, 64, 66, 69, 97, 102, 104, 232, 234, 235, 237, 304], "aslm_path": 22, "queue": [23, 183, 221, 241, 314], "listen": [23, 176], "put": [23, 56, 221, 312], "sub": [23, 56, 195, 217, 269], "via": [23, 56, 85, 110, 119, 175, 249, 303, 314], "d": [24, 56, 104, 294, 295], "find_func": 24, "apply_func": 24, "appli": [24, 56, 146, 188, 210, 212, 222], "loop": [24, 56, 178, 189, 309], "todo": [24, 99, 100, 183, 217, 235, 295, 307], "highli": 24, "gener": [24, 56, 69, 104, 151, 162, 176, 187, 188, 217, 237, 253, 254, 255, 290, 308, 309], "doesn": [24, 56], "t": [24, 53, 55, 56, 59, 64, 66, 69, 99, 100, 110, 118, 146, 237], "belong": 24, "might": 24, "nice": 24, "make": [24, 43, 51, 53, 55, 56, 59, 282, 303, 304, 306, 309, 312], "func": [24, 72, 265, 266], "accept": [24, 51, 55, 56, 60, 146, 279, 290, 308, 309], "pair": [24, 203, 205, 206, 241, 309], "match": [24, 56, 215, 255, 290, 303, 308, 314], "d2": 24, "version": [24, 56, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 223, 310, 312, 313], "pass": [24, 51, 55, 56, 58, 59, 69, 108, 110, 202, 203, 204, 205, 212, 241, 303, 305, 308], "img_data": 28, "union": [28, 29, 30, 33, 35, 64, 66, 69, 232, 237, 255], "_supportsarrai": [28, 29, 30, 33, 35, 64, 66, 69, 232, 255], "dtype": [28, 29, 30, 33, 35, 55, 56, 58, 64, 66, 69, 232, 255], "_nestedsequ": [28, 29, 30, 33, 35, 64, 66, 69, 232, 255], "complex": [28, 29, 30, 33, 35, 56, 64, 66, 69, 232, 255], "byte": [28, 29, 30, 33, 35, 56, 64, 66, 69, 118, 121, 232, 255], "boundari": [28, 29, 31, 228, 281], "width": [28, 30, 56, 97, 99, 100, 102, 104, 178, 222, 239, 253, 254, 255, 273, 288], "1": [28, 29, 30, 34, 55, 56, 64, 66, 69, 74, 99, 102, 105, 124, 126, 146, 175, 177, 188, 189, 197, 204, 212, 219, 220, 222, 228, 237, 239, 241, 244, 245, 246, 247, 248, 250, 253, 254, 255, 281, 290, 303, 308, 309, 312, 314], "offset": [28, 30, 33, 35, 36, 56, 97, 99, 100, 102, 104, 136, 138, 168, 170, 173, 175, 183, 184, 187, 188, 239, 241, 245, 246, 247, 248, 250, 253, 254, 255, 274, 312], "varianc": [28, 30, 35, 36, 56, 97, 99, 100, 102, 104, 241], "binari": [28, 56, 274], "search": [28, 215, 313], "tissu": [28, 29, 30, 188, 219, 220, 222, 223, 228], "imag": [28, 29, 30, 33, 35, 36, 38, 39, 42, 45, 48, 56, 64, 69, 97, 99, 100, 102, 104, 110, 133, 178, 183, 186, 188, 191, 195, 217, 219, 220, 222, 223, 228, 239, 241, 253, 254, 255, 276, 282, 290, 309, 310, 314], "image_data": [28, 29, 30, 38, 40, 42, 45, 46, 222, 223], "npt": [28, 29, 30, 33, 35, 64, 66, 69, 288, 289, 290], "arraylik": [28, 29, 30, 33, 35, 64, 66, 69, 288, 289, 290], "xy": [28, 33, 273], "presenc": [28, 219, 220], "subimag": [28, 30], "smaller": [28, 30, 56], "shape": [28, 30, 43, 56, 58, 64, 66, 69, 232, 234, 235, 237, 276], "map": [28, 30, 33, 35, 36, 56, 97, 99, 100, 102, 104, 146, 151, 162, 164, 235, 241, 303, 312], "mag_ratio": 29, "find": [29, 56, 228, 303, 309, 312, 313, 314], "otsu": [29, 41, 42, 188], "threshold": [29, 41, 42, 151, 188, 190, 222, 223], "space": [29, 56, 188, 217, 281, 282], "resampl": 29, "ratio": 29, "tile": [29, 188, 228, 281, 282], "row": [29, 56, 284, 303], "downsampl": [29, 188], "determin": [30, 56, 64, 151, 181, 188, 189, 193, 194, 195, 203, 219, 220, 222, 223], "direct": [31, 45, 56, 97, 99, 100, 102, 104, 228, 253, 254, 255, 273, 314], "offset_map": [33, 36], "comput": [33, 35, 36, 188, 208, 239, 303, 312, 313, 314], "flatfield": 33, "evenli": 33, "illumin": 33, "scmo": [33, 34, 35], "zyx": [33, 35, 64], "defocus": 33, "signal": [33, 34, 110, 138, 176, 178, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 201, 204, 205, 206, 209, 210, 219, 220, 221, 241, 246, 309, 314], "np": [33, 34, 48, 55, 56, 97, 99, 100, 102, 104, 118, 177, 217, 222, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 274, 282, 284], "absenc": 33, "oppos": 33, "fn": 34, "qe": 34, "82": 34, "ib": 34, "nr": 34, "4": [34, 56, 99, 102, 133, 243, 244, 246, 247, 248, 250, 253, 254, 308, 309, 310, 312], "m": [34, 97, 99, 104, 133, 157, 241, 303, 312, 313], "www": [34, 118, 314], "hamamatsu": [34, 99, 100, 102, 310], "com": [34, 64, 66, 69, 113, 118, 146, 160, 234, 235, 237, 313, 314], "content": [34, 56, 214, 262, 270, 271, 309], "dam": 34, "photon": 34, "site": 34, "document": [34, 56, 93, 99, 100, 102, 146, 308, 309, 311, 313], "99_sales_librari": 34, "sy": [34, 56], "scas0134e_c13440": 34, "20cu_tec": 34, "pdf": [34, 118], "mean": [34, 51, 55, 56, 254], "nois": 34, "sigma": [34, 45, 183, 184], "excess": 34, "factor": [34, 151, 304], "unitless": 34, "quantum": 34, "arrai": [34, 56, 58, 64, 66, 69, 222, 223, 244, 245, 246, 247, 248, 249, 250, 253, 255, 274, 276, 282, 284, 288, 289], "background": [34, 253, 254, 255], "readout": [34, 97, 99, 100, 102, 104, 124, 126, 136, 138, 177, 239], "rm": 34, "em": 34, "gain": [34, 170], "estim": [34, 113, 217], "electron": 34, "numpi": [35, 56, 58, 99, 100, 104, 136, 138, 222, 223, 239, 244, 245, 246, 247, 248, 249, 250, 276, 308], "_array_lik": 35, "_nested_sequ": 35, "dark": 35, "taken": [35, 51, 55, 168, 170, 173], "sequenti": [35, 51, 55, 239], "variance_map": 36, "snr": 36, "border": 38, "median": 38, "3d": [38, 43, 48, 64], "inside_imag": 39, "normalized_cel": 39, "surface_cel": 39, "combin": [39, 261, 311], "insid": [39, 56, 313], "cell": [39, 41], "surfac": [39, 44, 45], "image_threshold": 40, "pixel_s": [40, 253, 254, 255, 290, 312], "206": 40, "padded_image_data": 41, "insidegamma": 41, "insideblur": 41, "insidedilateradiu": 41, "insideeroderadiu": 41, "tri": [41, 72, 304], "fill": [41, 56, 183, 229], "interior": 41, "gaussian": [41, 253, 254, 255], "blur": 41, "follow": [41, 168, 170, 173, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 213, 215, 304, 308, 309, 312, 313], "dilat": 41, "hole": 41, "eros": 41, "subtract": 42, "standard": [42, 51, 55, 56, 308, 311], "deviat": [42, 56, 305], "radiu": [43, 289], "element": [43, 56, 175, 212, 232, 295], "sphere": 43, "scale": [44, 151, 290], "each": [45, 48, 56, 58, 64, 66, 69, 72, 108, 110, 136, 138, 146, 151, 162, 168, 170, 173, 178, 181, 183, 191, 194, 203, 205, 206, 210, 212, 215, 217, 219, 220, 239, 241, 260, 281, 282, 284, 290, 303, 304, 305, 308, 309, 312, 314], "input_arrai": 48, "psf_support_diameter_xi": 48, "calcul": [48, 56, 97, 99, 100, 102, 104, 108, 110, 118, 121, 133, 151, 181, 183, 188, 193, 197, 222, 239, 241, 243, 281, 314], "entropi": [48, 183, 241], "ndarrai": [48, 56, 97, 99, 100, 102, 104, 136, 138, 177, 178, 217, 222, 223, 239, 253, 254, 255], "2d": [48, 56, 188, 253, 255], "iter": [48, 56, 178, 202, 203, 204, 205, 206, 212, 215, 239], "plane": [48, 187, 219, 220, 309, 314], "support": [48, 56, 64, 151, 215, 308, 311, 312], "psf": 48, "dimens": [48, 56, 64, 66, 69, 241, 281, 282, 312], "first_resourc": [51, 60], "resultthread": [51, 52], "access": [51, 55, 56, 58, 64, 66, 69, 303, 313], "order": [51, 56, 194, 202, 204, 212, 303, 312], "thei": [51, 53, 56, 59, 110, 209, 303, 308, 312, 313, 314], "were": [51, 56, 217, 312, 313], "launch": [51, 55, 61, 241, 312], "docstr": [51, 60, 61, 304, 308], "top": [51, 60, 61, 97, 99, 100, 102, 104, 269, 303, 312], "reserv": [51, 55], "futur": [51, 55, 56, 304, 314], "extens": [51, 55, 217], "implement": [51, 55, 56, 64, 66, 69, 102, 151, 153, 159, 162, 164, 207, 235, 303, 311, 314], "noth": [51, 55, 208, 209], "By": [51, 55, 56, 308, 312, 314], "uniqu": [51, 55, 314], "construct": [51, 55, 56, 168, 170, 173, 228], "form": [51, 55, 56, 222, 304, 308, 309, 314], "n": [51, 55, 56, 69, 186, 188, 228, 253, 254, 255, 288, 289, 290, 304, 308, 312, 313], "small": [51, 55, 304], "decim": [51, 55, 56], "invoc": [51, 55], "subclass": [51, 55, 56], "overrid": [51, 55, 64], "sure": [51, 55, 56, 303, 312], "anyth": [51, 55], "els": [51, 55], "get_result": [51, 55], "timeouterror": [51, 55], "respect": [51, 55, 56, 213, 222, 312], "control": [51, 55, 56, 74, 113, 114, 116, 118, 146, 147, 151, 153, 157, 164, 165, 170, 173, 175, 176, 177, 178, 181, 187, 188, 189, 190, 193, 194, 195, 201, 202, 203, 204, 205, 206, 217, 239, 241, 257, 303, 304, 309, 311, 312], "alia": [52, 54, 56], "initarg": [53, 58, 59], "custom_loop": [53, 58, 59], "close_method_nam": [53, 59], "closearg": [53, 59], "closekwarg": [53, 59], "with_lock": 53, "initkwarg": [53, 58, 59], "child": [53, 55, 59, 203, 205, 206, 210], "act": [53, 56, 59, 311], "like": [53, 56, 59, 60, 61, 276, 281, 303, 308, 312, 313, 314], "isn": [53, 59, 118], "much": [53, 59, 314], "try": [53, 55, 59, 304, 313], "instanc": [53, 56, 59, 60, 181, 186, 195, 210, 284, 303, 312], "behav": [53, 56, 59, 303, 304, 312], "re": [53, 55, 59], "live": [53, 56, 59, 241, 304], "parent": [53, 55, 58, 59, 97, 108, 116, 124, 136, 141, 149, 168], "cours": [53, 59], "spare": [53, 59], "core": [53, 56, 59], "your": [53, 56, 58, 59, 61, 269, 303, 304, 309, 311, 312, 314], "machin": [53, 56, 59, 146, 313], "turn": [53, 59, 124, 126, 129, 131, 239, 241, 303, 309, 312, 314], "cpu": [53, 56, 59], "bound": [53, 59, 146, 149, 151, 153, 156, 159, 162, 164, 188, 303, 312], "parallel": [53, 314], "io": [53, 59, 308], "without": [53, 55, 56, 58, 59, 205, 217, 303, 304, 312, 314], "too": [53, 59, 310], "mental": [53, 59], "overhead": [53, 59, 241], "coder": [53, 59, 304], "our": [53, 55, 56, 58, 102, 104, 232, 235, 237, 303, 304, 311, 312, 313, 314], "automat": [53, 304, 309, 314], "close_method": 53, "custodythread": 54, "simpl": [55, 56, 207, 309], "wish": 55, "had": 55, "chang": [55, 56, 99, 100, 102, 104, 113, 118, 121, 146, 168, 170, 173, 186, 188, 190, 241, 308, 309, 312, 313, 314], "trivial": 55, "save": [55, 69, 102, 146, 149, 151, 153, 156, 159, 162, 164, 183, 195, 213, 217, 241, 268, 271, 309], "u": [55, 56, 304, 314], "line": [55, 56, 60, 97, 99, 100, 102, 104, 241, 273, 286, 304, 308, 309, 312], "code": [55, 56, 64, 66, 69, 102, 105, 175, 183, 234, 235, 237, 286, 303, 306, 308, 309, 311, 312, 313], "def": [55, 308, 309], "doe": [55, 56, 66, 69, 187, 208, 295, 303, 312, 313, 314], "someth": [55, 56, 304, 312], "sum": [55, 56], "ones": 55, "2": [55, 56, 99, 102, 124, 126, 176, 223, 232, 245, 246, 253, 254, 290, 303, 308, 309, 310, 312, 314], "uint8": [55, 56, 58], "problem": [55, 56, 313], "th": [55, 56], "redefin": 55, "solut": [55, 310], "res_th": 55, "assert": 55, "handl": [55, 151, 153, 187, 193, 195, 202, 203, 204, 205, 210, 303, 312], "idea": 55, "attributeerror": [55, 56, 308], "print": [55, 56, 99, 100, 102, 104, 286, 308], "wa": [55, 56, 102, 146, 151, 153, 156, 159, 162, 164, 187, 217, 220, 241, 271], "assertionerror": 55, "dure": [55, 64, 66, 69, 178, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 219, 220, 245], "evalu": [55, 56, 217, 266, 288, 289, 290, 304, 312], "rerais": 55, "traceback": [55, 56], "stderr": 55, "don": [55, 99, 100, 146], "affect": [55, 56, 188], "yet": [55, 207, 303], "note": [55, 56, 178, 308, 312], "modifi": [55, 186, 212, 304, 309, 312], "excepthook": 55, "copi": [55, 56, 212, 312], "past": 55, "definit": [55, 60, 61], "work": [55, 56, 110, 304, 313], "shared_memory_nam": 56, "stride": 56, "memori": [56, 58, 59, 241, 304], "output": [56, 83, 85, 110, 146, 151, 248, 308, 314], "objectinsubprocess": 56, "serial": [56, 58, 99, 100, 102, 104, 113, 114, 118, 119, 121, 154, 157, 160, 164, 165, 262, 314], "pretti": 56, "fast": [56, 146], "larg": [56, 304], "regularli": 56, "deal": [56, 235], "sens": 56, "wai": [56, 241, 281, 303, 304, 308, 312], "avoid": [56, 274, 304, 312], "slow": [56, 58], "mayb": [56, 60, 61], "want": [56, 58, 118, 121, 303, 306, 309, 312, 313, 314], "write": [56, 64, 66, 69, 110, 195, 217, 232, 235, 237, 241, 304], "look": [56, 105, 281, 303, 312, 314], "data_buf": 56, "zero": [56, 149, 156, 255], "400": 56, "uint16": 56, "display_buf": 56, "preprocessor": 56, "displai": [56, 73, 108, 110, 213, 241, 309], "num_imag": 56, "show": [56, 241, 309, 313, 314], "payoff": 56, "own": [56, 312], "AND": 56, "realli": 56, "To": [56, 235, 303, 304, 306, 309, 312, 314], "memmap": 56, "axi": [56, 146, 149, 151, 153, 156, 159, 162, 164, 168, 170, 173, 197, 281, 290, 303, 312, 314], "keepdim": 56, "refer": [56, 157, 189, 193, 203, 205, 206, 239, 245, 260, 311], "full": [56, 100, 303, 314], "equival": [56, 313, 314], "argmax": 56, "maximum": [56, 97, 99, 100, 102, 104, 146, 151, 183, 217, 241, 303, 311, 312], "along": [56, 60, 61, 64, 146, 151, 153, 156, 159, 162, 164, 241, 281, 282], "argmin": 56, "minimum": [56, 97, 99, 100, 102, 104, 151, 197, 219, 220, 222, 303, 310, 312], "detail": [56, 118], "argpartit": 56, "kth": 56, "kind": 56, "introselect": 56, "partit": 56, "8": [56, 312], "argsort": 56, "sort": [56, 212], "astyp": 56, "cast": 56, "unsaf": 56, "subok": 56, "typecod": 56, "data": [56, 64, 66, 67, 69, 80, 99, 100, 102, 104, 108, 110, 151, 177, 178, 181, 183, 186, 188, 189, 190, 192, 193, 194, 195, 197, 202, 203, 209, 210, 212, 217, 219, 220, 222, 223, 239, 241, 268, 271, 284, 303, 309, 310, 311], "layout": [56, 188], "fortran": 56, "contigu": 56, "close": [56, 64, 66, 69, 97, 99, 100, 102, 104, 110, 113, 118, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 170, 201, 202, 204, 217, 239, 241, 281, 309], "appear": [56, 309, 312], "equiv": 56, "safe": 56, "same_kind": 56, "what": [56, 255, 281, 303, 309, 312], "backward": 56, "compat": [56, 64, 304], "preserv": 56, "within": [56, 61, 146, 149, 151, 153, 156, 159, 162, 164, 210, 213, 222, 290, 304, 309, 312, 313, 314], "float64": 56, "float32": 56, "convers": [56, 99, 100], "done": [56, 99, 100, 118, 239, 241, 303, 312, 313, 314], "forc": 56, "newli": [56, 241], "alloc": [56, 58], "satisfi": [56, 309], "arr_t": 56, "unless": [56, 304], "descript": [56, 308], "17": [56, 314], "one": [56, 60, 61, 69, 146, 149, 151, 153, 156, 159, 162, 164, 194, 202, 203, 205, 206, 241, 303, 308, 309, 314], "field": [56, 303, 312], "9": [56, 312, 313], "numer": [56, 253, 254, 255, 308, 311], "mode": [56, 64, 66, 69, 97, 99, 100, 102, 104, 110, 157, 159, 162, 177, 186, 187, 195, 197, 239, 241, 309, 310, 312, 314], "length": [56, 207, 208, 281, 282, 290, 308], "long": 56, "enough": 56, "complexwarn": 56, "real": [56, 207, 208, 241], "5": [56, 222, 245, 303, 309, 310, 312, 314], "byteswap": 56, "inplac": 56, "swap": 56, "toggl": 56, "low": [56, 281, 310], "endian": 56, "big": [56, 217], "represent": [56, 64, 66, 69, 212, 213, 234, 235, 237, 295, 309], "place": [56, 212, 303, 312, 314], "imaginari": 56, "part": [56, 212, 304], "individu": [56, 192, 311], "view": [56, 58, 175, 176, 177, 178, 232, 237, 241, 304, 311], "256": 56, "8755": 56, "int16": 56, "hex": 56, "0x1": 56, "0x100": 56, "0x2233": 56, "13090": 56, "0x3322": 56, "b": [56, 118, 119], "ceg": 56, "fac": 56, "s3": 56, "newbyteord": 56, "produc": [56, 294], "choos": [56, 308, 309], "choic": [56, 309], "index": [56, 64, 82, 83, 110, 118, 168, 170, 173, 190, 195, 212, 217, 237, 239, 241, 253, 254, 255, 276, 303, 312], "clip": 56, "One": [56, 69], "compress": [56, 217], "select": [56, 108, 110, 136, 138, 239, 309, 314], "slice": [56, 64, 276, 290], "conj": 56, "conjug": 56, "wise": 56, "veri": 56, "similar": [56, 203, 205, 206, 303, 304, 308, 312], "behavior": [56, 203, 205, 206, 304, 308, 309, 314], "copyto": 56, "prefer": 56, "6": [56, 237, 309, 312], "c_contigu": 56, "cumprod": 56, "cumul": 56, "product": [56, 146, 304, 311, 314], "cumsum": 56, "diagon": 56, "axis1": 56, "axis2": 56, "In": [56, 235, 303, 304, 309, 312, 314], "previou": [56, 104, 190], "restrict": 56, "dump": 56, "pickl": 56, "back": [56, 232, 235, 245, 309, 314], "pathlib": 56, "now": [56, 187, 232, 313], "scalar": 56, "assign": [56, 209], "flatten": [56, 253], "collaps": 56, "major": 56, "style": [56, 308, 314], "column": 56, "ravel": [56, 253], "flat": 56, "getfield": 56, "certain": [56, 312], "need": [56, 61, 99, 100, 102, 104, 181, 183, 186, 187, 195, 197, 202, 203, 205, 206, 207, 208, 210, 212, 217, 239, 241, 281, 303, 308, 309, 312, 313, 314], "fit": [56, 183, 184, 253, 254, 308], "complex128": 56, "16": [56, 217], "take": [56, 210, 213, 215, 222, 239, 282], "bit": [56, 64, 66, 69, 217, 235], "12": [56, 312], "larger": 56, "itself": [56, 212, 308], "skip": 56, "begin": [56, 181, 201, 202, 204, 219, 220], "diag": 56, "j": [56, 133], "item": [56, 212, 301, 303, 312], "variabl": [56, 133, 194, 207, 208, 210, 219, 220, 222, 304, 308, 313, 314], "case": [56, 304], "int_typ": 56, "interpret": 56, "singl": [56, 64, 133, 146, 151, 153, 156, 159, 162, 164, 248, 276, 281], "nd": 56, "suitabl": 56, "longdoubl": 56, "clongdoubl": 56, "becaus": [56, 303], "lose": 56, "void": 56, "buffer": [56, 99, 100, 102, 104, 177, 178, 217, 239, 241], "defin": [56, 72, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 204, 206, 209, 235, 290, 303, 309, 312], "speed": [56, 118, 146, 159, 162, 170, 304, 310], "up": [56, 64, 66, 69, 102, 105, 110, 151, 176, 181, 195, 197, 273, 309, 312, 314], "arithmet": 56, "optim": [56, 181, 314], "math": 56, "random": [56, 104], "seed": 56, "123": 56, "randint": 56, "7": [56, 245, 309, 310, 312, 313], "itemset": 56, "There": [56, 235, 314], "least": 56, "last": [56, 212, 281, 313], "Then": [56, 309], "faster": [56, 194], "two": [56, 212, 241, 303, 308, 312, 314], "first": [56, 58, 168, 170, 173, 175, 194, 212, 235, 281, 303, 308, 309, 312, 313, 314], "compar": [56, 183], "syntax": 56, "some": [56, 58, 64, 66, 69, 234, 235, 237, 304, 309, 313, 314], "increas": [56, 304], "particular": [56, 314], "howev": [56, 304, 314], "discourag": 56, "among": 56, "complic": 56, "amax": 56, "averag": 56, "amin": 56, "new_ord": 56, "arr": 56, "newbytord": 56, "specif": [56, 118, 146, 181, 191, 192, 193, 205, 206, 207, 303, 312, 314], "below": [56, 303, 304, 308, 309, 312, 313], "opposit": 56, "littl": 56, "byteord": 56, "ignor": [56, 232, 304], "new_arr": 56, "reflect": [56, 312], "rearrang": 56, "equal": [56, 212, 222, 308], "greater": [56, 222], "behind": 56, "undefin": 56, "sequenc": [56, 201, 202, 203, 204, 205, 206, 276, 309], "final": [56, 181, 201, 202, 204, 303, 312], "them": [56, 202, 204, 209, 210, 212, 304, 313, 314], "sinc": [56, 314], "22": [56, 197], "algorithm": 56, "etc": [56, 64, 66, 69, 102, 146, 149, 151, 153, 156, 159, 162, 164, 234, 235, 237, 279, 281, 311], "unspecifi": 56, "come": [56, 104], "break": [56, 304, 308], "ti": 56, "paritit": 56, "indirect": 56, "prod": 56, "ptp": 56, "peak": [56, 245, 253, 254, 255], "repeat": [56, 108, 110, 292, 310, 312], "reshap": 56, "unlik": [56, 223], "free": [56, 314], "For": [56, 110, 146, 151, 153, 156, 159, 162, 164, 223, 269, 303, 304, 309, 312, 314], "10": [56, 72, 99, 118, 119, 146, 188, 222, 243, 245, 246, 247, 248, 249, 250, 303, 310, 312], "11": [56, 157, 312, 314], "resiz": 56, "new_shap": 56, "refcheck": 56, "count": [56, 146, 176, 189, 190, 193, 195, 197, 212, 222, 286, 303, 312], "valueerror": [56, 113, 116, 118, 121, 170, 212, 308], "pypi": 56, "reliabl": 56, "systemerror": 56, "behaviour": 56, "bug": [56, 304], "realloc": 56, "area": [56, 222], "consecut": 56, "shrink": 56, "enlarg": 56, "abov": [56, 312], "entri": [56, 201, 257, 303, 309, 312, 314], "referenc": 56, "prevent": 56, "recent": [56, 314], "cannot": 56, "round": 56, "around": [56, 60, 61, 309], "searchsort": 56, "side": [56, 208, 281], "sorter": 56, "maintain": [56, 194, 201, 212], "setfield": 56, "val": [56, 72], "ey": 56, "int32": 56, "0e": 56, "000": 56, "5e": 56, "323": 56, "setflag": 56, "uic": 56, "writeabl": 56, "writebackifcopi": 56, "updateifcopi": 56, "These": [56, 186, 201, 202, 204, 215, 303, 314], "how": [56, 183, 204, 303, 304, 308, 309, 312, 313], "actual": [56, 64, 66, 69, 99, 100, 208, 223, 243, 281, 304], "never": 56, "ultim": 56, "owner": 56, "expos": 56, "interfac": [56, 102, 308], "unpickl": 56, "describ": [56, 308, 309], "written": [56, 64, 217, 304, 308], "properli": [56, 303, 314], "about": [56, 192, 271, 281, 304], "four": [56, 314], "w": [56, 64, 66, 69, 288], "appropri": [56, 304, 313, 314], "compil": 56, "pyarray_resolvewritebackifcopi": 56, "upper": [56, 274, 308], "letter": 56, "well": [56, 311], "f_contigu": 56, "owndata": 56, "stdin": 56, "quicksort": 56, "mergesort": 56, "heapsort": 56, "stabl": [56, 212], "both": [56, 64, 85, 146, 191, 235, 308, 309, 313], "timsort": 56, "under": [56, 303, 309, 311, 312, 314], "cover": [56, 281, 314], "vari": 56, "datatyp": 56, "retain": 56, "15": [56, 255, 290], "lexsort": 56, "partial": 56, "s1": 56, "i8": 56, "squeez": 56, "ax": [56, 146, 149, 151, 153, 156, 159, 162, 164, 303], "std": 56, "ddof": 56, "swapax": 56, "interchang": 56, "tobyt": 56, "raw": 56, "short": 56, "exhibit": 56, "u2": 56, "x00": 56, "x01": 56, "x02": 56, "x03": 56, "tofil": 56, "fid": 56, "sep": 56, "text": [56, 274, 308, 309, 313], "independ": [56, 314], "recov": 56, "fromfil": 56, "open": [56, 64, 66, 69, 141, 143, 170, 241, 304, 309, 313, 314], "closest": 56, "conveni": 56, "quick": [56, 146], "storag": [56, 178], "precis": [56, 314], "lost": 56, "good": [56, 304], "intend": [56, 213], "archiv": 56, "transport": 56, "overcom": 56, "expens": 56, "directli": [56, 60, 61, 99, 100, 189, 309, 314], "bypass": 56, "gzipfil": 56, "fileno": 56, "bytesio": 56, "tolist": 56, "ndim": 56, "deep": 56, "nearest": 56, "builtin": 56, "depth": 56, "possibli": [56, 181], "recreat": 56, "although": 56, "sometim": 56, "1d": 56, "almost": [56, 60], "uint32": 56, "a_list": 56, "a_tolist": 56, "addition": [56, 239], "0d": 56, "typeerror": 56, "tostr": 56, "exactli": 56, "despit": 56, "19": 56, "transpos": 56, "effect": [56, 208, 253, 254, 255], "vector": 56, "simpli": [56, 208, 304], "atleast2d": 56, "achiev": 56, "newaxi": 56, "matrix": [56, 118, 232], "permut": 56, "revers": [56, 212], "becom": 56, "altern": [56, 102, 234, 235, 237, 308], "give": [56, 212, 303], "var": 56, "omit": 56, "former": [56, 239], "float_": 56, "descriptor": 56, "again": 56, "omiss": 56, "some_dtyp": 56, "reinterpret": 56, "ndarray_subclass": 56, "regular": [56, 304, 308], "predict": 56, "superfici": 56, "shown": [56, 309, 313], "versu": 56, "int8": 56, "513": 56, "xv": 56, "underli": 56, "20": [56, 222, 312], "i1": 56, "recarrai": 56, "i2": 56, "ctype": 56, "simplifi": 56, "interact": [56, 312], "easier": [56, 212], "themselv": [56, 309], "possess": 56, "ctypeslib": 56, "public": [56, 308], "guid": [56, 146, 304], "undocu": 56, "privat": [56, 308], "_ctype": 56, "pointer": [56, 64, 66, 69, 309], "correct": [56, 151], "arbitrari": [56, 64, 66, 69, 308, 309], "troubl": 56, "crash": [56, 304], "bewar": 56, "_array_interface_": 56, "data_a": 56, "kept": 56, "c_void_p": 56, "dealloc": 56, "spelt": 56, "basetyp": 56, "correspond": [56, 146, 151, 153, 159, 178, 188, 203, 205, 206, 213, 215, 303, 312, 314], "p": [56, 64, 170, 288, 289, 290], "platform": 56, "c_intp": 56, "could": [56, 119, 151, 269, 309, 314], "c_int": 56, "c_long": 56, "c_longlong": 56, "import": [56, 304, 309, 311, 312, 314], "jump": 56, "next": [56, 175, 183, 190, 191, 239, 308, 309, 314], "obj": [56, 113, 118, 170, 308], "_as_parameter_": 56, "perhap": 56, "c_doubl": 56, "keep": [56, 204, 304], "shape_a": 56, "c_short": 56, "strides_a": 56, "as_paramet": 56, "31962608": 56, "c_uint32": 56, "__main__": 56, "lp_c_uint": 56, "0x7ff2fc1fc200": 56, "c_uint": 56, "c_uint64": 56, "c_ulong": 56, "4294967296": 56, "_intern": 56, "c_long_array_2": 56, "0x7ff2fc1fce60": 56, "0x7ff2fc1ff320": 56, "segment": [56, 241], "o": [56, 263, 269, 270, 274, 313], "borrow": [56, 64, 66, 69, 234, 235, 237], "subsequ": [56, 312], "while": [56, 159, 303], "remain": [56, 146, 189, 193, 194, 204], "alreadi": [56, 203, 304, 313], "circumst": 56, "alter": [56, 146], "previous": 56, "onto": [56, 314], "fnc": 56, "carrai": 56, "ca": 56, "farrai": 56, "fa": 56, "lowercas": 56, "arbitrarili": 56, "truli": [56, 314], "simultan": [56, 69, 146, 304, 314], "dimension": 56, "higher": [56, 183], "dim": [56, 276], "hold": [56, 271], "items": 56, "flatit": 56, "similarli": [56, 235], "built": [56, 212, 305], "arang": 56, "sqrt": 56, "0j": 56, "1j": 56, "70710678": 56, "nbyte": [56, 64, 66, 69], "total": [56, 151, 183, 189, 195, 204, 222, 241, 281, 303], "consum": 56, "480": 56, "usual": 56, "infer": 56, "fail": [56, 303, 309, 312], "unchang": 56, "incompat": 56, "modif": [56, 304], "desir": [56, 99, 100, 102, 104, 168, 170, 173, 186, 188, 241, 279], "obtain": 56, "suggest": 56, "int_": 56, "relev": [56, 192, 207, 308], "further": 56, "overflow": 56, "fix": [56, 189, 304], "travers": 56, "explan": 56, "found": [56, 73, 97, 99, 100, 102, 104, 113, 118, 241, 303, 304, 312, 313], "rst": 56, "imagin": 56, "40": 56, "known": [56, 314], "tell": [56, 303, 304], "lib": 56, "stride_trick": 56, "as_strid": 56, "13": 56, "14": [56, 290, 312], "18": 56, "21": 56, "23": 56, "48": 56, "224": 56, "1344": 56, "813": 56, "shared_memory_s": 58, "spawn": 58, "proxi": [58, 59, 262, 313], "proxyobject": [58, 60, 61], "shared_numpy_arrai": 58, "which_mp_arrai": 58, "shared_mp_arrai": 59, "proxymanag": [59, 60, 61], "thin": [60, 61], "wrapper": [60, 61], "few": [60, 61, 309], "usag": [60, 61], "custodi": [60, 61], "_custodi": 60, "switch_from": 60, "_wait_in_lin": 60, "_waitinglist": 60, "immedi": [60, 308], "acquir": [61, 97, 99, 100, 102, 104, 187, 188, 195, 197, 217, 239, 241, 303, 309, 314], "releas": [61, 194], "launch_custody_thread": 61, "feel": 61, "detect": [61, 188, 219, 220, 222, 223], "occour": 61, "file_nam": [64, 66, 69, 232, 235, 237], "datasourc": [64, 67, 69, 217], "bigdataview": [64, 232, 235], "sourc": [64, 66, 67, 69, 151, 197, 217, 310, 314], "hdf5": 64, "n5": 64, "multi": [64, 187, 190, 195, 203, 205, 206, 309, 314], "resolut": [64, 159, 186, 188, 197, 228, 241, 310], "pyramid": [64, 66, 69], "subdivid": 64, "32x32x1": 64, "r": [64, 66, 69, 284, 289], "h5py": 64, "zarr": 64, "n5store": 64, "ds_name": 64, "dataset": 64, "metadata": [64, 66, 69, 187, 232, 237], "bigdataviewermetadata": 64, "set_metadata_from_configuration_experi": [64, 66, 69], "kw": [64, 66, 69, 232, 235, 237], "metdata": [64, 66, 69], "concept": [64, 66, 69, 234, 235, 237], "microscopi": [64, 66, 69, 133, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 234, 235, 237], "github": [64, 66, 69, 234, 235, 237, 311, 312, 313], "dx": [64, 66, 69], "micron": [64, 66, 69, 146, 149, 151, 156, 159, 310], "dy": [64, 66, 69], "dz": [64, 66, 69], "dt": [64, 66, 69], "displac": [64, 66, 69], "dc": [64, 66, 69, 244], "shape_x": [64, 66, 69], "shape_i": [64, 66, 69], "shape_z": [64, 66, 69], "shape_t": [64, 66, 69], "shape_c": [64, 66, 69], "voxel_s": [64, 66, 69, 232, 234, 235, 237], "voxel": [64, 66, 69, 232, 234, 235, 237], "xyczt": [64, 66, 69, 232, 234, 235, 237], "clean": [64, 66, 69, 195, 197, 311], "leftov": [64, 66, 69], "get_slic": 64, "subdiv": 64, "grab": [64, 175], "timepoint": [64, 69, 187, 193, 312], "subdivis": 64, "dictproxi": [64, 66, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 141, 143, 146, 149, 151, 156, 168, 173], "notimplementederror": [64, 66, 69], "deriv": [64, 66, 69], "getter": [64, 66, 69, 308], "account": [64, 66, 69, 124, 126, 295], "xyz": [64, 146], "bdv": 64, "rather": [64, 314], "file_typ": [67, 217, 232, 235, 237], "tif": [67, 69, 217, 276], "tifdatasourc": 67, "is_bigtiff": 69, "tiff": [69, 104, 217, 235, 237, 276], "bigtiff": 69, "tifffil": 69, "save_directori": [69, 217, 268], "generate_image_nam": [69, 217], "current_channel": [69, 177, 217, 239], "current_time_point": [69, 217], "intern": [69, 197, 234, 235, 237], "ch00_000000": [69, 217], "stack": [69, 102, 104, 183, 193, 195, 197, 219, 220, 309, 314], "At": 69, "imsav": 69, "dummi": [71, 207, 208, 209], "n_tri": 72, "retri": 72, "connect": [72, 79, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 110, 113, 114, 116, 118, 119, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 147, 149, 151, 153, 154, 156, 157, 159, 160, 162, 164, 165, 168, 170, 171, 173, 239, 241, 303, 312, 314], "startup": [72, 303, 312], "redial": 72, "baseexcept": 72, "dcam": [72, 314], "incorrect": 73, "device_typ": 73, "camera_id": 74, "is_synthet": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 177, 239, 304], "synthet": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 104, 105, 110, 143, 162, 177, 239, 241, 303, 305, 312], "dedic": [76, 77, 78, 80, 81, 85, 87], "multiproces": [76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 141, 168], "device_connect": [79, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 104, 113, 116, 118, 121, 124, 126, 129, 131, 136, 138, 141, 143, 146, 149, 151, 153, 156, 159, 162, 164, 170, 173, 239, 304], "acquisit": [80, 97, 99, 100, 102, 104, 108, 110, 124, 126, 151, 181, 186, 187, 189, 190, 191, 193, 194, 195, 197, 217, 239, 241, 309, 310, 311], "filterwheel": 81, "scan": [82, 102, 146, 162, 187, 197, 219, 220, 310, 314], "switch": [83, 118, 241, 245, 303, 312, 314], "analog": [83, 110, 151, 247, 248, 250, 310], "digit": [83, 85, 314], "trigger": [83, 85, 110, 143, 151, 160, 197, 221, 243, 314], "focus": [84, 136, 245, 279, 310, 311], "shutter": [85, 97, 99, 100, 104, 241, 311], "thorlabsshutt": 85, "syntheticshutt": 85, "ni": [85, 303, 312], "card": [85, 151, 241, 311], "thu": [85, 312, 314], "enabl": [85, 108, 110, 121, 146, 149, 151, 153, 156, 159, 162, 164, 170, 195, 305, 308, 310, 314], "mock": 93, "dxl_lib": 93, "magicmock": 93, "nameerror": 97, "calculate_light_sheet_exposure_tim": [97, 99, 100, 102, 104], "full_chip_exposure_tim": [97, 99, 100, 102, 104], "shutter_width": [97, 99, 100, 102, 104], "exposur": [97, 99, 100, 102, 104, 108, 110, 124, 126, 136, 138, 151, 177, 197, 239, 241, 243, 303], "light": [97, 99, 100, 102, 104, 241, 312, 314], "sheet": [97, 99, 100, 102, 104, 241, 312, 314], "roll": [97, 99, 104], "exposure_tim": [97, 99, 100, 102, 104, 108, 110, 124, 126, 136, 138, 151, 239, 241, 245, 303, 312], "camera_line_interv": [97, 99, 100, 102, 104, 241], "hamamatsuorca": [97, 100, 102, 104, 303, 312], "interv": [97, 99, 100, 102, 104, 241, 303, 314], "durat": [97, 99, 100, 102, 104, 110, 113, 118, 121, 151, 160, 170, 241, 243, 266], "close_camera": [97, 99, 100, 102, 104], "get_line_interv": [97, 99, 100, 102, 104], "line_interv": [97, 102, 104, 312], "get_offset_variance_map": [97, 99, 100, 102, 104, 241], "filenotfounderror": [97, 99, 100, 102, 104, 276], "set_readout_direct": [97, 99, 100, 102, 104], "bottom": [97, 99, 100, 102, 104, 309, 312], "bytrigg": [97, 99, 100, 104], "diverg": [97, 99, 100, 104], "camera_control": [97, 99, 100, 102, 104], "camera_paramet": [97, 99, 100, 102, 104], "is_acquir": [97, 99, 100, 102, 104, 241], "max_image_height": [97, 99, 100, 102, 104], "height": [97, 99, 100, 102, 104, 178, 239, 273], "max_image_width": [97, 99, 100, 102, 104], "min_image_height": [97, 99, 100, 102, 104], "min_image_width": [97, 99, 100, 102, 104], "step_image_height": [97, 99, 100, 102, 104], "step_image_width": [97, 99, 100, 102, 104], "camerabas": [99, 102, 104], "orca": [99, 102], "flash": [99, 102, 310], "fusion": 99, "lightn": 99, "serial_numb": [99, 100, 102, 104, 157, 164, 303, 312], "302158": [99, 303, 312], "302159": 99, "302352": [99, 303, 312], "lightsheet_rolling_shutter_width": [99, 312], "608": [99, 312], "defect_correct_mod": [99, 312], "off": [99, 124, 126, 129, 131, 175, 239, 241, 309], "On": 99, "x_pixels_step": 99, "y_pixels_step": 99, "x_pixels_min": 99, "y_pixels_min": 99, "exposure_time_rang": [99, 312], "1000": [99, 303, 304, 312], "flip_x": 99, "flip_i": 99, "calculate_readout_tim": [99, 100, 102, 104], "assum": [99, 100, 113, 168, 170, 173, 197, 217, 228, 232, 235, 237, 269, 276, 282, 303, 313], "c13440": [99, 100], "link": [99, 100, 269], "commun": [99, 100, 114, 119, 121, 147, 178, 303, 312, 314], "pull": [99, 100, 304, 312], "readout_tim": [99, 100, 102, 104, 138, 177, 239], "max_frame_r": [99, 100, 102, 104], "framer": [99, 100, 102, 104], "think": [99, 100], "get_property_valu": [99, 100, 105], "close_image_seri": [99, 100, 102, 104], "seri": [99, 100, 102, 104], "stop": [99, 100, 102, 104, 110, 124, 126, 136, 138, 146, 149, 151, 153, 156, 159, 162, 164, 176, 178, 201, 204, 212, 239, 241], "line_interval_tim": [99, 100, 102, 104], "get_minimum_waiting_tim": [99, 100, 102, 104], "cyclic_trigger_period": [99, 100, 102], "minimum_trigger_blank": [99, 100, 102], "minimum_trigger_interv": [99, 100, 102], "trigger_blank": [99, 100, 102], "bigger": [99, 100, 102], "trigger_interv": [99, 100, 102], "get_new_fram": [99, 100, 102, 104], "initialize_image_seri": [99, 100, 102, 104], "data_buff": [99, 100, 102, 104, 177, 178, 217, 239, 241], "number_of_fram": [99, 100, 102, 104, 178, 239, 241], "100": [99, 100, 102, 104, 176, 303, 310, 312], "report_set": [99, 100, 102, 104], "consol": [99, 100], "set_roi": [99, 100, 102, 104], "roi_height": [99, 100, 102, 104], "2048": [99, 100, 104, 312], "roi_width": [99, 100, 102, 104], "region": [99, 100, 102, 104, 188, 281], "success": [99, 100, 146, 151, 153, 156, 159, 162, 164, 186, 187, 191, 192, 194, 221, 239, 241, 308], "set_bin": [99, 100, 102, 104], "binning_str": [99, 100, 102, 104], "bin": [99, 100, 102, 104, 241, 312], "1x1": [99, 100, 102, 312], "2x2": [99, 100, 102, 104], "4x4": [99, 100, 102, 104], "8x8": [99, 100, 102, 104], "16x16": [99, 100, 102], "1x2": [99, 100, 102], "2x4": [99, 100, 102], "set_exposure_tim": [99, 100, 102, 104], "unit": [99, 100, 102, 104, 146, 149, 156, 243, 244, 245, 246, 247, 248, 250, 310, 314], "millisecond": [99, 100, 102, 104, 151, 241, 303, 305, 312], "set_line_interv": [99, 100, 102, 104], "set_sensor_mod": [99, 100, 102, 104], "sensor": [99, 100, 102, 104, 204, 241], "chip": 100, "photometr": 102, "kinetix": 102, "warn": [102, 118], "Not": [102, 105, 162, 235, 243], "hard": [102, 105, 183], "3200": 102, "successfulli": [102, 147, 178, 239, 271, 314], "down": [102, 245, 273, 309], "programm": 102, "static": [102, 183], "generate_new_fram": 104, "load_imag": [104, 241], "pre": [104, 108, 110, 209, 241, 309], "camera_exposure_tim": 104, "current_frame_idx": 104, "num_of_fram": [104, 241], "pre_frame_idx": 104, "random_imag": 104, "idprop": 105, "property_dict": 105, "property_valu": 105, "set_property_valu": 105, "calculate_all_waveform": [108, 110, 239], "sweep_tim": [108, 110, 124, 126, 136, 138, 151, 239, 243, 244, 245, 246, 247, 248, 250, 312], "organ": [108, 110, 210], "sweep": [108, 110, 124, 126, 136, 138, 151, 177, 239], "waveform_dict": [108, 110, 124, 126, 136, 138, 151], "etl": [108, 110, 279], "plu": [108, 110], "enable_microscop": [108, 110], "camera_delai": [108, 110, 243, 245], "camera_delay_perc": [108, 110, 124, 126, 136, 138, 151], "percentag": [108, 110, 188, 219, 220, 222, 223, 239, 249], "camera_high_tim": [108, 110], "high": [108, 110, 186, 281, 310], "camera_pulse_perc": [108, 110], "daq_paramet": [108, 110], "remote_focus_ramp_fal": [108, 110, 124, 126, 136, 138, 151], "ramp": [108, 110, 124, 126, 136, 138, 245], "fall": [108, 110, 136, 138, 245], "sample_r": [108, 110, 124, 126, 136, 138, 151, 243, 244, 245, 246, 247, 248, 250, 312], "waveform_expand_num": [108, 110], "expand": [108, 110, 292, 312], "waveform_repeat_num": [108, 110], "daqbas": 110, "add_camera": 110, "close_task": [110, 124, 126, 136, 138], "counter": [110, 314], "create_camera_task": 110, "create_galvo_remote_focus_task": 110, "create_master_trigger_task": 110, "master": 110, "prepare_acquisit": [110, 239, 241], "channel_kei": [110, 124, 126, 136, 138], "prepar": [110, 124, 126, 136, 138, 181, 183, 191, 194, 197, 201, 202, 204, 239, 241], "run_acquisit": [110, 241], "set_external_trigg": 110, "external_trigg": 110, "extern": [110, 215, 312, 314], "start_task": [110, 124, 126, 136, 138], "won": 110, "run_task": 110, "stop_acquisit": [110, 241], "stop_task": [110, 124, 126, 136, 138], "update_analog_task": 110, "board_nam": 110, "board": [110, 314], "write_waveforms_to_task": 110, "analog_output": 110, "is_updating_analog_task": 110, "trigger_mod": [110, 312], "wait_to_run_lock": 110, "filterwheelbas": [113, 118, 121], "asi": [113, 114, 146, 147, 197, 303, 312], "asiimag": [113, 146], "fw_1000": 113, "fw": 113, "1000_ascii_command_set": 113, "check_if_filter_in_filter_dictionari": [113, 116, 118, 121], "filter_nam": [113, 116, 118, 121], "filter_exist": [113, 116, 118, 121], "port": [113, 114, 118, 119, 121, 131, 147, 160, 170, 171, 303, 312, 314], "filter_change_delai": [113, 118, 121], "40m": 113, "adjac": 113, "set_filt": [113, 118, 121], "wait_until_don": [113, 118, 121, 146, 151, 153, 156, 159, 162, 164, 168, 170, 173, 239, 241], "active_filter_wheel": 113, "filter_dictionari": [113, 116, 118, 121], "tiger": [113, 114, 146, 147, 239], "filter_wheel_posit": 113, "number_of_filter_wheel": [113, 118, 121], "wait_until_done_delai": [113, 118, 121], "wheel_posit": [113, 116, 118, 121], "comport": [114, 119, 121], "baudrat": [114, 119, 121, 303, 312], "115200": [114, 147, 303, 312], "25": [114, 119, 160], "build": [114, 119, 154, 160, 260, 268, 309], "asifilterwheel": 114, "com1": [114, 119, 121, 147], "baud": [114, 119, 121, 147, 160], "tiger_control": [114, 146, 239], "tigercontrol": 114, "sutter": [118, 119, 160, 305, 310], "lambda": [118, 119, 290, 310], "manual": 118, "lb10": 118, "3_opman": 118, "retriev": [118, 151, 178, 209, 268, 279, 304], "delay_matrix": 118, "page": [118, 133], "38": [118, 312], "rang": [118, 146, 181, 183, 187, 212, 308], "num_byt": [118, 121], "userwarn": [118, 119, 159], "respond": 118, "init_finish": 118, "softwar": [118, 151, 153, 162, 164, 241, 303, 304, 306, 309, 312, 314], "complet": [118, 194, 203, 205, 209, 309], "read_on_init": 118, "movement": [118, 146, 149, 151, 153, 156, 159, 162, 164, 190, 195, 303, 312], "sutterfilterwheel": [119, 303, 312], "9600": [119, 121, 147, 303, 312], "instal": [121, 241, 311, 314], "period": [121, 245], "galvo_id": [124, 126], "galvanomet": [124, 239, 311], "adjust": [124, 126, 136, 138, 186, 187, 195, 239, 241, 303, 314], "basi": [124, 126, 314], "channel_1": [124, 126], "channel_2": [124, 126], "prepare_task": [124, 126, 136, 138], "turn_off": [124, 126, 129, 131], "device_config": [124, 126, 129, 131, 136, 138, 304], "galvo_max_voltag": [124, 126, 151], "voltag": [124, 126, 136, 138, 151, 244, 245, 247, 250], "galvo_min_voltag": [124, 126, 151], "galvo_nam": [124, 126], "galvo_waveform": [124, 126, 304], "sawtooth": [124, 126, 245, 304], "rise": [124, 126, 245], "galvobas": 126, "laser_id": [129, 131], "initialize_las": [129, 131], "set_pow": [129, 131], "laser_intens": [129, 131], "power": [129, 131, 184, 239, 303, 306, 309, 312, 314], "intens": [129, 131, 217, 248, 253, 254, 255], "turn_on": [129, 131], "laserbas": 131, "calculate_entrance_pupil": 133, "entranc": 133, "pupil": 133, "incid": 133, "angl": 133, "fluoresc": 133, "interfer": 133, "contrast": 133, "carolin": 133, "ajo": 133, "franklin": 133, "prasad": 133, "ganesan": 133, "steven": 133, "boxer": 133, "biophi": 133, "volum": [133, 290], "89": 133, "issu": [133, 304, 313], "octob": 133, "2005": 133, "2759": 133, "2769": 133, "entrance_pupil_diamet": 133, "diamet": 133, "millimet": [133, 156], "nidaqmx": 136, "percent_smooth": [136, 138, 249, 312], "smooth": [136, 138, 239, 249, 312], "remote_focus_delai": [136, 138, 151, 245], "remote_focus_max_voltag": [136, 138], "remote_focus_min_voltag": [136, 138], "remotefocusbas": 138, "volt": [138, 151, 244, 245, 246, 247, 248, 250, 314], "close_shutt": [141, 143], "open_shutt": [141, 143], "shutter_st": [141, 143], "state": [141, 143, 146, 201, 202, 204, 241, 292, 303, 309, 312], "shutterbas": 143, "deliv": [143, 314], "device_id": [146, 149, 151, 153, 156, 159, 162, 164], "stagebas": [146, 151, 153, 156, 159, 162, 164], "scientif": 146, "instrument": [146, 151, 156, 157, 303, 310], "serial_command": 146, "command_quick_start": 146, "firmwar": 146, "distanc": [146, 151, 183, 190, 281, 288, 289, 290, 305], "10th": 146, "ever": 146, "ftp": [146, 314], "stilt": 146, "strain": 146, "system": [146, 210, 217, 239, 241, 253, 254, 255, 303, 304, 310, 312, 313, 314], "get_abs_posit": [146, 149, 151, 153, 156, 159, 162, 164], "axis_ab": [146, 149, 151, 153, 156, 159, 162, 164], "request": [146, 149, 151, 153, 156, 159, 162, 164, 178, 304], "absolut": [146, 149, 151, 153, 156, 159, 162, 164, 304], "get_axis_posit": [146, 162], "get_position_dict": [146, 149, 151, 153, 156, 159, 162, 164], "get_spe": [146, 162], "veloc": [146, 159, 162, 197, 303, 312, 314], "move_absolut": [146, 151, 153, 156, 159, 162, 164], "move_dictionari": [146, 149, 151, 153, 156, 159, 162, 164], "x_ab": [146, 149, 151, 153, 156, 159, 162, 164], "micromet": [146, 149, 151, 153, 156, 159, 162, 164, 305], "degre": [146, 149, 151, 153, 156, 159, 162, 164, 197], "spot": [146, 151, 153, 156, 159, 162, 164], "move_axis_absolut": [146, 151, 153, 156, 159, 162, 164], "abs_po": [146, 151, 153, 156, 159, 162, 164], "command": [146, 168, 173, 175, 241, 304, 313], "prefix": [146, 151], "x_min": [146, 151, 159, 303, 312], "report_posit": [146, 151, 153, 156, 159, 162, 164], "scanr": [146, 162], "start_position_mm": [146, 162], "end_position_mm": [146, 162], "enc_divid": [146, 162], "end": [146, 162, 178, 183, 187, 194, 195, 201, 202, 204, 209, 212, 219, 220, 239, 241, 303, 304, 308, 309], "encod": [146, 162, 197, 314], "set_spe": [146, 162], "velocity_dict": [146, 162], "start_scan": [146, 162], "abruptli": [146, 149, 151, 153, 156, 159, 162], "stop_scan": [146, 162], "verify_abs_posit": [146, 149, 151, 153, 156, 159, 162, 164], "is_strict": [146, 149, 151, 153, 156, 159, 162, 164], "y_ab": [146, 149, 151, 153, 156, 159, 162, 164], "abs_posit": [146, 149, 151, 153, 156, 159, 162, 164], "verify_mov": 146, "submit": 146, "aren": 146, "res_dict": 146, "axes_map": [146, 149, 151, 153, 156, 159, 162, 164, 303, 312], "stage_feedback": [146, 149, 151, 153, 156, 159, 162, 164], "feedback": [146, 149, 151, 153, 156, 159, 162, 164], "stage_limit": [146, 149, 151, 153, 156, 159, 162, 164], "com_port": [147, 160], "baud_rat": [147, 160], "asi_stag": 147, "x_po": [149, 156, 303], "y_po": [149, 156, 303], "matter": [149, 156], "piezo": [151, 310], "nation": [151, 310], "send": [151, 176, 178], "calculate_waveform": 151, "logic": [151, 153, 159, 162, 164, 204, 205], "axes_channel": [151, 312], "distance_threshold": 151, "stage_settle_dur": 151, "settl": 151, "trigger_sourc": [151, 312, 314], "volts_per_micron": [151, 312], "mad": [153, 154, 310], "citi": [153, 154, 310], "lab": [153, 154, 304, 310, 313], "mcl": 153, "mcl_control": 153, "serialnum": [154, 165], "stage_connect": [154, 157], "physik": [156, 157], "pi": [156, 157, 246, 250, 303, 312], "xyzf": 156, "position_dict": [156, 162, 164], "wait_on_target": 156, "pi_ax": 156, "pi_devic": [156, 157], "pi_tool": [156, 157], "controller_nam": 157, "reference_mod": 157, "863": 157, "0112345678": 157, "111": 157, "1dg": 157, "frf": [157, 303, 312], "mp": [159, 305], "285": [159, 305], "mp285": [159, 160, 310], "device_ax": 159, "stage_x_po": 159, "stage_y_po": 159, "stage_z_po": 159, "sutterstag": 160, "load_sampl": 162, "mm": [162, 197], "divid": [162, 197, 222, 281], "unload_sampl": 162, "unload": [162, 241], "default_spe": 162, "thorlab": [164, 165, 303, 310, 312], "kim": [164, 165], "kim_ax": 164, "kim_control": [164, 165], "device_control": 168, "build_stage_dict": [168, 170, 173], "stage_posit": [168, 170, 173, 239, 312], "ideal": [168, 170, 173, 309], "solvent": [168, 170, 173], "babb": [168, 170, 173, 312], "63x": [168, 170, 173, 312], "1x": [168, 170, 173, 312], "70775": [168, 170, 173], "2x": [168, 170, 173, 245, 310, 312], "72455": [168, 170, 173], "3x": [168, 170, 173, 312], "72710": [168, 170, 173], "4x": [168, 170, 173, 312], "72795": [168, 170, 173], "5x": [168, 170, 173, 312], "72850": [168, 170, 173], "6x": [168, 170, 173, 312], "72880": [168, 170, 173], "refract": [168, 170, 173, 253, 254, 255], "servo": [168, 170, 171, 173, 314], "read_posit": [168, 170, 173], "cur_posit": [168, 170, 173], "set_zoom": [168, 170, 173], "confirm": [168, 170, 173, 217, 309, 314], "tha": [168, 173], "zoomdict": [168, 170, 173], "zoomvalu": [168, 170, 173], "zoombas": [170, 173], "dynamixel": 170, "4096": 170, "addr_mx_goal_posit": 170, "goal": 170, "addr_mx_moving_spe": 170, "addr_mx_p_gain": 170, "addr_mx_present_posit": 170, "addr_mx_torque_en": 170, "torqu": [170, 314], "addr_mx_torque_limit": 170, "goal_position_offset": 170, "port_num": [170, 171], "sleeptim": 170, "sleep": 170, "torque_dis": 170, "disabl": [170, 312], "torque_en": 170, "dynamixelzoom": [171, 303, 312], "dummyview": 175, "sec": 175, "append": [175, 178, 212, 241, 284], "sent": 175, "oldest": 175, "pop": [175, 212], "move_stag": [175, 239, 241], "configuration_control": 175, "configurationcontrol": 175, "menu_control": 175, "menu": [175, 309], "menucontrol": 175, "off_stage_po": 175, "stage_po": 175, "timecost": 176, "cost": 176, "pipe": [176, 178, 241], "generate_messag": 176, "sendout": 176, "receiv": [176, 178, 195, 205, 206, 219, 220, 241, 314], "in_port": 176, "msg_count": 176, "out_port": 176, "sendout_msg_count": 176, "stop_flag": [176, 178], "devices_dict": [177, 239], "calculate_exposure_sweep_tim": [177, 239], "data_func": [178, 188, 189, 192, 194, 241], "respons": [178, 181, 184, 186, 188, 190, 201, 202, 203, 204, 205, 206, 209, 239, 311], "continu": [178, 187, 189, 190, 195, 313, 314], "applic": [178, 181, 202, 204, 304], "shutdown": [178, 314], "signal_func": [178, 186, 187, 189, 190, 191, 193, 194, 195, 221], "reset": [178, 197, 201, 202, 204], "frame_id": [178, 181, 183, 188, 189, 192, 194, 195, 217, 219, 220, 241], "increment": [178, 219, 220, 303, 310], "util": [178, 181], "end_flag": [178, 201, 204], "feature_list": [178, 210, 213, 214, 215, 241], "active_microscop": [178, 241], "dummymicroscop": 178, "active_microscope_nam": [178, 228, 241], "data_buffer_posit": [178, 241], "data_contain": 178, "data_pip": 178, "data_record": 178, "data_thread": [178, 241], "dummydevic": 178, "img_height": [178, 239, 241], "img_width": [178, 239, 241], "signal_contain": 178, "signal_pip": 178, "signal_record": 178, "signal_thread": [178, 241], "autofocu": [181, 241, 309], "measur": [181, 281], "microscopemodel": [181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "config_t": [181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 219, 309], "node": [181, 186, 187, 190, 194, 195, 201, 202, 203, 204, 205, 206, 210, 309], "pre_func_sign": [181, 183, 197, 219, 220, 309], "in_func_sign": [181, 183, 219, 220, 309], "action": [181, 186, 195, 201, 205, 206], "end_func_sign": [181, 183, 219, 220, 309], "pre_func_data": [181, 183, 219, 220, 309], "in_func_data": [181, 183, 219, 220, 309], "end_func_data": [181, 183, 219, 220, 309], "involv": [181, 186, 187, 189, 190, 191, 192, 193, 194, 195, 202, 204], "autom": [181, 190, 311], "carri": [181, 186], "device_ref": 183, "autofocus_frame_queu": 183, "autofocus_pos_queu": 183, "max_entropi": [183, 241], "f_frame_id": 183, "frame_num": 183, "init_po": 183, "f_po": [183, 303], "focus_po": [183, 241], "target_frame_id": 183, "get_frames_num": 183, "plot_data": 183, "total_frame_num": 183, "fine_step_s": 183, "fine": [183, 304], "fine_pos_offset": 183, "coarse_step_s": 183, "coars": [183, 310], "coarse_step": 183, "signal_id": 183, "target_channel": 183, "routin": [183, 184, 311], "get_autofocus_frame_num": 183, "best": [183, 304], "get_step": 183, "step_siz": [183, 303, 312], "autofocus": 183, "travel": 183, "pos_offset": 183, "figur": [183, 304], "robust_autofocu": 183, "robust": 183, "amplitud": [183, 184, 244, 245, 246, 247, 248, 250, 312], "alpha": [183, 184], "unfortun": 183, "unstabl": 183, "x_offset": [184, 303, 312], "y_offset": [184, 303, 312], "tent": 184, "curv": 184, "resolution_mod": 186, "zoom_valu": 186, "reconfigur": [186, 309], "cleanup": [186, 190, 194, 195, 197, 201, 202, 204, 210, 309], "accordingli": [186, 190, 193], "typic": [186, 190, 191, 192, 201, 202, 204, 205, 209, 213, 215, 245, 304], "adapt": 186, "resum": [186, 190, 241, 308], "scanrang": 187, "n_plane": [187, 312], "offset_start": 187, "offset_end": 187, "offset_step_s": 187, "need_to_move_new_plan": 187, "offset_update_tim": 187, "conpro_cycling_mod": 187, "cycl": [187, 195], "per_stack": [187, 195], "device_rel": [187, 195, 203, 205, 206, 309], "pre_signal_func": [187, 194, 195], "signal_end": [187, 195], "generate_meta_data": [187, 217], "update_channel": [187, 195], "overlap": [188, 228, 281, 282], "target_resolut": [188, 228], "nanoscal": [188, 228, 312], "target_zoom": [188, 228], "grid": [188, 282], "interest": 188, "preprocess": [188, 222], "box": [188, 290, 309, 313, 314], "step_by_fram": 189, "data_fram": 189, "ontain": 189, "flexibl": [189, 193, 314], "dynam": [189, 193, 215, 309], "track": [189, 194, 201, 204, 219, 220, 282], "decrement": 189, "advanc": [190, 303, 304, 309], "tabl": [190, 209, 284], "pre_z": 190, "current_idx": 190, "multiposition_t": 190, "position_count": 190, "stage_distance_threshold": 190, "paus": [190, 193, 241, 303], "proper": [190, 313, 314], "virtual": [191, 239, 241], "primari": [191, 309], "readi": [191, 222, 239, 241, 312], "transit": [191, 202, 204], "prepare_next_channel": [191, 239], "captur": [192, 219, 220], "pause_num": 193, "microscopest": [193, 217, 228, 309], "pause_signal_lock": 194, "pause_data_lock": 194, "first_enter_nod": 194, "variablewithlock": 194, "enter": [194, 313], "pre_data_func": [194, 195], "manner": [194, 303, 312], "slower": 194, "improv": [194, 304], "proce": 194, "help": [194, 303, 308, 312], "held": 194, "get_origin": 195, "saving_flag": 195, "saving_dir": 195, "origin": [195, 313], "number_z_step": 195, "start_z_posit": 195, "start_focu": 195, "z_step_siz": 195, "focus_step_s": 195, "current_position_idx": 195, "being": [195, 257], "current_z_posit": 195, "current_focus_posit": 195, "need_to_move_new_posit": 195, "need_to_move_z_posit": 195, "z_position_moved_tim": 195, "stack_cycling_mod": 195, "image_writ": [195, 241], "imagewrit": [195, 241, 309], "in_data_func": 195, "incom": 195, "end_data_func": 195, "cleanup_data_func": 195, "inject": 197, "rotari": 197, "45": 197, "396": 197, "nm": [197, 253, 254, 255, 310], "quadratur": 197, "88": 197, "motion": [197, 310], "optic": [197, 253, 254, 255, 312], "root": [201, 202, 204, 210, 232, 235, 237, 294, 295], "cleanup_list": [201, 202, 204], "tree": [201, 202, 203, 204, 205, 206, 210, 309], "consist": [201, 204, 303, 304, 308], "treenod": [201, 202, 203, 204, 205], "curr_nod": [201, 204], "is_clos": [201, 204], "serv": [201, 207, 208], "special": [202, 203, 204, 308], "analysi": [202, 309], "mark": [202, 203, 241], "feature_nam": [203, 205, 206], "func_dict": [203, 205, 206], "node_typ": [203, 205, 206, 309], "need_respons": [203, 205, 206, 309], "those": [203, 205, 206], "is_mark": 203, "node_nam": [203, 205, 206], "node_func": [203, 205, 206], "is_initi": [203, 205, 206], "sibl": [203, 205, 206, 210], "statu": 203, "meet": [203, 304], "criteria": 203, "set_properti": [203, 205, 206], "number_of_execut": 204, "remaining_number_of_execut": 204, "wait_respons": [204, 205], "placehold": [207, 208, 223], "unus": [207, 208], "often": [207, 312], "situat": [207, 208], "context": 207, "feature_modul": 209, "func_typ": 209, "essenti": 209, "init": [209, 309], "dummy_func": 209, "dummy_tru": 209, "signalnod": 210, "datanod": 210, "signalcontain": 210, "datacontain": 210, "shared_vari": 210, "create_nod": 210, "build_feature_tre": 210, "assist": 210, "particularli": 212, "shared_list__": 212, "__name__": 212, "__str__": 212, "compon": [212, 239, 314], "meaning": 212, "shallow": 212, "occurr": 212, "9223372036854775807": 212, "indexerror": 212, "IN": 212, "ascend": 212, "descend": 212, "transmit": 213, "parenthes": [213, 309, 313], "squar": [213, 222, 254], "bracket": [213, 312], "easili": 213, "network": 213, "func1": [213, 215], "arg1": [213, 215], "arg2": [213, 215], "func2": [213, 215], "func3": [213, 215], "arg3": [213, 215], "func4": [213, 215], "feature_parameter_setting_path": 215, "function_nam": 215, "yml": [215, 271], "inspect": 215, "value1": 215, "value2": 215, "sub_dir": 217, "image_nam": 217, "disk": [217, 269, 270, 271], "sharedndarrai": [217, 239, 241, 304], "ext": [217, 314], "meta": 217, "save_imag": 217, "data_sourc": 217, "mip": 217, "project": [217, 312], "mip_directori": 217, "num_of_channel": 217, "calculate_and_check_disk_spac": 217, "suffici": [217, 219, 220], "wherea": [217, 312], "64": 217, "color": 217, "vestigi": 217, "75": [219, 220], "detect_func": [219, 220], "analyz": [219, 220, 223], "consid": [219, 220, 222, 223, 239, 304], "detect_tissu": [219, 220], "phase": [219, 220, 246, 247, 250, 312], "position_record": [220, 221], "detecttissueinstack": [220, 309], "position_flag": 221, "remove_posit": 221, "exce": 222, "slide": 222, "approach": [222, 314], "service_url": 226, "flipx": 228, "flipi": 228, "debug": 228, "outer": 228, "img": 229, "xl": 229, "yl": 229, "xu": 229, "yu": 229, "65535": 229, "xmlmetadata": [232, 237], "xml": [232, 235, 237, 294, 295], "section": [232, 308, 311, 313], "arxiv": 232, "ab": 232, "1412": 232, "0488": 232, "affine_matrix_to_stage_posit": 232, "mat": 232, "affin": 232, "parse_xml": [232, 235], "pars": [232, 235, 279, 294, 295], "stage_positions_to_affine_matrix": 232, "to_xml": [232, 235, 237], "write_xml": [232, 235, 237], "header": [232, 235, 237, 286], "om": [235, 237, 295], "proprietari": 235, "address": [235, 313], "_xml_dict": 235, "ome_tiff_xml_dict": [235, 237], "Will": [235, 305], "xml_tool": 235, "openmicroscopi": 237, "uid": 237, "heirarch": 237, "ome_dict": 237, "is_virtu": 239, "assemble_device_config_list": 239, "device_nam": [239, 304], "device_name_dict": 239, "assembl": 239, "device_config_list": 239, "device_name_list": 239, "end_acquisit": [239, 241], "get_readout_tim": 239, "get_stage_posit": [239, 241], "load_and_start_devic": 239, "is_list": 239, "device_ref_nam": 239, "move_remote_focu": 239, "pos_dict": [239, 241, 257], "update_focu": 239, "central": 239, "move_stage_offset": 239, "former_microscop": 239, "experiment": 239, "stop_stag": [239, 241], "turn_off_las": 239, "turn_on_las": 239, "update_data_buff": [239, 241], "update_stage_limit": 239, "limits_flag": 239, "ask_stage_for_posit": 239, "ask": [239, 241], "available_channel": 239, "central_focu": 239, "current_laser_index": 239, "laser_wavelength": 239, "wavelength": [239, 253, 254, 255, 312], "ret_pos_dict": [239, 241], "stages_list": 239, "event_queu": 241, "architectur": [241, 304, 310, 311], "argpars": [241, 279], "namespac": [241, 279, 295], "change_resolut": 241, "resolution_valu": 241, "create_pip": 241, "pipe_nam": 241, "duplex": 241, "end1": 241, "destroy_virtual_microscop": 241, "destroi": 241, "disconnect": 241, "get_active_microscop": 241, "get_camera_line_interval_and_exposure_tim": 241, "number_of_pixel": 241, "get_data_buff": 241, "512": 241, "get_feature_list": 241, "idx": 241, "feature_list_str": 241, "get_microscope_info": 241, "microscope_info": 241, "offset_variance_map": 241, "launch_virtual_microscop": 241, "load_feature_list_from_fil": 241, "load_feature_list_from_str": 241, "load_feature_record": 241, "folcer": 241, "pause_data_thread": 241, "turn_off_flag": 241, "release_pip": 241, "resume_data_thread": 241, "run_command": 241, "run_data_process": 241, "run_live_acquisit": 241, "stream": 241, "gui": [241, 284, 311], "recalcul": 241, "therebi": 241, "peopl": 241, "simplified_data_process": 241, "show_img_pip": 241, "snap_imag": 241, "due": 241, "update_ilastik_set": 241, "display_segment": 241, "mark_posit": 241, "target_label": 241, "ilastik": [241, 312], "label": 241, "acquisition_count": 241, "ask_to_pause_data_thread": 241, "autofocus_on": 241, "camera_wait_iter": 241, "abort": 241, "current_exposure_tim": 241, "f_posit": 241, "image_count": 241, "writer": 241, "imaging_mod": 241, "is_liv": 241, "is_sav": 241, "physic": [241, 303, 312], "pause_data_ev": 241, "pause_data_ready_lock": 241, "plot_pip": 241, "plot": 241, "pre_exposure_tim": 241, "start_tim": 241, "stop_send_sign": 241, "total_acquisition_count": 241, "total_image_count": 241, "virtual_microscop": 241, "100000": [243, 244, 245, 246, 247, 248, 250, 303, 312], "meant": 243, "visual": 243, "hz": [243, 244, 245, 246, 247, 248, 250], "exposure_start": 243, "exposure_end": 243, "reson": [244, 310], "drive": [244, 247, 250, 311, 314], "typical_galvo": [244, 246], "24": 245, "stai": 245, "linearli": 245, "drop": [245, 309], "right": [245, 273, 281, 309, 313, 314], "exchang": 245, "etl_ramp": 245, "tunable_lens_ramp": 245, "etl_delai": 245, "frequenc": [246, 247, 250, 312], "duty_cycl": [246, 250, 312], "50": [246, 250, 312], "5707963267948966": 246, "radian": [246, 247, 250], "sine": [247, 312], "typical_las": [247, 250], "pulse_width": 248, "ttl": 248, "typical_ttl_puls": 248, "convolut": 249, "smoothed_waveform": 249, "141592653589793": 250, "na": [253, 254, 255], "wvl": [253, 254, 255], "radial": [253, 254, 255], "waist": [253, 254, 255], "apertur": [253, 254, 255], "r0": [253, 255], "z0": [253, 255], "w0": [253, 255], "i0": [253, 255], "bg0": 253, "rl": 255, "zl": 255, "33": 255, "488": [255, 310, 312], "bg": 255, "common": [257, 314], "model": [257, 304, 306, 309, 311], "variabletyp": 259, "ref_nam": 260, "funclist": 261, "new_func": 261, "module_nam": 263, "file_path": [263, 270], "statement": [266, 304], "wrap_func": 266, "saving_set": 268, "popup": [268, 309], "walk": 269, "everyth": 269, "reachabl": 269, "symbol": 269, "caution": 269, "danger": 269, "config_data": 270, "file_directori": 271, "content_dict": 271, "image_width": 273, "300": 273, "image_height": 273, "200": [273, 303, 310, 312], "draw": 273, "arrow": 273, "ojbect": 273, "piec": [274, 305], "font": 274, "font_siz": 274, "fp": 276, "lazi": 276, "pil": 276, "containt": 276, "low_res_fp": 276, "2022": 276, "07": 276, "02": 276, "cell_001": 276, "low_r": 276, "imshow": 276, "500": [276, 303, 312], "parser": [278, 279], "argumentpars": [278, 279], "argumentparserobject": 278, "dist": 281, "roi_length": 281, "roi": [281, 282], "watch": 281, "sign": [281, 282, 288, 289], "num_til": 281, "x_start": 282, "x_tile": 282, "x_length": 282, "x_overlap": 282, "y_start": 282, "y_tile": 282, "y_length": 282, "y_overlap": 282, "z_start": 282, "z_tile": 282, "z_length": 282, "z_overlap": 282, "theta_start": 282, "theta_til": 282, "theta_length": 282, "theta_overlap": 282, "f_start": 282, "f_tile": 282, "f_length": 282, "f_overlap": 282, "f_track_with_z": 282, "fov": 282, "rotat": [282, 312], "n_posit": 282, "po": 284, "redraw": 284, "panda": 284, "datafram": 284, "multi_position_t": 284, "multiposit": 284, "begin_start": 286, "half": 288, "subsample_z": 290, "nxnxn": 290, "euclidean": 290, "rescal": 290, "subsampl": [290, 312], "128": 290, "29": 290, "waveform_template_nam": 292, "waveform_template_dict": 292, "microscope_state_dict": 292, "repeat_num": 292, "expand_num": 292, "tag": 294, "elementtre": 295, "etre": 295, "fullnam": [300, 301], "escap": [300, 301], "underlin": [300, 301], "rubric": 301, "endfor": 301, "endif": 301, "endblock": 301, "filter_wheel": [303, 312], "com19": [303, 312], "number_of_wheel": [303, 312], "controllernam": [303, 312], "884": [303, 312], "l": [303, 310, 312], "509": [303, 310, 312], "20dg10": [303, 310, 312], "40dg10": [303, 312], "060": [303, 312], "dg": [303, 312], "406": [303, 312], "4pd": [303, 312], "nostag": [303, 312], "refmod": [303, 312], "119060508": [303, 312], "74000375": [303, 312], "servo_id": [303, 312], "com18": [303, 312], "1000000": [303, 312], "manufactur": [303, 305, 312, 314], "123456789": [303, 312], "com7": [303, 312], "instanti": [303, 312], "eg": [303, 312], "emploi": [303, 312], "syntheticstag": [303, 312], "987654321": [303, 312], "notic": [303, 312], "syntheticzoom": [303, 312], "abbrevi": 303, "y_unload_posit": 303, "10000": [303, 312], "y_load_posit": 303, "90000": 303, "startfocu": 303, "75000": 303, "x_max": [303, 312], "33500": 303, "16000": 303, "y_max": [303, 312], "y_min": [303, 312], "z_max": [303, 312], "50000": 303, "z_min": [303, 312], "25000": 303, "f_max": [303, 312], "f_min": [303, 312], "theta_max": [303, 312], "360": [303, 312], "theta_min": [303, 312], "x_rot_posit": 303, "y_rot_posit": 303, "z_rot_posit": 303, "x_step": [303, 312], "y_step": [303, 312], "z_step": [303, 312], "theta_step": [303, 312], "f_step": [303, 312], "25250": 303, "40000": 303, "z_po": 303, "70000": 303, "theta_po": 303, "z_offset": [303, 312], "f_offset": [303, 312], "theta_offset": [303, 312], "explicil": [303, 312], "explictli": 303, "fashion": 303, "queri": 303, "awar": 303, "pimikromov": 303, "third": [303, 312], "spinbox": [303, 312], "develop": [303, 311, 312, 314], "plan": [303, 312], "go": [303, 312, 313], "forward": [303, 312], "widget": [303, 312], "tab": 303, "interval_tim": [303, 312], "eventu": 303, "frequent": [303, 313], "ch00": 303, "ch01": 303, "ch02": 303, "laser_pow": [303, 312], "inclus": 303, "stack_acquisit": [303, 312], "start_po": [303, 312], "end_po": [303, 312], "stack_paus": [303, 312], "5000": [303, 312], "welcom": 304, "pleas": [304, 312, 313], "fork": 304, "branch": 304, "review": 304, "practic": 304, "outlin": [304, 312], "refactor": 304, "reach": 304, "prior": [304, 314], "happi": 304, "bring": 304, "discuss": 304, "strong": 304, "especi": 304, "disrupt": 304, "clariti": 304, "team": 304, "merg": 304, "aslm": [304, 305, 309, 311, 312, 313, 314], "repositori": [304, 311, 313], "conda": [304, 313], "pip": [304, 313], "dev": [304, 314], "pep8": 304, "camelcas": 304, "lowercase_and_separated_by_underscor": 304, "numpydoc": [304, 308], "sphinx": [304, 308], "leverag": 304, "workflow": [304, 309], "enforc": 304, "rare": 304, "ruff": 304, "complain": 304, "start_stag": 304, "exec": 304, "device_startup_funct": 304, "start_": 304, "noqa": 304, "comment": [304, 308], "easi": [304, 313], "opportun": 304, "alert": 304, "pytest": 304, "appl": 304, "encount": 304, "resolv": 304, "oserror": 304, "ulimit": 304, "hand": 304, "abstract": [305, 311], "layer": [305, 311], "divers": [305, 314], "equip": [305, 310], "accompani": 305, "contribut": [305, 309, 311], "encourag": [306, 309], "engag": [306, 309], "collabor": [306, 309], "guidelin": [306, 311], "restructuredtext": 308, "liter": 308, "example_numpi": 308, "py": 308, "blank": 308, "implicitli": 308, "anytim": 308, "bodi": 308, "indent": 308, "stand": 308, "surround": 308, "unind": 308, "module_level_variable1": 308, "inlin": 308, "mix": [308, 310, 314], "convent": 308, "_numpi": 308, "readthedoc": 308, "en": 308, "latest": 308, "12345": 308, "module_level_variable2": 308, "98765": 308, "span": 308, "colon": 308, "function_with_types_in_docstr": 308, "param1": 308, "param2": 308, "pep": 308, "484": 308, "annot": 308, "_": [308, 314], "function_with_pep484_type_annot": 308, "duplic": 308, "compli": 308, "module_level_funct": 308, "obviou": [308, 311], "paragraph": 308, "example_gener": 308, "yield": 308, "doctest": 308, "illustr": 308, "exampleerror": 308, "msg": 308, "human": 308, "readabl": 308, "exampleclass": 308, "summari": 308, "declar": 308, "decor": [308, 309], "attr1": 308, "attr2": 308, "param3": 308, "attr3": 308, "attr4": 308, "attr5": 308, "readonly_properti": 308, "readwrite_properti": 308, "setter": 308, "notabl": 308, "mention": [308, 312], "example_method": 308, "__special__": 308, "member": 308, "doubl": 308, "underscor": 308, "napoleon_include_special_with_doc": 308, "conf": 308, "__special_without_docstring__": 308, "_privat": 308, "napoleon_include_private_with_doc": 308, "_private_without_docstr": 308, "snap": 309, "pictur": 309, "common_featur": 309, "zstackacquisit": 309, "discret": 309, "cosin": 309, "transform": 309, "volumesearch": 309, "ilastiksegment": 309, "detecttissueinstackandrecord": 309, "removeemptyposit": 309, "constantvelocityacquisit": 309, "changeresolut": 309, "conproacquisit": 309, "findtissuesimple2d": 309, "loopbycount": 309, "movetonextpositioninmultipositiont": 309, "preparenextchannel": 309, "stackpaus": 309, "waittocontinu": 309, "dictat": 309, "cleanup_func_sign": 309, "cleanup_func_data": 309, "acqusit": 309, "failsaf": 309, "latter": 309, "inde": 309, "proceed": 309, "intellig": 309, "explain": 309, "featurelist": 309, "tool": [309, 311, 314], "feature_related_funct": 309, "feature_exampl": 309, "selected_channel": 309, "navig": [309, 313], "4a": 309, "dialog": 309, "analys": 309, "whole": 309, "preview": 309, "ok": 309, "click": [309, 313, 314], "button": [309, 314], "graphic": 309, "omicron": 310, "lighthub": 310, "ultra": 310, "acc": 310, "642": 310, "561": 310, "obi": 310, "unidirect": 310, "bidirect": 310, "repeatablil": 310, "borderlin": 310, "gpu": 310, "nvidia": 310, "titan": 310, "rtx": 310, "cuda": 310, "driver": [310, 314], "456": 310, "71": 310, "grabber": [310, 314], "optotun": 310, "electrotun": 310, "len": 310, "blink": 310, "pxie": [310, 314], "1073": 310, "chassi": 310, "pxi6733": [310, 312], "pxi6259": [310, 312, 314], "32mm": 310, "position": 310, "nano": 310, "coher": 310, "647": 310, "piezojena": 310, "pcie": 310, "6738": 310, "lfa": [310, 314], "2010": [310, 314], "linear": [310, 314], "actuat": [310, 314], "novanta": [310, 314], "cr": 310, "khz": 310, "ut": 311, "southwestern": 311, "ecosystem": 311, "aim": 311, "recip": 311, "maker": 311, "minim": 311, "priorit": 311, "stabil": 311, "brutal": 311, "maxim": 311, "biolog": 311, "download": [311, 314], "git": 311, "environ": [311, 312], "troubleshoot": 311, "multiscal": 311, "expans": 311, "opm": 311, "v2": 311, "ct": 311, "v1": 311, "spectral": 311, "tirf": 311, "overview": 311, "dichroic": 311, "turret": 311, "mechan": [311, 312], "deform": 311, "mirror": 311, "introduct": 311, "edit": 311, "log_fil": 311, "zach": 311, "marin": 311, "anni": 311, "wang": 311, "dax": 311, "collison": 311, "kevin": 311, "dean": [311, 313], "sampath": 311, "rapuri": 311, "renil": 311, "gupta": 311, "samir": 311, "mamtani": 311, "andrew": 311, "jamieson": 311, "york": 311, "nathaniel": 311, "thayer": 311, "rest_api_config": 312, "waveform_templ": 312, "exact": 312, "confus": 312, "recommend": [312, 313], "anaconda": [312, 313], "prompt": [312, 313, 314], "sh": [312, 313], "thereaft": 312, "conflict": 312, "master_trigger_out_lin": [312, 314], "camera_trigger_out_lin": [312, 314], "laser_port_switch": 312, "laser_switch_st": 312, "pixel_size_in_micron": 312, "sensor_mod": 312, "progress": [312, 314], "readout_direct": 312, "readout_spe": 312, "trigger_act": 312, "trigger_polar": 312, "throughout": 312, "000075": 312, "display_acquisition_subsampl": 312, "average_frame_r": 312, "969": 312, "frames_to_averag": 312, "remote_focus_devic": 312, "ao2": [312, 314], "ramp_rising_perc": 312, "85": 312, "ramp_falling_perc": 312, "ao0": [312, 314], "99": 312, "57079": 312, "wheel_numb": 312, "filter_wheel_delai": 312, "030": 312, "available_filt": 312, "rfp": 312, "595": 312, "31": 312, "far": [312, 313], "red": 312, "blp01": 312, "647r": 312, "blocked1": 312, "blocked2": 312, "blocked3": 312, "blocked4": 312, "blocked5": 312, "blocked6": 312, "earlier": 312, "joystick_ax": 312, "coordin": 312, "agre": [312, 314], "vertic": [312, 314], "vice": 312, "versa": 312, "627": 312, "1711": 312, "2301": 312, "2710": 312, "3079": 312, "3383": 312, "609": 312, "255": 312, "044": 312, "port0": [312, 314], "line0": 312, "onoff": [312, 314], "line2": 312, "luxx": 312, "87": 312, "remote_focus_const": 312, "336": 312, "percent_delai": 312, "562nm": 312, "galvo_const": 312, "mesoscal": 312, "other_const": 312, "duty_wait_dur": 312, "confoc": 312, "url": 312, "127": 312, "repo": 313, "desktop": 313, "friendli": 313, "head": 313, "miniconda": 313, "websit": 313, "handi": 313, "cheatsheet": 313, "accustom": 313, "pin": [313, 314], "taskbar": 313, "mycomput": 313, "firewal": 313, "utsw": 313, "campu": 313, "circumv": 313, "activatin": 313, "packag": 313, "upgrad": 313, "clone": 313, "cd": 313, "mkdir": 313, "myfoldernam": 313, "thedeanlab": 313, "completet": 313, "upon": [313, 314], "shortcut": 313, "windir": 313, "system32": 313, "cmd": 313, "ex": 313, "script": 313, "bat": 313, "http_proxi": 313, "swmed": 313, "edu": 313, "3128": 313, "https_proxi": 313, "typo": 313, "perspect": 313, "onlin": 313, "usersuserprofil": 313, "condarc": 313, "usersuserprofilepippip": 313, "ini": 313, "password": 313, "8080": 313, "sever": 314, "6733": 314, "daqmx": 314, "recogn": 314, "visibl": 314, "scb": 314, "68a": 314, "breakout": 314, "pinout": 314, "mislead": 314, "aspect": 314, "wire": 314, "receipt": 314, "determinist": 314, "jitter": 314, "anticip": 314, "dev1": 314, "dev2": 314, "commonli": 314, "line1": 314, "pfi0": 314, "p0": 314, "pfio": 314, "gate": 314, "attach": 314, "outsid": 314, "bank": 314, "ao6": 314, "ao8": 314, "ao9": 314, "ao10": 314, "compet": 314, "ao": 314, "distribut": 314, "across": 314, "ao14": 314, "ao19": 314, "pxi6723": 314, "With": 314, "ctr0out": 314, "lead": 314, "ground": 314, "36": 314, "usb": 314, "came": 314, "hcimagel": 314, "silicon": 314, "firebird": 314, "framegrabb": 314, "x16": 314, "slot": 314, "motherboard": 314, "excap": 314, "ctr0": 314, "tbd": 314, "pvcam": 314, "sdk": 314, "term": 314, "unknown": 314, "broadcom": 314, "pci": 314, "kit": 314, "bridg": 314, "abl": 314, "pvcamtest": 314, "voic": 314, "coil": 314, "plai": 314, "crucial": 314, "role": 314, "aberr": 314, "electromagnet": 314, "axial": 314, "focal": 314, "shift": 314, "begun": 314, "longer": 314, "sca814": 314, "pneumat": 314, "empow": 314, "cater": 314, "modal": 314, "suit": 314, "seamless": 314, "versatil": 314, "tailor": 314, "research": 314, "sync": 314, "less": 314, "perz": 314, "differenti": 314, "post": 314, "potenti": 314, "damag": 314, "cambridg": 314, "technologi": 314, "scannermax": 314, "mixtur": 314}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [9, 0, 0, "-", "controller"], [16, 0, 0, "-", "log_files"], [25, 0, 0, "-", "model"], [251, 0, 0, "-", "tools"], [296, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_experiment_config"], [8, 1, 1, "", "verify_waveform_constants"]], "aslm.controller": [[10, 0, 0, "-", "configuration_controller"], [12, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[11, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "camera_config_dict"], [11, 4, 1, "", "camera_flip_flags"], [11, 4, 1, "", "camera_pixels"], [11, 3, 1, "", "change_microscope"], [11, 4, 1, "", "channels_info"], [11, 5, 1, "", "configuration"], [11, 4, 1, "", "daq_sample_rate"], [11, 4, 1, "", "filter_wheel_setting_dict"], [11, 5, 1, "", "galvo_num"], [11, 4, 1, "", "galvo_parameter_dict"], [11, 3, 1, "", "get_microscope_configuration_dict"], [11, 3, 1, "", "get_stage_position_limits"], [11, 4, 1, "", "lasers_info"], [11, 5, 1, "", "microscope_config"], [11, 5, 1, "", "microscope_name"], [11, 4, 1, "", "number_of_channels"], [11, 4, 1, "", "remote_focus_dict"], [11, 4, 1, "", "stage_default_position"], [11, 4, 1, "", "stage_flip_flags"], [11, 4, 1, "", "stage_setting_dict"], [11, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[13, 2, 1, "", "SelfLockThread"], [14, 2, 1, "", "SynchronizedThreadPool"], [15, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "daemon"], [13, 3, 1, "", "getName"], [13, 4, 1, "", "ident"], [13, 3, 1, "", "isDaemon"], [13, 3, 1, "", "isLocked"], [13, 3, 1, "", "is_alive"], [13, 3, 1, "", "join"], [13, 4, 1, "", "name"], [13, 4, 1, "", "native_id"], [13, 3, 1, "", "run"], [13, 5, 1, "", "selfLock"], [13, 3, 1, "", "setDaemon"], [13, 3, 1, "", "setName"], [13, 3, 1, "", "start"], [13, 3, 1, "", "unlock"], [13, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [14, 3, 1, "", "createThread"], [14, 3, 1, "", "getRunningThread"], [14, 3, 1, "", "globaltrace"], [14, 3, 1, "", "killThreadInList"], [14, 3, 1, "", "localtrace"], [14, 3, 1, "", "moveToDelete"], [14, 3, 1, "", "registerResource"], [14, 3, 1, "", "removeThread"], [14, 5, 1, "", "resources"], [14, 3, 1, "", "threadTaskWrapping"], [14, 5, 1, "", "toDeleteList"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, 3, 1, "", "__init__"], [15, 5, 1, "", "waitlist"], [15, 5, 1, "", "waitlistLock"]], "aslm.log_files": [[17, 0, 0, "-", "filters"], [20, 0, 0, "-", "log_functions"]], "aslm.log_files.filters": [[18, 2, 1, "", "NonPerfFilter"], [19, 2, 1, "", "PerformanceFilter"]], "aslm.log_files.filters.NonPerfFilter": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "filter"]], "aslm.log_files.filters.PerformanceFilter": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "filter"]], "aslm.log_files.log_functions": [[21, 1, 1, "", "find_filename"], [22, 1, 1, "", "log_setup"], [23, 1, 1, "", "main_process_listener"], [24, 1, 1, "", "update_nested_dict"]], "aslm.model": [[26, 0, 0, "-", "analysis"], [49, 0, 0, "-", "concurrency"], [62, 0, 0, "-", "data_sources"], [70, 0, 0, "-", "device_startup_functions"], [88, 0, 0, "-", "devices"], [174, 0, 0, "-", "dummy"], [179, 0, 0, "-", "features"], [230, 0, 0, "-", "metadata_sources"], [238, 0, 0, "-", "microscope"], [240, 0, 0, "-", "model"], [242, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[27, 0, 0, "-", "boundary_detect"], [32, 0, 0, "-", "camera"], [37, 0, 0, "-", "detection"], [47, 0, 0, "-", "image_contrast"]], "aslm.model.analysis.boundary_detect": [[28, 1, 1, "", "binary_detect"], [29, 1, 1, "", "find_tissue_boundary_2d"], [30, 1, 1, "", "has_tissue"], [31, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[33, 1, 1, "", "compute_flatfield_map"], [34, 1, 1, "", "compute_noise_sigma"], [35, 1, 1, "", "compute_scmos_offset_and_variance_map"], [36, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[38, 1, 1, "", "add_median_border"], [39, 1, 1, "", "combine_images"], [40, 1, 1, "", "log_detection"], [41, 1, 1, "", "make_inside_image"], [42, 1, 1, "", "make_normalized_image"], [43, 1, 1, "", "make_sphere_3D"], [44, 1, 1, "", "multiscale_surface_filter_3D"], [45, 1, 1, "", "surface_filter_gauss_3D"], [46, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[48, 1, 1, "", "fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[50, 0, 0, "-", "concurrency_tools"], [57, 0, 0, "-", "proxy_objects"]], "aslm.model.concurrency.concurrency_tools": [[51, 2, 1, "", "CustodyThread"], [52, 5, 1, "", "FancyThread"], [53, 2, 1, "", "ObjectInSubprocess"], [54, 5, 1, "", "PoliteThread"], [55, 2, 1, "", "ResultThread"], [56, 2, 1, "", "SharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[51, 3, 1, "", "__init__"], [51, 4, 1, "", "daemon"], [51, 3, 1, "", "getName"], [51, 3, 1, "", "get_result"], [51, 4, 1, "", "ident"], [51, 3, 1, "", "isDaemon"], [51, 3, 1, "", "is_alive"], [51, 3, 1, "", "join"], [51, 4, 1, "", "name"], [51, 4, 1, "", "native_id"], [51, 3, 1, "", "run"], [51, 3, 1, "", "setDaemon"], [51, 3, 1, "", "setName"], [51, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[53, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[55, 3, 1, "", "__init__"], [55, 4, 1, "", "daemon"], [55, 3, 1, "", "getName"], [55, 3, 1, "", "get_result"], [55, 4, 1, "", "ident"], [55, 3, 1, "", "isDaemon"], [55, 3, 1, "", "is_alive"], [55, 3, 1, "", "join"], [55, 4, 1, "", "name"], [55, 4, 1, "", "native_id"], [55, 3, 1, "", "run"], [55, 3, 1, "", "setDaemon"], [55, 3, 1, "", "setName"], [55, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[56, 5, 1, "", "ALIGNED"], [56, 5, 1, "", "BEHAVED"], [56, 5, 1, "", "CARRAY"], [56, 5, 1, "", "C_CONTIGUOUS"], [56, 5, 1, "", "FARRAY"], [56, 5, 1, "", "FNC"], [56, 5, 1, "", "FORC"], [56, 5, 1, "", "F_CONTIGUOUS"], [56, 5, 1, "", "OWNDATA"], [56, 5, 1, "", "T"], [56, 5, 1, "", "UPDATEIFCOPY"], [56, 5, 1, "", "WRITEABLE"], [56, 5, 1, "", "WRITEBACKIFCOPY"], [56, 3, 1, "", "__init__"], [56, 3, 1, "", "all"], [56, 3, 1, "", "any"], [56, 3, 1, "", "argmax"], [56, 3, 1, "", "argmin"], [56, 3, 1, "", "argpartition"], [56, 3, 1, "", "argsort"], [56, 3, 1, "", "astype"], [56, 5, 1, "", "base"], [56, 3, 1, "", "byteswap"], [56, 3, 1, "", "choose"], [56, 3, 1, "", "clip"], [56, 3, 1, "", "compress"], [56, 3, 1, "", "conj"], [56, 3, 1, "", "conjugate"], [56, 3, 1, "", "copy"], [56, 5, 1, "", "ctypes"], [56, 3, 1, "", "cumprod"], [56, 3, 1, "", "cumsum"], [56, 5, 1, "", "data"], [56, 3, 1, "", "diagonal"], [56, 5, 1, "", "dtype"], [56, 3, 1, "", "dump"], [56, 3, 1, "", "dumps"], [56, 3, 1, "", "fill"], [56, 5, 1, "", "flags"], [56, 5, 1, "", "flat"], [56, 3, 1, "", "flatten"], [56, 3, 1, "", "getfield"], [56, 5, 1, "", "imag"], [56, 3, 1, "", "item"], [56, 3, 1, "", "itemset"], [56, 5, 1, "", "itemsize"], [56, 3, 1, "", "max"], [56, 3, 1, "", "mean"], [56, 3, 1, "", "min"], [56, 5, 1, "", "nbytes"], [56, 5, 1, "", "ndim"], [56, 3, 1, "", "newbyteorder"], [56, 3, 1, "", "nonzero"], [56, 3, 1, "", "partition"], [56, 3, 1, "", "prod"], [56, 3, 1, "", "ptp"], [56, 3, 1, "", "put"], [56, 3, 1, "", "ravel"], [56, 5, 1, "", "real"], [56, 3, 1, "", "repeat"], [56, 3, 1, "", "reshape"], [56, 3, 1, "", "resize"], [56, 3, 1, "", "round"], [56, 3, 1, "", "searchsorted"], [56, 3, 1, "", "setfield"], [56, 3, 1, "", "setflags"], [56, 5, 1, "", "shape"], [56, 5, 1, "", "size"], [56, 3, 1, "", "sort"], [56, 3, 1, "", "squeeze"], [56, 3, 1, "", "std"], [56, 5, 1, "", "strides"], [56, 3, 1, "", "sum"], [56, 3, 1, "", "swapaxes"], [56, 3, 1, "", "take"], [56, 3, 1, "", "tobytes"], [56, 3, 1, "", "tofile"], [56, 3, 1, "", "tolist"], [56, 3, 1, "", "tostring"], [56, 3, 1, "", "trace"], [56, 3, 1, "", "transpose"], [56, 3, 1, "", "var"], [56, 3, 1, "", "view"]], "aslm.model.concurrency.proxy_objects": [[58, 2, 1, "", "ProxyManager"], [59, 2, 1, "", "ProxyObject"], [60, 1, 1, "", "launch_custody_thread"], [61, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[58, 3, 1, "", "__init__"], [58, 3, 1, "", "proxy_object"], [58, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[59, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[63, 0, 0, "-", "bdv_data_source"], [65, 0, 0, "-", "data_source"], [67, 1, 1, "", "get_data_source"], [68, 0, 0, "-", "tiff_data_source"]], "aslm.model.data_sources.bdv_data_source": [[64, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[64, 3, 1, "", "__init__"], [64, 5, 1, "", "bits"], [64, 3, 1, "id6", "close"], [64, 4, 1, "", "data"], [64, 5, 1, "", "dc"], [64, 5, 1, "", "ds_name"], [64, 5, 1, "", "dt"], [64, 5, 1, "", "dx"], [64, 5, 1, "", "dy"], [64, 5, 1, "", "dz"], [64, 5, 1, "", "file_name"], [64, 3, 1, "", "get_slice"], [64, 5, 1, "", "image"], [64, 5, 1, "", "logger"], [64, 5, 1, "id0", "metadata"], [64, 4, 1, "id10", "mode"], [64, 4, 1, "id11", "nbytes"], [64, 5, 1, "", "positions"], [64, 3, 1, "id7", "read"], [64, 4, 1, "", "resolutions"], [64, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [64, 5, 1, "", "setup"], [64, 4, 1, "id12", "shape"], [64, 5, 1, "", "shape_c"], [64, 5, 1, "", "shape_t"], [64, 5, 1, "", "shape_x"], [64, 5, 1, "", "shape_y"], [64, 5, 1, "", "shape_z"], [64, 4, 1, "", "shapes"], [64, 4, 1, "", "subdivisions"], [64, 4, 1, "id13", "voxel_size"], [64, 3, 1, "id9", "write"]], "aslm.model.data_sources.data_source": [[66, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[66, 3, 1, "", "__init__"], [66, 5, 1, "", "bits"], [66, 3, 1, "id1", "close"], [66, 4, 1, "", "data"], [66, 5, 1, "", "dc"], [66, 5, 1, "", "dt"], [66, 5, 1, "", "dx"], [66, 5, 1, "", "dy"], [66, 5, 1, "", "dz"], [66, 5, 1, "", "file_name"], [66, 5, 1, "", "logger"], [66, 5, 1, "", "metadata"], [66, 4, 1, "id5", "mode"], [66, 4, 1, "id6", "nbytes"], [66, 5, 1, "", "positions"], [66, 3, 1, "id2", "read"], [66, 3, 1, "id3", "set_metadata_from_configuration_experiment"], [66, 4, 1, "id7", "shape"], [66, 5, 1, "", "shape_c"], [66, 5, 1, "", "shape_t"], [66, 5, 1, "", "shape_x"], [66, 5, 1, "", "shape_y"], [66, 5, 1, "", "shape_z"], [66, 4, 1, "id8", "voxel_size"], [66, 3, 1, "id4", "write"]], "aslm.model.data_sources.tiff_data_source": [[69, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[69, 3, 1, "", "__init__"], [69, 5, 1, "", "bits"], [69, 3, 1, "id5", "close"], [69, 4, 1, "", "data"], [69, 5, 1, "", "dc"], [69, 5, 1, "", "dt"], [69, 5, 1, "", "dx"], [69, 5, 1, "", "dy"], [69, 5, 1, "", "dz"], [69, 5, 1, "", "file_name"], [69, 3, 1, "id6", "generate_image_name"], [69, 5, 1, "", "image"], [69, 5, 1, "", "logger"], [69, 5, 1, "id0", "metadata"], [69, 4, 1, "id10", "mode"], [69, 4, 1, "id11", "nbytes"], [69, 5, 1, "", "positions"], [69, 3, 1, "id7", "read"], [69, 5, 1, "", "save_directory"], [69, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [69, 4, 1, "id12", "shape"], [69, 5, 1, "", "shape_c"], [69, 5, 1, "", "shape_t"], [69, 5, 1, "", "shape_x"], [69, 5, 1, "", "shape_y"], [69, 5, 1, "", "shape_z"], [69, 4, 1, "id13", "voxel_size"], [69, 3, 1, "id9", "write"]], "aslm.model.device_startup_functions": [[71, 2, 1, "", "DummyDeviceConnection"], [72, 1, 1, "", "auto_redial"], [73, 1, 1, "", "device_not_found"], [74, 1, 1, "", "load_camera_connection"], [75, 1, 1, "", "load_devices"], [76, 1, 1, "", "load_filter_wheel_connection"], [77, 1, 1, "", "load_stages"], [78, 1, 1, "", "load_zoom_connection"], [79, 1, 1, "", "start_camera"], [80, 1, 1, "", "start_daq"], [81, 1, 1, "", "start_filter_wheel"], [82, 1, 1, "", "start_galvo"], [83, 1, 1, "", "start_lasers"], [84, 1, 1, "", "start_remote_focus_device"], [85, 1, 1, "", "start_shutter"], [86, 1, 1, "", "start_stage"], [87, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[71, 3, 1, "", "__init__"]], "aslm.model.devices": [[89, 0, 0, "-", "APIs"], [95, 0, 0, "-", "camera"], [106, 0, 0, "-", "daq"], [111, 0, 0, "-", "filter_wheel"], [122, 0, 0, "-", "galvo"], [127, 0, 0, "-", "lasers"], [132, 0, 0, "-", "objectives"], [134, 0, 0, "-", "remote_focus"], [139, 0, 0, "-", "shutter"], [144, 0, 0, "-", "stages"], [166, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[90, 0, 0, "-", "coherent"], [91, 0, 0, "-", "dynamixel"], [94, 0, 0, "-", "omicron"]], "aslm.model.devices.APIs.dynamixel": [[92, 0, 0, "-", "dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[93, 1, 1, "", "create_mock_dxl_device"]], "aslm.model.devices.camera": [[96, 0, 0, "-", "camera_base"], [98, 0, 0, "-", "camera_hamamatsu"], [101, 0, 0, "-", "camera_photometrics"], [103, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[97, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[97, 3, 1, "", "__init__"], [97, 3, 1, "", "calculate_light_sheet_exposure_time"], [97, 5, 1, "", "camera_controller"], [97, 5, 1, "", "camera_parameters"], [97, 3, 1, "", "close_camera"], [97, 5, 1, "", "configuration"], [97, 3, 1, "", "get_line_interval"], [97, 3, 1, "", "get_offset_variance_maps"], [97, 5, 1, "", "is_acquiring"], [97, 5, 1, "", "max_image_height"], [97, 5, 1, "", "max_image_width"], [97, 5, 1, "", "min_image_height"], [97, 5, 1, "", "min_image_width"], [97, 4, 1, "", "offset"], [97, 3, 1, "", "set_readout_direction"], [97, 5, 1, "", "step_image_height"], [97, 5, 1, "", "step_image_width"], [97, 4, 1, "", "variance"], [97, 5, 1, "", "x_pixels"], [97, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[99, 2, 1, "", "HamamatsuOrca"], [100, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[99, 3, 1, "", "__init__"], [99, 3, 1, "", "calculate_light_sheet_exposure_time"], [99, 3, 1, "", "calculate_readout_time"], [99, 5, 1, "", "camera_controller"], [99, 5, 1, "", "camera_parameters"], [99, 3, 1, "", "close_camera"], [99, 3, 1, "", "close_image_series"], [99, 5, 1, "", "configuration"], [99, 3, 1, "", "get_line_interval"], [99, 3, 1, "", "get_minimum_waiting_time"], [99, 3, 1, "", "get_new_frame"], [99, 3, 1, "", "get_offset_variance_maps"], [99, 3, 1, "", "initialize_image_series"], [99, 5, 1, "", "is_acquiring"], [99, 4, 1, "", "max_image_height"], [99, 4, 1, "", "max_image_width"], [99, 4, 1, "", "min_image_height"], [99, 4, 1, "", "min_image_width"], [99, 4, 1, "", "offset"], [99, 3, 1, "", "report_settings"], [99, 4, 1, "", "serial_number"], [99, 3, 1, "", "set_ROI"], [99, 3, 1, "", "set_binning"], [99, 3, 1, "", "set_exposure_time"], [99, 3, 1, "", "set_line_interval"], [99, 3, 1, "", "set_readout_direction"], [99, 3, 1, "", "set_sensor_mode"], [99, 4, 1, "", "step_image_height"], [99, 4, 1, "", "step_image_width"], [99, 4, 1, "", "variance"], [99, 5, 1, "", "x_pixels"], [99, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[100, 3, 1, "", "__init__"], [100, 3, 1, "", "calculate_light_sheet_exposure_time"], [100, 3, 1, "", "calculate_readout_time"], [100, 5, 1, "", "camera_controller"], [100, 5, 1, "", "camera_parameters"], [100, 3, 1, "", "close_camera"], [100, 3, 1, "", "close_image_series"], [100, 5, 1, "", "configuration"], [100, 3, 1, "", "get_line_interval"], [100, 3, 1, "", "get_minimum_waiting_time"], [100, 3, 1, "", "get_new_frame"], [100, 3, 1, "", "get_offset_variance_maps"], [100, 3, 1, "", "initialize_image_series"], [100, 5, 1, "", "is_acquiring"], [100, 4, 1, "", "max_image_height"], [100, 4, 1, "", "max_image_width"], [100, 4, 1, "", "min_image_height"], [100, 4, 1, "", "min_image_width"], [100, 4, 1, "", "offset"], [100, 3, 1, "", "report_settings"], [100, 4, 1, "", "serial_number"], [100, 3, 1, "", "set_ROI"], [100, 3, 1, "", "set_binning"], [100, 3, 1, "", "set_exposure_time"], [100, 3, 1, "", "set_line_interval"], [100, 3, 1, "", "set_readout_direction"], [100, 3, 1, "", "set_sensor_mode"], [100, 4, 1, "", "step_image_height"], [100, 4, 1, "", "step_image_width"], [100, 4, 1, "", "variance"], [100, 5, 1, "", "x_pixels"], [100, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[102, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[102, 3, 1, "", "__init__"], [102, 3, 1, "", "calculate_light_sheet_exposure_time"], [102, 3, 1, "", "calculate_readout_time"], [102, 5, 1, "", "camera_controller"], [102, 5, 1, "", "camera_parameters"], [102, 3, 1, "", "close_camera"], [102, 3, 1, "", "close_image_series"], [102, 5, 1, "", "configuration"], [102, 3, 1, "", "get_line_interval"], [102, 3, 1, "", "get_minimum_waiting_time"], [102, 3, 1, "", "get_new_frame"], [102, 3, 1, "", "get_offset_variance_maps"], [102, 3, 1, "", "initialize_image_series"], [102, 5, 1, "", "is_acquiring"], [102, 5, 1, "", "max_image_height"], [102, 5, 1, "", "max_image_width"], [102, 5, 1, "", "min_image_height"], [102, 5, 1, "", "min_image_width"], [102, 4, 1, "", "offset"], [102, 3, 1, "", "report_settings"], [102, 4, 1, "", "serial_number"], [102, 3, 1, "", "set_ROI"], [102, 3, 1, "", "set_binning"], [102, 3, 1, "", "set_exposure_time"], [102, 3, 1, "", "set_line_interval"], [102, 3, 1, "", "set_readout_direction"], [102, 3, 1, "", "set_sensor_mode"], [102, 5, 1, "", "step_image_height"], [102, 5, 1, "", "step_image_width"], [102, 4, 1, "", "variance"], [102, 5, 1, "", "x_pixels"], [102, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[104, 2, 1, "", "SyntheticCamera"], [105, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[104, 3, 1, "", "__init__"], [104, 3, 1, "", "calculate_light_sheet_exposure_time"], [104, 3, 1, "", "calculate_readout_time"], [104, 5, 1, "", "camera_controller"], [104, 5, 1, "", "camera_exposure_time"], [104, 5, 1, "", "camera_parameters"], [104, 3, 1, "", "close_camera"], [104, 3, 1, "", "close_image_series"], [104, 5, 1, "", "configuration"], [104, 5, 1, "", "current_frame_idx"], [104, 5, 1, "", "data_buffer"], [104, 3, 1, "", "generate_new_frame"], [104, 3, 1, "", "get_line_interval"], [104, 3, 1, "", "get_minimum_waiting_time"], [104, 3, 1, "", "get_new_frame"], [104, 3, 1, "", "get_offset_variance_maps"], [104, 3, 1, "", "initialize_image_series"], [104, 5, 1, "", "is_acquiring"], [104, 3, 1, "", "load_images"], [104, 5, 1, "", "max_image_height"], [104, 5, 1, "", "max_image_width"], [104, 5, 1, "", "min_image_height"], [104, 5, 1, "", "min_image_width"], [104, 5, 1, "", "num_of_frame"], [104, 4, 1, "", "offset"], [104, 5, 1, "", "pre_frame_idx"], [104, 5, 1, "", "random_image"], [104, 3, 1, "", "report_settings"], [104, 5, 1, "", "serial_number"], [104, 3, 1, "", "set_ROI"], [104, 3, 1, "", "set_binning"], [104, 3, 1, "", "set_exposure_time"], [104, 3, 1, "", "set_line_interval"], [104, 3, 1, "", "set_readout_direction"], [104, 3, 1, "", "set_sensor_mode"], [104, 5, 1, "", "step_image_height"], [104, 5, 1, "", "step_image_width"], [104, 4, 1, "", "variance"], [104, 5, 1, "", "x_pixels"], [104, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[105, 3, 1, "", "__init__"], [105, 3, 1, "", "get_property_value"], [105, 3, 1, "", "set_property_value"]], "aslm.model.devices.daq": [[107, 0, 0, "-", "daq_base"], [109, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[108, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[108, 3, 1, "", "__init__"], [108, 3, 1, "", "calculate_all_waveforms"], [108, 5, 1, "", "camera_delay"], [108, 5, 1, "", "camera_delay_percent"], [108, 5, 1, "", "camera_high_time"], [108, 5, 1, "", "camera_pulse_percent"], [108, 5, 1, "", "configuration"], [108, 5, 1, "", "daq_parameters"], [108, 3, 1, "", "enable_microscope"], [108, 5, 1, "", "microscope_name"], [108, 5, 1, "", "remote_focus_ramp_falling"], [108, 5, 1, "", "sample_rate"], [108, 5, 1, "", "sweep_time"], [108, 5, 1, "", "waveform_constants"], [108, 5, 1, "", "waveform_dict"], [108, 5, 1, "", "waveform_expand_num"], [108, 5, 1, "", "waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[110, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[110, 3, 1, "", "__init__"], [110, 3, 1, "", "add_camera"], [110, 5, 1, "", "analog_outputs"], [110, 3, 1, "", "calculate_all_waveforms"], [110, 5, 1, "", "camera"], [110, 5, 1, "", "camera_delay"], [110, 5, 1, "", "camera_delay_percent"], [110, 5, 1, "", "camera_high_time"], [110, 5, 1, "", "camera_pulse_percent"], [110, 3, 1, "", "close_tasks"], [110, 5, 1, "", "configuration"], [110, 3, 1, "", "create_camera_task"], [110, 3, 1, "", "create_galvo_remote_focus_tasks"], [110, 3, 1, "", "create_master_trigger_task"], [110, 5, 1, "", "daq_parameters"], [110, 3, 1, "", "enable_microscope"], [110, 5, 1, "", "is_updating_analog_task"], [110, 5, 1, "", "microscope_name"], [110, 3, 1, "", "prepare_acquisition"], [110, 5, 1, "", "remote_focus_ramp_falling"], [110, 3, 1, "", "run_acquisition"], [110, 5, 1, "", "sample_rate"], [110, 3, 1, "", "set_external_trigger"], [110, 3, 1, "", "start_tasks"], [110, 3, 1, "", "stop_acquisition"], [110, 3, 1, "", "stop_tasks"], [110, 5, 1, "", "sweep_time"], [110, 5, 1, "", "trigger_mode"], [110, 3, 1, "", "update_analog_task"], [110, 5, 1, "", "wait_to_run_lock"], [110, 5, 1, "", "waveform_constants"], [110, 5, 1, "", "waveform_dict"], [110, 5, 1, "", "waveform_expand_num"], [110, 5, 1, "", "waveform_repeat_num"], [110, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[112, 0, 0, "-", "filter_wheel_asi"], [115, 0, 0, "-", "filter_wheel_base"], [117, 0, 0, "-", "filter_wheel_sutter"], [120, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[113, 2, 1, "", "ASIFilterWheel"], [114, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[113, 3, 1, "", "__init__"], [113, 5, 1, "", "active_filter_wheel"], [113, 3, 1, "", "check_if_filter_in_filter_dictionary"], [113, 3, 1, "", "close"], [113, 3, 1, "", "filter_change_delay"], [113, 5, 1, "", "filter_dictionary"], [113, 5, 1, "", "filter_wheel"], [113, 5, 1, "", "filter_wheel_position"], [113, 5, 1, "", "microscope_name"], [113, 5, 1, "", "number_of_filter_wheels"], [113, 3, 1, "", "set_filter"], [113, 5, 1, "", "wait_until_done_delay"], [113, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[116, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "check_if_filter_in_filter_dictionary"], [116, 5, 1, "", "filter_dictionary"], [116, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[118, 2, 1, "", "SutterFilterWheel"], [119, 5, 1, "", "baudrate"], [119, 1, 1, "", "build_filter_wheel_connection"], [119, 5, 1, "", "comport"], [119, 5, 1, "", "timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[118, 3, 1, "", "__init__"], [118, 3, 1, "", "check_if_filter_in_filter_dictionary"], [118, 3, 1, "", "close"], [118, 5, 1, "", "delay_matrix"], [118, 3, 1, "", "filter_change_delay"], [118, 5, 1, "", "filter_dictionary"], [118, 5, 1, "", "init_finished"], [118, 5, 1, "", "microscope_name"], [118, 5, 1, "", "number_of_filter_wheels"], [118, 3, 1, "", "read"], [118, 5, 1, "", "read_on_init"], [118, 5, 1, "", "serial"], [118, 3, 1, "", "set_filter"], [118, 5, 1, "", "speed"], [118, 5, 1, "", "wait_until_done"], [118, 5, 1, "", "wait_until_done_delay"], [118, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[121, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[121, 3, 1, "", "__init__"], [121, 5, 1, "", "baudrate"], [121, 3, 1, "", "check_if_filter_in_filter_dictionary"], [121, 3, 1, "", "close"], [121, 5, 1, "", "comport"], [121, 3, 1, "", "filter_change_delay"], [121, 5, 1, "id0", "filter_dictionary"], [121, 5, 1, "", "number_of_filter_wheels"], [121, 3, 1, "", "read"], [121, 3, 1, "", "set_filter"], [121, 5, 1, "id1", "wheel_position"]], "aslm.model.devices.galvo": [[123, 0, 0, "-", "galvo_base"], [125, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[124, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[124, 3, 1, "", "__init__"], [124, 3, 1, "", "adjust"], [124, 5, 1, "", "camera_delay_percent"], [124, 3, 1, "", "close_task"], [124, 5, 1, "", "configuration"], [124, 5, 1, "", "device_config"], [124, 5, 1, "", "galvo_max_voltage"], [124, 5, 1, "", "galvo_min_voltage"], [124, 5, 1, "", "galvo_name"], [124, 5, 1, "", "galvo_waveform"], [124, 5, 1, "", "microscope_name"], [124, 3, 1, "", "prepare_task"], [124, 5, 1, "", "remote_focus_ramp_falling"], [124, 5, 1, "", "sample_rate"], [124, 5, 1, "", "samples"], [124, 3, 1, "", "start_task"], [124, 3, 1, "", "stop_task"], [124, 5, 1, "", "sweep_time"], [124, 3, 1, "", "turn_off"], [124, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[126, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[126, 3, 1, "", "__init__"], [126, 3, 1, "", "adjust"], [126, 5, 1, "", "camera_delay_percent"], [126, 3, 1, "", "close_task"], [126, 5, 1, "", "configuration"], [126, 5, 1, "", "device_config"], [126, 5, 1, "", "galvo_max_voltage"], [126, 5, 1, "", "galvo_min_voltage"], [126, 5, 1, "", "galvo_name"], [126, 5, 1, "", "galvo_waveform"], [126, 5, 1, "", "microscope_name"], [126, 3, 1, "", "prepare_task"], [126, 5, 1, "", "remote_focus_ramp_falling"], [126, 5, 1, "", "sample_rate"], [126, 5, 1, "", "samples"], [126, 3, 1, "", "start_task"], [126, 3, 1, "", "stop_task"], [126, 5, 1, "", "sweep_time"], [126, 3, 1, "", "turn_off"], [126, 5, 1, "", "waveform_dict"]], "aslm.model.devices.lasers": [[128, 0, 0, "-", "laser_base"], [130, 0, 0, "-", "laser_synthetic"]], "aslm.model.devices.lasers.laser_base": [[129, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[129, 3, 1, "", "__init__"], [129, 3, 1, "", "close"], [129, 5, 1, "", "configuration"], [129, 5, 1, "", "device_config"], [129, 3, 1, "", "initialize_laser"], [129, 5, 1, "", "microscope_name"], [129, 3, 1, "", "set_power"], [129, 3, 1, "", "turn_off"], [129, 3, 1, "", "turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[131, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[131, 3, 1, "", "__init__"], [131, 3, 1, "", "close"], [131, 5, 1, "", "configuration"], [131, 5, 1, "", "device_config"], [131, 3, 1, "", "initialize_laser"], [131, 5, 1, "", "microscope_name"], [131, 3, 1, "", "set_power"], [131, 3, 1, "", "turn_off"], [131, 3, 1, "", "turn_on"]], "aslm.model.devices.objectives": [[133, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[133, 3, 1, "", "__init__"], [133, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[135, 0, 0, "-", "remote_focus_base"], [137, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[136, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[136, 3, 1, "", "__init__"], [136, 3, 1, "", "adjust"], [136, 5, 1, "", "camera_delay_percent"], [136, 3, 1, "", "close_task"], [136, 5, 1, "", "configuration"], [136, 5, 1, "", "device_config"], [136, 5, 1, "", "microscope_name"], [136, 5, 1, "", "percent_smoothing"], [136, 3, 1, "", "prepare_task"], [136, 5, 1, "", "remote_focus_delay"], [136, 5, 1, "", "remote_focus_max_voltage"], [136, 5, 1, "", "remote_focus_min_voltage"], [136, 5, 1, "", "remote_focus_ramp_falling"], [136, 5, 1, "", "sample_rate"], [136, 5, 1, "", "samples"], [136, 3, 1, "", "start_task"], [136, 3, 1, "", "stop_task"], [136, 5, 1, "", "sweep_time"], [136, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[138, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[138, 3, 1, "", "__init__"], [138, 3, 1, "", "adjust"], [138, 5, 1, "", "camera_delay_percent"], [138, 3, 1, "", "close_task"], [138, 5, 1, "", "configuration"], [138, 5, 1, "", "device_config"], [138, 5, 1, "", "microscope_name"], [138, 3, 1, "", "move"], [138, 5, 1, "", "percent_smoothing"], [138, 3, 1, "", "prepare_task"], [138, 5, 1, "", "remote_focus_delay"], [138, 5, 1, "", "remote_focus_max_voltage"], [138, 5, 1, "", "remote_focus_min_voltage"], [138, 5, 1, "", "remote_focus_ramp_falling"], [138, 5, 1, "", "sample_rate"], [138, 5, 1, "", "samples"], [138, 3, 1, "", "start_task"], [138, 3, 1, "", "stop_task"], [138, 5, 1, "", "sweep_time"], [138, 5, 1, "", "waveform_dict"]], "aslm.model.devices.shutter": [[140, 0, 0, "-", "laser_shutter_base"], [142, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[141, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[141, 3, 1, "", "__init__"], [141, 3, 1, "", "close_shutter"], [141, 3, 1, "", "open_shutter"], [141, 5, 1, "", "shutter_state"], [141, 4, 1, "", "state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[143, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[143, 3, 1, "", "__init__"], [143, 3, 1, "", "close_shutter"], [143, 3, 1, "", "open_shutter"], [143, 5, 1, "", "shutter_state"], [143, 4, 1, "", "state"]], "aslm.model.devices.stages": [[145, 0, 0, "-", "stage_asi"], [148, 0, 0, "-", "stage_base"], [150, 0, 0, "-", "stage_galvo"], [152, 0, 0, "-", "stage_mcl"], [155, 0, 0, "-", "stage_pi"], [158, 0, 0, "-", "stage_sutter"], [161, 0, 0, "-", "stage_synthetic"], [163, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[146, 2, 1, "", "ASIStage"], [147, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[146, 3, 1, "", "__init__"], [146, 5, 1, "", "axes"], [146, 5, 1, "", "axes_mapping"], [146, 3, 1, "", "close"], [146, 3, 1, "", "get_abs_position"], [146, 3, 1, "", "get_axis_position"], [146, 3, 1, "", "get_position_dict"], [146, 3, 1, "", "get_speed"], [146, 3, 1, "", "move_absolute"], [146, 3, 1, "", "move_axis_absolute"], [146, 3, 1, "", "report_position"], [146, 3, 1, "", "scanr"], [146, 3, 1, "", "set_speed"], [146, 5, 1, "", "stage_feedback"], [146, 5, 1, "", "stage_limits"], [146, 3, 1, "", "start_scan"], [146, 3, 1, "", "stop"], [146, 3, 1, "", "stop_scan"], [146, 5, 1, "", "tiger_controller"], [146, 3, 1, "", "verify_abs_position"], [146, 3, 1, "", "verify_move"]], "aslm.model.devices.stages.stage_base": [[149, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[149, 3, 1, "", "__init__"], [149, 5, 1, "", "axes"], [149, 5, 1, "", "axes_mapping"], [149, 3, 1, "", "close"], [149, 3, 1, "", "get_abs_position"], [149, 3, 1, "", "get_position_dict"], [149, 5, 1, "", "stage_feedback"], [149, 5, 1, "", "stage_limits"], [149, 3, 1, "", "stop"], [149, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[151, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[151, 3, 1, "", "__init__"], [151, 5, 1, "", "axes"], [151, 5, 1, "", "axes_channels"], [151, 5, 1, "", "axes_mapping"], [151, 3, 1, "", "calculate_waveform"], [151, 5, 1, "", "camera_delay_percent"], [151, 3, 1, "", "close"], [151, 5, 1, "", "configuration"], [151, 5, 1, "", "daq"], [151, 5, 1, "", "distance_threshold"], [151, 5, 1, "", "exposure_times"], [151, 5, 1, "", "galvo_max_voltage"], [151, 5, 1, "", "galvo_min_voltage"], [151, 3, 1, "", "get_abs_position"], [151, 3, 1, "", "get_position_dict"], [151, 5, 1, "", "microscope_name"], [151, 3, 1, "", "move_absolute"], [151, 3, 1, "", "move_axis_absolute"], [151, 5, 1, "", "remote_focus_delay"], [151, 5, 1, "", "remote_focus_ramp_falling"], [151, 3, 1, "", "report_position"], [151, 5, 1, "", "sample_rate"], [151, 5, 1, "", "samples"], [151, 5, 1, "", "stage_feedback"], [151, 5, 1, "", "stage_limits"], [151, 5, 1, "", "stage_settle_duration"], [151, 3, 1, "", "stop"], [151, 5, 1, "", "sweep_time"], [151, 5, 1, "", "sweep_times"], [151, 5, 1, "", "trigger_source"], [151, 3, 1, "", "verify_abs_position"], [151, 5, 1, "", "volts_per_micron"], [151, 5, 1, "", "waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[153, 2, 1, "", "MCLStage"], [154, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[153, 3, 1, "", "__init__"], [153, 5, 1, "", "axes"], [153, 5, 1, "", "axes_mapping"], [153, 3, 1, "", "close"], [153, 3, 1, "", "get_abs_position"], [153, 3, 1, "", "get_position_dict"], [153, 5, 1, "", "handle"], [153, 5, 1, "", "mcl_controller"], [153, 3, 1, "", "move_absolute"], [153, 3, 1, "", "move_axis_absolute"], [153, 3, 1, "", "report_position"], [153, 5, 1, "", "stage_feedback"], [153, 5, 1, "", "stage_limits"], [153, 3, 1, "", "stop"], [153, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[156, 2, 1, "", "PIStage"], [157, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[156, 3, 1, "", "__init__"], [156, 5, 1, "", "axes"], [156, 5, 1, "", "axes_mapping"], [156, 3, 1, "", "close"], [156, 3, 1, "", "get_abs_position"], [156, 3, 1, "", "get_position_dict"], [156, 3, 1, "", "move_absolute"], [156, 3, 1, "", "move_axis_absolute"], [156, 5, 1, "", "pi_axes"], [156, 5, 1, "", "pi_device"], [156, 5, 1, "", "pi_tools"], [156, 3, 1, "", "report_position"], [156, 5, 1, "", "stage_feedback"], [156, 5, 1, "", "stage_limits"], [156, 3, 1, "", "stop"], [156, 3, 1, "", "verify_abs_position"], [156, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[159, 2, 1, "", "SutterStage"], [160, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[159, 3, 1, "", "__init__"], [159, 5, 1, "", "axes"], [159, 5, 1, "", "axes_mapping"], [159, 3, 1, "", "close"], [159, 5, 1, "", "device_axes"], [159, 3, 1, "", "get_abs_position"], [159, 3, 1, "", "get_position_dict"], [159, 3, 1, "", "move_absolute"], [159, 3, 1, "", "move_axis_absolute"], [159, 3, 1, "", "report_position"], [159, 5, 1, "", "resolution"], [159, 5, 1, "", "speed"], [159, 5, 1, "", "stage"], [159, 5, 1, "", "stage_feedback"], [159, 5, 1, "", "stage_limits"], [159, 5, 1, "", "stage_x_pos"], [159, 5, 1, "", "stage_y_pos"], [159, 5, 1, "", "stage_z_pos"], [159, 3, 1, "", "stop"], [159, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[162, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[162, 3, 1, "", "__init__"], [162, 5, 1, "", "axes"], [162, 5, 1, "", "axes_mapping"], [162, 3, 1, "", "close"], [162, 5, 1, "", "default_speed"], [162, 3, 1, "", "get_abs_position"], [162, 3, 1, "", "get_axis_position"], [162, 3, 1, "", "get_position_dict"], [162, 3, 1, "", "get_speed"], [162, 3, 1, "", "load_sample"], [162, 3, 1, "", "move_absolute"], [162, 3, 1, "", "move_axis_absolute"], [162, 3, 1, "", "report_position"], [162, 3, 1, "", "scanr"], [162, 3, 1, "", "set_speed"], [162, 5, 1, "", "stage_feedback"], [162, 5, 1, "", "stage_limits"], [162, 3, 1, "", "start_scan"], [162, 3, 1, "", "stop"], [162, 3, 1, "", "stop_scan"], [162, 3, 1, "", "unload_sample"], [162, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[164, 2, 1, "", "TLKIMStage"], [165, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[164, 3, 1, "", "__init__"], [164, 5, 1, "", "axes"], [164, 5, 1, "", "axes_mapping"], [164, 3, 1, "", "close"], [164, 3, 1, "", "get_abs_position"], [164, 3, 1, "", "get_position_dict"], [164, 5, 1, "", "kim_axes"], [164, 5, 1, "", "kim_controller"], [164, 3, 1, "", "move_absolute"], [164, 3, 1, "", "move_axis_absolute"], [164, 3, 1, "", "report_position"], [164, 5, 1, "", "serial_number"], [164, 5, 1, "", "stage_feedback"], [164, 5, 1, "", "stage_limits"], [164, 3, 1, "", "stop"], [164, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[167, 0, 0, "-", "zoom_base"], [169, 0, 0, "-", "zoom_dynamixel"], [172, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[168, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[168, 3, 1, "", "__init__"], [168, 3, 1, "", "build_stage_dict"], [168, 5, 1, "", "configuration"], [168, 3, 1, "", "move"], [168, 3, 1, "", "read_position"], [168, 3, 1, "", "set_zoom"], [168, 5, 1, "", "zoomdict"], [168, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[170, 2, 1, "", "DynamixelZoom"], [171, 1, 1, "", "build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[170, 3, 1, "", "__init__"], [170, 5, 1, "", "addr_mx_goal_position"], [170, 5, 1, "", "addr_mx_moving_speed"], [170, 5, 1, "", "addr_mx_p_gain"], [170, 5, 1, "", "addr_mx_present_position"], [170, 5, 1, "", "addr_mx_torque_enable"], [170, 5, 1, "", "addr_mx_torque_limit"], [170, 3, 1, "", "build_stage_dict"], [170, 5, 1, "", "configuration"], [170, 5, 1, "", "dynamixel"], [170, 5, 1, "", "goal_position_offset"], [170, 5, 1, "", "id"], [170, 3, 1, "", "move"], [170, 5, 1, "", "port_num"], [170, 3, 1, "", "read_position"], [170, 3, 1, "", "set_zoom"], [170, 5, 1, "", "sleeptime"], [170, 5, 1, "", "timeout"], [170, 5, 1, "", "torque_disable"], [170, 5, 1, "", "torque_enable"], [170, 5, 1, "", "zoomdict"], [170, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_synthetic": [[173, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[173, 3, 1, "", "__init__"], [173, 3, 1, "", "build_stage_dict"], [173, 5, 1, "", "configuration"], [173, 3, 1, "", "move"], [173, 3, 1, "", "read_position"], [173, 3, 1, "", "set_zoom"], [173, 5, 1, "", "zoomdict"], [173, 5, 1, "", "zoomvalue"]], "aslm.model.dummy": [[175, 2, 1, "", "DummyController"], [176, 2, 1, "", "DummyDevice"], [177, 2, 1, "", "DummyMicroscope"], [178, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[175, 3, 1, "", "__init__"], [175, 3, 1, "", "clear"], [175, 5, 1, "", "commands"], [175, 5, 1, "", "configuration"], [175, 5, 1, "", "configuration_controller"], [175, 3, 1, "", "execute"], [175, 5, 1, "", "menu_controller"], [175, 5, 1, "", "off_stage_pos"], [175, 3, 1, "", "pop"], [175, 5, 1, "", "stage_pos"], [175, 5, 1, "", "view"]], "aslm.model.dummy.DummyDevice": [[176, 3, 1, "", "__init__"], [176, 3, 1, "", "clear"], [176, 3, 1, "", "generate_message"], [176, 5, 1, "", "in_port"], [176, 3, 1, "", "listen"], [176, 5, 1, "", "msg_count"], [176, 5, 1, "", "out_port"], [176, 3, 1, "", "sendout"], [176, 5, 1, "", "sendout_msg_count"], [176, 3, 1, "", "setup"], [176, 5, 1, "", "stop_flag"], [176, 5, 1, "", "timecost"]], "aslm.model.dummy.DummyMicroscope": [[177, 3, 1, "", "__init__"], [177, 3, 1, "", "calculate_exposure_sweep_times"], [177, 5, 1, "", "configuration"], [177, 5, 1, "", "current_channel"], [177, 5, 1, "", "daq"], [177, 5, 1, "", "data_buffer"], [177, 5, 1, "", "galvo"], [177, 5, 1, "", "lasers"], [177, 5, 1, "", "microscope_name"], [177, 5, 1, "", "stages"]], "aslm.model.dummy.DummyModel": [[178, 3, 1, "", "__init__"], [178, 5, 1, "", "active_microscope"], [178, 5, 1, "", "active_microscope_name"], [178, 5, 1, "", "camera"], [178, 5, 1, "", "configuration"], [178, 5, 1, "", "data"], [178, 5, 1, "", "data_buffer"], [178, 5, 1, "", "data_buffer_positions"], [178, 5, 1, "", "data_container"], [178, 3, 1, "", "data_func"], [178, 5, 1, "", "data_pipe"], [178, 5, 1, "", "data_records"], [178, 5, 1, "", "data_thread"], [178, 5, 1, "", "device"], [178, 5, 1, "", "frame_id"], [178, 5, 1, "", "img_height"], [178, 5, 1, "", "img_width"], [178, 5, 1, "", "manager"], [178, 5, 1, "", "number_of_frames"], [178, 5, 1, "", "signal_container"], [178, 3, 1, "", "signal_func"], [178, 5, 1, "", "signal_pipe"], [178, 5, 1, "", "signal_records"], [178, 5, 1, "", "signal_thread"], [178, 3, 1, "", "start"], [178, 5, 1, "", "stop_flag"]], "aslm.model.features": [[180, 0, 0, "-", "auto_tile_scan"], [182, 0, 0, "-", "autofocus"], [185, 0, 0, "-", "common_features"], [196, 0, 0, "-", "constant_velocity_acquisition"], [198, 0, 0, "-", "dummy_detective"], [200, 0, 0, "-", "feature_container"], [211, 0, 0, "-", "feature_related_functions"], [216, 0, 0, "-", "image_writer"], [218, 0, 0, "-", "remove_empty_tiles"], [224, 0, 0, "-", "restful_features"], [227, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[181, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "end_func_data"], [181, 3, 1, "", "end_func_signal"], [181, 3, 1, "", "in_func_data"], [181, 3, 1, "", "in_func_signal"], [181, 3, 1, "", "pre_func_data"], [181, 3, 1, "", "pre_func_signal"]], "aslm.model.features.autofocus": [[183, 2, 1, "", "Autofocus"], [184, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[183, 3, 1, "", "__init__"], [183, 5, 1, "", "autofocus_frame_queue"], [183, 5, 1, "", "autofocus_pos_queue"], [183, 5, 1, "", "coarse_step_size"], [183, 5, 1, "", "coarse_steps"], [183, 3, 1, "", "end_func_data"], [183, 3, 1, "", "end_func_signal"], [183, 5, 1, "", "f_frame_id"], [183, 5, 1, "", "f_pos"], [183, 5, 1, "", "fine_pos_offset"], [183, 5, 1, "", "fine_step_size"], [183, 5, 1, "", "focus_pos"], [183, 5, 1, "", "frame_num"], [183, 3, 1, "", "get_autofocus_frame_num"], [183, 5, 1, "", "get_frames_num"], [183, 3, 1, "", "get_steps"], [183, 3, 1, "", "in_func_data"], [183, 3, 1, "", "in_func_signal"], [183, 5, 1, "", "init_pos"], [183, 5, 1, "", "max_entropy"], [183, 5, 1, "", "plot_data"], [183, 3, 1, "", "pre_func_data"], [183, 3, 1, "", "pre_func_signal"], [183, 3, 1, "", "robust_autofocus"], [183, 3, 1, "id0", "run"], [183, 5, 1, "", "signal_id"], [183, 5, 1, "", "target_channel"], [183, 5, 1, "", "target_frame_id"], [183, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[186, 2, 1, "", "ChangeResolution"], [187, 2, 1, "", "ConProAcquisition"], [188, 2, 1, "", "FindTissueSimple2D"], [189, 2, 1, "", "LoopByCount"], [190, 2, 1, "", "MoveToNextPositionInMultiPositionTable"], [191, 2, 1, "", "PrepareNextChannel"], [192, 2, 1, "", "Snap"], [193, 2, 1, "", "StackPause"], [194, 2, 1, "", "WaitToContinue"], [195, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[186, 3, 1, "", "__init__"], [186, 3, 1, "", "cleanup"], [186, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ConProAcquisition": [[187, 3, 1, "", "__init__"], [187, 3, 1, "", "generate_meta_data"], [187, 3, 1, "", "pre_signal_func"], [187, 3, 1, "", "signal_end"], [187, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.FindTissueSimple2D": [[188, 3, 1, "", "__init__"], [188, 3, 1, "", "data_func"]], "aslm.model.features.common_features.LoopByCount": [[189, 3, 1, "", "__init__"], [189, 3, 1, "", "data_func"], [189, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[190, 3, 1, "", "__init__"], [190, 3, 1, "", "cleanup"], [190, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.PrepareNextChannel": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.Snap": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "data_func"]], "aslm.model.features.common_features.StackPause": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.WaitToContinue": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "cleanup"], [194, 3, 1, "", "data_func"], [194, 3, 1, "", "pre_data_func"], [194, 3, 1, "", "pre_signal_func"], [194, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ZStackAcquisition": [[195, 3, 1, "", "__init__"], [195, 3, 1, "", "cleanup_data_func"], [195, 3, 1, "", "end_data_func"], [195, 3, 1, "", "in_data_func"], [195, 3, 1, "", "pre_data_func"], [195, 3, 1, "", "pre_signal_func"], [195, 3, 1, "", "signal_end"], [195, 3, 1, "", "signal_func"], [195, 3, 1, "", "update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[197, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "cleanup"], [197, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[199, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[199, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[201, 2, 1, "", "Container"], [202, 2, 1, "", "DataContainer"], [203, 2, 1, "", "DataNode"], [204, 2, 1, "", "SignalContainer"], [205, 2, 1, "", "SignalNode"], [206, 2, 1, "", "TreeNode"], [207, 1, 1, "", "dummy_True"], [208, 1, 1, "", "dummy_func"], [209, 1, 1, "", "get_registered_funcs"], [210, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "cleanup"], [201, 3, 1, "", "reset"]], "aslm.model.features.feature_container.DataContainer": [[202, 3, 1, "", "__init__"], [202, 3, 1, "", "cleanup"], [202, 3, 1, "", "reset"], [202, 3, 1, "", "run"]], "aslm.model.features.feature_container.DataNode": [[203, 3, 1, "", "__init__"], [203, 3, 1, "", "run"], [203, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.SignalContainer": [[204, 3, 1, "", "__init__"], [204, 3, 1, "", "cleanup"], [204, 3, 1, "", "reset"], [204, 3, 1, "", "run"]], "aslm.model.features.feature_container.SignalNode": [[205, 3, 1, "", "__init__"], [205, 3, 1, "", "run"], [205, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.TreeNode": [[206, 3, 1, "", "__init__"], [206, 3, 1, "", "set_property"]], "aslm.model.features.feature_related_functions": [[212, 2, 1, "", "SharedList"], [213, 1, 1, "", "convert_feature_list_to_str"], [214, 1, 1, "", "convert_str_to_feature_list"], [215, 1, 1, "", "load_dynamic_parameter_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[212, 3, 1, "", "__init__"], [212, 3, 1, "", "append"], [212, 3, 1, "", "clear"], [212, 3, 1, "", "copy"], [212, 3, 1, "", "count"], [212, 3, 1, "", "extend"], [212, 3, 1, "", "index"], [212, 3, 1, "", "insert"], [212, 3, 1, "", "pop"], [212, 3, 1, "", "remove"], [212, 3, 1, "", "reverse"], [212, 3, 1, "", "sort"]], "aslm.model.features.image_writer": [[217, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[217, 3, 1, "", "__init__"], [217, 3, 1, "", "calculate_and_check_disk_space"], [217, 3, 1, "id0", "close"], [217, 5, 1, "", "config_table"], [217, 5, 1, "", "current_time_point"], [217, 5, 1, "", "data_buffer"], [217, 5, 1, "", "data_source"], [217, 5, 1, "", "file_type"], [217, 3, 1, "id1", "generate_image_name"], [217, 3, 1, "id2", "generate_meta_data"], [217, 5, 1, "", "mip"], [217, 5, 1, "", "mip_directory"], [217, 5, 1, "", "model"], [217, 5, 1, "", "num_of_channels"], [217, 5, 1, "", "save_directory"], [217, 3, 1, "id3", "save_image"], [217, 5, 1, "", "sub_dir"]], "aslm.model.features.remove_empty_tiles": [[219, 2, 1, "", "DetectTissueInStack"], [220, 2, 1, "", "DetectTissueInStackAndRecord"], [221, 2, 1, "", "RemoveEmptyPositions"], [222, 1, 1, "", "detect_tissue"], [223, 1, 1, "", "detect_tissue2"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[219, 3, 1, "", "__init__"], [219, 3, 1, "", "end_func_data"], [219, 3, 1, "", "end_func_signal"], [219, 3, 1, "", "in_func_data"], [219, 3, 1, "", "in_func_signal"], [219, 3, 1, "", "pre_func_data"], [219, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[220, 3, 1, "", "__init__"], [220, 3, 1, "", "end_func_data"], [220, 3, 1, "", "end_func_signal"], [220, 3, 1, "", "in_func_data"], [220, 3, 1, "", "in_func_signal"], [220, 3, 1, "", "pre_func_data"], [220, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[221, 3, 1, "", "__init__"], [221, 3, 1, "", "signal_func"]], "aslm.model.features.restful_features": [[225, 2, 1, "", "IlastikSegmentation"], [226, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[225, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[228, 2, 1, "", "VolumeSearch"], [229, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[228, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[231, 0, 0, "-", "bdv_metadata"], [233, 0, 0, "-", "metadata"], [236, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[232, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[232, 3, 1, "", "__init__"], [232, 3, 1, "", "affine_matrix_to_stage_positions"], [232, 3, 1, "", "parse_xml"], [232, 4, 1, "", "shape"], [232, 3, 1, "", "stage_positions_to_affine_matrix"], [232, 3, 1, "", "to_xml"], [232, 4, 1, "", "voxel_size"], [232, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[234, 2, 1, "", "Metadata"], [235, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[234, 3, 1, "", "__init__"], [234, 4, 1, "", "shape"], [234, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[235, 3, 1, "", "__init__"], [235, 4, 1, "", "shape"], [235, 3, 1, "", "to_xml"], [235, 4, 1, "", "voxel_size"], [235, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[237, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[237, 3, 1, "", "__init__"], [237, 3, 1, "", "ome_tiff_xml_dict"], [237, 4, 1, "", "shape"], [237, 3, 1, "", "to_xml"], [237, 4, 1, "", "voxel_size"], [237, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[239, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[239, 3, 1, "", "__init__"], [239, 5, 1, "", "ask_stage_for_position"], [239, 3, 1, "", "assemble_device_config_lists"], [239, 5, 1, "", "available_channels"], [239, 3, 1, "", "calculate_all_waveform"], [239, 3, 1, "", "calculate_exposure_sweep_times"], [239, 5, 1, "", "central_focus"], [239, 5, 1, "", "channels"], [239, 5, 1, "", "configuration"], [239, 5, 1, "", "current_channel"], [239, 5, 1, "", "current_laser_index"], [239, 5, 1, "", "daq"], [239, 5, 1, "", "data_buffer"], [239, 3, 1, "", "end_acquisition"], [239, 5, 1, "", "galvo"], [239, 3, 1, "", "get_readout_time"], [239, 3, 1, "", "get_stage_position"], [239, 5, 1, "", "info"], [239, 5, 1, "", "is_synthetic"], [239, 5, 1, "", "laser_wavelength"], [239, 5, 1, "", "lasers"], [239, 3, 1, "", "load_and_start_devices"], [239, 5, 1, "", "microscope_name"], [239, 3, 1, "", "move_remote_focus"], [239, 3, 1, "", "move_stage"], [239, 3, 1, "", "move_stage_offset"], [239, 5, 1, "", "number_of_frames"], [239, 3, 1, "", "prepare_acquisition"], [239, 3, 1, "", "prepare_next_channel"], [239, 5, 1, "", "ret_pos_dict"], [239, 5, 1, "", "stages"], [239, 5, 1, "", "stages_list"], [239, 3, 1, "", "stop_stage"], [239, 3, 1, "", "terminate"], [239, 5, 1, "", "tiger_controller"], [239, 3, 1, "", "turn_off_lasers"], [239, 3, 1, "", "turn_on_laser"], [239, 3, 1, "", "update_data_buffer"], [239, 3, 1, "", "update_stage_limits"]], "aslm.model.model": [[241, 2, 1, "", "Model"]], "aslm.model.model.Model": [[241, 3, 1, "", "__init__"], [241, 5, 1, "", "acquisition_count"], [241, 5, 1, "", "active_microscope"], [241, 5, 1, "", "active_microscope_name"], [241, 5, 1, "", "ask_to_pause_data_thread"], [241, 5, 1, "", "autofocus_on"], [241, 5, 1, "", "binning"], [241, 5, 1, "", "camera_wait_iterations"], [241, 3, 1, "", "change_resolution"], [241, 5, 1, "", "configuration"], [241, 3, 1, "", "create_pipe"], [241, 5, 1, "", "current_exposure_time"], [241, 5, 1, "", "data_buffer"], [241, 5, 1, "", "data_buffer_positions"], [241, 5, 1, "", "data_thread"], [241, 3, 1, "", "destroy_virtual_microscope"], [241, 3, 1, "", "end_acquisition"], [241, 5, 1, "", "event_queue"], [241, 5, 1, "", "f_position"], [241, 5, 1, "", "feature_list"], [241, 5, 1, "", "focus_pos"], [241, 5, 1, "", "frame_id"], [241, 3, 1, "", "get_active_microscope"], [241, 3, 1, "", "get_camera_line_interval_and_exposure_time"], [241, 3, 1, "", "get_data_buffer"], [241, 3, 1, "", "get_feature_list"], [241, 3, 1, "", "get_microscope_info"], [241, 3, 1, "", "get_offset_variance_maps"], [241, 3, 1, "", "get_stage_position"], [241, 5, 1, "", "image_count"], [241, 5, 1, "", "image_writer"], [241, 5, 1, "", "imaging_mode"], [241, 5, 1, "", "img_height"], [241, 5, 1, "", "img_width"], [241, 5, 1, "", "is_acquiring"], [241, 5, 1, "", "is_live"], [241, 5, 1, "", "is_save"], [241, 3, 1, "", "launch_virtual_microscope"], [241, 3, 1, "", "load_feature_list_from_file"], [241, 3, 1, "", "load_feature_list_from_str"], [241, 3, 1, "", "load_feature_records"], [241, 3, 1, "", "load_images"], [241, 5, 1, "", "logger"], [241, 5, 1, "", "max_entropy"], [241, 5, 1, "", "microscopes"], [241, 3, 1, "", "move_stage"], [241, 5, 1, "", "number_of_frames"], [241, 5, 1, "", "pause_data_event"], [241, 5, 1, "", "pause_data_ready_lock"], [241, 3, 1, "", "pause_data_thread"], [241, 5, 1, "", "plot_pipe"], [241, 5, 1, "", "pre_exposure_time"], [241, 3, 1, "", "prepare_acquisition"], [241, 3, 1, "", "release_pipe"], [241, 3, 1, "", "resume_data_thread"], [241, 3, 1, "", "run_acquisition"], [241, 3, 1, "", "run_command"], [241, 3, 1, "", "run_data_process"], [241, 3, 1, "", "run_live_acquisition"], [241, 5, 1, "", "show_img_pipe"], [241, 5, 1, "", "signal_thread"], [241, 3, 1, "", "simplified_data_process"], [241, 3, 1, "", "snap_image"], [241, 5, 1, "", "start_time"], [241, 5, 1, "", "stop_acquisition"], [241, 5, 1, "", "stop_send_signal"], [241, 3, 1, "", "stop_stage"], [241, 3, 1, "", "terminate"], [241, 5, 1, "", "total_acquisition_count"], [241, 5, 1, "", "total_image_count"], [241, 3, 1, "", "update_data_buffer"], [241, 3, 1, "", "update_ilastik_setting"], [241, 5, 1, "", "virtual_microscopes"]], "aslm.model.waveforms": [[243, 1, 1, "", "camera_exposure"], [244, 1, 1, "", "dc_value"], [245, 1, 1, "", "remote_focus_ramp"], [246, 1, 1, "", "sawtooth"], [247, 1, 1, "", "sine_wave"], [248, 1, 1, "", "single_pulse"], [249, 1, 1, "", "smooth_waveform"], [250, 1, 1, "", "square"]], "aslm.tools": [[252, 0, 0, "-", "beams"], [256, 0, 0, "-", "common_dict_tools"], [258, 0, 0, "-", "common_functions"], [264, 0, 0, "-", "decorators"], [267, 0, 0, "-", "file_functions"], [272, 0, 0, "-", "image"], [275, 0, 0, "-", "image_loaders"], [277, 0, 0, "-", "main_functions"], [280, 0, 0, "-", "multipos_table_tools"], [285, 0, 0, "-", "project_stats"], [287, 0, 0, "-", "sdf"], [291, 0, 0, "-", "waveform_template_funcs"], [293, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[253, 1, 1, "", "fit_gaussian_beam_error"], [254, 1, 1, "", "fit_gaussian_beam_mse"], [255, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[257, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[259, 2, 1, "", "VariableWithLock"], [260, 1, 1, "", "build_ref_name"], [261, 1, 1, "", "combine_funcs"], [262, 1, 1, "", "copy_proxy_object"], [263, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[259, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[265, 2, 1, "", "FeatureList"], [266, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[265, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[268, 1, 1, "", "create_save_path"], [269, 1, 1, "", "delete_folder"], [270, 1, 1, "", "load_yaml_file"], [271, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[273, 1, 1, "", "create_arrow_image"], [274, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[276, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[276, 3, 1, "", "__init__"], [276, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[278, 1, 1, "", "create_parser"], [279, 1, 1, "", "evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[281, 1, 1, "", "calc_num_tiles"], [282, 1, 1, "", "compute_tiles_from_bounding_box"], [283, 1, 1, "", "sign"], [284, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[286, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[288, 1, 1, "", "box"], [289, 1, 1, "", "sphere"], [290, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[292, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[294, 1, 1, "", "dict_to_xml"], [295, 1, 1, "", "parse_xml"]], "aslm.view": [[297, 0, 0, "-", "custom_widgets"], [298, 0, 0, "-", "main_window_content"], [299, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 303, 306, 310], "config": [0, 1, 2, 3, 4, 5, 6, 7, 8], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_experiment_config": 7, "verify_waveform_const": 8, "control": [9, 10, 11, 12, 13, 14, 15, 314], "configuration_control": [10, 11], "configurationcontrol": 11, "thread_pool": [12, 13, 14, 15], "selflockthread": 13, "synchronizedthreadpool": 14, "threadwaitlist": 15, "log_fil": [16, 17, 18, 19, 20, 21, 22, 23, 24], "filter": [17, 18, 19, 312, 314], "nonperffilt": 18, "performancefilt": 19, "log_funct": [20, 21, 22, 23, 24], "find_filenam": 21, "log_setup": 22, "main_process_listen": 23, "update_nested_dict": 24, "model": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 307], "analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "boundary_detect": [27, 28, 29, 30, 31], "binary_detect": 28, "find_tissue_boundary_2d": 29, "has_tissu": 30, "map_boundari": 31, "camera": [32, 33, 34, 35, 36, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 312, 314], "compute_flatfield_map": 33, "compute_noise_sigma": 34, "compute_scmos_offset_and_variance_map": 35, "compute_signal_to_nois": 36, "detect": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "add_median_bord": 38, "combine_imag": 39, "log_detect": 40, "make_inside_imag": 41, "make_normalized_imag": 42, "make_sphere_3d": 43, "multiscale_surface_filter_3d": 44, "surface_filter_gauss_3d": 45, "three_level_segment": 46, "image_contrast": [47, 48], "fast_normalized_dct_shannon_entropi": 48, "concurr": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "concurrency_tool": [50, 51, 52, 53, 54, 55, 56], "custodythread": 51, "fancythread": 52, "objectinsubprocess": 53, "politethread": 54, "resultthread": 55, "sharedndarrai": 56, "proxy_object": [57, 58, 59, 60, 61], "proxymanag": 58, "proxyobject": 59, "launch_custody_thread": 60, "launch_thread": 61, "data_sourc": [62, 63, 64, 65, 66, 67, 68, 69], "bdv_data_sourc": [63, 64], "bigdataviewerdatasourc": 64, "datasourc": 66, "get_data_sourc": 67, "tiff_data_sourc": [68, 69], "tiffdatasourc": 69, "device_startup_funct": [70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "dummydeviceconnect": 71, "auto_redi": 72, "device_not_found": 73, "load_camera_connect": 74, "load_devic": 75, "load_filter_wheel_connect": 76, "load_stag": 77, "load_zoom_connect": 78, "start_camera": 79, "start_daq": 80, "start_filter_wheel": 81, "start_galvo": 82, "start_las": 83, "start_remote_focus_devic": 84, "start_shutt": 85, "start_stag": 86, "start_zoom": 87, "devic": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 314], "api": [89, 90, 91, 92, 93, 94, 302, 312], "coher": [90, 314], "dynamixel": [91, 92, 93, 314], "dynamixel_funct": [92, 93], "create_mock_dxl_devic": 93, "omicron": [94, 314], "camera_bas": [96, 97], "camerabas": 97, "camera_hamamatsu": [98, 99, 100], "hamamatsuorca": 99, "hamamatsuorcalightn": 100, "camera_photometr": [101, 102], "photometricskinetix": 102, "camera_synthet": [103, 104, 105], "syntheticcamera": 104, "syntheticcameracontrol": 105, "daq": [106, 107, 108, 109, 110, 312, 314], "daq_bas": [107, 108], "daqbas": 108, "daq_synthet": [109, 110], "syntheticdaq": 110, "filter_wheel": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], "filter_wheel_asi": [112, 113, 114], "asifilterwheel": 113, "build_filter_wheel_connect": [114, 119], "filter_wheel_bas": [115, 116], "filterwheelbas": 116, "filter_wheel_sutt": [117, 118, 119], "sutterfilterwheel": 118, "filter_wheel_synthet": [120, 121], "syntheticfilterwheel": 121, "galvo": [122, 123, 124, 125, 126, 312, 314], "galvo_bas": [123, 124], "galvobas": 124, "galvo_synthet": [125, 126], "syntheticgalvo": 126, "laser": [127, 128, 129, 130, 131, 312, 314], "laser_bas": [128, 129], "laserbas": 129, "laser_synthet": [130, 131], "syntheticlas": 131, "object": [132, 133, 309], "remote_focu": [134, 135, 136, 137, 138], "remote_focus_bas": [135, 136], "remotefocusbas": 136, "remote_focus_synthet": [137, 138], "syntheticremotefocu": 138, "shutter": [139, 140, 141, 142, 143, 312, 314], "laser_shutter_bas": [140, 141], "shutterbas": 141, "laser_shutter_synthet": [142, 143], "syntheticshutt": 143, "stage": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 303, 312, 314], "stage_asi": [145, 146, 147], "asistag": 146, "build_asi_stage_connect": 147, "stage_bas": [148, 149], "stagebas": 149, "stage_galvo": [150, 151], "galvonistag": 151, "stage_mcl": [152, 153, 154], "mclstage": 153, "build_mclstage_connect": 154, "stage_pi": [155, 156, 157], "pistag": 156, "build_pistage_connect": 157, "stage_sutt": [158, 159, 160], "sutterstag": 159, "build_mp285_connect": 160, "stage_synthet": [161, 162], "syntheticstag": 162, "stage_tl_kcube_inerti": [163, 164, 165], "tlkimstag": 164, "build_tlkimstage_connect": 165, "zoom": [166, 167, 168, 169, 170, 171, 172, 173, 312, 314], "zoom_bas": [167, 168], "zoombas": 168, "zoom_dynamixel": [169, 170, 171], "dynamixelzoom": 170, "build_dynamixel_zoom_connect": 171, "zoom_synthet": [172, 173], "syntheticzoom": 173, "dummi": [174, 175, 176, 177, 178], "dummycontrol": 175, "dummydevic": 176, "dummymicroscop": 177, "dummymodel": 178, "featur": [179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 307, 309], "auto_tile_scan": [180, 181], "calculatefocusrang": 181, "paramet": [181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 219, 220, 221, 222, 223, 309], "attribut": [181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 203, 204, 205, 206, 212, 219, 220, 221], "method": [181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 212, 219, 220, 221], "note": [181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 222, 223], "return": [181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 205, 206, 207, 208, 209, 210, 213, 219, 220, 221, 222, 223], "autofocu": [182, 183, 184], "power_t": 184, "common_featur": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "changeresolut": 186, "conproacquisit": 187, "findtissuesimple2d": 188, "loopbycount": 189, "movetonextpositioninmultipositiont": 190, "preparenextchannel": 191, "snap": 192, "stackpaus": 193, "waittocontinu": 194, "zstackacquisit": 195, "constant_velocity_acquisit": [196, 197], "constantvelocityacquisit": 197, "dummy_detect": [198, 199], "feature_contain": [200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210], "contain": [201, 309], "datacontain": 202, "datanod": 203, "signalcontain": 204, "signalnod": 205, "treenod": 206, "dummy_tru": 207, "dummy_func": 208, "get_registered_func": 209, "load_featur": 210, "feature_related_funct": [211, 212, 213, 214, 215], "sharedlist": 212, "convert_feature_list_to_str": 213, "exampl": [213, 215, 222, 303], "convert_str_to_feature_list": 214, "load_dynamic_parameter_funct": 215, "image_writ": [216, 217], "imagewrit": 217, "remove_empty_til": [218, 219, 220, 221, 222, 223], "detecttissueinstack": 219, "detecttissueinstackandrecord": 220, "removeemptyposit": 221, "detect_tissu": 222, "detect_tissue2": 223, "restful_featur": [224, 225, 226], "ilastiksegment": 225, "prepare_servic": 226, "volume_search": [227, 228, 229], "volumesearch": 228, "draw_box": 229, "metadata_sourc": [230, 231, 232, 233, 234, 235, 236, 237], "bdv_metadata": [231, 232], "bigdataviewermetadata": 232, "metadata": [233, 234, 235], "xmlmetadata": 235, "ome_tiff_metadata": [236, 237], "ometiffmetadata": 237, "microscop": [238, 239, 303, 310, 312], "waveform": [242, 243, 244, 245, 246, 247, 248, 249, 250, 312], "camera_exposur": 243, "dc_valu": 244, "remote_focus_ramp": 245, "sawtooth": 246, "sine_wav": 247, "single_puls": 248, "smooth_waveform": 249, "squar": 250, "tool": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "beam": [252, 253, 254, 255], "fit_gaussian_beam_error": 253, "fit_gaussian_beam_ms": 254, "gaussian_beam": 255, "common_dict_tool": [256, 257], "update_stage_dict": 257, "common_funct": [258, 259, 260, 261, 262, 263], "variablewithlock": 259, "build_ref_nam": 260, "combine_func": 261, "copy_proxy_object": 262, "load_module_from_fil": 263, "decor": [264, 265, 266], "featurelist": 265, "function_tim": 266, "file_funct": [267, 268, 269, 270, 271], "create_save_path": 268, "delete_fold": 269, "load_yaml_fil": 270, "save_yaml_fil": 271, "imag": [272, 273, 274], "create_arrow_imag": 273, "text_arrai": 274, "image_load": [275, 276], "lazytiff": 276, "main_funct": [277, 278, 279], "create_pars": 278, "evaluate_parser_input_argu": 279, "multipos_table_tool": [280, 281, 282, 283, 284], "calc_num_til": 281, "compute_tiles_from_bounding_box": 282, "sign": 283, "update_t": 284, "project_stat": [285, 286], "countlin": 286, "sdf": [287, 288, 289, 290], "box": 288, "sphere": 289, "volume_from_sdf": 290, "waveform_template_func": [291, 292], "get_waveform_template_paramet": 292, "xml_tool": [293, 294, 295], "dict_to_xml": 294, "parse_xml": 295, "view": [296, 297, 298, 299], "custom_widget": 297, "main_window_cont": 298, "popup": 299, "refer": 302, "configur": [303, 312, 314], "yaml": 303, "hardwar": [303, 305, 312, 314], "section": [303, 312], "gui": [303, 312], "channel": 303, "stack": 303, "acquisit": [303, 314], "timepoint": 303, "contribut": [304, 306], "guidelin": 304, "gener": 304, "principl": 304, "instal": [304, 313], "develop": 304, "depend": 304, "code": 304, "style": 304, "document": 304, "pre": 304, "commit": 304, "hook": 304, "dictionari": 304, "pars": 304, "unit": [304, 305], "test": 304, "mac": 304, "ad": [305, 307], "new": [305, 307], "scientif": 305, "how": 305, "add": 305, "introduct": 309, "current": 309, "implement": [309, 310], "The": 309, "creat": 309, "custom": 309, "combin": 309, "load": 309, "function": 309, "edit": 309, "delet": 309, "multiscal": 310, "expans": 310, "opm": 310, "v2": 310, "ct": 310, "v1": 310, "spectral": 310, "tirf": 310, "autonom": 311, "softwar": [311, 313], "light": 311, "microscopi": 311, "project": 311, "philosophi": 311, "content": 311, "author": 311, "index": 311, "search": 311, "overview": 312, "file": [312, 314], "remot": [312, 314], "focu": [312, 314], "wheel": [312, 314], "ax": 312, "definit": 312, "joystick": 312, "constant": 312, "other": 312, "templat": 312, "rest": 312, "download": 313, "git": 313, "setup": 313, "your": 313, "python": 313, "environ": 313, "troubleshoot": 313, "support": 314, "data": 314, "card": 314, "ni": 314, "pcie": 314, "6738": 314, "pxi": 314, "6259": 314, "6723": 314, "hamamatsu": 314, "flash": 314, "4": 314, "0": 314, "fusion": 314, "lightn": 314, "photometr": 314, "iri": 314, "15": 314, "focus": 314, "equip": 314, "solut": 314, "thorlab": 314, "blink": 314, "optotun": 314, "tunabl": 314, "len": 314, "synthet": 314, "asi": 314, "tiger": 314, "sutter": 314, "mp": 314, "285": 314, "physik": 314, "instrument": 314, "analog": 314, "piezo": 314, "etc": 314, "dichroic": 314, "turret": 314, "turrett": 314, "galvanomet": 314, "mechan": 314, "synethet": 314, "deform": 314, "mirror": 314, "imagin": 314, "optic": 314}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_experiment_config": [[7, "aslm-config-config-verify-experiment-config"]], "aslm.config.config.verify_waveform_constants": [[8, "aslm-config-config-verify-waveform-constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[13, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "aslm.log_files.filters.NonPerfFilter": [[18, "aslm-log-files-filters-nonperffilter"]], "aslm.log_files.filters.PerformanceFilter": [[19, "aslm-log-files-filters-performancefilter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "aslm.log_files.log_functions.find_filename": [[21, "aslm-log-files-log-functions-find-filename"]], "aslm.log_files.log_functions.log_setup": [[22, "aslm-log-files-log-functions-log-setup"]], "aslm.log_files.log_functions.main_process_listener": [[23, "aslm-log-files-log-functions-main-process-listener"]], "aslm.log_files.log_functions.update_nested_dict": [[24, "aslm-log-files-log-functions-update-nested-dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[28, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[29, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[30, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[31, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[33, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[34, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[35, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[36, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[37, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[38, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[39, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[40, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[41, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[42, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[43, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[44, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[45, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[46, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[47, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[48, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.concurrency": [[49, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[50, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[51, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[52, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[53, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[54, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[55, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[56, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.proxy_objects": [[57, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[58, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[59, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[60, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[61, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.data_sources": [[62, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[63, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[64, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[65, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[66, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[67, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[68, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[69, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.device_startup_functions": [[70, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[71, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[72, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[73, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[74, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[75, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[76, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[77, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[78, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[79, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[80, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[81, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[82, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[83, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[84, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[85, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[86, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[87, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[88, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[89, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[90, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[91, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[92, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device": [[93, "aslm-model-devices-apis-dynamixel-dynamixel-functions-create-mock-dxl-device"]], "aslm.model.devices.APIs.omicron": [[94, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[95, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[96, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[97, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[98, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[99, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[100, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[101, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[102, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[103, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[104, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[105, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[106, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[107, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[108, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[109, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[110, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[111, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[112, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[113, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[114, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[115, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[116, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[117, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[118, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[119, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[120, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[121, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[122, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[123, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[124, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[125, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[126, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.lasers": [[127, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[128, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[129, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[130, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[131, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.objectives": [[132, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[133, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[134, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[135, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[136, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[137, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[138, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[139, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[140, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[141, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[142, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[143, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[144, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[145, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[146, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[147, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[148, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[149, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[150, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[151, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[152, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[153, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[154, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[155, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[156, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[157, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[158, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[159, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[160, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[161, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[162, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[163, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[164, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[165, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[166, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[167, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[168, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_dynamixel": [[169, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[170, "aslm-model-devices-zoom-zoom-dynamixel-dynamixelzoom"]], "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection": [[171, "aslm-model-devices-zoom-zoom-dynamixel-build-dynamixel-zoom-connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[172, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[173, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[174, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[175, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[176, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[177, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[178, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[179, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[180, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[181, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "Parameters:": [[181, "parameters"], [181, "id1"], [181, "id2"], [181, "id4"], [181, "id6"], [181, "id8"], [181, "id10"], [186, "parameters"], [186, "id1"], [186, "id2"], [187, "parameters"], [187, "id3"], [187, "id6"], [187, "id8"], [187, "id10"], [188, "parameters"], [188, "id1"], [189, "parameters"], [189, "id1"], [189, "id2"], [190, "parameters"], [190, "id1"], [190, "id2"], [191, "parameters"], [191, "id1"], [192, "parameters"], [192, "id1"], [193, "parameters"], [193, "id1"], [194, "parameters"], [194, "id1"], [194, "id2"], [194, "id4"], [194, "id6"], [194, "id8"], [195, "parameters"], [195, "id1"], [195, "id2"], [195, "id4"], [195, "id6"], [195, "id8"], [195, "id10"], [195, "id12"], [195, "id14"], [201, "parameters"], [202, "parameters"], [202, "id3"], [203, "parameters"], [203, "id3"], [203, "id6"], [204, "parameters"], [204, "id3"], [205, "parameters"], [205, "id3"], [205, "id6"], [206, "parameters"], [206, "id3"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [212, "parameters"], [212, "id1"], [213, "parameters"], [215, "parameters"], [219, "parameters"], [219, "id2"], [220, "parameters"], [220, "id2"], [221, "parameters"], [222, "parameters"], [223, "parameters"]], "Attributes:": [[181, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [201, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [212, "attributes"], [219, "attributes"], [220, "attributes"], [221, "attributes"]], "Methods:": [[181, "methods"], [186, "methods"], [187, "methods"], [188, "methods"], [189, "methods"], [190, "methods"], [191, "methods"], [192, "methods"], [193, "methods"], [194, "methods"], [195, "methods"], [201, "methods"], [202, "methods"], [203, "methods"], [204, "methods"], [205, "methods"], [206, "methods"], [212, "methods"], [219, "methods"], [220, "methods"], [221, "methods"]], "Notes:": [[181, "notes"], [186, "notes"], [187, "notes"], [188, "notes"], [189, "notes"], [190, "notes"], [191, "notes"], [192, "notes"], [193, "notes"], [194, "notes"], [195, "notes"], [201, "notes"], [202, "notes"], [202, "id6"], [203, "notes"], [204, "notes"], [204, "id6"], [205, "notes"], [206, "notes"], [207, "notes"], [208, "notes"], [209, "notes"], [210, "notes"], [212, "notes"], [213, "notes"], [215, "notes"], [222, "notes"], [223, "notes"]], "Returns:": [[181, "returns"], [181, "id3"], [181, "id5"], [181, "id7"], [181, "id9"], [181, "id11"], [186, "returns"], [186, "id3"], [187, "returns"], [187, "id7"], [187, "id9"], [187, "id11"], [188, "returns"], [189, "returns"], [189, "id3"], [190, "returns"], [190, "id3"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [194, "id3"], [194, "id5"], [194, "id7"], [194, "id9"], [195, "returns"], [195, "id3"], [195, "id5"], [195, "id7"], [195, "id9"], [195, "id11"], [195, "id13"], [195, "id15"], [203, "returns"], [203, "id9"], [205, "returns"], [205, "id9"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [213, "returns"], [219, "returns"], [219, "id1"], [219, "id3"], [219, "id4"], [219, "id5"], [219, "id6"], [220, "returns"], [220, "id1"], [220, "id3"], [220, "id4"], [220, "id5"], [220, "id6"], [221, "returns"], [222, "returns"], [223, "returns"]], "aslm.model.features.autofocus": [[182, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[183, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[184, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[185, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[186, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[187, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[188, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[189, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[190, "aslm-model-features-common-features-movetonextpositioninmultipositiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[191, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[192, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[193, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[194, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[195, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[196, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[197, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[198, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[199, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[200, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[201, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[202, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[203, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[204, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[205, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[206, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[207, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[208, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[209, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[210, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[211, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[212, "aslm-model-features-feature-related-functions-sharedlist"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[213, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "Example:": [[213, "example"], [215, "example"], [222, "example"]], "]": [[213, "id3"], [215, "id5"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[214, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions": [[215, "aslm-model-features-feature-related-functions-load-dynamic-parameter-functions"]], "aslm.model.features.image_writer": [[216, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[217, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.remove_empty_tiles": [[218, "module-aslm.model.features.remove_empty_tiles"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[219, "aslm-model-features-remove-empty-tiles-detecttissueinstack"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[220, "aslm-model-features-remove-empty-tiles-detecttissueinstackandrecord"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[221, "aslm-model-features-remove-empty-tiles-removeemptypositions"]], "aslm.model.features.remove_empty_tiles.detect_tissue": [[222, "aslm-model-features-remove-empty-tiles-detect-tissue"]], "aslm.model.features.remove_empty_tiles.detect_tissue2": [[223, "aslm-model-features-remove-empty-tiles-detect-tissue2"]], "aslm.model.features.restful_features": [[224, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[225, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[226, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[227, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[228, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[229, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[230, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[231, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[232, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[233, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[234, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[235, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[236, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[237, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[238, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[239, "aslm-model-microscope-microscope"]], "aslm.model.model": [[240, "module-aslm.model.model"]], "aslm.model.model.Model": [[241, "aslm-model-model-model"]], "aslm.model.waveforms": [[242, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[243, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[244, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[245, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[246, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[247, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[248, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[249, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[250, "aslm-model-waveforms-square"]], "aslm.tools": [[251, "module-aslm.tools"]], "aslm.tools.beams": [[252, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[253, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[254, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[255, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[256, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[257, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[258, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[259, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[260, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[261, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[262, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[263, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[264, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[265, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[266, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[267, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[268, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[269, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[270, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[271, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[272, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[273, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[274, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[275, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[276, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[277, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[278, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[279, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.multipos_table_tools": [[280, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[281, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[282, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[283, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[284, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[285, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[286, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[287, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[288, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[289, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[290, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[291, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[292, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[293, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[294, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[295, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[296, "module-aslm.view"]], "aslm.view.custom_widgets": [[297, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[298, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[299, "module-aslm.view.popups"]], "API Reference": [[302, "api-reference"]], "Configuring ASLM": [[303, "configuring-aslm"]], "Configuration.yaml": [[303, "configuration-yaml"]], "Hardware Section": [[303, "hardware-section"], [312, "hardware-section"]], "Microscope Section": [[303, "microscope-section"], [312, "microscope-section"]], "Configuring stages": [[303, "configuring-stages"]], "GUI Section": [[303, "gui-section"], [312, "gui-section"]], "Channels": [[303, "channels"]], "Stack Acquisition": [[303, "stack-acquisition"]], "Timepoint": [[303, "timepoint"]], "Example YAML Configuration": [[303, "example-yaml-configuration"]], "Contributing Guidelines": [[304, "contributing-guidelines"]], "General Principles": [[304, "general-principles"]], "Installation of Developer Dependencies": [[304, "installation-of-developer-dependencies"]], "Coding Style": [[304, "coding-style"]], "Documentation": [[304, "documentation"]], "Pre-Commit Hooks": [[304, "pre-commit-hooks"]], "Dictionary Parsing": [[304, "dictionary-parsing"]], "Unit Tests": [[304, "unit-tests"]], "Developing with a Mac": [[304, "developing-with-a-mac"]], "Adding New Hardware": [[305, "adding-new-hardware"]], "Scientific Units": [[305, "scientific-units"]], "How to Add New Hardware": [[305, "how-to-add-new-hardware"]], "Contributing to ASLM": [[306, "contributing-to-aslm"]], "Adding New Model Features": [[307, "adding-new-model-features"]], "Feature Container": [[309, "feature-container"]], "Introduction": [[309, "introduction"]], "Currently Implemented Features": [[309, "currently-implemented-features"]], "The Feature Object": [[309, "the-feature-object"]], "Creating Custom Features": [[309, "creating-custom-features"]], "Combining Features": [[309, "combining-features"]], "Loading Custom Functions": [[309, "loading-custom-functions"]], "Editing Function Parameters": [[309, "editing-function-parameters"]], "Deleting Features": [[309, "deleting-features"]], "Microscope Implementations": [[310, "microscope-implementations"]], "Multiscale Microscope": [[310, "multiscale-microscope"]], "Expansion ASLM": [[310, "expansion-aslm"]], "OPM-V2": [[310, "opm-v2"]], "CT-ASLM-V1": [[310, "ct-aslm-v1"]], "CT-ASLM-V2": [[310, "ct-aslm-v2"]], "Spectral TIRF": [[310, "spectral-tirf"]], "Autonomous Software for Light Microscopy": [[311, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[311, "project-philosophy"]], "Contents": [[311, "contents"]], "Authors": [[311, "authors"]], "Index and search": [[311, "index-and-search"]], "Configuration Overview": [[312, "configuration-overview"]], "Configuration File": [[312, "configuration-file"], [314, "configuration-file"], [314, "id1"], [314, "id2"], [314, "id3"]], "DAQ Section": [[312, "daq-section"]], "Camera Section": [[312, "camera-section"]], "Remote Focus Section": [[312, "remote-focus-section"]], "Galvo Section": [[312, "galvo-section"]], "Filter Wheel Section": [[312, "filter-wheel-section"]], "Stage Section": [[312, "stage-section"]], "Stage Axes Definition": [[312, "stage-axes-definition"]], "Joystick Axes Definition": [[312, "joystick-axes-definition"]], "Zoom Section": [[312, "zoom-section"]], "Shutter Section": [[312, "shutter-section"]], "Laser Section": [[312, "laser-section"]], "Waveform Constants File": [[312, "waveform-constants-file"]], "Remote Constants Section": [[312, "remote-constants-section"]], "Galvo Constants Section": [[312, "galvo-constants-section"]], "Other Constants Section": [[312, "other-constants-section"]], "Waveform Templates File": [[312, "waveform-templates-file"]], "Rest API Configuration File": [[312, "rest-api-configuration-file"]], "Software Installation": [[313, "software-installation"]], "Download Git": [[313, "download-git"]], "Setup your Python Environment": [[313, "setup-your-python-environment"]], "Troubleshooting": [[313, "troubleshooting"]], "Supported Hardware": [[314, "supported-hardware"]], "Data Acquisition Card": [[314, "data-acquisition-card"]], "NI": [[314, "ni"]], "PCIe-6738": [[314, "pcie-6738"]], "PXI-6259": [[314, "pxi-6259"]], "PXI-6723": [[314, "pxi-6723"]], "Cameras": [[314, "cameras"]], "Hamamatsu Flash 4.0": [[314, "hamamatsu-flash-4-0"]], "Hamamatsu Fusion": [[314, "hamamatsu-fusion"]], "Hamamatsu Lightning": [[314, "hamamatsu-lightning"]], "Photometrics Iris 15": [[314, "photometrics-iris-15"]], "Remote Focusing Devices": [[314, "remote-focusing-devices"]], "Equipment Solutions": [[314, "equipment-solutions"]], "Thorlabs BLINK": [[314, "thorlabs-blink"]], "Optotune Focus Tunable Lens": [[314, "optotune-focus-tunable-lens"]], "Synthetic Remote Focus Device": [[314, "synthetic-remote-focus-device"]], "Stages": [[314, "stages"]], "ASI Tiger Controller": [[314, "asi-tiger-controller"]], "Sutter MP-285": [[314, "sutter-mp-285"]], "Physik Instrumente": [[314, "physik-instrumente"]], "Thorlabs": [[314, "thorlabs"], [314, "id6"]], "Analog Controlled (Galvo/Piezo/etc.)": [[314, "analog-controlled-galvo-piezo-etc"]], "Synthetic Stage": [[314, "synthetic-stage"]], "Dichroic Turret": [[314, "dichroic-turret"]], "ASI": [[314, "asi"], [314, "id4"]], "Synthetic Dichroic Turrett": [[314, "synthetic-dichroic-turrett"]], "Filter Wheels": [[314, "filter-wheels"]], "Sutter": [[314, "sutter"]], "Synthetic Filter Wheel": [[314, "synthetic-filter-wheel"]], "Galvanometers": [[314, "galvanometers"]], "DAQ Control": [[314, "daq-control"], [314, "id5"]], "Synthetic Galvanometer": [[314, "synthetic-galvanometer"]], "Lasers": [[314, "lasers"]], "Coherent": [[314, "coherent"]], "Omicron": [[314, "omicron"]], "Synthetic Laser": [[314, "synthetic-laser"]], "Shutters": [[314, "shutters"]], "Synthetic Shutter": [[314, "synthetic-shutter"]], "Mechanical Zoom": [[314, "mechanical-zoom"]], "Dynamixel Zoom": [[314, "dynamixel-zoom"]], "Synethetic Zoom": [[314, "synethetic-zoom"]], "Deformable Mirrors": [[314, "deformable-mirrors"]], "Imagine Optics": [[314, "imagine-optics"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [9, "module-aslm.controller"], [10, "module-aslm.controller.configuration_controller"], [12, "module-aslm.controller.thread_pool"], [16, "module-aslm.log_files"], [17, "module-aslm.log_files.filters"], [20, "module-aslm.log_files.log_functions"], [25, "module-aslm.model"], [26, "module-aslm.model.analysis"], [27, "module-aslm.model.analysis.boundary_detect"], [32, "module-aslm.model.analysis.camera"], [37, "module-aslm.model.analysis.detection"], [47, "module-aslm.model.analysis.image_contrast"], [49, "module-aslm.model.concurrency"], [50, "module-aslm.model.concurrency.concurrency_tools"], [57, "module-aslm.model.concurrency.proxy_objects"], [62, "module-aslm.model.data_sources"], [63, "module-aslm.model.data_sources.bdv_data_source"], [65, "module-aslm.model.data_sources.data_source"], [68, "module-aslm.model.data_sources.tiff_data_source"], [70, "module-aslm.model.device_startup_functions"], [88, "module-aslm.model.devices"], [89, "module-aslm.model.devices.APIs"], [90, "module-aslm.model.devices.APIs.coherent"], [91, "module-aslm.model.devices.APIs.dynamixel"], [92, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"], [94, "module-aslm.model.devices.APIs.omicron"], [95, "module-aslm.model.devices.camera"], [96, "module-aslm.model.devices.camera.camera_base"], [98, "module-aslm.model.devices.camera.camera_hamamatsu"], [101, "module-aslm.model.devices.camera.camera_photometrics"], [103, "module-aslm.model.devices.camera.camera_synthetic"], [106, "module-aslm.model.devices.daq"], [107, "module-aslm.model.devices.daq.daq_base"], [109, "module-aslm.model.devices.daq.daq_synthetic"], [111, "module-aslm.model.devices.filter_wheel"], [112, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [115, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [117, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [120, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [122, "module-aslm.model.devices.galvo"], [123, "module-aslm.model.devices.galvo.galvo_base"], [125, "module-aslm.model.devices.galvo.galvo_synthetic"], [127, "module-aslm.model.devices.lasers"], [128, "module-aslm.model.devices.lasers.laser_base"], [130, "module-aslm.model.devices.lasers.laser_synthetic"], [132, "module-aslm.model.devices.objectives"], [134, "module-aslm.model.devices.remote_focus"], [135, "module-aslm.model.devices.remote_focus.remote_focus_base"], [137, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [139, "module-aslm.model.devices.shutter"], [140, "module-aslm.model.devices.shutter.laser_shutter_base"], [142, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [144, "module-aslm.model.devices.stages"], [145, "module-aslm.model.devices.stages.stage_asi"], [148, "module-aslm.model.devices.stages.stage_base"], [150, "module-aslm.model.devices.stages.stage_galvo"], [152, "module-aslm.model.devices.stages.stage_mcl"], [155, "module-aslm.model.devices.stages.stage_pi"], [158, "module-aslm.model.devices.stages.stage_sutter"], [161, "module-aslm.model.devices.stages.stage_synthetic"], [163, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [166, "module-aslm.model.devices.zoom"], [167, "module-aslm.model.devices.zoom.zoom_base"], [169, "module-aslm.model.devices.zoom.zoom_dynamixel"], [172, "module-aslm.model.devices.zoom.zoom_synthetic"], [174, "module-aslm.model.dummy"], [179, "module-aslm.model.features"], [180, "module-aslm.model.features.auto_tile_scan"], [182, "module-aslm.model.features.autofocus"], [185, "module-aslm.model.features.common_features"], [196, "module-aslm.model.features.constant_velocity_acquisition"], [198, "module-aslm.model.features.dummy_detective"], [200, "module-aslm.model.features.feature_container"], [211, "module-aslm.model.features.feature_related_functions"], [216, "module-aslm.model.features.image_writer"], [218, "module-aslm.model.features.remove_empty_tiles"], [224, "module-aslm.model.features.restful_features"], [227, "module-aslm.model.features.volume_search"], [230, "module-aslm.model.metadata_sources"], [231, "module-aslm.model.metadata_sources.bdv_metadata"], [233, "module-aslm.model.metadata_sources.metadata"], [236, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [238, "module-aslm.model.microscope"], [240, "module-aslm.model.model"], [242, "module-aslm.model.waveforms"], [251, "module-aslm.tools"], [252, "module-aslm.tools.beams"], [256, "module-aslm.tools.common_dict_tools"], [258, "module-aslm.tools.common_functions"], [264, "module-aslm.tools.decorators"], [267, "module-aslm.tools.file_functions"], [272, "module-aslm.tools.image"], [275, "module-aslm.tools.image_loaders"], [277, "module-aslm.tools.main_functions"], [280, "module-aslm.tools.multipos_table_tools"], [285, "module-aslm.tools.project_stats"], [287, "module-aslm.tools.sdf"], [291, "module-aslm.tools.waveform_template_funcs"], [293, "module-aslm.tools.xml_tools"], [296, "module-aslm.view"], [297, "module-aslm.view.custom_widgets"], [298, "module-aslm.view.main_window_content"], [299, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_experiment_config() (in module aslm.config.config)": [[7, "aslm.config.config.verify_experiment_config"]], "verify_waveform_constants() (in module aslm.config.config)": [[8, "aslm.config.config.verify_waveform_constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[11, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_flip_flags"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "configuration (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.configuration"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_num (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_num"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "microscope_config (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_config"]], "microscope_name (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_name"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_flip_flags"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.run"]], "selflock (aslm.controller.thread_pool.selflockthread attribute)": [[13, "aslm.controller.thread_pool.SelfLockThread.selfLock"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "resources (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.resources"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "todeletelist (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.toDeleteList"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[15, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "waitlist (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlist"]], "waitlistlock (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlistLock"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "nonperffilter (class in aslm.log_files.filters)": [[18, "aslm.log_files.filters.NonPerfFilter"]], "__init__() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.__init__"]], "filter() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.filter"]], "performancefilter (class in aslm.log_files.filters)": [[19, "aslm.log_files.filters.PerformanceFilter"]], "__init__() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.__init__"]], "filter() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.filter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "find_filename() (in module aslm.log_files.log_functions)": [[21, "aslm.log_files.log_functions.find_filename"]], "log_setup() (in module aslm.log_files.log_functions)": [[22, "aslm.log_files.log_functions.log_setup"]], "main_process_listener() (in module aslm.log_files.log_functions)": [[23, "aslm.log_files.log_functions.main_process_listener"]], "update_nested_dict() (in module aslm.log_files.log_functions)": [[24, "aslm.log_files.log_functions.update_nested_dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[28, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[29, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[30, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[31, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[33, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[34, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[35, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[36, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[37, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[38, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[39, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[40, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[41, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[42, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[43, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[44, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[45, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[46, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[47, "module-aslm.model.analysis.image_contrast"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[48, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[49, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[50, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[52, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[53, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[53, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[54, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[55, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[56, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "aslm.model.concurrency.proxy_objects": [[57, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[58, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[58, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[58, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[58, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[59, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[59, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[60, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[61, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.data_sources": [[62, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[63, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "bits (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.bits"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"], [64, "id5"], [64, "id6"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "dc (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dc"]], "ds_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.ds_name"]], "dt (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dt"]], "dx (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dx"]], "dy (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dy"]], "dz (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dz"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"]], "get_slice() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.get_slice"]], "image (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.image"]], "logger (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.logger"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [64, "id0"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "id10"]], "mode() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "id1"]], "nbytes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "id11"]], "nbytes() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.nbytes"]], "positions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.positions"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"], [64, "id3"], [64, "id7"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"], [64, "id2"], [64, "id8"]], "setup (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.setup"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "id12"]], "shape() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shape_c (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_c"]], "shape_t (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_t"]], "shape_x (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_x"]], "shape_y (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_y"]], "shape_z (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_z"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[64, "id13"]], "voxel_size() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[64, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"], [64, "id4"], [64, "id9"]], "aslm.model.data_sources.data_source": [[65, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[66, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.__init__"]], "bits (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.bits"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.close"], [66, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[66, "aslm.model.data_sources.data_source.DataSource.data"]], "dc (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.dc"]], "dt (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.dt"]], "dx (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.dx"]], "dy (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.dy"]], "dz (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.dz"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.file_name"]], "logger (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.logger"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.metadata"]], "mode (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.mode"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[66, "id5"]], "mode() (aslm.model.data_sources.data_source.datasource method)": [[66, "id0"]], "nbytes (aslm.model.data_sources.data_source.datasource property)": [[66, "id6"]], "nbytes() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.nbytes"]], "positions (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.positions"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.read"], [66, "id2"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"], [66, "id3"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[66, "id7"]], "shape() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.shape"]], "shape_c (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.shape_c"]], "shape_t (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.shape_t"]], "shape_x (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.shape_x"]], "shape_y (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.shape_y"]], "shape_z (aslm.model.data_sources.data_source.datasource attribute)": [[66, "aslm.model.data_sources.data_source.DataSource.shape_z"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[66, "id8"]], "voxel_size() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[66, "aslm.model.data_sources.data_source.DataSource.write"], [66, "id4"]], "get_data_source() (in module aslm.model.data_sources)": [[67, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[68, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "bits (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.bits"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"], [69, "id4"], [69, "id5"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "dc (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dc"]], "dt (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dt"]], "dx (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dx"]], "dy (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dy"]], "dz (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dz"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"], [69, "id6"]], "image (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.image"]], "logger (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.logger"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [69, "id0"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[69, "id10"]], "mode() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "id1"]], "nbytes (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[69, "id11"]], "nbytes() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.nbytes"]], "positions (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.positions"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"], [69, "id2"], [69, "id7"]], "save_directory (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.save_directory"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"], [69, "id8"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[69, "id12"]], "shape() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "shape_c (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_c"]], "shape_t (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_t"]], "shape_x (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_x"]], "shape_y (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_y"]], "shape_z (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_z"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[69, "id13"]], "voxel_size() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[69, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"], [69, "id3"], [69, "id9"]], "aslm.model.device_startup_functions": [[70, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[71, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[71, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[72, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[73, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[74, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[75, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[76, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[77, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[78, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[79, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[80, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[81, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[82, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[83, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[84, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[85, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[86, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[88, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[89, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[90, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[91, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.dynamixel.dynamixel_functions": [[92, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "create_mock_dxl_device() (in module aslm.model.devices.apis.dynamixel.dynamixel_functions)": [[93, "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device"]], "aslm.model.devices.apis.omicron": [[94, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[95, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[96, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[97, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "camera_controller (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_base.camerabase method)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.close_camera"]], "configuration (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_base.camerabase method)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.get_line_interval"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_base.camerabase method)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.get_offset_variance_maps"]], "is_acquiring (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.min_image_width"]], "offset (aslm.model.devices.camera.camera_base.camerabase property)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.offset"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "step_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.step_image_width"]], "variance (aslm.model.devices.camera.camera_base.camerabase property)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.variance"]], "x_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[97, "aslm.model.devices.camera.camera_base.CameraBase.y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[98, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[99, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.y_pixels"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[100, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[101, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "configuration (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_width"]], "offset (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.offset"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_width"]], "variance (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.variance"]], "x_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[102, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[103, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_controller"]], "camera_exposure_time (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_exposure_time"]], "camera_parameters (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "configuration (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.configuration"]], "current_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.current_frame_idx"]], "data_buffer (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.data_buffer"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.is_acquiring"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "max_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_width"]], "num_of_frame (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.num_of_frame"]], "offset (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.offset"]], "pre_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.pre_frame_idx"]], "random_image (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.random_image"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "serial_number (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_width"]], "variance (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.variance"]], "x_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[104, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.y_pixels"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[105, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[105, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[105, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "set_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[105, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.set_property_value"]], "aslm.model.devices.daq": [[106, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[107, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[108, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "camera_delay (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.camera_pulse_percent"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "daq_parameters (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_base.daqbase method)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.enable_microscope"]], "microscope_name (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.microscope_name"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.sample_rate"]], "sweep_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.sweep_time"]], "waveform_constants (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[108, "aslm.model.devices.daq.daq_base.DAQBase.waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[109, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "analog_outputs (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.analog_outputs"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "camera (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera"]], "camera_delay (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_pulse_percent"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "daq_parameters (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.enable_microscope"]], "is_updating_analog_task (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.is_updating_analog_task"]], "microscope_name (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.microscope_name"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.remote_focus_ramp_falling"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "sample_rate (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sample_rate"]], "set_external_trigger() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.set_external_trigger"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "sweep_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sweep_time"]], "trigger_mode (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.trigger_mode"]], "update_analog_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.update_analog_task"]], "wait_to_run_lock (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.wait_to_run_lock"]], "waveform_constants (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_repeat_num"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[110, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[111, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[112, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "active_filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.active_filter_wheel"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_dictionary"]], "filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel"]], "filter_wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel_position"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.number_of_filter_wheels"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[113, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wheel_position"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[114, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[115, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[116, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[116, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[116, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[116, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[116, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[117, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"]], "delay_matrix (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.delay_matrix"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "init_finished (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.init_finished"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"]], "read_on_init (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read_on_init"]], "serial (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.serial"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "speed (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.speed"]], "wait_until_done (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "comport (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_sutter.comport"]], "timeout (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_sutter.timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[120, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"], [121, "id0"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[121, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"], [121, "id1"]], "aslm.model.devices.galvo": [[122, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[123, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[124, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[125, "module-aslm.model.devices.galvo.galvo_synthetic"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"]], "configuration (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.configuration"]], "device_config (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.samples"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[126, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.waveform_dict"]], "aslm.model.devices.lasers": [[127, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[128, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "configuration (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.configuration"]], "device_config (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_base.laserbase method)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_base.laserbase method)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_base.laserbase method)": [[129, "aslm.model.devices.lasers.laser_base.LaserBase.turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[130, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "configuration (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.configuration"]], "device_config (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[131, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_on"]], "aslm.model.devices.objectives": [[132, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[133, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[133, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[133, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[134, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[135, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[136, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[137, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "move() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.move"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[138, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.waveform_dict"]], "aslm.model.devices.shutter": [[139, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[140, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[141, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[141, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[141, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[141, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[141, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_base.shutterbase property)": [[141, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[142, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[143, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[143, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[143, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[143, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[143, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter property)": [[143, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[144, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[145, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes (aslm.model.devices.stages.stage_asi.asistage attribute)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_asi.asistage attribute)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_asi.asistage attribute)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"]], "tiger_controller (aslm.model.devices.stages.stage_asi.asistage attribute)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.tiger_controller"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"]], "verify_move() (aslm.model.devices.stages.stage_asi.asistage method)": [[146, "aslm.model.devices.stages.stage_asi.ASIStage.verify_move"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[147, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[148, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[149, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[149, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes (aslm.model.devices.stages.stage_base.stagebase attribute)": [[149, "aslm.model.devices.stages.stage_base.StageBase.axes"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[149, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "close() (aslm.model.devices.stages.stage_base.stagebase method)": [[149, "aslm.model.devices.stages.stage_base.StageBase.close"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[149, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[149, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"]], "stage_feedback (aslm.model.devices.stages.stage_base.stagebase attribute)": [[149, "aslm.model.devices.stages.stage_base.StageBase.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_base.stagebase attribute)": [[149, "aslm.model.devices.stages.stage_base.StageBase.stage_limits"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[149, "aslm.model.devices.stages.stage_base.StageBase.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[149, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[150, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes"]], "axes_channels (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_channels"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "calculate_waveform() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.calculate_waveform"]], "camera_delay_percent (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.camera_delay_percent"]], "close() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.close"]], "configuration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.configuration"]], "daq (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.daq"]], "distance_threshold (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.distance_threshold"]], "exposure_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.exposure_times"]], "galvo_max_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_min_voltage"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "microscope_name (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.microscope_name"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "remote_focus_delay (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_delay"]], "remote_focus_ramp_falling (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_ramp_falling"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "sample_rate (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sample_rate"]], "samples (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.samples"]], "stage_feedback (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_limits"]], "stage_settle_duration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_settle_duration"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"]], "sweep_time (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_time"]], "sweep_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_times"]], "trigger_source (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.trigger_source"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "volts_per_micron (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.volts_per_micron"]], "waveform_dict (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[151, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[152, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "handle (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.handle"]], "mcl_controller (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.mcl_controller"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[153, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[154, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[155, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[156, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_pi.pistage attribute)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_pi.pistage attribute)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[156, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[157, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[158, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "device_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.device_axes"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stage_feedback (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_limits"]], "stage_x_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_x_pos"]], "stage_y_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_y_pos"]], "stage_z_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_z_pos"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[159, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[160, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[161, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.close"]], "default_speed (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.default_speed"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_speed"]], "load_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.load_sample"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop_scan"]], "unload_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.unload_sample"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[162, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[163, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "kim_axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_axes"]], "kim_controller (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_controller"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "serial_number (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.serial_number"]], "stage_feedback (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[164, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[165, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[166, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[167, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.configuration"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[168, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[169, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "dynamixelzoom (class in aslm.model.devices.zoom.zoom_dynamixel)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom"]], "__init__() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.__init__"]], "addr_mx_goal_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_goal_position"]], "addr_mx_moving_speed (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_moving_speed"]], "addr_mx_p_gain (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_p_gain"]], "addr_mx_present_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_present_position"]], "addr_mx_torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_enable"]], "addr_mx_torque_limit (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_limit"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.configuration"]], "dynamixel (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.dynamixel"]], "goal_position_offset (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.goal_position_offset"]], "id (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.id"]], "move() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.move"]], "port_num (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.port_num"]], "read_position() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.set_zoom"]], "sleeptime (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.sleeptime"]], "timeout (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.timeout"]], "torque_disable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_disable"]], "torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_enable"]], "zoomdict (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[170, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomvalue"]], "build_dynamixel_zoom_connection() (in module aslm.model.devices.zoom.zoom_dynamixel)": [[171, "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[172, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.configuration"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[173, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomvalue"]], "aslm.model.dummy": [[174, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[175, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[175, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[175, "aslm.model.dummy.DummyController.clear"]], "commands (aslm.model.dummy.dummycontroller attribute)": [[175, "aslm.model.dummy.DummyController.commands"]], "configuration (aslm.model.dummy.dummycontroller attribute)": [[175, "aslm.model.dummy.DummyController.configuration"]], "configuration_controller (aslm.model.dummy.dummycontroller attribute)": [[175, "aslm.model.dummy.DummyController.configuration_controller"]], "execute() (aslm.model.dummy.dummycontroller method)": [[175, "aslm.model.dummy.DummyController.execute"]], "menu_controller (aslm.model.dummy.dummycontroller attribute)": [[175, "aslm.model.dummy.DummyController.menu_controller"]], "off_stage_pos (aslm.model.dummy.dummycontroller attribute)": [[175, "aslm.model.dummy.DummyController.off_stage_pos"]], "pop() (aslm.model.dummy.dummycontroller method)": [[175, "aslm.model.dummy.DummyController.pop"]], "stage_pos (aslm.model.dummy.dummycontroller attribute)": [[175, "aslm.model.dummy.DummyController.stage_pos"]], "view (aslm.model.dummy.dummycontroller attribute)": [[175, "aslm.model.dummy.DummyController.view"]], "dummydevice (class in aslm.model.dummy)": [[176, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[176, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[176, "aslm.model.dummy.DummyDevice.clear"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[176, "aslm.model.dummy.DummyDevice.generate_message"]], "in_port (aslm.model.dummy.dummydevice attribute)": [[176, "aslm.model.dummy.DummyDevice.in_port"]], "listen() (aslm.model.dummy.dummydevice method)": [[176, "aslm.model.dummy.DummyDevice.listen"]], "msg_count (aslm.model.dummy.dummydevice attribute)": [[176, "aslm.model.dummy.DummyDevice.msg_count"]], "out_port (aslm.model.dummy.dummydevice attribute)": [[176, "aslm.model.dummy.DummyDevice.out_port"]], "sendout() (aslm.model.dummy.dummydevice method)": [[176, "aslm.model.dummy.DummyDevice.sendout"]], "sendout_msg_count (aslm.model.dummy.dummydevice attribute)": [[176, "aslm.model.dummy.DummyDevice.sendout_msg_count"]], "setup() (aslm.model.dummy.dummydevice method)": [[176, "aslm.model.dummy.DummyDevice.setup"]], "stop_flag (aslm.model.dummy.dummydevice attribute)": [[176, "aslm.model.dummy.DummyDevice.stop_flag"]], "timecost (aslm.model.dummy.dummydevice attribute)": [[176, "aslm.model.dummy.DummyDevice.timecost"]], "dummymicroscope (class in aslm.model.dummy)": [[177, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[177, "aslm.model.dummy.DummyMicroscope.__init__"]], "calculate_exposure_sweep_times() (aslm.model.dummy.dummymicroscope method)": [[177, "aslm.model.dummy.DummyMicroscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.configuration"]], "current_channel (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.current_channel"]], "daq (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.daq"]], "data_buffer (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.data_buffer"]], "galvo (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.galvo"]], "lasers (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.lasers"]], "microscope_name (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.microscope_name"]], "stages (aslm.model.dummy.dummymicroscope attribute)": [[177, "aslm.model.dummy.DummyMicroscope.stages"]], "dummymodel (class in aslm.model.dummy)": [[178, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[178, "aslm.model.dummy.DummyModel.__init__"]], "active_microscope (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.active_microscope"]], "active_microscope_name (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.active_microscope_name"]], "camera (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.camera"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.data"]], "data_buffer (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.data_buffer"]], "data_buffer_positions (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.data_buffer_positions"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[178, "aslm.model.dummy.DummyModel.data_func"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.data_pipe"]], "data_records (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.data_records"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.data_thread"]], "device (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.device"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.frame_id"]], "img_height (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.img_height"]], "img_width (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.img_width"]], "manager (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.manager"]], "number_of_frames (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.number_of_frames"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[178, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_records (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.signal_records"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[178, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[178, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[179, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[180, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "end_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_data"]], "end_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_signal"]], "in_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_data"]], "in_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_signal"]], "pre_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_data"]], "pre_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[181, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_signal"]], "aslm.model.features.autofocus": [[182, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[183, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[183, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[183, "aslm.model.features.autofocus.Autofocus.run"], [183, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[183, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[184, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[185, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[186, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[186, "aslm.model.features.common_features.ChangeResolution.__init__"]], "cleanup() (aslm.model.features.common_features.changeresolution method)": [[186, "aslm.model.features.common_features.ChangeResolution.cleanup"]], "signal_func() (aslm.model.features.common_features.changeresolution method)": [[186, "aslm.model.features.common_features.ChangeResolution.signal_func"]], "conproacquisition (class in aslm.model.features.common_features)": [[187, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[187, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "generate_meta_data() (aslm.model.features.common_features.conproacquisition method)": [[187, "aslm.model.features.common_features.ConProAcquisition.generate_meta_data"]], "pre_signal_func() (aslm.model.features.common_features.conproacquisition method)": [[187, "aslm.model.features.common_features.ConProAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.conproacquisition method)": [[187, "aslm.model.features.common_features.ConProAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.conproacquisition method)": [[187, "aslm.model.features.common_features.ConProAcquisition.signal_func"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[188, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[188, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "data_func() (aslm.model.features.common_features.findtissuesimple2d method)": [[188, "aslm.model.features.common_features.FindTissueSimple2D.data_func"]], "loopbycount (class in aslm.model.features.common_features)": [[189, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[189, "aslm.model.features.common_features.LoopByCount.__init__"]], "data_func() (aslm.model.features.common_features.loopbycount method)": [[189, "aslm.model.features.common_features.LoopByCount.data_func"]], "signal_func() (aslm.model.features.common_features.loopbycount method)": [[189, "aslm.model.features.common_features.LoopByCount.signal_func"]], "movetonextpositioninmultipositiontable (class in aslm.model.features.common_features)": [[190, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[190, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.__init__"]], "cleanup() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[190, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.cleanup"]], "signal_func() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[190, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.signal_func"]], "preparenextchannel (class in aslm.model.features.common_features)": [[191, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[191, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "signal_func() (aslm.model.features.common_features.preparenextchannel method)": [[191, "aslm.model.features.common_features.PrepareNextChannel.signal_func"]], "snap (class in aslm.model.features.common_features)": [[192, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[192, "aslm.model.features.common_features.Snap.__init__"]], "data_func() (aslm.model.features.common_features.snap method)": [[192, "aslm.model.features.common_features.Snap.data_func"]], "stackpause (class in aslm.model.features.common_features)": [[193, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[193, "aslm.model.features.common_features.StackPause.__init__"]], "signal_func() (aslm.model.features.common_features.stackpause method)": [[193, "aslm.model.features.common_features.StackPause.signal_func"]], "waittocontinue (class in aslm.model.features.common_features)": [[194, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[194, "aslm.model.features.common_features.WaitToContinue.__init__"]], "cleanup() (aslm.model.features.common_features.waittocontinue method)": [[194, "aslm.model.features.common_features.WaitToContinue.cleanup"]], "data_func() (aslm.model.features.common_features.waittocontinue method)": [[194, "aslm.model.features.common_features.WaitToContinue.data_func"]], "pre_data_func() (aslm.model.features.common_features.waittocontinue method)": [[194, "aslm.model.features.common_features.WaitToContinue.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.waittocontinue method)": [[194, "aslm.model.features.common_features.WaitToContinue.pre_signal_func"]], "signal_func() (aslm.model.features.common_features.waittocontinue method)": [[194, "aslm.model.features.common_features.WaitToContinue.signal_func"]], "zstackacquisition (class in aslm.model.features.common_features)": [[195, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "cleanup_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.cleanup_data_func"]], "end_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.end_data_func"]], "in_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.in_data_func"]], "pre_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.signal_func"]], "update_channel() (aslm.model.features.common_features.zstackacquisition method)": [[195, "aslm.model.features.common_features.ZStackAcquisition.update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[196, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[197, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[197, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[197, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[197, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[198, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[199, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[199, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[200, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[201, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[201, "aslm.model.features.feature_container.Container.__init__"]], "cleanup() (aslm.model.features.feature_container.container method)": [[201, "aslm.model.features.feature_container.Container.cleanup"]], "reset() (aslm.model.features.feature_container.container method)": [[201, "aslm.model.features.feature_container.Container.reset"]], "datacontainer (class in aslm.model.features.feature_container)": [[202, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[202, "aslm.model.features.feature_container.DataContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.datacontainer method)": [[202, "aslm.model.features.feature_container.DataContainer.cleanup"]], "reset() (aslm.model.features.feature_container.datacontainer method)": [[202, "aslm.model.features.feature_container.DataContainer.reset"]], "run() (aslm.model.features.feature_container.datacontainer method)": [[202, "aslm.model.features.feature_container.DataContainer.run"]], "datanode (class in aslm.model.features.feature_container)": [[203, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[203, "aslm.model.features.feature_container.DataNode.__init__"]], "run() (aslm.model.features.feature_container.datanode method)": [[203, "aslm.model.features.feature_container.DataNode.run"]], "set_property() (aslm.model.features.feature_container.datanode method)": [[203, "aslm.model.features.feature_container.DataNode.set_property"]], "signalcontainer (class in aslm.model.features.feature_container)": [[204, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[204, "aslm.model.features.feature_container.SignalContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.signalcontainer method)": [[204, "aslm.model.features.feature_container.SignalContainer.cleanup"]], "reset() (aslm.model.features.feature_container.signalcontainer method)": [[204, "aslm.model.features.feature_container.SignalContainer.reset"]], "run() (aslm.model.features.feature_container.signalcontainer method)": [[204, "aslm.model.features.feature_container.SignalContainer.run"]], "signalnode (class in aslm.model.features.feature_container)": [[205, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[205, "aslm.model.features.feature_container.SignalNode.__init__"]], "run() (aslm.model.features.feature_container.signalnode method)": [[205, "aslm.model.features.feature_container.SignalNode.run"]], "set_property() (aslm.model.features.feature_container.signalnode method)": [[205, "aslm.model.features.feature_container.SignalNode.set_property"]], "treenode (class in aslm.model.features.feature_container)": [[206, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[206, "aslm.model.features.feature_container.TreeNode.__init__"]], "set_property() (aslm.model.features.feature_container.treenode method)": [[206, "aslm.model.features.feature_container.TreeNode.set_property"]], "dummy_true() (in module aslm.model.features.feature_container)": [[207, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[208, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[209, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[210, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[211, "module-aslm.model.features.feature_related_functions"]], "sharedlist (class in aslm.model.features.feature_related_functions)": [[212, "aslm.model.features.feature_related_functions.SharedList"]], "__init__() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.__init__"]], "append() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.append"]], "clear() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.clear"]], "copy() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.copy"]], "count() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.count"]], "extend() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.extend"]], "index() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.index"]], "insert() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.insert"]], "pop() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.pop"]], "remove() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.remove"]], "reverse() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.reverse"]], "sort() (aslm.model.features.feature_related_functions.sharedlist method)": [[212, "aslm.model.features.feature_related_functions.SharedList.sort"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[213, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[214, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "load_dynamic_parameter_functions() (in module aslm.model.features.feature_related_functions)": [[215, "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions"]], "aslm.model.features.image_writer": [[216, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[217, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.__init__"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.close"], [217, "id0"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.config_table"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.current_time_point"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.data_buffer"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.data_source"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.file_type"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.generate_image_name"], [217, "id1"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"], [217, "id2"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.mip"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.mip_directory"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.model"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.num_of_channels"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.save_directory"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[217, "aslm.model.features.image_writer.ImageWriter.save_image"], [217, "id3"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[217, "aslm.model.features.image_writer.ImageWriter.sub_dir"]], "aslm.model.features.remove_empty_tiles": [[218, "module-aslm.model.features.remove_empty_tiles"]], "detecttissueinstack (class in aslm.model.features.remove_empty_tiles)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[219, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_signal"]], "detecttissueinstackandrecord (class in aslm.model.features.remove_empty_tiles)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[220, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_signal"]], "removeemptypositions (class in aslm.model.features.remove_empty_tiles)": [[221, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions"]], "__init__() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[221, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.__init__"]], "signal_func() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[221, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.signal_func"]], "detect_tissue() (in module aslm.model.features.remove_empty_tiles)": [[222, "aslm.model.features.remove_empty_tiles.detect_tissue"]], "detect_tissue2() (in module aslm.model.features.remove_empty_tiles)": [[223, "aslm.model.features.remove_empty_tiles.detect_tissue2"]], "aslm.model.features.restful_features": [[224, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[225, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[225, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[226, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[227, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[228, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[228, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[229, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[230, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[231, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "affine_matrix_to_stage_positions() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.affine_matrix_to_stage_positions"]], "parse_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[232, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[233, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[234, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[234, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[234, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[234, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[235, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[235, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[235, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[235, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[235, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[235, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[236, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[237, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[237, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[237, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[237, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[237, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[237, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[237, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[238, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[239, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.__init__"]], "ask_stage_for_position (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.ask_stage_for_position"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "available_channels (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.available_channels"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "central_focus (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.central_focus"]], "channels (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.channels"]], "configuration (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.configuration"]], "current_channel (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.current_channel"]], "current_laser_index (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.current_laser_index"]], "daq (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.end_acquisition"]], "galvo (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.galvo"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.get_readout_time"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.get_stage_position"]], "info (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.info"]], "is_synthetic (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.is_synthetic"]], "laser_wavelength (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.laser_wavelength"]], "lasers (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.lasers"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.microscope_name"]], "move_remote_focus() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.move_remote_focus"]], "move_stage() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.move_stage_offset"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.prepare_next_channel"]], "ret_pos_dict (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.ret_pos_dict"]], "stages (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.stages"]], "stages_list (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.stages_list"]], "stop_stage() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.terminate"]], "tiger_controller (aslm.model.microscope.microscope attribute)": [[239, "aslm.model.microscope.Microscope.tiger_controller"]], "turn_off_lasers() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.turn_off_lasers"]], "turn_on_laser() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.turn_on_laser"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.update_data_buffer"]], "update_stage_limits() (aslm.model.microscope.microscope method)": [[239, "aslm.model.microscope.Microscope.update_stage_limits"]], "aslm.model.model": [[240, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[241, "aslm.model.model.Model"]], "__init__() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.__init__"]], "acquisition_count (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.acquisition_count"]], "active_microscope (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.active_microscope"]], "active_microscope_name (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.active_microscope_name"]], "ask_to_pause_data_thread (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.ask_to_pause_data_thread"]], "autofocus_on (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.autofocus_on"]], "binning (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.binning"]], "camera_wait_iterations (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.camera_wait_iterations"]], "change_resolution() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.create_pipe"]], "current_exposure_time (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.current_exposure_time"]], "data_buffer (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.data_buffer"]], "data_buffer_positions (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.data_buffer_positions"]], "data_thread (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.data_thread"]], "destroy_virtual_microscope() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.destroy_virtual_microscope"]], "end_acquisition() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.end_acquisition"]], "event_queue (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.event_queue"]], "f_position (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.f_position"]], "feature_list (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.feature_list"]], "focus_pos (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.focus_pos"]], "frame_id (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.frame_id"]], "get_active_microscope() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.get_active_microscope"]], "get_camera_line_interval_and_exposure_time() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.get_camera_line_interval_and_exposure_time"]], "get_data_buffer() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.get_data_buffer"]], "get_feature_list() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.get_offset_variance_maps"]], "get_stage_position() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.get_stage_position"]], "image_count (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.image_count"]], "image_writer (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.image_writer"]], "imaging_mode (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.imaging_mode"]], "img_height (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.img_height"]], "img_width (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.img_width"]], "is_acquiring (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.is_acquiring"]], "is_live (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.is_live"]], "is_save (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.is_save"]], "launch_virtual_microscope() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.launch_virtual_microscope"]], "load_feature_list_from_file() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.load_feature_list_from_file"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.load_images"]], "logger (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.logger"]], "max_entropy (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.max_entropy"]], "microscopes (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.microscopes"]], "move_stage() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.move_stage"]], "number_of_frames (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.number_of_frames"]], "pause_data_event (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.pause_data_event"]], "pause_data_ready_lock (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.pause_data_ready_lock"]], "pause_data_thread() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.pause_data_thread"]], "plot_pipe (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.plot_pipe"]], "pre_exposure_time (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.pre_exposure_time"]], "prepare_acquisition() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.prepare_acquisition"]], "release_pipe() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.release_pipe"]], "resume_data_thread() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.run_command"]], "run_data_process() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.run_data_process"]], "run_live_acquisition() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.run_live_acquisition"]], "show_img_pipe (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.show_img_pipe"]], "signal_thread (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.signal_thread"]], "simplified_data_process() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.simplified_data_process"]], "snap_image() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.snap_image"]], "start_time (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.start_time"]], "stop_acquisition (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.stop_acquisition"]], "stop_send_signal (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.stop_send_signal"]], "stop_stage() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.stop_stage"]], "terminate() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.terminate"]], "total_acquisition_count (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.total_acquisition_count"]], "total_image_count (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.total_image_count"]], "update_data_buffer() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.update_data_buffer"]], "update_ilastik_setting() (aslm.model.model.model method)": [[241, "aslm.model.model.Model.update_ilastik_setting"]], "virtual_microscopes (aslm.model.model.model attribute)": [[241, "aslm.model.model.Model.virtual_microscopes"]], "aslm.model.waveforms": [[242, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[243, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[244, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[245, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[246, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[247, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[248, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[249, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[250, "aslm.model.waveforms.square"]], "aslm.tools": [[251, "module-aslm.tools"]], "aslm.tools.beams": [[252, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[253, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[254, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[255, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[256, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[257, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[258, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[259, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[259, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[260, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[261, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[262, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[263, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[264, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[265, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[265, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[266, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[267, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[268, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[269, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[270, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[271, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[272, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[273, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[274, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[275, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[276, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[276, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[276, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[277, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[278, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[279, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[280, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[281, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[282, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[283, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[284, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[285, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[286, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[287, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[288, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[289, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[290, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[291, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[292, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[293, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[294, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[295, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[296, "module-aslm.view"]], "aslm.view.custom_widgets": [[297, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[298, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[299, "module-aslm.view.popups"]]}})