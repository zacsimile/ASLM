Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_experiment_config", "_autosummary/aslm.config.config.verify_waveform_constants", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.log_files", "_autosummary/aslm.log_files.filters", "_autosummary/aslm.log_files.filters.NonPerfFilter", "_autosummary/aslm.log_files.filters.PerformanceFilter", "_autosummary/aslm.log_files.log_functions", "_autosummary/aslm.log_files.log_functions.find_filename", "_autosummary/aslm.log_files.log_functions.log_setup", "_autosummary/aslm.log_files.log_functions.main_process_listener", "_autosummary/aslm.log_files.log_functions.update_nested_dict", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.concurrency.write_parameters", "_autosummary/aslm.model.concurrency.write_parameters.write_Params", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.SharedList", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.remove_empty_tiles", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.main_functions.identify_gpu", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.custom_widgets", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing/contributing_guidelines", "contributing/contributing_hardware", "contributing/contributing_home", "contributing/contributing_model", "contributing/sphinx_numpydoc", "feature_container/feature_container_home", "implementations", "index", "software_configuration", "software_installation", "supported_hardware", "userguide"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_experiment_config.rst", "_autosummary/aslm.config.config.verify_waveform_constants.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.log_files.rst", "_autosummary/aslm.log_files.filters.rst", "_autosummary/aslm.log_files.filters.NonPerfFilter.rst", "_autosummary/aslm.log_files.filters.PerformanceFilter.rst", "_autosummary/aslm.log_files.log_functions.rst", "_autosummary/aslm.log_files.log_functions.find_filename.rst", "_autosummary/aslm.log_files.log_functions.log_setup.rst", "_autosummary/aslm.log_files.log_functions.main_process_listener.rst", "_autosummary/aslm.log_files.log_functions.update_nested_dict.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.concurrency.write_parameters.rst", "_autosummary/aslm.model.concurrency.write_parameters.write_Params.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.SharedList.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.remove_empty_tiles.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.rst", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.main_functions.identify_gpu.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.custom_widgets.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing/contributing_guidelines.rst", "contributing/contributing_hardware.rst", "contributing/contributing_home.rst", "contributing/contributing_model.rst", "contributing/sphinx_numpydoc.rst", "feature_container/feature_container_home.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst", "userguide.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_experiment_config", "aslm.config.config.verify_waveform_constants", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.log_files", "aslm.log_files.filters", "aslm.log_files.filters.NonPerfFilter", "aslm.log_files.filters.PerformanceFilter", "aslm.log_files.log_functions", "aslm.log_files.log_functions.find_filename", "aslm.log_files.log_functions.log_setup", "aslm.log_files.log_functions.main_process_listener", "aslm.log_files.log_functions.update_nested_dict", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.concurrency.write_parameters", "aslm.model.concurrency.write_parameters.write_Params", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.dynamixel.dynamixel_functions", "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_dynamixel", "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.SharedList", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.remove_empty_tiles", "aslm.model.features.remove_empty_tiles.DetectTissueInStack", "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "aslm.model.features.remove_empty_tiles.detect_tissue", "aslm.model.features.remove_empty_tiles.detect_tissue2", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.main_functions.identify_gpu", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.custom_widgets", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "&lt;no title&gt;", "Feature Container", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Configuration", "Software Installation", "Supported Hardware", "User Guide"], "terms": {"modul": [0, 9, 13, 16, 18, 19, 25, 26, 49, 51, 56, 57, 64, 65, 68, 94, 95, 96, 97, 100, 101, 112, 117, 128, 133, 140, 145, 150, 172, 185, 215, 216, 236, 257, 269, 303, 304, 305, 306, 308, 315, 316, 317], "function": [1, 8, 13, 14, 20, 23, 24, 27, 32, 37, 39, 41, 44, 45, 47, 51, 53, 56, 57, 58, 59, 60, 61, 64, 65, 68, 70, 76, 78, 98, 105, 106, 108, 110, 118, 123, 124, 151, 158, 161, 164, 169, 175, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 201, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 245, 247, 248, 252, 256, 258, 259, 260, 262, 264, 266, 267, 268, 269, 270, 272, 273, 274, 278, 283, 287, 292, 294, 295, 296, 297, 298, 299, 300, 311, 315, 317, 318, 319, 321], "manag": [2, 5, 6, 7, 8, 14, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 147, 149, 152, 155, 157, 162, 174, 179, 184, 193, 196, 197, 199, 201, 207, 208, 210, 320, 321], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 24, 57, 216, 238, 241, 243], "dictionari": [2, 5, 6, 8, 11, 21, 22, 24, 51, 56, 57, 81, 88, 89, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 142, 144, 152, 155, 157, 159, 160, 162, 163, 165, 168, 170, 174, 176, 177, 179, 181, 183, 184, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 211, 212, 215, 216, 219, 221, 223, 225, 238, 241, 243, 245, 247, 263, 274, 276, 277, 285, 299, 301, 302, 310, 316, 319], "recurs": [2, 24, 57, 219], "paramet": [2, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 21, 22, 23, 24, 28, 29, 30, 33, 34, 35, 48, 53, 57, 58, 59, 60, 70, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 111, 114, 116, 119, 120, 122, 124, 127, 130, 132, 135, 137, 139, 142, 144, 147, 149, 152, 153, 155, 157, 159, 160, 162, 163, 165, 166, 168, 170, 171, 174, 176, 177, 179, 181, 182, 183, 184, 189, 190, 220, 223, 234, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 266, 267, 268, 269, 272, 274, 275, 276, 277, 279, 280, 282, 284, 285, 286, 288, 289, 290, 291, 293, 295, 296, 297, 299, 301, 302, 310, 315, 318, 319], "multiprocess": [2, 5, 6, 7, 8, 23, 62, 80, 83, 85, 149, 152, 155, 157, 162, 179, 247], "share": [2, 5, 6, 7, 8, 51, 57, 62, 63, 64, 116, 216, 218, 247, 311, 321], "object": [2, 5, 6, 7, 8, 11, 13, 14, 15, 51, 53, 54, 56, 57, 58, 62, 63, 64, 67, 70, 72, 75, 77, 78, 85, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 111, 114, 116, 119, 120, 122, 130, 135, 137, 142, 144, 147, 149, 152, 153, 155, 157, 159, 162, 163, 165, 170, 174, 176, 179, 181, 182, 183, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 209, 211, 212, 216, 218, 223, 225, 226, 227, 231, 234, 238, 240, 245, 247, 263, 265, 268, 271, 279, 282, 284, 285, 286, 291, 297, 310, 311, 317, 318, 319, 321], "e": [2, 4, 5, 6, 7, 8, 11, 34, 57, 75, 105, 106, 108, 110, 120, 125, 127, 130, 132, 153, 163, 174, 176, 179, 193, 194, 201, 218, 221, 223, 241, 288, 310, 316, 320, 321], "g": [2, 5, 6, 7, 8, 11, 57, 75, 105, 106, 108, 110, 120, 125, 127, 130, 132, 139, 153, 163, 174, 176, 179, 193, 194, 201, 221, 223, 241, 288, 310, 316, 320, 321], "dict": [2, 5, 6, 7, 8, 11, 13, 14, 24, 28, 70, 72, 75, 81, 103, 105, 106, 108, 110, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 139, 142, 144, 152, 155, 157, 159, 160, 162, 163, 165, 168, 170, 174, 176, 177, 179, 181, 183, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 211, 212, 215, 223, 225, 245, 247, 263, 268, 274, 276, 277, 299, 301, 302, 310], "between": [2, 5, 6, 7, 8, 29, 57, 70, 72, 75, 108, 174, 176, 179, 194, 200, 208, 210, 218, 234, 259, 260, 266, 288, 310, 319, 321], "process": [2, 5, 6, 7, 8, 23, 54, 57, 62, 63, 65, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 209, 211, 216, 219, 225, 226, 227, 247, 311, 316], "we": [2, 6, 21, 53, 54, 56, 57, 60, 63, 70, 72, 75, 105, 106, 124, 127, 183, 223, 238, 241, 243, 245, 310, 311, 312, 313, 316, 319, 320, 321], "ar": [2, 6, 8, 11, 13, 24, 51, 56, 57, 58, 75, 91, 105, 106, 108, 110, 116, 152, 155, 157, 159, 162, 165, 168, 170, 183, 184, 187, 189, 197, 200, 203, 207, 208, 209, 210, 211, 212, 215, 216, 219, 221, 223, 234, 241, 245, 247, 259, 260, 275, 282, 310, 311, 315, 316, 317, 319, 320, 321], "ad": [2, 6, 8, 53, 56, 57, 152, 216, 234, 284, 291, 313, 316, 318], "str": [2, 3, 4, 6, 11, 13, 14, 21, 22, 28, 29, 30, 33, 35, 53, 57, 58, 59, 60, 70, 72, 73, 75, 85, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 111, 114, 116, 119, 120, 122, 124, 125, 127, 130, 132, 135, 137, 139, 142, 144, 147, 149, 152, 153, 155, 157, 159, 162, 163, 165, 166, 168, 170, 171, 174, 176, 179, 181, 183, 184, 192, 193, 194, 195, 199, 201, 209, 211, 212, 215, 218, 219, 220, 221, 223, 234, 238, 241, 243, 245, 247, 261, 266, 269, 274, 275, 276, 277, 279, 280, 282, 285, 293, 299, 301, 315], "name": [2, 6, 11, 13, 14, 18, 19, 51, 53, 54, 56, 57, 58, 59, 60, 70, 72, 75, 85, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 111, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 139, 142, 144, 147, 149, 152, 155, 157, 159, 162, 163, 165, 168, 170, 174, 176, 179, 183, 184, 209, 211, 212, 218, 219, 221, 223, 234, 245, 247, 266, 269, 275, 277, 299, 310, 311, 315, 316, 319, 321], "insert": [2, 57, 218, 316, 321], "return": [2, 3, 4, 5, 6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 34, 45, 48, 51, 53, 54, 56, 57, 63, 70, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 103, 105, 106, 108, 110, 111, 114, 116, 119, 120, 122, 124, 125, 127, 130, 132, 139, 142, 144, 147, 149, 152, 153, 155, 157, 159, 160, 162, 163, 165, 166, 168, 170, 171, 174, 176, 177, 179, 181, 182, 183, 184, 189, 190, 218, 220, 223, 238, 240, 241, 243, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 266, 267, 268, 269, 272, 274, 276, 277, 279, 280, 282, 284, 285, 286, 288, 289, 290, 291, 295, 296, 297, 299, 301, 302, 311, 315, 316], "type": [2, 3, 5, 6, 11, 13, 14, 15, 18, 19, 21, 24, 29, 30, 34, 48, 57, 70, 72, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 99, 103, 105, 106, 108, 110, 111, 114, 116, 119, 120, 122, 124, 125, 127, 130, 132, 135, 137, 139, 142, 144, 147, 149, 152, 153, 155, 157, 159, 160, 162, 163, 165, 166, 168, 170, 171, 174, 176, 177, 179, 181, 182, 183, 184, 187, 189, 190, 192, 193, 196, 201, 208, 209, 211, 212, 215, 218, 220, 223, 240, 241, 243, 245, 247, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 266, 267, 268, 269, 272, 274, 276, 277, 279, 280, 282, 284, 286, 288, 289, 290, 291, 295, 296, 297, 301, 302, 310, 315, 316, 318, 319], "none": [2, 13, 14, 22, 28, 29, 30, 40, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 70, 72, 75, 105, 106, 108, 110, 116, 142, 144, 152, 155, 157, 159, 162, 165, 168, 170, 181, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 207, 208, 209, 210, 211, 212, 214, 218, 220, 223, 225, 226, 238, 240, 241, 243, 245, 247, 263, 276, 279, 284, 291, 293, 301, 315, 319], "exampl": [2, 3, 6, 21, 51, 56, 57, 64, 65, 73, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 152, 157, 159, 162, 165, 168, 170, 181, 182, 184, 223, 249, 250, 251, 252, 253, 254, 255, 256, 259, 275, 282, 286, 297, 311, 312, 315, 316, 319, 320, 321], "establish": 3, "program": [3, 13, 51, 56, 218, 311], "home": [3, 119], "directori": [3, 75, 201, 221, 223, 241, 274, 275, 277, 293, 319, 320], "appdata": [3, 310, 319], "local": [3, 14, 33, 57, 310, 319, 320], "window": [3, 228, 274, 310, 316, 319, 320, 321], "mac": [3, 310, 319, 320], "linux": [3, 310, 319, 320], "path": [3, 4, 5, 22, 57, 75, 221, 269, 274, 275, 276, 282, 285, 293, 311, 320], "c": [3, 57, 70, 72, 75, 163, 243, 310, 319, 320], "user": [3, 57, 219, 247, 274, 286, 310, 313, 316, 318, 319, 320, 321], "usernam": [3, 320], "get": [4, 11, 14, 56, 57, 70, 73, 103, 105, 106, 108, 110, 147, 149, 152, 168, 183, 189, 201, 215, 245, 247, 299, 311, 320], "variou": [4, 59, 60, 187, 245, 310, 319, 321], "configur": [4, 5, 6, 7, 8, 11, 22, 70, 72, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 177, 179, 181, 183, 184, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 215, 216, 219, 221, 223, 225, 234, 240, 241, 243, 245, 247, 285, 311, 316, 318, 320, 321, 322], "file": [4, 5, 6, 7, 22, 57, 70, 72, 73, 75, 103, 105, 106, 108, 110, 157, 219, 221, 223, 238, 240, 241, 243, 247, 269, 275, 276, 277, 282, 285, 293, 302, 310, 311, 316, 318, 320, 321], "us": [4, 11, 13, 18, 19, 34, 51, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 70, 110, 111, 157, 168, 181, 182, 183, 184, 187, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 223, 225, 226, 227, 228, 229, 234, 241, 243, 245, 247, 249, 250, 251, 252, 253, 254, 256, 280, 282, 293, 310, 311, 312, 315, 316, 319, 320, 321], "configuration_path": [4, 285], "contain": [4, 5, 7, 8, 22, 28, 29, 30, 57, 159, 160, 162, 163, 165, 168, 170, 184, 187, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 215, 216, 219, 221, 225, 226, 228, 229, 245, 247, 274, 282, 291, 310, 315, 318, 319, 322], "global": [4, 14, 33, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 147, 149, 152, 155, 157, 162, 174, 179, 247], "microscop": [4, 8, 11, 70, 72, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 183, 184, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 211, 212, 225, 226, 227, 234, 247, 299, 311, 316, 318, 320, 321], "i": [4, 13, 14, 18, 19, 24, 30, 34, 38, 51, 53, 56, 57, 58, 60, 64, 65, 70, 75, 79, 80, 103, 105, 106, 108, 110, 116, 119, 120, 122, 124, 127, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 182, 183, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 223, 225, 226, 227, 228, 229, 234, 241, 245, 247, 251, 259, 260, 261, 263, 275, 277, 285, 286, 289, 291, 293, 297, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321], "hardwar": [4, 57, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 179, 223, 245, 313, 316, 318, 320, 322], "setup": [4, 22, 70, 182, 245, 310, 318, 319, 321], "experiment_path": [4, 285], "per": [4, 13, 51, 56, 57, 70, 72, 75, 119, 130, 132, 157, 203, 316, 321], "experi": [4, 7, 70, 72, 75, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 234, 240, 241, 243, 277, 285, 311, 316, 320], "waveform_constants_path": [4, 285], "remot": [4, 8, 11, 90, 114, 116, 142, 144, 157, 245, 251, 285, 317, 321], "focu": [4, 8, 11, 90, 114, 116, 142, 144, 157, 174, 176, 179, 187, 189, 201, 238, 245, 247, 251, 289, 310, 316, 321], "all": [4, 7, 13, 14, 29, 51, 53, 56, 57, 58, 59, 60, 75, 108, 110, 114, 116, 152, 155, 157, 159, 162, 165, 168, 170, 183, 201, 203, 218, 245, 247, 275, 282, 288, 310, 311, 315, 316, 319, 321], "magnif": [4, 174, 176, 179, 194], "rest_api_path": [4, 285], "rest": [4, 108, 285, 310, 318], "api": [4, 57, 80, 105, 106, 108, 111, 152, 162, 285, 310, 318, 321], "waveform_templates_path": [4, 285], "waveform": [4, 8, 114, 116, 130, 132, 142, 144, 157, 245, 247, 285, 299, 311, 318, 321], "templat": [4, 57, 285, 299, 318], "kwarg": [5, 13, 14, 51, 53, 56, 57, 58, 59, 60, 64, 65, 78, 209, 211, 212, 232, 247, 315], "load": [5, 22, 57, 81, 103, 105, 106, 108, 110, 119, 168, 216, 221, 245, 247, 269, 276, 282, 311, 318], "list": [5, 11, 28, 29, 44, 57, 89, 152, 155, 157, 159, 162, 165, 168, 170, 181, 184, 187, 189, 193, 194, 195, 196, 198, 200, 201, 207, 208, 210, 213, 214, 216, 218, 219, 220, 221, 225, 226, 227, 234, 238, 243, 245, 247, 266, 267, 268, 276, 279, 291, 310, 315, 316, 318, 319], "config_dict": 5, "amalgam": 5, "input": [5, 44, 57, 219, 229, 245, 274, 284, 285, 297, 321], "config_nam": 6, "new_config": 6, "bool": [6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 33, 35, 53, 57, 58, 59, 60, 70, 72, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 116, 119, 122, 124, 127, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 182, 183, 184, 187, 192, 193, 195, 196, 197, 198, 200, 201, 207, 209, 210, 211, 212, 213, 225, 226, 227, 228, 229, 234, 238, 245, 247, 259, 261, 277, 286, 291, 293, 315], "read": [6, 57, 70, 72, 75, 124, 127, 174, 176, 179, 319], "new": [6, 11, 23, 24, 57, 75, 152, 157, 159, 162, 165, 168, 170, 193, 197, 201, 203, 234, 245, 267, 274, 279, 291, 311, 313, 315, 316, 318, 319, 320], "updat": [6, 8, 24, 57, 116, 192, 193, 195, 196, 201, 209, 211, 212, 216, 221, 226, 245, 247, 263, 279, 291, 310, 318, 320], "info": [6, 11, 245], "subdictionari": 6, "replac": [6, 57, 221, 310, 319], "valu": [6, 8, 11, 13, 21, 24, 28, 48, 51, 56, 57, 105, 106, 111, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 187, 189, 190, 192, 193, 195, 196, 197, 198, 200, 201, 209, 211, 212, 213, 218, 220, 221, 228, 234, 241, 250, 288, 297, 310, 311, 315, 316, 319, 320], "yaml": [6, 7, 22, 221, 276, 277, 311, 319], "true": [6, 13, 18, 19, 21, 31, 51, 53, 56, 57, 58, 59, 60, 105, 106, 108, 119, 124, 127, 152, 155, 157, 159, 162, 165, 168, 170, 184, 195, 209, 211, 213, 215, 225, 226, 227, 228, 245, 247, 259, 277, 286, 293, 315, 316], "fals": [6, 13, 18, 19, 21, 33, 51, 53, 54, 56, 57, 58, 59, 60, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 105, 106, 108, 110, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 183, 184, 195, 201, 209, 210, 211, 212, 218, 225, 226, 228, 229, 234, 245, 247, 259, 277, 291, 315], "verifi": [7, 8, 152, 155, 157, 159, 162, 165, 168, 170], "waveform_const": [7, 114, 116], "constant": [8, 114, 116, 168, 203, 285, 318, 321], "thi": [8, 13, 14, 18, 19, 22, 23, 24, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 70, 72, 75, 105, 106, 108, 116, 144, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 223, 225, 226, 227, 228, 229, 241, 245, 247, 261, 266, 267, 268, 269, 274, 275, 288, 289, 293, 299, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321], "check": [8, 13, 21, 57, 78, 119, 122, 124, 127, 174, 179, 187, 201, 225, 226, 247], "ensur": [8, 152, 155, 157, 159, 162, 165, 168, 170, 196, 197, 199, 200, 215, 245, 311], "given": [8, 13, 34, 51, 56, 57, 73, 105, 106, 108, 110, 119, 122, 124, 127, 130, 132, 144, 215, 218, 219, 221, 228, 291, 315, 316, 320], "conform": 8, "expect": [8, 53, 56, 58, 59, 64, 70, 72, 75, 124, 152, 155, 157, 159, 162, 165, 168, 170, 201, 209, 211, 212, 214, 310, 311, 319], "structur": [8, 43, 57, 216, 243, 247, 316], "It": [8, 13, 14, 18, 19, 24, 51, 56, 57, 70, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 208, 209, 210, 211, 213, 214, 215, 216, 218, 221, 225, 226, 227, 228, 245, 274, 310, 315, 316, 318, 319, 320, 321], "relat": [8, 14, 184, 187, 192, 193, 194, 196, 198, 201, 209, 211, 212, 280, 310, 319], "devic": [8, 77, 78, 79, 80, 81, 85, 87, 88, 89, 90, 91, 92, 93, 182, 183, 184, 187, 189, 192, 196, 203, 209, 210, 211, 212, 245, 247, 310, 317, 319, 320, 321], "laser": [8, 11, 89, 116, 147, 183, 245, 253, 254, 256, 310, 316, 317, 318], "galvo": [8, 11, 79, 88, 114, 116, 157, 183, 245, 250, 252, 285, 311], "multipl": [8, 13, 33, 35, 44, 51, 56, 57, 58, 197, 241, 315, 321], "The": [8, 11, 13, 14, 15, 18, 19, 51, 56, 57, 64, 65, 70, 78, 116, 124, 132, 137, 144, 152, 168, 174, 176, 179, 181, 182, 183, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 221, 225, 226, 227, 228, 229, 245, 251, 255, 263, 272, 288, 290, 293, 297, 310, 311, 315, 318, 319, 320, 321], "If": [8, 18, 19, 48, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 70, 72, 75, 103, 105, 106, 108, 110, 116, 119, 122, 124, 127, 152, 155, 157, 159, 162, 165, 168, 170, 176, 189, 215, 218, 220, 223, 225, 226, 228, 247, 259, 282, 285, 310, 311, 315, 316, 319, 320, 321], "miss": [8, 57, 215], "default": [8, 11, 13, 14, 22, 51, 53, 56, 57, 105, 106, 108, 110, 120, 127, 152, 155, 157, 159, 162, 165, 168, 170, 187, 192, 194, 195, 199, 201, 203, 207, 208, 209, 210, 211, 212, 215, 218, 223, 225, 226, 227, 228, 229, 245, 247, 253, 277, 280, 285, 310, 311, 315, 316, 319, 321], "empti": [8, 11, 57, 124, 127, 152, 155, 157, 159, 162, 165, 168, 170, 187, 189, 194, 207, 208, 210, 218, 226, 227, 319], "necessari": [8, 57, 114, 116, 119, 124, 127, 196, 208, 210, 225, 226, 245, 272, 274, 310, 311, 312, 316, 319, 321], "valid": [8, 219, 220], "convert": [8, 57, 103, 105, 108, 110, 162, 165, 219, 220, 238, 240, 241, 243, 280, 291], "float": [8, 11, 13, 28, 29, 30, 33, 34, 35, 48, 51, 53, 56, 57, 58, 59, 60, 70, 72, 75, 103, 105, 106, 108, 110, 114, 116, 119, 120, 124, 125, 127, 130, 132, 139, 142, 144, 152, 155, 157, 159, 162, 165, 166, 168, 170, 174, 176, 179, 181, 182, 183, 189, 190, 193, 194, 196, 201, 225, 226, 228, 229, 234, 238, 245, 247, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 288, 289, 290, 296, 297, 310], "possibl": [8, 54, 57, 63, 228, 251, 313, 316, 319], "non": [8, 13, 18, 24, 51, 56, 57, 285], "exist": [8, 57, 119, 122, 124, 127, 174, 179, 209, 211, 212, 247, 276, 279, 311, 316], "zoom": [8, 84, 93, 192, 194, 234, 310, 318], "level": [8, 57, 70, 194, 301, 315], "remov": [8, 14, 57, 218, 227, 310, 316, 319], "from": [8, 11, 13, 14, 22, 23, 33, 36, 42, 51, 53, 56, 57, 58, 62, 64, 65, 70, 72, 75, 78, 81, 103, 105, 106, 108, 110, 124, 127, 139, 149, 157, 162, 165, 189, 195, 207, 208, 209, 210, 211, 212, 218, 221, 227, 240, 241, 243, 245, 247, 251, 269, 274, 275, 276, 280, 288, 293, 295, 296, 297, 301, 310, 311, 312, 315, 316, 318, 320, 321], "class": [10, 11, 12, 13, 14, 15, 17, 18, 19, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 167, 168, 169, 170, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 217, 218, 222, 223, 224, 225, 226, 227, 230, 231, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 264, 265, 269, 270, 271, 281, 282, 311, 312, 315], "base": [11, 13, 14, 15, 18, 19, 24, 29, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 67, 70, 72, 75, 77, 103, 105, 106, 108, 110, 111, 114, 116, 119, 122, 124, 127, 130, 132, 134, 135, 137, 139, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 182, 183, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 218, 221, 223, 225, 226, 227, 229, 231, 234, 238, 240, 241, 243, 245, 247, 265, 271, 282, 289, 291, 310, 311, 312, 320, 321], "__init__": [11, 13, 14, 15, 18, 19, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 67, 70, 72, 75, 77, 78, 103, 105, 106, 108, 110, 111, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 139, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 182, 183, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 207, 208, 209, 210, 211, 212, 218, 223, 225, 226, 227, 231, 234, 238, 240, 241, 243, 245, 247, 265, 271, 282, 315, 316], "initi": [11, 13, 14, 15, 18, 19, 22, 51, 54, 56, 57, 62, 63, 70, 72, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 111, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 153, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 182, 183, 184, 187, 189, 193, 200, 201, 209, 211, 212, 218, 225, 226, 238, 245, 247, 319], "method": [11, 13, 14, 15, 18, 19, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 67, 70, 72, 75, 77, 103, 105, 106, 108, 110, 111, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 139, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 182, 183, 184, 189, 203, 205, 223, 229, 231, 234, 238, 240, 241, 243, 245, 247, 265, 271, 282, 315, 316], "attribut": [11, 13, 14, 15, 51, 56, 57, 58, 70, 72, 75, 103, 105, 106, 108, 110, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 182, 183, 184, 238, 240, 241, 243, 245, 247, 282, 315], "change_microscop": 11, "accord": [11, 24, 57, 70, 72, 75, 105, 106, 108, 110, 218, 315], "result": [11, 56, 57, 65, 78, 105, 106, 108, 174, 176, 179, 187, 209, 211, 219, 228, 245, 268, 311], "get_microscope_configuration_dict": 11, "microscope_configuration_dict": 11, "get_stage_position_limit": 11, "suffix": 11, "posit": [11, 28, 30, 57, 70, 72, 75, 119, 122, 124, 127, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 181, 184, 189, 193, 194, 196, 201, 225, 226, 227, 234, 238, 245, 247, 263, 288, 289, 291, 310, 319, 321], "limit": [11, 53, 57, 58, 59, 60, 152, 155, 157, 159, 162, 165, 168, 170, 176, 245, 311, 315], "stage": [11, 83, 92, 174, 176, 179, 181, 183, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 203, 225, 226, 234, 238, 245, 247, 311, 312, 316, 318], "_min": 11, "_max": 11, "position_limit": 11, "depend": [11, 57, 119, 289, 316, 318], "min": [11, 28, 30, 57, 105, 130, 132, 142, 144, 310, 319], "max": [11, 57, 105, 108, 130, 132, 142, 144, 310, 319, 321], "x": [11, 30, 48, 57, 70, 72, 75, 103, 105, 106, 108, 110, 152, 155, 157, 159, 162, 165, 168, 170, 190, 201, 234, 238, 247, 259, 260, 279, 280, 282, 288, 289, 290, 291, 297, 310, 319], "2000": [11, 57, 310, 321], "y": [11, 30, 45, 57, 70, 72, 75, 103, 105, 106, 108, 110, 152, 155, 157, 159, 162, 165, 168, 170, 190, 201, 234, 238, 247, 279, 280, 282, 289, 291, 297, 310, 319], "z": [11, 45, 57, 70, 72, 75, 139, 152, 155, 157, 159, 162, 165, 168, 170, 196, 201, 203, 225, 226, 234, 238, 259, 260, 261, 289, 291, 297, 310, 316, 319], "theta": [11, 152, 155, 157, 159, 162, 165, 168, 170, 201, 238, 289, 310, 319], "0": [11, 29, 30, 34, 40, 57, 70, 78, 80, 88, 89, 92, 105, 106, 108, 120, 125, 127, 130, 132, 152, 155, 157, 159, 162, 165, 166, 168, 170, 174, 176, 179, 182, 183, 194, 218, 225, 226, 228, 229, 234, 243, 247, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 280, 288, 293, 297, 301, 310, 315, 317, 319], "f": [11, 56, 57, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 189, 225, 226, 238, 289, 291, 310, 311, 317, 319, 321], "properti": [11, 13, 51, 56, 57, 70, 72, 75, 103, 105, 106, 108, 110, 111, 139, 147, 149, 209, 211, 212, 238, 240, 241, 243, 282, 311, 315, 316], "camera_config_dict": 11, "camera": [11, 28, 30, 57, 80, 85, 114, 116, 130, 132, 142, 144, 157, 183, 184, 198, 245, 247, 249, 310, 317, 318], "camera_set": 11, "set": [11, 13, 33, 51, 53, 56, 57, 70, 72, 75, 103, 105, 106, 108, 110, 111, 116, 119, 124, 127, 135, 137, 152, 155, 157, 162, 165, 168, 174, 176, 179, 182, 184, 187, 192, 207, 208, 209, 210, 211, 212, 218, 221, 245, 247, 291, 310, 312, 315, 316, 319, 320], "camera_flip_flag": 11, "flip": [11, 234], "flag": [11, 57, 105, 106, 108, 110, 116, 119, 122, 124, 127, 182, 183, 184, 193, 195, 201, 207, 208, 210, 218, 227, 245, 247, 289, 320], "flip_flag": 11, "camera_pixel": 11, "pixel": [11, 28, 29, 30, 34, 70, 72, 75, 103, 105, 106, 108, 110, 247, 259, 260, 261, 280, 297], "x_pixel": [11, 103, 105, 106, 108, 110, 319], "int": [11, 28, 29, 30, 33, 35, 53, 57, 58, 59, 60, 70, 72, 75, 78, 80, 88, 89, 92, 103, 105, 106, 108, 110, 111, 114, 116, 119, 120, 122, 124, 125, 127, 130, 132, 135, 137, 142, 144, 152, 153, 155, 157, 159, 160, 162, 165, 166, 168, 170, 174, 176, 177, 179, 182, 183, 184, 189, 193, 195, 196, 199, 201, 210, 223, 225, 226, 238, 243, 245, 247, 253, 255, 261, 279, 280, 288, 289, 290, 293, 297, 299, 310, 315], "number": [11, 13, 51, 56, 57, 70, 72, 75, 78, 103, 105, 106, 108, 110, 114, 116, 119, 124, 127, 130, 132, 142, 144, 152, 157, 160, 163, 170, 171, 176, 177, 184, 189, 193, 195, 199, 201, 210, 218, 223, 225, 226, 228, 245, 247, 288, 289, 290, 293, 299, 310, 311, 315, 318], "y_pixel": [11, 103, 105, 106, 108, 110, 319], "channels_info": 11, "channel": [11, 70, 72, 75, 114, 116, 130, 132, 142, 144, 157, 170, 183, 189, 193, 197, 201, 223, 245, 247, 319, 321], "popul": [11, 110], "combobox": 11, "avail": [11, 13, 51, 56, 57, 64, 119, 122, 124, 127, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 184, 223, 245, 286, 310, 311, 316, 320, 321], "488nm": [11, 319], "561nm": 11, "642nm": [11, 319], "filter": [11, 82, 87, 119, 120, 122, 124, 125, 127, 245, 317, 318], "align": [11, 57, 124, 127, 152, 155, 157, 159, 162, 165, 168, 170, 319], "gfp": [11, 127, 319], "ff01": [11, 319], "515": [11, 319], "30": [11, 57, 297, 310, 319], "32": [11, 57, 223, 319], "daq_sample_r": 11, "daq": [11, 86, 89, 91, 142, 144, 157, 183, 245, 247, 310], "sampl": [11, 114, 116, 130, 132, 142, 144, 157, 168, 259, 260, 261, 316, 317, 321], "rate": [11, 105, 106, 108, 110, 114, 116, 120, 125, 127, 130, 132, 142, 144, 153, 157, 166], "filter_wheel_setting_dict": 11, "wheel": [11, 82, 87, 119, 120, 122, 124, 125, 127, 245, 317, 318], "galvo_num": 11, "galvo_parameter_dict": 11, "lasers_info": 11, "laser_list": 11, "microscope_config": [11, 247], "microscope_nam": [11, 79, 85, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 114, 116, 119, 122, 124, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 183, 245, 247], "number_of_channel": 11, "remote_focus_dict": 11, "delay_perc": [11, 105, 319], "pulse_perc": [11, 105, 319], "remote_focus_paramet": 11, "percent": [11, 130, 132, 142, 144, 152, 157, 234, 249, 251, 252, 254, 256, 310], "delai": [11, 114, 116, 119, 124, 130, 132, 142, 144, 157, 162, 174, 176, 179, 245, 251, 254], "puls": [11, 114, 116, 152, 254, 319, 321], "stage_default_posit": 11, "current": [11, 13, 29, 51, 56, 57, 103, 105, 106, 108, 110, 111, 157, 168, 170, 174, 176, 179, 183, 189, 192, 193, 196, 201, 203, 207, 208, 209, 210, 211, 218, 223, 234, 245, 247, 289, 310, 318, 319], "stage_flip_flag": 11, "stage_setting_dict": 11, "stage_step": 11, "step": [11, 57, 70, 72, 75, 103, 105, 106, 108, 110, 184, 187, 189, 192, 193, 194, 195, 196, 197, 200, 201, 203, 207, 208, 209, 211, 212, 310, 316, 319, 320], "size": [11, 28, 29, 30, 57, 70, 72, 75, 103, 105, 106, 108, 110, 189, 193, 201, 203, 223, 238, 240, 241, 243, 247, 259, 260, 261, 280, 288, 310, 319], "same": [11, 13, 28, 30, 51, 56, 57, 174, 176, 179, 187, 243, 277, 282, 315, 319], "group": [13, 51, 56], "target": [13, 14, 29, 51, 56, 64, 65, 162, 174, 176, 179, 194, 247, 263], "arg": [13, 14, 51, 53, 56, 57, 58, 59, 60, 64, 65, 78, 79, 181, 193, 208, 209, 210, 211, 213, 214, 219, 221, 247, 266, 285, 286, 315, 316], "daemon": [13, 51, 56], "thread": [13, 14, 15, 51, 54, 56, 58, 64, 65, 82, 83, 84, 86, 87, 91, 93, 184, 189, 196, 199, 200, 201, 247], "A": [13, 14, 15, 18, 19, 51, 56, 57, 64, 65, 152, 155, 157, 159, 162, 165, 168, 170, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 215, 216, 218, 219, 220, 221, 225, 226, 227, 228, 234, 276, 282, 288, 297, 311, 316, 319, 321], "custom": [13, 14, 15, 18, 19, 218, 225, 226, 318, 321], "self": [13, 56, 57, 105, 106, 114, 116, 124, 155, 162, 174, 176, 179, 189, 223, 234, 311, 315, 316], "lock": [13, 15, 57, 116, 200, 247], "capabl": [13, 15, 193, 209, 211], "extend": [13, 208, 210, 218, 226], "python": [13, 18, 19, 22, 51, 54, 56, 57, 63, 70, 72, 75, 240, 241, 243, 269, 275, 301, 310, 315, 316, 318, 319], "provid": [13, 14, 57, 111, 187, 192, 193, 195, 196, 197, 198, 199, 201, 207, 208, 209, 210, 211, 212, 218, 285, 310, 311, 312, 316, 319, 321], "abil": 13, "unlock": 13, "explicitli": [13, 245], "scenario": 13, "where": [13, 51, 56, 57, 209, 211, 212, 213, 214, 219, 221, 223, 226, 247, 310, 312, 316, 319, 320], "synchron": [13, 14, 15, 199, 200, 321], "requir": [13, 38, 57, 91, 152, 155, 157, 159, 162, 165, 168, 170, 187, 192, 214, 225, 226, 228, 247, 315, 317, 320, 321], "addit": [13, 22, 57, 72, 119, 124, 152, 187, 193, 209, 211, 218, 247], "over": [13, 14, 29, 57, 219, 320], "execut": [13, 181, 187, 193, 195, 196, 200, 201, 207, 208, 209, 210, 211, 212, 227, 272, 316], "wait": [13, 51, 56, 64, 105, 106, 108, 110, 116, 119, 124, 127, 152, 162, 165, 181, 200, 208, 210, 211, 245, 247, 316], "allow": [13, 14, 18, 19, 53, 57, 58, 59, 60, 193, 195, 199, 200, 201, 207, 209, 211, 212, 247, 310, 311, 316, 318, 319, 320, 321], "whether": [13, 14, 51, 56, 57, 80, 103, 105, 106, 108, 110, 152, 155, 157, 159, 162, 165, 168, 170, 187, 193, 195, 196, 201, 207, 209, 210, 211, 212, 223, 225, 226, 247, 293], "islock": 13, "threadgroup": [13, 51, 56], "option": [13, 14, 22, 29, 51, 54, 56, 57, 108, 116, 152, 155, 157, 159, 162, 165, 168, 170, 187, 192, 194, 195, 199, 201, 207, 208, 209, 210, 211, 212, 215, 218, 219, 221, 225, 226, 227, 228, 229, 245, 253, 310, 311, 315, 316], "callabl": [13, 14, 51, 53, 54, 56, 58, 59, 60, 63], "tupl": [13, 14, 35, 51, 56, 57, 70, 72, 75, 78, 162, 209, 211, 213, 214, 216, 219, 221, 238, 240, 241, 243, 280, 282, 295], "argument": [13, 14, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 70, 72, 75, 78, 119, 124, 127, 193, 208, 209, 210, 211, 212, 213, 214, 219, 221, 247, 266, 284, 285, 315, 316], "keyword": [13, 14, 51, 56, 57, 64, 70, 72, 75, 209, 211, 212, 247, 315], "getnam": [13, 51, 56], "string": [13, 51, 53, 54, 56, 57, 75, 119, 122, 124, 127, 135, 142, 168, 170, 176, 195, 218, 219, 220, 223, 247, 276, 277, 301, 315], "identif": [13, 51, 56, 218], "purpos": [13, 51, 56, 57, 65, 114, 116, 168, 320], "onli": [13, 51, 56, 57, 116, 152, 157, 203, 249, 297, 310, 311, 315, 319, 320, 321], "deprec": [13, 51, 56, 57], "instead": [13, 51, 56, 57, 65, 310, 315], "isdaemon": [13, 51, 56], "is_al": [13, 51, 56], "aliv": [13, 51, 56], "just": [13, 51, 56, 57, 58, 316], "befor": [13, 51, 56, 57, 135, 137, 165, 181, 187, 193, 197, 201, 211, 218, 247, 291, 315, 316, 320], "run": [13, 14, 24, 51, 53, 56, 58, 59, 60, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 116, 184, 189, 207, 208, 209, 210, 211, 247, 310, 311, 316, 319, 320, 321], "start": [13, 18, 19, 30, 51, 53, 56, 57, 108, 116, 130, 132, 142, 144, 152, 168, 184, 193, 201, 218, 245, 247, 251, 289, 293, 310, 311, 315, 316, 320, 321], "until": [13, 51, 56, 64, 116, 124, 152, 157, 159, 162, 165, 168, 170, 184, 200, 245, 247], "after": [13, 51, 56, 57, 111, 174, 179, 184, 192, 196, 201, 211, 247, 311, 315, 316, 319, 320], "termin": [13, 51, 56, 184, 207, 245, 247, 311, 319, 320, 321], "see": [13, 51, 53, 56, 57, 64, 65, 241, 302, 311, 315, 316, 318, 320], "also": [13, 51, 56, 57, 216, 223, 226, 311, 315, 320, 321], "enumer": [13, 51, 56], "join": [13, 51, 56, 65], "timeout": [13, 51, 56, 120, 125, 166, 176, 182, 247], "block": [13, 51, 56, 57, 70, 152, 157, 159, 162, 165, 168, 170, 308, 315], "call": [13, 14, 51, 53, 54, 56, 57, 64, 65, 70, 116, 159, 189, 197, 214, 218, 223, 225, 226, 247, 310, 319, 320], "whose": [13, 18, 19, 51, 56, 57], "either": [13, 51, 56, 57, 110, 195, 215, 310, 315, 319], "normal": [13, 39, 42, 51, 56, 57, 103, 105, 106, 108, 110, 183, 245, 319], "through": [13, 18, 19, 24, 48, 51, 56, 57, 193, 201, 208, 209, 210, 211, 212, 221, 225, 234, 245, 316], "an": [13, 24, 28, 29, 30, 33, 35, 36, 48, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 78, 103, 105, 106, 108, 110, 152, 155, 157, 159, 162, 165, 168, 170, 176, 187, 194, 195, 201, 207, 208, 210, 218, 226, 227, 228, 229, 238, 241, 245, 247, 279, 285, 288, 291, 297, 302, 310, 311, 312, 315, 316, 319, 321], "unhandl": [13, 51, 56], "except": [13, 14, 51, 53, 56, 57, 58, 59, 60, 65, 78, 152, 155, 157, 159, 162, 165, 168, 170, 315], "occur": [13, 51, 56, 57, 152, 312], "when": [13, 51, 54, 56, 57, 65, 184, 200, 207, 208, 209, 210, 211, 212, 214, 218, 245, 247, 310, 311, 316, 319, 320, 321], "present": [13, 30, 51, 56, 103, 105, 106, 108, 110, 176, 215, 218, 219], "should": [13, 18, 19, 51, 56, 57, 64, 65, 105, 106, 108, 124, 152, 187, 195, 198, 200, 207, 208, 209, 210, 211, 212, 221, 225, 226, 228, 288, 310, 311, 315, 319, 320, 321], "point": [13, 51, 53, 56, 57, 75, 207, 223, 279, 295, 296, 297, 310], "specifi": [13, 18, 19, 51, 56, 57, 124, 127, 168, 192, 194, 195, 199, 207, 208, 209, 210, 211, 212, 215, 219, 221, 223, 225, 226, 227, 228, 229, 274, 277, 310, 315, 316, 319], "oper": [13, 14, 51, 54, 56, 60, 63, 165, 183, 184, 187, 203, 207, 213, 214, 223, 245, 312, 316, 317, 319, 320, 321], "second": [13, 51, 56, 57, 70, 72, 75, 105, 106, 108, 110, 130, 132, 144, 183, 245, 249, 250, 251, 252, 253, 254, 256, 310, 315, 319], "fraction": [13, 51, 56, 288, 289], "thereof": [13, 51, 56], "As": [13, 51, 54, 56, 57, 63, 316, 321], "alwai": [13, 51, 56, 57, 70, 72, 75, 213, 229], "you": [13, 51, 54, 56, 57, 62, 63, 64, 65, 218, 310, 311, 316, 319, 320, 321], "must": [13, 28, 30, 51, 56, 57, 64, 70, 124, 297, 311, 315, 316, 321], "decid": [13, 51, 56, 195, 196, 310, 319], "happen": [13, 51, 56, 316], "still": [13, 51, 56, 57, 200, 310, 319, 320, 321], "time": [13, 51, 56, 57, 70, 72, 75, 78, 103, 105, 106, 108, 110, 114, 116, 119, 124, 127, 130, 132, 142, 144, 152, 157, 166, 176, 181, 182, 183, 193, 199, 201, 203, 210, 223, 245, 247, 249, 272, 310, 312, 319, 321], "out": [13, 18, 19, 51, 53, 56, 57, 105, 106, 124, 152, 155, 157, 159, 162, 165, 168, 170, 182, 187, 189, 192, 194, 218, 228, 234, 254, 288, 289, 310, 311, 315, 319, 321], "can": [13, 51, 54, 56, 57, 58, 62, 65, 70, 72, 75, 108, 110, 119, 124, 187, 192, 195, 209, 211, 212, 218, 219, 220, 241, 247, 282, 310, 311, 312, 315, 316, 319, 320, 321], "ed": [13, 51, 56], "mani": [13, 51, 56, 57, 189, 210, 311, 316, 319], "rais": [13, 51, 53, 56, 57, 58, 59, 60, 65, 70, 72, 75, 79, 103, 105, 106, 108, 110, 119, 122, 124, 125, 127, 165, 176, 218, 282, 315], "runtimeerror": [13, 51, 56, 57, 58], "attempt": [13, 51, 56, 57, 78], "made": [13, 51, 56, 57], "would": [13, 51, 53, 56, 57, 219, 221, 228, 310, 319, 321], "caus": [13, 51, 56, 57], "deadlock": [13, 51, 56], "error": [13, 51, 56, 57, 65, 79, 124, 165, 259, 260, 276, 280, 311, 315, 320], "ha": [13, 51, 56, 57, 62, 124, 152, 155, 157, 159, 162, 165, 168, 170, 193, 201, 203, 207, 209, 211, 212, 276, 286, 288, 310, 315, 316, 317, 319], "been": [13, 51, 56, 193, 201, 207, 209, 211, 212, 225, 226], "do": [13, 18, 19, 51, 56, 57, 105, 106, 116, 152, 214, 215, 238, 241, 243, 310, 311, 315, 316, 319, 320, 321], "so": [13, 51, 56, 57, 65, 116, 203, 310, 320, 321], "setdaemon": [13, 51, 56], "setnam": [13, 51, 56], "": [13, 34, 51, 54, 56, 57, 103, 105, 108, 110, 124, 166, 168, 192, 194, 207, 208, 210, 211, 215, 223, 227, 245, 247, 310, 311, 315, 316, 320], "activ": [13, 51, 56, 105, 106, 108, 110, 114, 116, 119, 184, 192, 193, 197, 198, 201, 247, 311, 318, 319, 320, 321], "most": [13, 51, 56, 57, 311, 319, 321], "onc": [13, 51, 56, 57, 218, 316, 320, 321], "arrang": [13, 51, 56], "invok": [13, 51, 56, 57], "separ": [13, 51, 56, 57, 184, 241, 266, 311, 315, 317], "more": [13, 51, 56, 57, 152, 155, 157, 159, 162, 165, 168, 170, 310, 311, 318, 320], "than": [13, 28, 30, 51, 56, 57, 70, 105, 106, 108, 228, 311, 321], "finish": [13, 165, 189], "boolean": [13, 51, 56, 57, 187, 192, 193, 195, 196, 197, 198, 200, 201, 207, 209, 210, 211, 212, 213], "indic": [13, 28, 51, 56, 57, 70, 187, 192, 193, 195, 196, 197, 198, 200, 201, 207, 209, 210, 211, 212, 223, 227, 229, 234, 245, 288, 316], "otherwis": [13, 14, 18, 19, 21, 51, 56, 57, 105, 106, 108, 183, 184, 209, 211, 212, 225, 226, 228, 245, 277, 315], "Its": [13, 51, 56], "inherit": [13, 51, 56, 57, 78, 209, 211], "creat": [13, 14, 51, 53, 56, 57, 65, 99, 116, 152, 157, 159, 162, 165, 170, 216, 247, 250, 252, 253, 254, 256, 274, 279, 280, 289, 311, 315, 318, 320, 321], "main": [13, 23, 51, 56, 65, 187, 193, 194, 196, 197, 198, 199, 200, 201, 209, 211, 215, 227, 311, 316], "therefor": [13, 51, 56, 57], "entir": [13, 51, 56, 234], "exit": [13, 51, 54, 56, 135, 137, 195, 316], "left": [13, 51, 56, 57, 251, 279, 280, 288, 320], "ident": [13, 51, 56, 316, 319], "identifi": [13, 44, 45, 51, 56, 124, 209, 211, 212, 218, 321], "nonzero": [13, 51, 56, 57], "integ": [13, 51, 56, 57, 195, 249, 250, 251, 252, 254, 256, 311], "get_id": [13, 51, 56], "mai": [13, 51, 56, 57, 187, 200, 221, 311, 315, 316, 320, 321], "recycl": [13, 51, 56], "anoth": [13, 51, 53, 56, 57, 65, 310, 311, 319, 320], "even": [13, 33, 51, 56, 57], "semant": [13, 51, 56], "constructor": [13, 51, 56], "native_id": [13, 51, 56], "nativ": [13, 51, 56, 57], "integr": [13, 51, 56, 321], "id": [13, 51, 56, 79, 80, 88, 89, 92, 108, 110, 130, 132, 135, 137, 155, 159, 162, 168, 170, 176, 184, 187, 189, 194, 195, 198, 200, 201, 225, 226, 247], "neg": [13, 51, 56], "get_native_id": [13, 51, 56], "repres": [13, 51, 56, 195, 207, 209, 211, 212, 216, 219, 220, 225, 226, 227, 228, 310, 319], "report": [13, 51, 56, 152, 157, 159, 162, 165, 168, 170, 247, 311], "kernel": [13, 51, 56], "selflock": 13, "pool": 14, "featur": [14, 53, 56, 184, 247, 311, 313, 318, 322], "associ": [14, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 311], "differ": [14, 57, 174, 176, 179, 187, 192, 207, 209, 211, 212, 218, 225, 310, 312, 316, 318, 319, 320, 321], "resourc": [14, 51, 58, 64, 207, 208, 210], "regist": [14, 215, 321], "wrap": [14, 272], "task": [14, 116, 130, 132, 142, 144, 203, 216, 321], "other": [14, 57, 62, 116, 139, 200, 229, 245, 310, 311, 315, 316, 321], "explicit": 14, "creation": [14, 57], "effici": [14, 34], "clear": [14, 57, 181, 182, 207, 208, 210, 218, 247], "move": [14, 57, 119, 124, 127, 144, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 189, 193, 196, 201, 225, 226, 234, 245, 247, 310, 316, 319, 321], "todeletelist": 14, "later": 14, "delet": [14, 223, 275, 318], "createthread": 14, "resourcenam": 14, "callback": 14, "cbarg": 14, "cbkarg": 14, "add": [14, 38, 53, 209, 211, 284, 285, 310, 311, 316, 319, 320], "waitlist": [14, 15], "selflockthread": 14, "getrunningthread": 14, "globaltrac": 14, "frame": [14, 33, 34, 35, 105, 106, 108, 110, 184, 187, 189, 193, 194, 195, 198, 200, 201, 209, 225, 226, 234, 245, 247, 317, 321], "event": [14, 18, 19, 211, 212, 227, 247], "trace": [14, 57], "ani": [14, 51, 53, 56, 57, 70, 72, 75, 152, 155, 157, 159, 162, 165, 168, 170, 197, 200, 209, 211, 214, 215, 225, 226, 315, 316, 321], "killthreadinlist": 14, "threadlist": 14, "kill": 14, "localtrac": 14, "movetodelet": 14, "taskthread": 14, "registerresourc": 14, "removethread": 14, "threadtaskwrap": 14, "dequ": 15, "waitlistlock": 15, "log": [18, 19, 22, 23, 70, 72, 75, 105, 106, 198, 285], "exclud": [18, 19], "perform": [18, 19, 28, 53, 58, 59, 60, 124, 184, 187, 192, 194, 195, 200, 201, 207, 208, 210, 214, 229, 245, 316, 318, 321], "messag": [18, 19, 79, 182], "design": [18, 19, 119, 122, 124, 127, 176, 208, 210, 213, 218, 221, 223, 316, 321], "record": [18, 19, 57, 184, 226], "spec": [18, 19, 70, 238, 243], "logger": [18, 19, 22, 70, 72, 75, 247], "which": [18, 19, 54, 57, 64, 70, 72, 75, 152, 155, 157, 159, 162, 165, 168, 170, 187, 195, 198, 200, 207, 208, 209, 210, 211, 212, 216, 219, 227, 234, 247, 295, 296, 310, 311, 316, 317, 319, 321], "togeth": [18, 19], "its": [18, 19, 57, 152, 157, 159, 162, 165, 168, 170, 208, 209, 210, 212, 218, 219, 316], "children": [18, 19], "have": [18, 19, 54, 57, 63, 116, 193, 201, 207, 208, 210, 214, 225, 226, 241, 310, 311, 315, 316, 319, 320, 321], "everi": [18, 19, 152, 297, 310, 319, 321], "logrecord": [18, 19], "includ": [19, 57, 130, 132, 152, 155, 157, 159, 162, 165, 168, 170, 187, 192, 193, 194, 196, 197, 200, 201, 207, 208, 209, 210, 211, 212, 215, 218, 238, 241, 243, 310, 315, 316, 318, 319, 320, 321], "k": [21, 57], "v": [21, 57, 139], "ve": [21, 316], "met": [21, 24], "condit": [21, 24, 57], "kei": [21, 24, 57, 130, 132, 142, 144, 174, 176, 179, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 211, 212, 218, 219, 221, 301, 311, 318], "filenam": [21, 57, 75, 110, 223, 247, 277], "test": [21, 53, 57, 58, 59, 60, 99, 168, 181, 182, 183, 184], "logging_configur": 22, "logging_path": [22, 285], "inform": [22, 57, 105, 106, 108, 119, 124, 159, 160, 196, 198, 247, 274, 277, 288, 310, 311, 319, 320], "format": [22, 53, 57, 58, 59, 60, 70, 72, 75, 114, 116, 219, 223, 238, 241, 310, 311, 315, 316, 319], "here": [22, 24, 105, 106, 251, 310, 311, 312, 315, 319], "http": [22, 34, 70, 72, 75, 119, 124, 152, 238, 240, 241, 243, 275, 315, 319, 320, 321], "doc": [22, 119, 152, 243, 275, 315], "org": [22, 238, 243, 275], "3": [22, 57, 238, 243, 256, 259, 260, 275, 295, 296, 297, 315, 316, 319, 320], "librari": [22, 57, 275, 311, 318], "config": [22, 245, 319, 320], "html": [22, 243, 275, 315], "dictschema": 22, "rel": [22, 152, 203, 293, 321], "locat": [22, 28, 57, 124, 174, 176, 179, 285, 310, 320, 321], "folder": [22, 247, 275, 282, 311, 320], "store": [22, 57, 70, 72, 75, 103, 108, 110, 238, 240, 241, 243, 311], "aslm_path": 22, "queue": [23, 189, 227, 247, 321], "listen": [23, 182], "put": [23, 57, 58, 227, 319], "sub": [23, 57, 201, 223, 275], "via": [23, 57, 91, 116, 125, 181, 255, 310], "d": [24, 57, 110, 301, 302], "find_func": 24, "apply_func": 24, "appli": [24, 57, 152, 194, 216, 218, 228], "loop": [24, 57, 184, 195, 316], "todo": [24, 105, 106, 189, 223, 241, 247, 289, 302, 314], "highli": 24, "gener": [24, 53, 57, 75, 110, 157, 168, 182, 193, 194, 223, 243, 259, 260, 261, 297, 315, 316], "doesn": [24, 57], "t": [24, 53, 54, 56, 57, 63, 70, 72, 75, 105, 106, 116, 124, 152, 243, 321], "belong": 24, "might": 24, "nice": 24, "make": [24, 43, 51, 54, 56, 57, 63, 289, 310, 311, 313, 316, 319], "func": [24, 53, 58, 59, 60, 78, 271, 272], "accept": [24, 51, 56, 57, 64, 152, 285, 297, 315, 316], "pair": [24, 209, 211, 212, 247, 316], "match": [24, 57, 221, 261, 297, 310, 315, 321], "d2": 24, "version": [24, 57, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 229, 317, 319, 320], "pass": [24, 51, 56, 57, 62, 63, 75, 114, 116, 208, 209, 210, 211, 218, 247, 310, 312, 315], "img_data": 28, "_supportsarrai": [28, 29, 30, 33, 35, 70, 72, 75, 238, 261], "dtype": [28, 29, 30, 33, 35, 56, 57, 60, 62, 70, 72, 75, 238, 261], "_nestedsequ": [28, 29, 30, 33, 35, 70, 72, 75, 238, 261], "complex": [28, 29, 30, 33, 35, 57, 70, 72, 75, 238, 261], "byte": [28, 29, 30, 33, 35, 57, 70, 72, 75, 124, 127, 238, 261], "boundari": [28, 29, 31, 234, 288], "width": [28, 30, 57, 103, 105, 106, 108, 110, 184, 228, 245, 259, 260, 261, 279, 295], "1": [28, 29, 30, 34, 56, 57, 70, 72, 75, 80, 105, 108, 111, 130, 132, 152, 181, 183, 194, 195, 203, 210, 218, 225, 226, 228, 234, 243, 245, 247, 250, 251, 252, 253, 254, 256, 259, 260, 261, 288, 297, 310, 315, 316, 319, 320, 321], "offset": [28, 30, 33, 35, 36, 57, 103, 105, 106, 108, 110, 142, 144, 174, 176, 179, 181, 189, 190, 193, 194, 245, 247, 251, 252, 253, 254, 256, 259, 260, 261, 280, 319], "varianc": [28, 30, 35, 36, 57, 103, 105, 106, 108, 110, 247], "binari": [28, 57, 280], "search": [28, 221, 320], "tissu": [28, 29, 30, 194, 225, 226, 228, 229, 234], "imag": [28, 29, 30, 33, 35, 36, 38, 39, 42, 45, 48, 57, 70, 75, 103, 105, 106, 108, 110, 116, 139, 184, 189, 192, 194, 197, 201, 223, 225, 226, 228, 229, 234, 245, 247, 259, 260, 261, 282, 289, 297, 316, 317, 321], "image_data": [28, 29, 30, 38, 40, 42, 45, 46, 228, 229], "npt": [28, 29, 30, 33, 35, 70, 72, 75, 295, 296, 297], "arraylik": [28, 29, 30, 33, 35, 70, 72, 75, 295, 296, 297], "xy": [28, 33, 279], "presenc": [28, 225, 226], "subimag": [28, 30], "smaller": [28, 30, 57], "shape": [28, 30, 43, 57, 60, 62, 70, 72, 75, 238, 240, 241, 243, 282], "map": [28, 30, 33, 35, 36, 57, 103, 105, 106, 108, 110, 152, 157, 168, 170, 241, 247, 310, 319], "mag_ratio": 29, "find": [29, 57, 234, 310, 316, 319, 320, 321], "otsu": [29, 41, 42, 194], "threshold": [29, 41, 42, 194, 196, 228, 229], "space": [29, 57, 194, 223, 288, 289], "resampl": 29, "ratio": 29, "tile": [29, 194, 234, 288, 289], "row": [29, 57, 291, 310], "downsampl": [29, 194], "determin": [30, 57, 70, 157, 187, 194, 195, 199, 200, 201, 209, 225, 226, 228, 229], "direct": [31, 45, 57, 103, 105, 106, 108, 110, 234, 259, 260, 261, 279, 311, 320, 321], "offset_map": [33, 36], "comput": [33, 35, 36, 194, 214, 245, 310, 319, 320, 321], "flatfield": 33, "evenli": 33, "illumin": 33, "scmo": [33, 34, 35], "zyx": [33, 35, 70], "defocus": 33, "signal": [33, 34, 116, 144, 182, 184, 187, 192, 193, 194, 195, 196, 197, 199, 200, 201, 207, 210, 211, 212, 215, 216, 225, 226, 227, 247, 252, 316, 321], "np": [33, 34, 48, 56, 57, 103, 105, 106, 108, 110, 124, 183, 223, 228, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 280, 289, 291], "absenc": 33, "oppos": 33, "fn": 34, "qe": 34, "82": 34, "ib": 34, "nr": 34, "4": [34, 57, 105, 108, 139, 249, 250, 252, 253, 254, 256, 259, 260, 315, 316, 317, 319, 320], "m": [34, 103, 105, 110, 139, 163, 247, 310, 319, 320], "www": [34, 124, 321], "hamamatsu": [34, 105, 106, 108, 317], "com": [34, 70, 72, 75, 119, 124, 152, 166, 240, 241, 243, 320, 321], "content": [34, 57, 220, 268, 276, 277, 316], "dam": 34, "photon": 34, "site": 34, "document": [34, 57, 99, 105, 106, 108, 152, 311, 315, 316, 318, 320], "99_sales_librari": 34, "sy": [34, 57], "scas0134e_c13440": 34, "20cu_tec": 34, "pdf": [34, 124], "mean": [34, 51, 56, 57, 260], "nois": 34, "sigma": [34, 45, 189, 190], "excess": 34, "factor": [34, 157, 311], "unitless": 34, "quantum": 34, "arrai": [34, 57, 60, 62, 70, 72, 75, 228, 229, 250, 251, 252, 253, 254, 255, 256, 259, 261, 280, 282, 289, 291, 295, 296], "background": [34, 259, 260, 261], "readout": [34, 103, 105, 106, 108, 110, 130, 132, 142, 144, 183, 245], "rm": 34, "em": 34, "gain": [34, 176], "estim": [34, 119, 223], "electron": 34, "dark": 35, "taken": [35, 51, 56, 174, 176, 179], "sequenti": [35, 51, 56, 245], "variance_map": 36, "snr": 36, "border": 38, "median": 38, "3d": [38, 43, 48, 70], "inside_imag": 39, "normalized_cel": 39, "surface_cel": 39, "combin": [39, 267, 318], "insid": [39, 57, 320], "cell": [39, 41], "surfac": [39, 44, 45], "image_threshold": 40, "pixel_s": [40, 259, 260, 261, 297, 319], "206": 40, "padded_image_data": 41, "insidegamma": 41, "insideblur": 41, "insidedilateradiu": 41, "insideeroderadiu": 41, "tri": [41, 78, 311], "fill": [41, 57, 189, 235], "interior": 41, "gaussian": [41, 259, 260, 261], "blur": 41, "follow": [41, 174, 176, 179, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 219, 221, 311, 315, 316, 319, 320], "dilat": 41, "hole": 41, "eros": 41, "subtract": 42, "standard": [42, 51, 56, 57, 315, 318], "deviat": [42, 57, 312], "radiu": [43, 296], "element": [43, 57, 181, 218, 238, 302], "sphere": 43, "scale": [44, 157, 297], "each": [45, 48, 57, 62, 70, 72, 75, 78, 114, 116, 142, 144, 152, 157, 168, 174, 176, 179, 184, 187, 189, 197, 200, 209, 211, 212, 216, 218, 221, 223, 225, 226, 245, 247, 266, 288, 289, 291, 297, 310, 311, 312, 315, 316, 319, 321], "input_arrai": 48, "psf_support_diameter_xi": 48, "calcul": [48, 57, 103, 105, 106, 108, 110, 114, 116, 124, 127, 139, 157, 187, 189, 194, 199, 203, 228, 245, 247, 249, 288, 321], "entropi": [48, 189, 247], "ndarrai": [48, 57, 60, 103, 105, 106, 108, 110, 142, 144, 183, 184, 223, 228, 229, 245, 259, 260, 261], "2d": [48, 57, 194, 259, 261], "iter": [48, 57, 184, 208, 209, 210, 211, 212, 218, 221, 245], "plane": [48, 193, 225, 226, 316, 321], "support": [48, 57, 70, 157, 221, 315, 318, 322], "psf": 48, "dimens": [48, 57, 70, 72, 75, 247, 288, 289, 319], "first_resourc": [51, 64], "resultthread": [51, 52, 59], "access": [51, 56, 57, 58, 62, 70, 72, 75, 310, 320], "order": [51, 57, 58, 200, 208, 210, 218, 310, 319], "thei": [51, 54, 57, 63, 116, 215, 310, 315, 319, 320, 321], "were": [51, 57, 223, 319, 320], "launch": [51, 56, 65, 247, 319], "docstr": [51, 64, 65, 311, 315], "top": [51, 64, 65, 103, 105, 106, 108, 110, 275, 310, 319], "reserv": [51, 56], "futur": [51, 56, 57, 311], "extens": [51, 56, 223, 311], "implement": [51, 56, 57, 70, 72, 75, 108, 157, 159, 165, 168, 170, 213, 241, 310, 318, 321], "noth": [51, 56, 214, 215], "By": [51, 53, 56, 57, 315, 319, 321], "uniqu": [51, 56, 321], "construct": [51, 56, 57, 174, 176, 179, 234], "form": [51, 56, 57, 228, 311, 315, 316, 321], "n": [51, 56, 57, 75, 192, 194, 234, 259, 260, 261, 295, 296, 297, 311, 315, 319, 320], "small": [51, 56, 311], "decim": [51, 56, 57], "invoc": [51, 56], "subclass": [51, 53, 56, 57], "overrid": [51, 56, 70], "sure": [51, 56, 57, 310, 319], "anyth": [51, 56], "els": [51, 56], "get_result": [51, 56], "timeouterror": [51, 53, 56, 58, 59, 60], "respect": [51, 56, 57, 219, 228, 319], "control": [51, 56, 57, 80, 119, 120, 122, 124, 152, 153, 157, 159, 163, 170, 171, 176, 179, 181, 182, 183, 184, 187, 193, 194, 195, 196, 199, 200, 201, 207, 208, 209, 210, 211, 212, 223, 245, 247, 263, 310, 311, 316, 318, 319], "alia": [52, 55, 57], "homemad": 53, "mostli": 53, "written": [53, 57, 70, 223, 311, 315], "curios": 53, "what": [53, 57, 261, 288, 310, 316, 319], "want": [53, 57, 62, 124, 127, 310, 313, 316, 319, 320, 321], "could": [53, 57, 125, 157, 275, 311, 316, 321], "done": [53, 57, 105, 106, 124, 245, 247, 310, 319, 320, 321], "easili": [53, 219], "without": [53, 54, 56, 57, 58, 62, 63, 211, 223, 310, 311, 319, 321], "import": [53, 57, 311, 316, 318, 319, 321], "Not": [53, 108, 111, 168, 241, 249], "real": [53, 57, 213, 214, 247], "packag": [53, 320], "wasn": 53, "To": [53, 57, 241, 310, 311, 313, 316, 319, 321], "test_": [53, 58, 59, 60], "specif": [53, 57, 58, 59, 60, 124, 152, 187, 197, 198, 199, 211, 212, 213, 310, 319, 321], "print": [53, 56, 57, 105, 106, 108, 110, 293, 315], "output": [53, 57, 89, 91, 116, 152, 157, 254, 315, 321], "stdout": 53, "test_prefix": [53, 58, 59, 60], "fail": [53, 57, 58, 59, 60, 310, 316, 319], "fail_fast": [53, 58, 59, 60], "begin": [53, 57, 58, 59, 60, 187, 207, 208, 210, 225, 226], "time_it": [53, 58, 59, 60], "n_loop": [53, 58, 59, 60], "timeout_u": [53, 58, 59, 60], "averag": [53, 57, 58, 59, 60], "durat": [53, 58, 59, 60, 103, 105, 106, 108, 110, 116, 119, 124, 127, 157, 166, 176, 247, 249, 272], "exce": [53, 58, 59, 60, 228], "bar": [53, 58, 59, 60], "progress": [53, 58, 59, 60, 319, 321], "initarg": [54, 62, 63], "custom_loop": [54, 62, 63], "close_method_nam": [54, 63], "closearg": [54, 63], "closekwarg": [54, 63], "with_lock": 54, "initkwarg": [54, 62, 63], "child": [54, 56, 63, 209, 211, 212, 216], "act": [54, 57, 63, 318], "like": [54, 57, 63, 64, 65, 282, 288, 310, 315, 319, 320, 321], "isn": [54, 63, 124], "much": [54, 63, 321], "try": [54, 56, 63, 311, 320], "instanc": [54, 57, 63, 64, 187, 192, 201, 216, 291, 310, 319], "behav": [54, 57, 60, 63, 310, 311, 319], "re": [54, 56, 63], "live": [54, 57, 63, 247, 311], "parent": [54, 56, 62, 63, 103, 114, 122, 130, 142, 147, 155, 174], "cours": [54, 63], "spare": [54, 63], "core": [54, 57, 63], "your": [54, 57, 62, 63, 65, 275, 310, 311, 316, 318, 319, 321], "machin": [54, 57, 63, 152, 311, 320], "turn": [54, 63, 130, 132, 135, 137, 245, 247, 310, 316, 319, 321], "cpu": [54, 57, 63], "bound": [54, 63, 152, 155, 157, 159, 162, 165, 168, 170, 194, 310, 319], "parallel": [54, 321], "io": [54, 63, 315], "too": [54, 63, 317], "mental": [54, 63], "overhead": [54, 58, 63, 247], "coder": [54, 63, 311], "our": [54, 56, 57, 62, 108, 110, 238, 241, 243, 310, 311, 318, 319, 320, 321], "automat": [54, 311, 316], "close_method": 54, "custodythread": [55, 58, 59], "simpl": [56, 57, 213, 316], "wish": 56, "had": 56, "chang": [56, 57, 105, 106, 108, 110, 119, 124, 127, 152, 174, 176, 179, 192, 194, 196, 247, 289, 315, 316, 319, 320, 321], "trivial": 56, "save": [56, 75, 108, 152, 155, 157, 159, 162, 165, 168, 170, 189, 201, 219, 223, 247, 274, 277, 316], "u": [56, 57, 311, 321], "line": [56, 57, 64, 103, 105, 106, 108, 110, 247, 279, 293, 311, 315, 316, 319], "code": [56, 57, 70, 72, 75, 108, 111, 181, 189, 240, 241, 243, 293, 310, 313, 315, 316, 318, 319, 320], "def": [56, 315, 316], "doe": [56, 57, 72, 75, 193, 214, 302, 310, 319, 320, 321], "someth": [56, 57, 311, 319], "sum": [56, 57], "ones": 56, "2": [56, 57, 105, 108, 130, 132, 182, 229, 238, 251, 252, 259, 260, 297, 310, 315, 316, 317, 319, 320, 321], "uint8": [56, 57, 62], "problem": [56, 57, 320], "th": [56, 57], "redefin": 56, "solut": 56, "res_th": 56, "assert": 56, "handl": [56, 157, 159, 193, 199, 201, 208, 209, 210, 211, 216, 310, 319], "idea": 56, "attributeerror": [56, 57, 315], "wa": [56, 57, 108, 152, 157, 159, 162, 165, 168, 170, 193, 223, 226, 247, 277], "assertionerror": 56, "dure": [56, 70, 72, 75, 184, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 210, 225, 226, 251], "evalu": [56, 57, 223, 272, 286, 295, 296, 297, 311, 319], "rerais": 56, "traceback": [56, 57], "stderr": 56, "don": [56, 105, 106, 152, 321], "affect": [56, 57, 194], "yet": [56, 213, 310], "note": [56, 57, 184, 315, 319], "modifi": [56, 192, 218, 311, 316, 319], "excepthook": 56, "copi": [56, 57, 218, 319], "past": 56, "definit": [56, 64, 65], "work": [56, 57, 116, 311, 320], "shared_memory_nam": 57, "stride": 57, "numpi": [57, 62, 105, 106, 110, 142, 144, 228, 229, 245, 250, 251, 252, 253, 254, 255, 256, 282, 315], "memori": [57, 62, 63, 247, 311], "objectinsubprocess": [57, 58], "serial": [57, 60, 62, 105, 106, 108, 110, 119, 120, 124, 125, 127, 160, 163, 166, 170, 171, 268], "pretti": 57, "fast": [57, 152], "larg": [57, 311], "regularli": 57, "deal": [57, 241], "sens": 57, "wai": [57, 247, 288, 310, 311, 315, 319], "avoid": [57, 280, 311, 319], "slow": [57, 62], "mayb": [57, 64, 65], "write": [57, 70, 72, 75, 116, 201, 223, 238, 241, 243, 247, 311], "look": [57, 111, 288, 310, 319, 321], "data_buf": 57, "zero": [57, 155, 162, 261], "400": 57, "uint16": 57, "display_buf": 57, "preprocessor": 57, "displai": [57, 79, 114, 116, 219, 247, 316], "num_imag": 57, "show": [57, 247, 316, 320, 321], "payoff": 57, "own": [57, 319], "AND": 57, "realli": 57, "memmap": 57, "axi": [57, 152, 155, 157, 159, 162, 165, 168, 170, 174, 176, 179, 203, 288, 297, 310, 319], "keepdim": 57, "refer": [57, 163, 195, 199, 209, 211, 212, 245, 251, 266], "full": [57, 106, 310, 321], "equival": [57, 320, 321], "argmax": 57, "maximum": [57, 103, 105, 106, 108, 110, 152, 157, 189, 223, 247, 310, 318, 319], "along": [57, 64, 65, 70, 152, 157, 159, 162, 165, 168, 170, 247, 288, 289], "argmin": 57, "minimum": [57, 103, 105, 106, 108, 110, 157, 203, 225, 226, 228, 310, 317, 319], "detail": [57, 124], "argpartit": 57, "kth": 57, "kind": 57, "introselect": 57, "partit": 57, "8": [57, 319, 320], "argsort": 57, "sort": [57, 218], "astyp": 57, "cast": 57, "unsaf": 57, "subok": 57, "typecod": 57, "data": [57, 70, 72, 73, 75, 86, 105, 106, 108, 110, 114, 116, 157, 183, 184, 187, 189, 192, 194, 195, 196, 198, 199, 200, 201, 203, 208, 209, 215, 216, 218, 223, 225, 226, 228, 229, 245, 247, 274, 277, 291, 310, 316, 317, 318], "layout": [57, 194], "fortran": 57, "contigu": 57, "close": [57, 70, 72, 75, 103, 105, 106, 108, 110, 116, 119, 124, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 176, 207, 208, 210, 223, 245, 247, 288, 316], "appear": [57, 316, 319], "equiv": 57, "safe": 57, "same_kind": 57, "backward": 57, "compat": [57, 70, 311, 320], "preserv": 57, "within": [57, 65, 152, 155, 157, 159, 162, 165, 168, 170, 216, 219, 228, 297, 316, 319, 320, 321], "float64": 57, "float32": 57, "convers": [57, 105, 106], "forc": 57, "newli": [57, 247], "alloc": [57, 62], "satisfi": [57, 316], "arr_t": 57, "unless": [57, 311], "descript": [57, 315], "17": 57, "one": [57, 64, 65, 75, 152, 155, 157, 159, 162, 165, 168, 170, 200, 208, 209, 211, 212, 247, 310, 315, 316, 321], "field": [57, 310, 319], "9": [57, 319, 320], "numer": [57, 259, 260, 261, 315, 318], "mode": [57, 70, 72, 75, 103, 105, 106, 108, 110, 116, 163, 165, 168, 183, 192, 193, 201, 203, 245, 247, 316, 317, 319, 321], "length": [57, 213, 214, 288, 289, 297, 315], "long": 57, "enough": 57, "complexwarn": 57, "5": [57, 228, 251, 310, 316, 317, 319, 321], "byteswap": 57, "inplac": 57, "swap": 57, "toggl": 57, "low": [57, 288, 317], "endian": 57, "big": [57, 223], "represent": [57, 70, 72, 75, 218, 219, 240, 241, 243, 302, 316], "place": [57, 218, 310, 319], "imaginari": 57, "part": [57, 218, 311], "individu": [57, 198, 318], "view": [57, 62, 67, 181, 182, 183, 184, 238, 243, 247, 311, 318], "256": 57, "8755": 57, "int16": 57, "hex": 57, "0x1": 57, "0x100": 57, "0x2233": 57, "13090": 57, "0x3322": 57, "b": [57, 124, 125], "ceg": 57, "fac": 57, "s3": 57, "newbyteord": 57, "produc": [57, 301], "choos": [57, 315, 316], "choic": [57, 316], "index": [57, 70, 88, 89, 116, 124, 174, 176, 179, 196, 201, 218, 223, 243, 245, 247, 259, 260, 261, 282, 310, 319], "clip": 57, "One": [57, 75], "compress": [57, 223], "select": [57, 114, 116, 142, 144, 245, 316, 321], "slice": [57, 60, 70, 282, 297], "conj": 57, "conjug": 57, "wise": 57, "veri": 57, "similar": [57, 209, 211, 212, 310, 311, 315, 319], "behavior": [57, 59, 209, 211, 212, 289, 311, 315, 316, 321], "copyto": 57, "prefer": 57, "6": [57, 243, 316, 319], "c_contigu": 57, "cumprod": 57, "cumul": 57, "product": [57, 152, 311, 318, 321], "cumsum": 57, "diagon": 57, "axis1": 57, "axis2": 57, "In": [57, 241, 310, 311, 316, 319, 321], "previou": [57, 110, 196], "restrict": 57, "dump": 57, "pickl": 57, "back": [57, 238, 241, 251, 316, 321], "pathlib": 57, "now": [57, 193, 238, 320], "scalar": 57, "assign": [57, 215], "flatten": [57, 259], "collaps": 57, "major": 57, "style": [57, 315, 321], "column": 57, "ravel": [57, 259], "flat": 57, "getfield": 57, "certain": [57, 319], "need": [57, 65, 105, 106, 108, 110, 187, 189, 192, 193, 201, 203, 208, 209, 211, 212, 213, 214, 216, 218, 223, 245, 247, 288, 310, 315, 316, 319, 320, 321], "fit": [57, 189, 190, 259, 260, 315], "complex128": 57, "16": [57, 223], "take": [57, 216, 219, 221, 228, 245, 289], "bit": [57, 70, 72, 75, 223, 241], "12": [57, 319], "larger": 57, "itself": [57, 218, 315], "skip": 57, "diag": 57, "j": [57, 139], "item": [57, 218, 308, 310, 319], "variabl": [57, 139, 200, 213, 214, 216, 225, 226, 228, 311, 315, 320], "case": [57, 311], "int_typ": 57, "interpret": 57, "singl": [57, 70, 139, 152, 157, 159, 162, 165, 168, 170, 254, 282, 288], "nd": 57, "suitabl": 57, "longdoubl": 57, "clongdoubl": 57, "becaus": [57, 310], "lose": 57, "void": 57, "buffer": [57, 105, 106, 108, 110, 183, 184, 223, 245, 247], "defin": [57, 78, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208, 210, 212, 215, 241, 297, 310, 316, 319], "speed": [57, 124, 152, 165, 168, 176, 311, 317], "up": [57, 70, 72, 75, 108, 111, 116, 157, 182, 187, 201, 203, 279, 316, 319, 321], "arithmet": 57, "optim": [57, 187, 321], "math": 57, "random": [57, 60, 110], "seed": 57, "123": 57, "randint": 57, "7": [57, 251, 316, 317, 319, 320], "itemset": 57, "There": [57, 241, 321], "least": 57, "last": [57, 218, 288, 320], "Then": [57, 316], "faster": [57, 200], "two": [57, 218, 247, 310, 315, 319], "first": [57, 62, 174, 176, 179, 181, 200, 218, 241, 288, 310, 315, 316, 319, 320, 321], "compar": [57, 189], "syntax": 57, "some": [57, 62, 70, 72, 75, 240, 241, 243, 311, 316, 320, 321], "increas": [57, 311], "particular": [57, 321], "howev": [57, 311, 321], "discourag": 57, "among": 57, "complic": 57, "amax": 57, "amin": 57, "new_ord": 57, "arr": 57, "newbytord": 57, "below": [57, 310, 311, 315, 316, 317, 319, 320], "opposit": 57, "littl": 57, "byteord": 57, "ignor": [57, 238, 311], "new_arr": 57, "reflect": [57, 319], "rearrang": 57, "equal": [57, 218, 228, 315], "greater": [57, 228], "behind": 57, "undefin": 57, "sequenc": [57, 207, 208, 209, 210, 211, 212, 282, 316], "final": [57, 187, 207, 208, 210, 310, 319], "them": [57, 208, 210, 215, 216, 218, 311, 320], "sinc": [57, 289, 321], "22": [57, 203], "algorithm": 57, "etc": [57, 70, 72, 75, 108, 152, 155, 157, 159, 162, 165, 168, 170, 240, 241, 243, 285, 288, 318], "unspecifi": 57, "come": [57, 110], "break": [57, 311, 315], "ti": 57, "paritit": 57, "indirect": 57, "prod": 57, "ptp": 57, "peak": [57, 251, 259, 260, 261], "repeat": [57, 114, 116, 299, 317, 319], "reshap": 57, "unlik": [57, 229], "free": [57, 321], "For": [57, 116, 152, 157, 159, 162, 165, 168, 170, 229, 275, 310, 311, 316, 319, 321], "10": [57, 78, 105, 124, 125, 152, 194, 228, 249, 251, 252, 253, 254, 255, 256, 310, 319, 320], "11": [57, 163, 319, 320], "resiz": 57, "new_shap": 57, "refcheck": 57, "count": [57, 152, 182, 195, 196, 199, 201, 203, 218, 228, 293, 310, 319], "valueerror": [57, 119, 122, 124, 127, 176, 218, 315], "pypi": 57, "reliabl": 57, "systemerror": 57, "behaviour": 57, "bug": [57, 311], "realloc": 57, "area": [57, 228], "consecut": 57, "shrink": 57, "enlarg": 57, "abov": [57, 319], "entri": [57, 207, 263, 310, 316, 319], "referenc": 57, "prevent": 57, "recent": 57, "cannot": 57, "round": 57, "around": [57, 64, 65, 316], "searchsort": 57, "side": [57, 214, 288], "sorter": 57, "maintain": [57, 200, 207, 218], "setfield": 57, "val": [57, 78], "ey": 57, "int32": 57, "0e": 57, "000": 57, "5e": 57, "323": 57, "setflag": 57, "uic": 57, "writeabl": 57, "writebackifcopi": 57, "updateifcopi": 57, "These": [57, 192, 207, 208, 210, 221, 310, 320, 321], "how": [57, 60, 189, 210, 310, 311, 315, 316, 319, 320], "actual": [57, 70, 72, 75, 105, 106, 214, 229, 249, 288, 311], "never": 57, "ultim": [57, 311], "owner": 57, "expos": 57, "interfac": [57, 108, 315], "unpickl": 57, "describ": [57, 315, 316], "properli": [57, 310, 321], "about": [57, 198, 277, 288, 311], "four": [57, 321], "w": [57, 70, 72, 75, 295], "appropri": [57, 311, 320], "compil": 57, "pyarray_resolvewritebackifcopi": 57, "upper": [57, 280, 315], "letter": 57, "well": [57, 318], "f_contigu": 57, "owndata": 57, "stdin": 57, "quicksort": 57, "mergesort": 57, "heapsort": 57, "stabl": [57, 218], "both": [57, 70, 91, 152, 197, 241, 315, 316, 320], "timsort": 57, "under": [57, 310, 316, 318, 319, 321], "cover": [57, 288, 321], "vari": 57, "datatyp": 57, "retain": 57, "15": [57, 261, 297, 320], "lexsort": 57, "partial": 57, "s1": 57, "i8": 57, "squeez": 57, "ax": [57, 152, 155, 157, 159, 162, 165, 168, 170, 310], "std": 57, "ddof": 57, "swapax": 57, "interchang": 57, "tobyt": 57, "raw": 57, "short": 57, "exhibit": 57, "u2": 57, "x00": 57, "x01": 57, "x02": 57, "x03": 57, "tofil": 57, "fid": 57, "sep": 57, "text": [57, 280, 315, 316, 320], "independ": [57, 321], "recov": 57, "fromfil": 57, "open": [57, 70, 72, 75, 147, 149, 176, 247, 311, 316, 320, 321], "closest": 57, "conveni": 57, "quick": [57, 152], "storag": [57, 184], "precis": [57, 321], "lost": 57, "good": [57, 311], "intend": [57, 219], "archiv": 57, "transport": 57, "overcom": 57, "expens": 57, "directli": [57, 64, 65, 105, 106, 195, 316], "bypass": 57, "gzipfil": 57, "fileno": 57, "bytesio": 57, "tolist": 57, "ndim": 57, "deep": 57, "nearest": 57, "builtin": 57, "depth": 57, "possibli": [57, 187], "recreat": 57, "although": 57, "sometim": 57, "1d": 57, "almost": [57, 64], "uint32": 57, "a_list": 57, "a_tolist": 57, "addition": [57, 245], "0d": 57, "typeerror": 57, "tostr": 57, "exactli": 57, "despit": 57, "19": 57, "transpos": 57, "effect": [57, 214, 259, 260, 261], "vector": 57, "simpli": [57, 214, 311], "atleast2d": 57, "achiev": 57, "newaxi": 57, "matrix": [57, 124, 238], "permut": 57, "revers": [57, 218], "becom": 57, "altern": [57, 108, 240, 241, 243, 311, 315], "give": [57, 218, 310], "var": 57, "omit": 57, "former": [57, 245], "float_": 57, "descriptor": 57, "again": 57, "omiss": 57, "some_dtyp": 57, "reinterpret": 57, "ndarray_subclass": 57, "regular": [57, 311, 315], "predict": 57, "superfici": 57, "shown": [57, 316, 320], "versu": 57, "int8": 57, "513": 57, "xv": 57, "underli": 57, "20": [57, 228, 319], "i1": 57, "recarrai": 57, "i2": 57, "ctype": 57, "simplifi": 57, "interact": [57, 319], "easier": [57, 218], "themselv": [57, 316], "possess": 57, "ctypeslib": 57, "public": [57, 315], "guid": [57, 152, 311], "undocu": 57, "privat": [57, 315], "_ctype": 57, "pointer": [57, 70, 72, 75, 316], "correct": [57, 157], "arbitrari": [57, 70, 72, 75, 315, 316], "troubl": 57, "crash": [57, 311], "bewar": 57, "_array_interface_": 57, "data_a": 57, "kept": 57, "c_void_p": 57, "dealloc": 57, "spelt": 57, "basetyp": 57, "correspond": [57, 152, 157, 159, 165, 184, 194, 209, 211, 212, 219, 221, 310, 319, 321], "p": [57, 70, 176, 295, 296, 297], "platform": 57, "c_intp": 57, "c_int": 57, "c_long": 57, "c_longlong": 57, "jump": 57, "next": [57, 181, 189, 196, 197, 245, 315, 316, 321], "obj": [57, 119, 124, 176, 315], "_as_parameter_": 57, "perhap": 57, "c_doubl": 57, "keep": [57, 210, 311], "shape_a": 57, "c_short": 57, "strides_a": 57, "as_paramet": 57, "31962608": 57, "c_uint32": 57, "__main__": 57, "lp_c_uint": 57, "0x7ff2fc1fc200": 57, "c_uint": 57, "c_uint64": 57, "c_ulong": 57, "4294967296": 57, "_intern": 57, "c_long_array_2": 57, "0x7ff2fc1fce60": 57, "0x7ff2fc1ff320": 57, "segment": [57, 247], "o": [57, 269, 275, 276, 280, 320], "borrow": [57, 70, 72, 75, 240, 241, 243], "subsequ": [57, 319], "while": [57, 58, 165, 310], "remain": [57, 152, 195, 199, 200, 210], "alreadi": [57, 209, 311, 320], "circumst": 57, "alter": [57, 152], "previous": 57, "onto": [57, 321], "fnc": 57, "carrai": 57, "ca": 57, "farrai": 57, "fa": 57, "lowercas": 57, "arbitrarili": 57, "truli": [57, 321], "simultan": [57, 75, 152, 311, 321], "dimension": 57, "higher": [57, 189], "dim": [57, 282], "hold": [57, 277], "items": 57, "flatit": 57, "similarli": [57, 241], "built": [57, 218, 312], "arang": 57, "sqrt": 57, "0j": 57, "1j": 57, "70710678": 57, "nbyte": [57, 70, 72, 75], "total": [57, 157, 189, 195, 201, 210, 228, 247, 288, 310], "consum": 57, "480": 57, "usual": 57, "infer": 57, "unchang": 57, "incompat": 57, "modif": [57, 311], "desir": [57, 105, 106, 108, 110, 174, 176, 179, 192, 194, 247, 285], "obtain": 57, "suggest": 57, "int_": 57, "relev": [57, 198, 213, 315], "further": 57, "overflow": 57, "fix": [57, 195, 311], "travers": 57, "explan": 57, "found": [57, 79, 103, 105, 106, 108, 110, 119, 124, 247, 310, 311, 319, 320], "rst": 57, "imagin": 57, "40": 57, "known": [57, 321], "tell": [57, 310, 311], "lib": 57, "stride_trick": 57, "as_strid": 57, "13": 57, "14": [57, 297, 319], "18": 57, "21": 57, "23": 57, "48": 57, "224": 57, "1344": 57, "813": 57, "mytestclass": [58, 59, 60], "testclass": 58, "toi": 58, "subprocess": 58, "test_incorrect_thread_manag": 58, "custodi": [58, 64, 65], "test_lock_with_waitlist": 58, "stai": [58, 251], "objectsinsubprocess": 58, "mock": [58, 99], "_waitinglist": [58, 64], "test_object_in_subprocess_overhead": 58, "test_sending_shared_arrai": 58, "send": [58, 157, 182, 184], "sharedndarrai": [58, 60, 223, 245, 247, 311], "test_ndarraylike_behavior": 60, "broke": 60, "suppos": 60, "test_seri": 60, "deseri": 60, "test_serializing_and_deseri": 60, "shared_memory_s": 62, "spawn": 62, "proxi": [62, 63, 268, 320], "proxyobject": [62, 64, 65], "shared_numpy_arrai": 62, "which_mp_arrai": 62, "shared_mp_arrai": 63, "proxymanag": [63, 64, 65], "thin": [64, 65], "wrapper": [64, 65], "few": [64, 65, 316], "usag": [64, 65], "_custodi": 64, "switch_from": 64, "_wait_in_lin": 64, "immedi": [64, 315], "acquir": [65, 103, 105, 106, 108, 110, 193, 194, 201, 203, 223, 245, 247, 310, 316, 321], "releas": [65, 200], "launch_custody_thread": 65, "feel": 65, "detect": [65, 194, 225, 226, 228, 229], "occour": 65, "file_nam": [70, 72, 75, 238, 241, 243], "datasourc": [70, 73, 75, 223], "bigdataview": [70, 238, 241], "sourc": [70, 72, 73, 75, 157, 203, 223, 317, 321], "hdf5": 70, "n5": 70, "multi": [70, 193, 196, 201, 209, 211, 212, 316, 321], "resolut": [70, 165, 192, 194, 203, 234, 247, 317], "pyramid": [70, 72, 75], "subdivid": 70, "32x32x1": 70, "r": [70, 72, 75, 291, 296], "h5py": 70, "zarr": 70, "n5store": 70, "ds_name": 70, "dataset": 70, "metadata": [70, 72, 75, 193, 238, 243], "bigdataviewermetadata": 70, "set_metadata_from_configuration_experi": [70, 72, 75], "kw": [70, 72, 75, 238, 241, 243], "metdata": [70, 72, 75], "concept": [70, 72, 75, 240, 241, 243], "microscopi": [70, 72, 75, 139, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 240, 241, 243], "github": [70, 72, 75, 240, 241, 243, 318, 319, 320], "dx": [70, 72, 75], "micron": [70, 72, 75, 152, 155, 157, 162, 165, 317], "dy": [70, 72, 75], "dz": [70, 72, 75], "dt": [70, 72, 75], "displac": [70, 72, 75], "dc": [70, 72, 75, 250], "shape_x": [70, 72, 75], "shape_i": [70, 72, 75], "shape_z": [70, 72, 75], "shape_t": [70, 72, 75], "shape_c": [70, 72, 75], "voxel_s": [70, 72, 75, 238, 240, 241, 243], "voxel": [70, 72, 75, 238, 240, 241, 243], "xyczt": [70, 72, 75, 238, 240, 241, 243], "clean": [70, 72, 75, 201, 203, 318], "leftov": [70, 72, 75], "get_slic": 70, "subdiv": 70, "grab": [70, 181], "timepoint": [70, 75, 193, 199, 319], "subdivis": 70, "dictproxi": [70, 72, 75, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 147, 149, 152, 155, 157, 162, 174, 179], "notimplementederror": [70, 72, 75], "deriv": [70, 72, 75], "getter": [70, 72, 75, 315], "account": [70, 72, 75, 130, 132, 302], "xyz": [70, 152], "bdv": 70, "rather": [70, 321], "file_typ": [73, 223, 238, 241, 243], "tif": [73, 75, 223, 282], "tifdatasourc": 73, "is_bigtiff": 75, "tiff": [75, 110, 223, 241, 243, 282], "bigtiff": 75, "tifffil": 75, "save_directori": [75, 223, 274], "generate_image_nam": [75, 223], "current_channel": [75, 183, 223, 245], "current_time_point": [75, 223], "intern": [75, 203, 240, 241, 243], "ch00_000000": [75, 223], "stack": [75, 108, 110, 189, 199, 201, 203, 225, 226, 316, 321], "At": 75, "imsav": 75, "dummi": [77, 213, 214, 215], "n_tri": 78, "retri": 78, "connect": [78, 85, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 116, 119, 120, 122, 124, 125, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 153, 155, 157, 159, 160, 162, 163, 165, 166, 168, 170, 171, 174, 176, 177, 179, 245, 247, 310, 319, 321], "startup": [78, 310, 319], "redial": 78, "baseexcept": 78, "dcam": [78, 321], "incorrect": 79, "device_typ": 79, "camera_id": 80, "is_synthet": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 183, 245, 311], "synthet": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 110, 111, 116, 149, 168, 183, 245, 247, 310, 312, 319], "dedic": [82, 83, 84, 86, 87, 91, 93], "multiproces": [82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 147, 174], "device_connect": [85, 87, 88, 89, 90, 91, 92, 93, 103, 105, 106, 108, 110, 119, 122, 124, 127, 130, 132, 135, 137, 142, 144, 147, 149, 152, 155, 157, 159, 162, 165, 168, 170, 176, 179, 245, 311], "acquisit": [86, 103, 105, 106, 108, 110, 114, 116, 130, 132, 157, 187, 192, 193, 195, 196, 197, 199, 200, 201, 203, 223, 245, 247, 316, 317, 318], "filterwheel": 87, "scan": [88, 108, 152, 168, 193, 203, 225, 226, 317, 321], "switch": [89, 124, 247, 251, 310, 319, 321], "analog": [89, 116, 157, 253, 254, 256, 317], "digit": [89, 91, 321], "trigger": [89, 91, 116, 149, 157, 166, 203, 227, 249, 321], "focus": [90, 142, 251, 285, 317, 321], "shutter": [91, 103, 105, 106, 110, 247, 318], "thorlabsshutt": 91, "syntheticshutt": 91, "ni": [91, 310, 319], "card": [91, 157, 247, 318], "thu": [91, 319, 321], "enabl": [91, 114, 116, 127, 152, 155, 157, 159, 162, 165, 168, 170, 176, 201, 311, 312, 315, 317, 321], "dxl_lib": 99, "magicmock": 99, "nameerror": 103, "calculate_light_sheet_exposure_tim": [103, 105, 106, 108, 110], "full_chip_exposure_tim": [103, 105, 106, 108, 110], "shutter_width": [103, 105, 106, 108, 110], "exposur": [103, 105, 106, 108, 110, 114, 116, 130, 132, 142, 144, 157, 183, 203, 245, 247, 249, 310], "light": [103, 105, 106, 108, 110, 247, 319, 321], "sheet": [103, 105, 106, 108, 110, 247, 319, 321], "roll": [103, 105, 110], "exposure_tim": [103, 105, 106, 108, 110, 114, 116, 130, 132, 142, 144, 157, 245, 247, 251, 310, 319], "camera_line_interv": [103, 105, 106, 108, 110, 247], "hamamatsuorca": [103, 106, 108, 110, 310, 319], "interv": [103, 105, 106, 108, 110, 247, 310, 321], "close_camera": [103, 105, 106, 108, 110], "get_line_interv": [103, 105, 106, 108, 110], "line_interv": [103, 108, 110, 319], "get_offset_variance_map": [103, 105, 106, 108, 110, 247], "filenotfounderror": [103, 105, 106, 108, 110, 282], "set_readout_direct": [103, 105, 106, 108, 110], "bottom": [103, 105, 106, 108, 110, 316, 319], "bytrigg": [103, 105, 106, 110], "diverg": [103, 105, 106, 110], "camera_control": [103, 105, 106, 108, 110], "camera_paramet": [103, 105, 106, 108, 110], "is_acquir": [103, 105, 106, 108, 110, 247], "max_image_height": [103, 105, 106, 108, 110], "height": [103, 105, 106, 108, 110, 184, 245, 279], "max_image_width": [103, 105, 106, 108, 110], "min_image_height": [103, 105, 106, 108, 110], "min_image_width": [103, 105, 106, 108, 110], "step_image_height": [103, 105, 106, 108, 110], "step_image_width": [103, 105, 106, 108, 110], "camerabas": [105, 108, 110], "orca": [105, 108], "flash": [105, 108, 317], "fusion": 105, "lightn": 105, "serial_numb": [105, 106, 108, 110, 163, 170, 310, 319], "302158": [105, 310, 319], "302159": 105, "302352": [105, 310, 319], "lightsheet_rolling_shutter_width": [105, 319], "608": [105, 319], "defect_correct_mod": [105, 319], "off": [105, 130, 132, 135, 137, 181, 245, 247, 316], "On": 105, "x_pixels_step": 105, "y_pixels_step": 105, "x_pixels_min": 105, "y_pixels_min": 105, "exposure_time_rang": [105, 319], "1000": [105, 310, 311, 319], "flip_x": 105, "flip_i": 105, "calculate_readout_tim": [105, 106, 108, 110], "assum": [105, 106, 119, 174, 176, 179, 203, 223, 234, 238, 241, 243, 275, 282, 310, 320], "c13440": [105, 106], "link": [105, 106, 275], "commun": [105, 106, 120, 125, 127, 153, 184, 310, 319], "pull": [105, 106, 311, 319], "readout_tim": [105, 106, 108, 110, 144, 183, 245], "max_frame_r": [105, 106, 108, 110], "framer": [105, 106, 108, 110], "think": [105, 106], "get_property_valu": [105, 106, 111], "close_image_seri": [105, 106, 108, 110], "seri": [105, 106, 108, 110], "stop": [105, 106, 108, 110, 116, 130, 132, 142, 144, 152, 155, 157, 159, 162, 165, 168, 170, 182, 184, 207, 210, 218, 245, 247], "line_interval_tim": [105, 106, 108, 110], "get_minimum_waiting_tim": [105, 106, 108, 110], "cyclic_trigger_period": [105, 106, 108], "minimum_trigger_blank": [105, 106, 108], "minimum_trigger_interv": [105, 106, 108], "trigger_blank": [105, 106, 108], "bigger": [105, 106, 108], "trigger_interv": [105, 106, 108], "get_new_fram": [105, 106, 108, 110], "initialize_image_seri": [105, 106, 108, 110], "data_buff": [105, 106, 108, 110, 183, 184, 223, 245, 247], "number_of_fram": [105, 106, 108, 110, 184, 245, 247], "100": [105, 106, 108, 110, 182, 310, 317, 319], "report_set": [105, 106, 108, 110], "consol": [105, 106], "set_roi": [105, 106, 108, 110], "roi_height": [105, 106, 108, 110], "2048": [105, 106, 110, 319], "roi_width": [105, 106, 108, 110], "region": [105, 106, 108, 110, 194, 288], "success": [105, 106, 152, 157, 159, 162, 165, 168, 170, 192, 193, 197, 198, 200, 227, 245, 247, 315], "set_bin": [105, 106, 108, 110], "binning_str": [105, 106, 108, 110], "bin": [105, 106, 108, 110, 247, 319], "1x1": [105, 106, 108, 319], "2x2": [105, 106, 108, 110], "4x4": [105, 106, 108, 110], "8x8": [105, 106, 108, 110], "16x16": [105, 106, 108], "1x2": [105, 106, 108], "2x4": [105, 106, 108], "set_exposure_tim": [105, 106, 108, 110], "unit": [105, 106, 108, 110, 152, 155, 162, 249, 250, 251, 252, 253, 254, 256, 317, 321], "millisecond": [105, 106, 108, 110, 247, 310, 312, 319], "set_line_interv": [105, 106, 108, 110], "set_sensor_mod": [105, 106, 108, 110], "sensor": [105, 106, 108, 110, 210, 247], "chip": 106, "photometr": 108, "kinetix": 108, "warn": [108, 124], "hard": [108, 111, 189], "3200": 108, "successfulli": [108, 153, 184, 245, 277, 321], "down": [108, 251, 279, 316], "programm": 108, "static": [108, 189], "generate_new_fram": 110, "load_imag": [110, 247], "pre": [110, 114, 116, 215, 247, 311, 316], "camera_exposure_tim": 110, "current_frame_idx": 110, "num_of_fram": [110, 247], "pre_frame_idx": 110, "random_imag": 110, "idprop": 111, "property_dict": 111, "property_valu": 111, "set_property_valu": 111, "calculate_all_waveform": [114, 116, 245], "sweep_tim": [114, 116, 130, 132, 142, 144, 157, 245, 249, 250, 251, 252, 253, 254, 256, 319], "organ": [114, 116, 216], "sweep": [114, 116, 130, 132, 142, 144, 157, 183, 245], "waveform_dict": [114, 116, 130, 132, 142, 144, 157], "etl": [114, 116, 285], "plu": [114, 116], "enable_microscop": [114, 116], "camera_delai": [114, 116, 249, 251], "camera_delay_perc": [114, 116, 130, 132, 142, 144, 157], "percentag": [114, 116, 194, 225, 226, 228, 229, 245, 255], "camera_high_tim": [114, 116], "high": [114, 116, 192, 288, 317], "camera_pulse_perc": [114, 116], "daq_paramet": [114, 116], "remote_focus_ramp_fal": [114, 116, 130, 132, 142, 144, 157], "ramp": [114, 116, 130, 132, 142, 144, 251], "fall": [114, 116, 142, 144, 251], "sample_r": [114, 116, 130, 132, 142, 144, 157, 249, 250, 251, 252, 253, 254, 256, 319], "waveform_expand_num": [114, 116], "expand": [114, 116, 299, 319], "waveform_repeat_num": [114, 116], "daqbas": 116, "add_camera": 116, "close_task": [116, 130, 132, 142, 144], "counter": [116, 321], "create_camera_task": 116, "create_galvo_remote_focus_task": 116, "create_master_trigger_task": 116, "master": 116, "prepare_acquisit": [116, 245, 247], "channel_kei": [116, 130, 132, 142, 144], "prepar": [116, 130, 132, 142, 144, 187, 189, 197, 200, 203, 207, 208, 210, 245, 247], "run_acquisit": [116, 247], "set_external_trigg": 116, "external_trigg": 116, "extern": [116, 221, 319, 321], "start_task": [116, 130, 132, 142, 144], "won": 116, "run_task": 116, "stop_acquisit": [116, 247], "stop_task": [116, 130, 132, 142, 144], "update_analog_task": 116, "board_nam": 116, "board": [116, 321], "write_waveforms_to_task": 116, "analog_output": 116, "is_updating_analog_task": 116, "trigger_mod": [116, 319], "wait_to_run_lock": 116, "filterwheelbas": [119, 124, 127], "asi": [119, 120, 152, 153, 203, 310, 319], "asiimag": [119, 152], "fw_1000": 119, "fw": 119, "1000_ascii_command_set": 119, "check_if_filter_in_filter_dictionari": [119, 122, 124, 127], "filter_nam": [119, 122, 124, 127], "filter_exist": [119, 122, 124, 127], "port": [119, 120, 124, 125, 127, 137, 153, 166, 176, 177, 310, 319, 321], "filter_change_delai": [119, 124, 127], "40m": 119, "adjac": 119, "set_filt": [119, 124, 127], "wait_until_don": [119, 124, 127, 152, 157, 159, 162, 165, 168, 170, 174, 176, 179, 245, 247], "active_filter_wheel": 119, "filter_dictionari": [119, 122, 124, 127], "tiger": [119, 120, 152, 153, 245], "filter_wheel_posit": 119, "number_of_filter_wheel": [119, 124, 127], "wait_until_done_delai": [119, 124, 127], "wheel_posit": [119, 122, 124, 127], "comport": [120, 125, 127], "baudrat": [120, 125, 127, 310, 319], "115200": [120, 153, 310, 319], "25": [120, 125, 166], "build": [120, 125, 160, 166, 266, 274, 316], "asifilterwheel": 120, "com1": [120, 125, 127, 153], "baud": [120, 125, 127, 153, 166], "tiger_control": [120, 152, 245], "tigercontrol": 120, "sutter": [124, 125, 166, 312], "lambda": [124, 125, 297], "manual": 124, "lb10": 124, "3_opman": 124, "retriev": [124, 157, 184, 215, 274, 285, 311], "delay_matrix": 124, "page": [124, 139], "38": [124, 319], "rang": [124, 152, 187, 189, 193, 218, 315], "num_byt": [124, 127], "userwarn": [124, 125, 165], "respond": 124, "init_finish": 124, "softwar": [124, 157, 159, 168, 170, 247, 310, 311, 313, 316, 317, 321, 322], "complet": [124, 200, 209, 211, 215, 316], "read_on_init": 124, "movement": [124, 152, 155, 157, 159, 162, 165, 168, 170, 196, 201, 310, 319], "sutterfilterwheel": [125, 310, 319], "9600": [125, 127, 153, 310, 319], "instal": [127, 247, 311, 318, 321, 322], "period": [127, 251], "galvo_id": [130, 132], "galvanomet": [130, 245, 318], "adjust": [130, 132, 142, 144, 192, 193, 201, 245, 247, 310, 321], "basi": [130, 132, 321], "channel_1": [130, 132], "channel_2": [130, 132], "prepare_task": [130, 132, 142, 144], "turn_off": [130, 132, 135, 137], "device_config": [130, 132, 135, 137, 142, 144, 311], "galvo_max_voltag": [130, 132, 157], "voltag": [130, 132, 142, 144, 157, 250, 251, 253, 256], "galvo_min_voltag": [130, 132, 157], "galvo_nam": [130, 132], "galvo_waveform": [130, 132, 311], "sawtooth": [130, 132, 251, 311], "rise": [130, 132, 251], "galvobas": 132, "laser_id": [135, 137], "initialize_las": [135, 137], "set_pow": [135, 137], "laser_intens": [135, 137], "power": [135, 137, 190, 245, 310, 313, 316, 319], "intens": [135, 137, 223, 254, 259, 260, 261], "turn_on": [135, 137], "laserbas": 137, "calculate_entrance_pupil": 139, "entranc": 139, "pupil": 139, "incid": 139, "angl": 139, "fluoresc": 139, "interfer": 139, "contrast": 139, "carolin": 139, "ajo": 139, "franklin": 139, "prasad": 139, "ganesan": 139, "steven": 139, "boxer": 139, "biophi": 139, "volum": [139, 297], "89": 139, "issu": [139, 311, 320], "octob": 139, "2005": 139, "2759": 139, "2769": 139, "entrance_pupil_diamet": 139, "diamet": 139, "millimet": [139, 162], "nidaqmx": 142, "percent_smooth": [142, 144, 255, 319], "smooth": [142, 144, 245, 255, 319], "remote_focus_delai": [142, 144, 157, 251], "remote_focus_max_voltag": [142, 144], "remote_focus_min_voltag": [142, 144], "remotefocusbas": 144, "volt": [144, 157, 250, 251, 252, 253, 254, 256, 321], "close_shutt": [147, 149], "open_shutt": [147, 149], "shutter_st": [147, 149], "state": [147, 149, 152, 207, 208, 210, 247, 299, 310, 316, 319], "shutterbas": 149, "deliv": [149, 321], "device_id": [152, 155, 157, 159, 162, 165, 168, 170], "stagebas": [152, 157, 159, 162, 165, 168, 170], "scientif": 152, "instrument": [152, 157, 162, 163, 310, 317], "serial_command": 152, "command_quick_start": 152, "firmwar": 152, "distanc": [152, 189, 196, 288, 295, 296, 297, 312], "10th": 152, "ever": 152, "ftp": [152, 321], "stilt": 152, "strain": 152, "system": [152, 216, 223, 245, 247, 259, 260, 261, 310, 311, 317, 319, 320, 321], "get_abs_posit": [152, 155, 157, 159, 162, 165, 168, 170], "axis_ab": [152, 155, 157, 159, 162, 165, 168, 170], "request": [152, 155, 157, 159, 162, 165, 168, 170, 184, 286, 311], "absolut": [152, 155, 157, 159, 162, 165, 168, 170, 311], "get_axis_posit": [152, 168], "get_position_dict": [152, 155, 157, 159, 162, 165, 168, 170], "get_spe": [152, 168], "veloc": [152, 165, 168, 203, 310, 319, 321], "move_absolut": [152, 157, 159, 162, 165, 168, 170], "move_dictionari": [152, 155, 157, 159, 162, 165, 168, 170], "x_ab": [152, 155, 157, 159, 162, 165, 168, 170], "micromet": [152, 155, 157, 159, 162, 165, 168, 170, 312], "degre": [152, 155, 157, 159, 162, 165, 168, 170, 203], "spot": [152, 157, 159, 162, 165, 168, 170], "move_axis_absolut": [152, 157, 159, 162, 165, 168, 170], "abs_po": [152, 157, 159, 162, 165, 168, 170], "command": [152, 174, 179, 181, 247, 311, 320], "prefix": [152, 157], "x_min": [152, 157, 165, 310, 319], "report_posit": [152, 157, 159, 162, 165, 168, 170], "scanr": [152, 168], "start_position_mm": [152, 168], "end_position_mm": [152, 168], "enc_divid": [152, 168], "end": [152, 168, 184, 189, 193, 200, 201, 207, 208, 210, 215, 218, 225, 226, 245, 247, 310, 311, 315, 316], "encod": [152, 168, 203, 321], "set_spe": [152, 168], "velocity_dict": [152, 168], "start_scan": [152, 168], "abruptli": [152, 155, 157, 159, 162, 165, 168], "stop_scan": [152, 168], "verify_abs_posit": [152, 155, 157, 159, 162, 165, 168, 170], "is_strict": [152, 155, 157, 159, 162, 165, 168, 170], "y_ab": [152, 155, 157, 159, 162, 165, 168, 170], "abs_posit": [152, 155, 157, 159, 162, 165, 168, 170], "verify_mov": 152, "submit": 152, "aren": 152, "res_dict": 152, "axes_map": [152, 155, 157, 159, 162, 165, 168, 170, 310, 319], "stage_feedback": [152, 155, 157, 159, 162, 165, 168, 170], "feedback": [152, 155, 157, 159, 162, 165, 168, 170, 320], "stage_limit": [152, 155, 157, 159, 162, 165, 168, 170], "com_port": [153, 166], "baud_rat": [153, 166], "asi_stag": 153, "x_po": [155, 162, 310], "y_po": [155, 162, 310], "matter": [155, 162], "piezo": 157, "nation": [157, 317], "calculate_waveform": 157, "logic": [157, 159, 165, 168, 170, 210, 211], "axes_channel": [157, 319], "trigger_sourc": [157, 319, 321], "volts_per_micron": [157, 319], "mad": [159, 160, 317], "citi": [159, 160, 317], "lab": [159, 160, 311, 317, 320], "mcl": 159, "mcl_control": 159, "serialnum": [160, 171], "stage_connect": [160, 163], "physik": [162, 163], "pi": [162, 163, 252, 256, 310, 319], "xyzf": 162, "position_dict": [162, 168, 170], "wait_on_target": 162, "pi_ax": 162, "pi_devic": [162, 163], "pi_tool": [162, 163], "controller_nam": 163, "reference_mod": 163, "863": 163, "0112345678": 163, "111": 163, "1dg": 163, "frf": [163, 310, 319], "mp": [165, 312], "285": [165, 312], "mp285": [165, 166], "device_ax": 165, "stage_x_po": 165, "stage_y_po": 165, "stage_z_po": 165, "sutterstag": 166, "load_sampl": 168, "mm": [168, 203], "divid": [168, 203, 228, 288], "unload_sampl": 168, "unload": [168, 247], "default_spe": 168, "thorlab": [170, 171, 310, 317, 319], "kim": [170, 171], "kim_ax": 170, "kim_control": [170, 171], "device_control": 174, "build_stage_dict": [174, 176, 179], "stage_posit": [174, 176, 179, 245, 319], "ideal": [174, 176, 179, 311, 316], "solvent": [174, 176, 179], "babb": [174, 176, 179, 319], "63x": [174, 176, 179, 319], "1x": [174, 176, 179, 319], "70775": [174, 176, 179], "2x": [174, 176, 179, 251, 317, 319], "72455": [174, 176, 179], "3x": [174, 176, 179, 319], "72710": [174, 176, 179], "4x": [174, 176, 179, 319], "72795": [174, 176, 179], "5x": [174, 176, 179, 319], "72850": [174, 176, 179], "6x": [174, 176, 179, 319], "72880": [174, 176, 179], "refract": [174, 176, 179, 259, 260, 261], "servo": [174, 176, 177, 179, 321], "read_posit": [174, 176, 179], "cur_posit": [174, 176, 179], "set_zoom": [174, 176, 179], "confirm": [174, 176, 179, 223, 316, 321], "tha": [174, 179], "zoomdict": [174, 176, 179], "zoomvalu": [174, 176, 179], "zoombas": [176, 179], "dynamixel": 176, "4096": 176, "addr_mx_goal_posit": 176, "goal": 176, "addr_mx_moving_spe": 176, "addr_mx_p_gain": 176, "addr_mx_present_posit": 176, "addr_mx_torque_en": 176, "torqu": 176, "addr_mx_torque_limit": 176, "goal_position_offset": 176, "port_num": [176, 177], "sleeptim": 176, "sleep": 176, "torque_dis": 176, "disabl": [176, 319], "torque_en": 176, "dynamixelzoom": [177, 310, 319], "dummyview": 181, "sec": 181, "append": [181, 184, 218, 247, 291], "sent": 181, "oldest": 181, "pop": [181, 218], "move_stag": [181, 245, 247], "configuration_control": 181, "configurationcontrol": 181, "menu_control": 181, "menu": [181, 316], "menucontrol": 181, "off_stage_po": 181, "stage_po": 181, "timecost": 182, "cost": 182, "pipe": [182, 184, 247], "generate_messag": 182, "sendout": 182, "receiv": [182, 184, 201, 211, 212, 225, 226, 247], "in_port": 182, "msg_count": 182, "out_port": 182, "sendout_msg_count": 182, "stop_flag": [182, 184], "devices_dict": [183, 245], "calculate_exposure_sweep_tim": [183, 245], "data_func": [184, 194, 195, 198, 200, 247], "respons": [184, 187, 190, 192, 194, 196, 207, 208, 209, 210, 211, 212, 215, 245, 318], "continu": [184, 193, 195, 196, 201, 320, 321], "applic": [184, 187, 208, 210, 311], "shutdown": [184, 321], "signal_func": [184, 192, 193, 195, 196, 197, 199, 200, 201, 227], "reset": [184, 203, 207, 208, 210], "frame_id": [184, 187, 189, 194, 195, 198, 200, 201, 223, 225, 226, 247], "increment": [184, 225, 226, 310, 317], "util": [184, 187], "end_flag": [184, 207, 210], "feature_list": [184, 216, 219, 220, 221, 247], "active_microscop": [184, 247], "dummymicroscop": 184, "active_microscope_nam": [184, 234, 247], "data_buffer_posit": [184, 247], "data_contain": 184, "data_pip": 184, "data_record": 184, "data_thread": [184, 247], "dummydevic": 184, "img_height": [184, 245, 247], "img_width": [184, 245, 247], "signal_contain": 184, "signal_pip": 184, "signal_record": 184, "signal_thread": [184, 247], "autofocu": [187, 247, 316], "measur": [187, 288], "microscopemodel": [187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "config_t": [187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 223, 225, 316], "node": [187, 192, 193, 196, 200, 201, 207, 208, 209, 210, 211, 212, 216, 316], "pre_func_sign": [187, 189, 203, 225, 226, 316], "in_func_sign": [187, 189, 225, 226, 316], "action": [187, 192, 201, 207, 211, 212], "end_func_sign": [187, 189, 225, 226, 316], "pre_func_data": [187, 189, 225, 226, 316], "in_func_data": [187, 189, 225, 226, 316], "end_func_data": [187, 189, 225, 226, 316], "involv": [187, 192, 193, 195, 196, 197, 198, 199, 200, 201, 208, 210], "autom": [187, 196, 318], "carri": [187, 192], "device_ref": 189, "autofocus_frame_queu": 189, "autofocus_pos_queu": 189, "max_entropi": [189, 247], "f_frame_id": 189, "frame_num": 189, "init_po": 189, "f_po": [189, 310], "focus_po": [189, 247], "target_frame_id": 189, "get_frames_num": 189, "plot_data": 189, "total_frame_num": 189, "fine_step_s": 189, "fine": [189, 311], "fine_pos_offset": 189, "coarse_step_s": 189, "coars": [189, 317], "coarse_step": 189, "signal_id": 189, "target_channel": 189, "routin": [189, 190, 286, 318, 320], "get_autofocus_frame_num": 189, "best": [189, 311], "get_step": 189, "step_siz": [189, 310, 319], "autofocus": 189, "travel": 189, "pos_offset": 189, "figur": [189, 311], "robust_autofocu": 189, "robust": 189, "amplitud": [189, 190, 250, 251, 252, 253, 254, 256, 319], "alpha": [189, 190], "unfortun": 189, "unstabl": 189, "x_offset": [190, 310, 319], "y_offset": [190, 310, 319], "tent": 190, "curv": 190, "resolution_mod": 192, "zoom_valu": 192, "reconfigur": [192, 316], "cleanup": [192, 196, 200, 201, 203, 207, 208, 210, 216, 247, 316], "accordingli": [192, 196, 199], "typic": [192, 196, 197, 198, 207, 208, 210, 211, 215, 219, 221, 251, 311], "adapt": 192, "resum": [192, 196, 247, 315], "scanrang": 193, "n_plane": [193, 319], "offset_start": 193, "offset_end": 193, "offset_step_s": 193, "need_to_move_new_plan": 193, "offset_update_tim": 193, "conpro_cycling_mod": 193, "cycl": [193, 201], "per_stack": [193, 201], "device_rel": [193, 201, 209, 211, 212, 316], "pre_signal_func": [193, 200, 201], "signal_end": [193, 201], "generate_meta_data": [193, 223], "update_channel": [193, 201], "overlap": [194, 234, 288, 289], "target_resolut": [194, 234], "nanoscal": [194, 234, 319], "target_zoom": [194, 234], "grid": [194, 289], "interest": 194, "preprocess": [194, 228], "box": [194, 297, 316, 320, 321], "step_by_fram": 195, "data_fram": 195, "ontain": 195, "flexibl": [195, 199, 321], "dynam": [195, 199, 221, 316], "track": [195, 200, 207, 210, 225, 226, 289], "decrement": 195, "advanc": [196, 310, 311, 316], "tabl": [196, 215, 291], "pre_z": 196, "current_idx": 196, "multiposition_t": 196, "position_count": 196, "stage_distance_threshold": 196, "paus": [196, 199, 247, 310], "proper": [196, 320, 321], "virtual": [197, 245, 247], "primari": [197, 316], "readi": [197, 228, 245, 247], "transit": [197, 208, 210], "prepare_next_channel": [197, 245], "captur": [198, 225, 226], "pause_num": 199, "microscopest": [199, 223, 234, 316], "pause_signal_lock": 200, "pause_data_lock": 200, "first_enter_nod": 200, "variablewithlock": 200, "enter": [200, 320], "pre_data_func": [200, 201], "manner": [200, 310, 319], "slower": 200, "improv": [200, 311], "proce": 200, "help": [200, 310, 311, 315, 319], "held": 200, "get_origin": 201, "saving_flag": 201, "saving_dir": 201, "origin": [201, 320], "number_z_step": 201, "start_z_posit": 201, "start_focu": 201, "z_step_siz": 201, "focus_step_s": 201, "current_position_idx": 201, "being": [201, 263], "current_z_posit": 201, "current_focus_posit": 201, "need_to_move_new_posit": 201, "need_to_move_z_posit": 201, "z_position_moved_tim": 201, "stack_cycling_mod": 201, "image_writ": [201, 247], "imagewrit": [201, 247, 316], "in_data_func": 201, "incom": 201, "end_data_func": 201, "cleanup_data_func": 201, "inject": 203, "rotari": 203, "45": 203, "396": 203, "nm": [203, 259, 260, 261, 317], "quadratur": 203, "88": 203, "motion": [203, 317], "optic": [203, 259, 260, 261, 319], "root": [207, 208, 210, 216, 238, 241, 243, 301, 302], "cleanup_list": [207, 208, 210], "tree": [207, 208, 209, 210, 211, 212, 216, 316], "consist": [207, 210, 310, 311, 315], "treenod": [207, 208, 209, 210, 211], "curr_nod": [207, 210], "is_clos": [207, 210], "serv": [207, 213, 214], "special": [208, 209, 210, 315], "analysi": [208, 286, 316], "mark": [208, 209, 247], "feature_nam": [209, 211, 212], "func_dict": [209, 211, 212], "node_typ": [209, 211, 212, 316], "need_respons": [209, 211, 212, 316], "those": [209, 211, 212], "is_mark": 209, "node_nam": [209, 211, 212], "node_func": [209, 211, 212], "is_initi": [209, 211, 212], "sibl": [209, 211, 212, 216], "statu": [209, 286], "meet": [209, 311], "criteria": 209, "set_properti": [209, 211, 212], "number_of_execut": 210, "remaining_number_of_execut": 210, "wait_respons": [210, 211], "placehold": [213, 214, 229], "unus": [213, 214], "often": [213, 319], "situat": [213, 214], "context": 213, "feature_modul": 215, "func_typ": 215, "essenti": 215, "init": [215, 316], "dummy_func": 215, "dummy_tru": 215, "signalnod": 216, "datanod": 216, "signalcontain": 216, "datacontain": 216, "shared_vari": 216, "create_nod": 216, "build_feature_tre": 216, "assist": 216, "particularli": 218, "shared_list__": 218, "__name__": 218, "__str__": 218, "compon": [218, 245, 321], "meaning": 218, "shallow": 218, "occurr": 218, "9223372036854775807": 218, "indexerror": 218, "IN": 218, "ascend": 218, "descend": 218, "transmit": 219, "parenthes": [219, 316, 320], "squar": [219, 228, 260], "bracket": [219, 319], "network": 219, "func1": [219, 221], "arg1": [219, 221], "arg2": [219, 221], "func2": [219, 221], "func3": [219, 221], "arg3": [219, 221], "func4": [219, 221], "feature_parameter_setting_path": 221, "function_nam": 221, "yml": [221, 277], "inspect": 221, "value1": 221, "value2": 221, "sub_dir": 223, "image_nam": 223, "disk": [223, 275, 276, 277], "ext": 223, "meta": 223, "save_imag": 223, "data_sourc": 223, "mip": 223, "project": [223, 319], "mip_directori": 223, "num_of_channel": 223, "calculate_and_check_disk_spac": 223, "suffici": [223, 225, 226], "wherea": [223, 319], "64": 223, "color": 223, "vestigi": 223, "75": [225, 226], "detect_func": [225, 226], "analyz": [225, 226, 229], "consid": [225, 226, 228, 229, 245, 311], "detect_tissu": [225, 226], "phase": [225, 226, 252, 253, 256, 319], "position_record": [226, 227], "detecttissueinstack": [226, 316], "position_flag": 227, "remove_posit": 227, "slide": 228, "approach": [228, 321], "service_url": 232, "flipx": 234, "flipi": 234, "debug": 234, "outer": 234, "img": 235, "xl": 235, "yl": 235, "xu": 235, "yu": 235, "65535": 235, "xmlmetadata": [238, 243], "xml": [238, 241, 243, 301, 302], "section": [238, 315, 318, 320], "arxiv": 238, "ab": 238, "1412": 238, "0488": 238, "affine_matrix_to_stage_posit": 238, "mat": 238, "affin": 238, "parse_xml": [238, 241], "pars": [238, 241, 285, 301, 302], "stage_positions_to_affine_matrix": 238, "to_xml": [238, 241, 243], "write_xml": [238, 241, 243], "header": [238, 241, 243, 293], "om": [241, 243, 302], "proprietari": 241, "address": [241, 320], "_xml_dict": 241, "ome_tiff_xml_dict": [241, 243], "Will": [241, 312], "xml_tool": 241, "openmicroscopi": 243, "uid": 243, "heirarch": 243, "ome_dict": 243, "is_virtu": 245, "assemble_device_config_list": 245, "device_nam": [245, 311], "device_name_dict": 245, "assembl": 245, "device_config_list": 245, "device_name_list": 245, "end_acquisit": [245, 247], "get_readout_tim": 245, "get_stage_posit": [245, 247], "load_and_start_devic": 245, "is_list": 245, "device_ref_nam": 245, "move_remote_focu": 245, "pos_dict": [245, 247, 263], "update_focu": 245, "central": 245, "move_stage_offset": 245, "former_microscop": 245, "experiment": 245, "stop_stag": [245, 247], "turn_off_las": 245, "turn_on_las": 245, "update_data_buff": [245, 247], "update_stage_limit": 245, "limits_flag": 245, "ask_stage_for_posit": 245, "ask": [245, 247], "available_channel": 245, "central_focu": 245, "current_laser_index": 245, "laser_wavelength": 245, "wavelength": [245, 259, 260, 261, 319], "ret_pos_dict": [245, 247], "stages_list": 245, "use_gpu": [247, 286], "event_queu": 247, "architectur": [247, 311, 317, 318], "gpu": [247, 286, 317, 318], "argpars": [247, 285, 286], "namespac": [247, 285, 286, 302], "change_resolut": 247, "resolution_valu": 247, "create_pip": 247, "pipe_nam": 247, "duplex": 247, "end1": 247, "destroy_virtual_microscop": 247, "destroi": 247, "disconnect": 247, "get_active_microscop": 247, "get_camera_line_interval_and_exposure_tim": 247, "number_of_pixel": 247, "get_data_buff": 247, "512": 247, "get_feature_list": 247, "idx": 247, "feature_list_str": 247, "get_microscope_info": 247, "microscope_info": 247, "offset_variance_map": 247, "launch_virtual_microscop": 247, "load_feature_list_from_fil": 247, "load_feature_list_from_str": 247, "load_feature_record": 247, "folcer": 247, "pause_data_thread": 247, "turn_off_flag": 247, "release_pip": 247, "resume_data_thread": 247, "run_command": 247, "run_data_process": 247, "run_live_acquisit": 247, "stream": 247, "gui": [247, 291, 318], "recalcul": 247, "therebi": 247, "peopl": 247, "simplified_data_process": 247, "show_img_pip": 247, "snap_imag": 247, "due": 247, "update_ilastik_set": 247, "display_segment": 247, "mark_posit": 247, "target_label": 247, "ilastik": [247, 319], "label": 247, "acquisition_count": 247, "ask_to_pause_data_thread": 247, "autofocus_on": 247, "camera_wait_iter": 247, "abort": 247, "current_exposure_tim": 247, "f_posit": 247, "image_count": 247, "writer": 247, "imaging_mod": 247, "is_liv": 247, "is_sav": 247, "physic": [247, 310, 319], "pause_data_ev": 247, "pause_data_ready_lock": 247, "plot_pip": 247, "plot": 247, "pre_exposure_tim": 247, "start_tim": 247, "stop_send_sign": 247, "total_acquisition_count": 247, "total_image_count": 247, "virtual_microscop": 247, "100000": [249, 250, 251, 252, 253, 254, 256, 310, 319], "meant": 249, "visual": [249, 320], "hz": [249, 250, 251, 252, 253, 254, 256], "exposure_start": 249, "exposure_end": 249, "reson": 250, "drive": [250, 253, 256, 318], "typical_galvo": [250, 252], "24": 251, "linearli": 251, "drop": [251, 316], "right": [251, 279, 288, 316, 320, 321], "exchang": 251, "etl_ramp": 251, "tunable_lens_ramp": 251, "etl_delai": 251, "frequenc": [252, 253, 256, 319], "duty_cycl": [252, 256, 319], "50": [252, 256, 319], "5707963267948966": 252, "radian": [252, 253, 256], "sine": [253, 319], "typical_las": [253, 256], "pulse_width": 254, "ttl": 254, "typical_ttl_puls": 254, "convolut": 255, "smoothed_waveform": 255, "141592653589793": 256, "na": [259, 260, 261], "wvl": [259, 260, 261], "radial": [259, 260, 261], "waist": [259, 260, 261], "apertur": [259, 260, 261], "r0": [259, 261], "z0": [259, 261], "w0": [259, 261], "i0": [259, 261], "bg0": 259, "rl": 261, "zl": 261, "33": 261, "488": [261, 317, 319], "bg": 261, "common": [263, 321], "model": [263, 311, 313, 316, 318], "variabletyp": 265, "ref_nam": 266, "funclist": 267, "new_func": 267, "module_nam": 269, "file_path": [269, 276], "statement": [272, 311], "wrap_func": 272, "saving_set": 274, "popup": [274, 316], "walk": 275, "everyth": 275, "reachabl": 275, "symbol": 275, "caution": 275, "danger": 275, "config_data": 276, "file_directori": 277, "content_dict": 277, "image_width": 279, "300": 279, "image_height": 279, "200": [279, 310, 319], "draw": 279, "arrow": 279, "ojbect": 279, "piec": [280, 312], "font": 280, "font_siz": 280, "fp": 282, "lazi": 282, "pil": 282, "containt": 282, "low_res_fp": 282, "2022": 282, "07": 282, "02": [282, 320], "cell_001": 282, "low_r": 282, "imshow": 282, "500": [282, 310, 319], "parser": [284, 285], "argumentpars": [284, 285], "argumentparserobject": 284, "cuda": [286, 317, 320], "dist": 288, "roi_length": 288, "roi": [288, 289], "watch": 288, "sign": [288, 289, 295, 296], "num_til": 288, "x_start": 289, "x_tile": 289, "x_length": 289, "x_overlap": 289, "y_start": 289, "y_tile": 289, "y_length": 289, "y_overlap": 289, "z_start": 289, "z_tile": 289, "z_length": 289, "z_overlap": 289, "theta_start": 289, "theta_til": 289, "theta_length": 289, "theta_overlap": 289, "f_start": 289, "f_tile": 289, "f_length": 289, "f_overlap": 289, "fov": 289, "rotat": [289, 319], "n_posit": 289, "po": 291, "redraw": 291, "panda": 291, "datafram": 291, "multi_position_t": 291, "multiposit": 291, "begin_start": 293, "half": 295, "subsample_z": 297, "nxnxn": 297, "euclidean": 297, "rescal": 297, "subsampl": [297, 319], "128": 297, "29": 297, "waveform_template_nam": 299, "waveform_template_dict": 299, "microscope_state_dict": 299, "repeat_num": 299, "expand_num": 299, "tag": 301, "elementtre": 302, "etre": 302, "fullnam": [307, 308], "escap": [307, 308], "underlin": [307, 308], "rubric": 308, "endfor": 308, "endif": 308, "endblock": 308, "filter_wheel": [310, 319], "com19": [310, 319], "number_of_wheel": [310, 319], "controllernam": [310, 319], "884": [310, 319], "l": [310, 317, 319], "509": [310, 317, 319], "20dg10": [310, 317, 319], "40dg10": [310, 319], "060": [310, 319], "dg": [310, 319], "406": [310, 319], "4pd": [310, 319], "nostag": [310, 319], "refmod": [310, 319], "119060508": [310, 319], "74000375": [310, 319], "servo_id": [310, 319], "com18": [310, 319], "1000000": [310, 319], "manufactur": [310, 312, 319, 321], "123456789": [310, 319], "com7": [310, 319], "instanti": [310, 319], "eg": [310, 319], "emploi": [310, 319], "syntheticstag": [310, 319], "987654321": [310, 319], "notic": [310, 319], "syntheticzoom": [310, 319], "abbrevi": 310, "y_unload_posit": 310, "10000": [310, 319], "y_load_posit": 310, "90000": 310, "startfocu": 310, "75000": 310, "x_max": [310, 319], "33500": 310, "16000": 310, "y_max": [310, 319], "y_min": [310, 319], "z_max": [310, 319], "50000": 310, "z_min": [310, 319], "25000": 310, "f_max": [310, 319], "f_min": [310, 319], "theta_max": [310, 319], "360": [310, 319], "theta_min": [310, 319], "x_rot_posit": 310, "y_rot_posit": 310, "z_rot_posit": 310, "x_step": [310, 319], "y_step": [310, 319], "z_step": [310, 319], "theta_step": [310, 319], "f_step": [310, 319], "25250": 310, "40000": 310, "z_po": 310, "70000": 310, "theta_po": 310, "z_offset": [310, 319], "f_offset": [310, 319], "theta_offset": [310, 319], "explicil": [310, 319], "explictli": 310, "fashion": 310, "queri": 310, "awar": 310, "pimikromov": 310, "third": [310, 319], "spinbox": [310, 319], "develop": [310, 318, 319, 321], "plan": [310, 319], "go": [310, 319, 320], "forward": [310, 319], "widget": [310, 319], "tab": 310, "interval_tim": [310, 319], "eventu": 310, "frequent": [310, 320], "ch00": 310, "ch01": 310, "ch02": 310, "laser_pow": [310, 319], "inclus": 310, "stack_acquisit": [310, 319], "start_po": [310, 319], "end_po": [310, 319], "stack_paus": [310, 319], "5000": [310, 319], "welcom": 311, "pleas": [311, 320], "fork": 311, "branch": 311, "review": 311, "practic": 311, "outlin": 311, "refactor": 311, "reach": 311, "prior": [311, 321], "happi": 311, "bring": 311, "discuss": 311, "strong": 311, "especi": 311, "disrupt": 311, "clariti": 311, "team": 311, "merg": 311, "pep8": 311, "importantli": 311, "camelcas": 311, "lowercase_and_separated_by_underscor": 311, "numpydoc": [311, 315], "sphinx": [311, 315], "leverag": 311, "commit": 311, "workflow": [311, 316], "enforc": 311, "ruff": 311, "linter": 311, "black": 311, "formatt": 311, "vscode": 311, "whatev": [311, 321], "conda": [311, 320], "aslm": [311, 312, 316, 318, 319, 320, 321], "pip": [311, 320], "cd": [311, 320], "rare": 311, "complain": 311, "start_stag": 311, "exec": 311, "device_startup_funct": 311, "start_": 311, "noqa": 311, "comment": [311, 315], "easi": [311, 320], "opportun": 311, "alert": 311, "pytest": 311, "appl": 311, "encount": 311, "resolv": 311, "oserror": 311, "ulimit": 311, "hand": 311, "abstract": [312, 318], "layer": [312, 318], "divers": [312, 321], "equip": [312, 317], "accompani": 312, "contribut": [312, 316, 318], "encourag": [313, 316], "engag": [313, 316], "collabor": [313, 316], "guidelin": [313, 318], "restructuredtext": 315, "liter": 315, "example_numpi": 315, "py": 315, "blank": 315, "implicitli": 315, "anytim": 315, "bodi": 315, "indent": 315, "stand": 315, "surround": 315, "unind": 315, "module_level_variable1": 315, "inlin": 315, "mix": [315, 317, 321], "convent": 315, "_numpi": 315, "readthedoc": 315, "en": 315, "latest": 315, "12345": 315, "module_level_variable2": 315, "98765": 315, "span": 315, "colon": 315, "function_with_types_in_docstr": 315, "param1": 315, "param2": 315, "pep": 315, "484": 315, "annot": 315, "_": [315, 321], "function_with_pep484_type_annot": 315, "duplic": 315, "compli": 315, "module_level_funct": 315, "obviou": [315, 318], "paragraph": 315, "example_gener": 315, "yield": 315, "doctest": 315, "illustr": 315, "exampleerror": 315, "msg": 315, "human": 315, "readabl": 315, "exampleclass": 315, "summari": 315, "declar": 315, "decor": [315, 316], "attr1": 315, "attr2": 315, "param3": 315, "attr3": 315, "attr4": 315, "attr5": 315, "readonly_properti": 315, "readwrite_properti": 315, "setter": 315, "notabl": 315, "mention": [315, 319], "example_method": 315, "__special__": 315, "member": 315, "doubl": 315, "underscor": 315, "napoleon_include_special_with_doc": 315, "conf": 315, "__special_without_docstring__": 315, "_privat": 315, "napoleon_include_private_with_doc": 315, "_private_without_docstr": 315, "snap": 316, "pictur": 316, "common_featur": 316, "zstackacquisit": 316, "discret": 316, "cosin": 316, "transform": 316, "volumesearch": 316, "ilastiksegment": 316, "detecttissueinstackandrecord": 316, "removeemptyposit": 316, "constantvelocityacquisit": 316, "changeresolut": 316, "conproacquisit": 316, "findtissuesimple2d": 316, "loopbycount": 316, "movetonextpositioninmultipositiont": 316, "preparenextchannel": 316, "stackpaus": 316, "waittocontinu": 316, "dictat": 316, "cleanup_func_sign": 316, "cleanup_func_data": 316, "acqusit": 316, "failsaf": 316, "latter": 316, "inde": 316, "proceed": 316, "intellig": 316, "explain": 316, "featurelist": 316, "tool": [316, 321], "feature_related_funct": 316, "feature_exampl": 316, "selected_channel": 316, "navig": [316, 320], "4a": 316, "dialog": 316, "analys": 316, "whole": 316, "preview": 316, "ok": 316, "click": [316, 320, 321], "button": [316, 321], "graphic": [316, 320], "omicron": 317, "lighthub": 317, "ultra": 317, "acc": 317, "642": 317, "561": 317, "obi": 317, "unidirect": 317, "bidirect": 317, "repeatablil": 317, "borderlin": 317, "nvidia": [317, 320], "titan": 317, "rtx": 317, "driver": [317, 320, 321], "456": 317, "71": 317, "grabber": [317, 321], "optotun": 317, "electrotun": 317, "len": [317, 321], "blink": 317, "pxie": [317, 321], "1073": 317, "chassi": 317, "pxi6733": [317, 319], "pxi6259": [317, 319, 321], "32mm": 317, "position": 317, "nano": 317, "ut": 318, "southwestern": 318, "ecosystem": 318, "aim": 318, "recip": 318, "maker": 318, "repositori": [318, 320], "minim": 318, "priorit": 318, "stabil": 318, "brutal": 318, "maxim": 318, "biolog": 318, "download": [318, 321], "git": 318, "environ": [318, 319], "troubleshoot": 318, "multiscal": 318, "expans": 318, "opm": 318, "v2": 318, "ct": 318, "v1": 318, "spectral": 318, "tirf": 318, "voicecoil": 318, "deform": 318, "mirror": 318, "mechan": [318, 319], "introduct": 318, "edit": 318, "zach": 318, "marin": 318, "anni": 318, "wang": 318, "dax": 318, "collison": 318, "kevin": 318, "dean": [318, 320], "sampath": 318, "rapuri": 318, "renil": 318, "gupta": 318, "samir": 318, "mamtani": 318, "andrew": 318, "jamieson": 318, "york": 318, "nathaniel": 318, "thayer": 318, "confus": 319, "recommend": [319, 320], "anaconda": [319, 320], "prompt": [319, 320, 321], "sh": [319, 320], "thereaft": 319, "conflict": 319, "master_trigger_out_lin": [319, 321], "camera_trigger_out_lin": [319, 321], "laser_port_switch": 319, "laser_switch_st": 319, "pixel_size_in_micron": 319, "sensor_mod": 319, "readout_direct": 319, "readout_spe": 319, "trigger_act": 319, "trigger_polar": 319, "throughout": 319, "000075": 319, "display_acquisition_subsampl": 319, "average_frame_r": 319, "969": 319, "frames_to_averag": 319, "remote_focus_devic": 319, "ao2": [319, 321], "ramp_rising_perc": 319, "85": 319, "ramp_falling_perc": 319, "ao0": [319, 321], "99": 319, "57079": 319, "wheel_numb": 319, "filter_wheel_delai": 319, "030": 319, "available_filt": 319, "rfp": 319, "595": 319, "31": 319, "far": [319, 320], "red": 319, "blp01": 319, "647r": 319, "blocked1": 319, "blocked2": 319, "blocked3": 319, "blocked4": 319, "blocked5": 319, "blocked6": 319, "earlier": 319, "joystick_ax": 319, "coordin": 319, "agre": [319, 321], "vertic": 319, "vice": 319, "versa": 319, "627": 319, "1711": 319, "2301": 319, "2710": 319, "3079": 319, "3383": 319, "609": 319, "255": 319, "044": 319, "port0": [319, 321], "line0": 319, "onoff": 319, "line2": 319, "luxx": 319, "87": 319, "remote_focus_const": 319, "336": 319, "percent_delai": 319, "562nm": 319, "galvo_const": 319, "mesoscal": 319, "other_const": 319, "duty_wait_dur": 319, "confoc": 319, "url": 319, "127": 319, "repo": 320, "desktop": 320, "friendli": 320, "head": 320, "miniconda": 320, "websit": 320, "handi": 320, "cheatsheet": 320, "accustom": 320, "pin": [320, 321], "taskbar": 320, "mycomput": 320, "firewal": 320, "utsw": 320, "campu": 320, "circumv": 320, "activatin": 320, "upgrad": 320, "clone": 320, "mkdir": 320, "myfoldernam": 320, "thedeanlab": 320, "completet": 320, "upon": [320, 321], "shortcut": 320, "windir": 320, "system32": 320, "cmd": 320, "ex": 320, "script": 320, "bat": 320, "acceler": 320, "tensorflow": 320, "pytorch": 320, "cupi": 320, "excel": 320, "cudnn": 320, "sdk": [320, 321], "450": 320, "80": 320, "tensorrt": 320, "microsoft": 320, "redistribut": 320, "studio": 320, "2015": 320, "2017": 320, "2019": 320, "http_proxi": 320, "swmed": 320, "edu": 320, "3128": 320, "https_proxi": 320, "typo": 320, "perspect": 320, "onlin": 320, "usersuserprofil": 320, "condarc": 320, "usersuserprofilepippip": 320, "ini": 320, "password": 320, "8080": 320, "sever": 321, "6733": 321, "daqmx": 321, "recogn": 321, "visibl": 321, "pinout": 321, "scb": 321, "68a": 321, "breakout": 321, "mislead": 321, "aspect": 321, "wire": 321, "receipt": 321, "determinist": 321, "jitter": 321, "anticip": 321, "dev1": 321, "dev2": 321, "commonli": 321, "line1": 321, "pfi0": 321, "p0": 321, "pfio": 321, "gate": 321, "attach": 321, "outsid": 321, "bank": 321, "ao6": 321, "ao8": 321, "ao9": 321, "ao10": 321, "compet": 321, "ao": 321, "distribut": 321, "across": 321, "ao14": 321, "ao19": 321, "usb": 321, "came": 321, "hcimagel": 321, "intal": 321, "silicon": 321, "firebird": 321, "framegrabb": 321, "apporpri": 321, "x16": 321, "slot": 321, "motherboard": 321, "excap": 321, "ctr0": 321, "pvcam": 321, "term": 321, "unknown": 321, "broadcom": 321, "pci": 321, "kit": 321, "bridg": 321, "dev": 321, "abl": 321, "pvcamtest": 321, "voic": 321, "coil": 321, "linear": 321, "actuat": 321, "plai": 321, "crucial": 321, "role": 321, "aberr": 321, "electromagnet": 321, "axial": 321, "focal": 321, "shift": 321, "sca814": 321, "lfa": 321, "2010": 321, "empow": 321, "cater": 321, "modal": 321, "suit": 321, "seamless": 321, "versatil": 321, "tailor": 321, "research": 321, "sync": 321, "less": 321, "perz": 321, "damag": 321}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [9, 0, 0, "-", "controller"], [16, 0, 0, "-", "log_files"], [25, 0, 0, "-", "model"], [257, 0, 0, "-", "tools"], [303, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_experiment_config"], [8, 1, 1, "", "verify_waveform_constants"]], "aslm.controller": [[10, 0, 0, "-", "configuration_controller"], [12, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[11, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "camera_config_dict"], [11, 4, 1, "", "camera_flip_flags"], [11, 4, 1, "", "camera_pixels"], [11, 3, 1, "", "change_microscope"], [11, 4, 1, "", "channels_info"], [11, 5, 1, "", "configuration"], [11, 4, 1, "", "daq_sample_rate"], [11, 4, 1, "", "filter_wheel_setting_dict"], [11, 5, 1, "", "galvo_num"], [11, 4, 1, "", "galvo_parameter_dict"], [11, 3, 1, "", "get_microscope_configuration_dict"], [11, 3, 1, "", "get_stage_position_limits"], [11, 4, 1, "", "lasers_info"], [11, 5, 1, "", "microscope_config"], [11, 5, 1, "", "microscope_name"], [11, 4, 1, "", "number_of_channels"], [11, 4, 1, "", "remote_focus_dict"], [11, 4, 1, "", "stage_default_position"], [11, 4, 1, "", "stage_flip_flags"], [11, 4, 1, "", "stage_setting_dict"], [11, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[13, 2, 1, "", "SelfLockThread"], [14, 2, 1, "", "SynchronizedThreadPool"], [15, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "daemon"], [13, 3, 1, "", "getName"], [13, 4, 1, "", "ident"], [13, 3, 1, "", "isDaemon"], [13, 3, 1, "", "isLocked"], [13, 3, 1, "", "is_alive"], [13, 3, 1, "", "join"], [13, 4, 1, "", "name"], [13, 4, 1, "", "native_id"], [13, 3, 1, "", "run"], [13, 5, 1, "", "selfLock"], [13, 3, 1, "", "setDaemon"], [13, 3, 1, "", "setName"], [13, 3, 1, "", "start"], [13, 3, 1, "", "unlock"], [13, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [14, 3, 1, "", "createThread"], [14, 3, 1, "", "getRunningThread"], [14, 3, 1, "", "globaltrace"], [14, 3, 1, "", "killThreadInList"], [14, 3, 1, "", "localtrace"], [14, 3, 1, "", "moveToDelete"], [14, 3, 1, "", "registerResource"], [14, 3, 1, "", "removeThread"], [14, 5, 1, "", "resources"], [14, 3, 1, "", "threadTaskWrapping"], [14, 5, 1, "", "toDeleteList"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, 3, 1, "", "__init__"], [15, 5, 1, "", "waitlist"], [15, 5, 1, "", "waitlistLock"]], "aslm.log_files": [[17, 0, 0, "-", "filters"], [20, 0, 0, "-", "log_functions"]], "aslm.log_files.filters": [[18, 2, 1, "", "NonPerfFilter"], [19, 2, 1, "", "PerformanceFilter"]], "aslm.log_files.filters.NonPerfFilter": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "filter"]], "aslm.log_files.filters.PerformanceFilter": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "filter"]], "aslm.log_files.log_functions": [[21, 1, 1, "", "find_filename"], [22, 1, 1, "", "log_setup"], [23, 1, 1, "", "main_process_listener"], [24, 1, 1, "", "update_nested_dict"]], "aslm.model": [[26, 0, 0, "-", "analysis"], [49, 0, 0, "-", "concurrency"], [68, 0, 0, "-", "data_sources"], [76, 0, 0, "-", "device_startup_functions"], [94, 0, 0, "-", "devices"], [180, 0, 0, "-", "dummy"], [185, 0, 0, "-", "features"], [236, 0, 0, "-", "metadata_sources"], [244, 0, 0, "-", "microscope"], [246, 0, 0, "-", "model"], [248, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[27, 0, 0, "-", "boundary_detect"], [32, 0, 0, "-", "camera"], [37, 0, 0, "-", "detection"], [47, 0, 0, "-", "image_contrast"]], "aslm.model.analysis.boundary_detect": [[28, 1, 1, "", "binary_detect"], [29, 1, 1, "", "find_tissue_boundary_2d"], [30, 1, 1, "", "has_tissue"], [31, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[33, 1, 1, "", "compute_flatfield_map"], [34, 1, 1, "", "compute_noise_sigma"], [35, 1, 1, "", "compute_scmos_offset_and_variance_map"], [36, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[38, 1, 1, "", "add_median_border"], [39, 1, 1, "", "combine_images"], [40, 1, 1, "", "log_detection"], [41, 1, 1, "", "make_inside_image"], [42, 1, 1, "", "make_normalized_image"], [43, 1, 1, "", "make_sphere_3D"], [44, 1, 1, "", "multiscale_surface_filter_3D"], [45, 1, 1, "", "surface_filter_gauss_3D"], [46, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[48, 1, 1, "", "fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[50, 0, 0, "-", "concurrency_tools"], [61, 0, 0, "-", "proxy_objects"], [66, 0, 0, "-", "write_parameters"]], "aslm.model.concurrency.concurrency_tools": [[51, 2, 1, "", "CustodyThread"], [52, 5, 1, "", "FancyThread"], [53, 2, 1, "", "MyTestClass"], [54, 2, 1, "", "ObjectInSubprocess"], [55, 5, 1, "", "PoliteThread"], [56, 2, 1, "", "ResultThread"], [57, 2, 1, "", "SharedNDArray"], [58, 2, 1, "", "TestObjectInSubprocess"], [59, 2, 1, "", "TestResultThreadAndCustodyThread"], [60, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[51, 3, 1, "", "__init__"], [51, 4, 1, "", "daemon"], [51, 3, 1, "", "getName"], [51, 3, 1, "", "get_result"], [51, 4, 1, "", "ident"], [51, 3, 1, "", "isDaemon"], [51, 3, 1, "", "is_alive"], [51, 3, 1, "", "join"], [51, 4, 1, "", "name"], [51, 4, 1, "", "native_id"], [51, 3, 1, "", "run"], [51, 3, 1, "", "setDaemon"], [51, 3, 1, "", "setName"], [51, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "run"], [53, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[54, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[56, 3, 1, "", "__init__"], [56, 4, 1, "", "daemon"], [56, 3, 1, "", "getName"], [56, 3, 1, "", "get_result"], [56, 4, 1, "", "ident"], [56, 3, 1, "", "isDaemon"], [56, 3, 1, "", "is_alive"], [56, 3, 1, "", "join"], [56, 4, 1, "", "name"], [56, 4, 1, "", "native_id"], [56, 3, 1, "", "run"], [56, 3, 1, "", "setDaemon"], [56, 3, 1, "", "setName"], [56, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[57, 5, 1, "", "ALIGNED"], [57, 5, 1, "", "BEHAVED"], [57, 5, 1, "", "CARRAY"], [57, 5, 1, "", "C_CONTIGUOUS"], [57, 5, 1, "", "FARRAY"], [57, 5, 1, "", "FNC"], [57, 5, 1, "", "FORC"], [57, 5, 1, "", "F_CONTIGUOUS"], [57, 5, 1, "", "OWNDATA"], [57, 5, 1, "", "T"], [57, 5, 1, "", "UPDATEIFCOPY"], [57, 5, 1, "", "WRITEABLE"], [57, 5, 1, "", "WRITEBACKIFCOPY"], [57, 3, 1, "", "__init__"], [57, 3, 1, "", "all"], [57, 3, 1, "", "any"], [57, 3, 1, "", "argmax"], [57, 3, 1, "", "argmin"], [57, 3, 1, "", "argpartition"], [57, 3, 1, "", "argsort"], [57, 3, 1, "", "astype"], [57, 5, 1, "", "base"], [57, 3, 1, "", "byteswap"], [57, 3, 1, "", "choose"], [57, 3, 1, "", "clip"], [57, 3, 1, "", "compress"], [57, 3, 1, "", "conj"], [57, 3, 1, "", "conjugate"], [57, 3, 1, "", "copy"], [57, 5, 1, "", "ctypes"], [57, 3, 1, "", "cumprod"], [57, 3, 1, "", "cumsum"], [57, 5, 1, "", "data"], [57, 3, 1, "", "diagonal"], [57, 5, 1, "", "dtype"], [57, 3, 1, "", "dump"], [57, 3, 1, "", "dumps"], [57, 3, 1, "", "fill"], [57, 5, 1, "", "flags"], [57, 5, 1, "", "flat"], [57, 3, 1, "", "flatten"], [57, 3, 1, "", "getfield"], [57, 5, 1, "", "imag"], [57, 3, 1, "", "item"], [57, 3, 1, "", "itemset"], [57, 5, 1, "", "itemsize"], [57, 3, 1, "", "max"], [57, 3, 1, "", "mean"], [57, 3, 1, "", "min"], [57, 5, 1, "", "nbytes"], [57, 5, 1, "", "ndim"], [57, 3, 1, "", "newbyteorder"], [57, 3, 1, "", "nonzero"], [57, 3, 1, "", "partition"], [57, 3, 1, "", "prod"], [57, 3, 1, "", "ptp"], [57, 3, 1, "", "put"], [57, 3, 1, "", "ravel"], [57, 5, 1, "", "real"], [57, 3, 1, "", "repeat"], [57, 3, 1, "", "reshape"], [57, 3, 1, "", "resize"], [57, 3, 1, "", "round"], [57, 3, 1, "", "searchsorted"], [57, 3, 1, "", "setfield"], [57, 3, 1, "", "setflags"], [57, 5, 1, "", "shape"], [57, 5, 1, "", "size"], [57, 3, 1, "", "sort"], [57, 3, 1, "", "squeeze"], [57, 3, 1, "", "std"], [57, 5, 1, "", "strides"], [57, 3, 1, "", "sum"], [57, 3, 1, "", "swapaxes"], [57, 3, 1, "", "take"], [57, 3, 1, "", "tobytes"], [57, 3, 1, "", "tofile"], [57, 3, 1, "", "tolist"], [57, 3, 1, "", "tostring"], [57, 3, 1, "", "trace"], [57, 3, 1, "", "transpose"], [57, 3, 1, "", "var"], [57, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[58, 2, 1, "", "TestClass"], [58, 3, 1, "", "__init__"], [58, 3, 1, "", "run"], [58, 3, 1, "", "test_incorrect_thread_management"], [58, 3, 1, "", "test_lock_with_waitlist"], [58, 3, 1, "", "test_object_in_subprocess_overhead"], [58, 3, 1, "", "test_sending_shared_arrays"], [58, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "run"], [59, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "run"], [60, 3, 1, "", "test_ndarraylike_behavior"], [60, 3, 1, "", "test_serialization"], [60, 3, 1, "", "test_serializing_and_deserializing"], [60, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[62, 2, 1, "", "ProxyManager"], [63, 2, 1, "", "ProxyObject"], [64, 1, 1, "", "launch_custody_thread"], [65, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "proxy_object"], [62, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[63, 3, 1, "", "__init__"]], "aslm.model.concurrency.write_parameters": [[67, 2, 1, "", "write_Params"]], "aslm.model.concurrency.write_parameters.write_Params": [[67, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[69, 0, 0, "-", "bdv_data_source"], [71, 0, 0, "-", "data_source"], [73, 1, 1, "", "get_data_source"], [74, 0, 0, "-", "tiff_data_source"]], "aslm.model.data_sources.bdv_data_source": [[70, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[70, 3, 1, "", "__init__"], [70, 5, 1, "", "bits"], [70, 3, 1, "id6", "close"], [70, 4, 1, "", "data"], [70, 5, 1, "", "dc"], [70, 5, 1, "", "ds_name"], [70, 5, 1, "", "dt"], [70, 5, 1, "", "dx"], [70, 5, 1, "", "dy"], [70, 5, 1, "", "dz"], [70, 5, 1, "", "file_name"], [70, 3, 1, "", "get_slice"], [70, 5, 1, "", "image"], [70, 5, 1, "", "logger"], [70, 5, 1, "id0", "metadata"], [70, 4, 1, "id10", "mode"], [70, 4, 1, "id11", "nbytes"], [70, 5, 1, "", "positions"], [70, 3, 1, "id7", "read"], [70, 4, 1, "", "resolutions"], [70, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [70, 5, 1, "", "setup"], [70, 4, 1, "id12", "shape"], [70, 5, 1, "", "shape_c"], [70, 5, 1, "", "shape_t"], [70, 5, 1, "", "shape_x"], [70, 5, 1, "", "shape_y"], [70, 5, 1, "", "shape_z"], [70, 4, 1, "", "shapes"], [70, 4, 1, "", "subdivisions"], [70, 4, 1, "id13", "voxel_size"], [70, 3, 1, "id9", "write"]], "aslm.model.data_sources.data_source": [[72, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[72, 3, 1, "", "__init__"], [72, 5, 1, "", "bits"], [72, 3, 1, "id1", "close"], [72, 4, 1, "", "data"], [72, 5, 1, "", "dc"], [72, 5, 1, "", "dt"], [72, 5, 1, "", "dx"], [72, 5, 1, "", "dy"], [72, 5, 1, "", "dz"], [72, 5, 1, "", "file_name"], [72, 5, 1, "", "logger"], [72, 5, 1, "", "metadata"], [72, 4, 1, "id5", "mode"], [72, 4, 1, "id6", "nbytes"], [72, 5, 1, "", "positions"], [72, 3, 1, "id2", "read"], [72, 3, 1, "id3", "set_metadata_from_configuration_experiment"], [72, 4, 1, "id7", "shape"], [72, 5, 1, "", "shape_c"], [72, 5, 1, "", "shape_t"], [72, 5, 1, "", "shape_x"], [72, 5, 1, "", "shape_y"], [72, 5, 1, "", "shape_z"], [72, 4, 1, "id8", "voxel_size"], [72, 3, 1, "id4", "write"]], "aslm.model.data_sources.tiff_data_source": [[75, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[75, 3, 1, "", "__init__"], [75, 5, 1, "", "bits"], [75, 3, 1, "id5", "close"], [75, 4, 1, "", "data"], [75, 5, 1, "", "dc"], [75, 5, 1, "", "dt"], [75, 5, 1, "", "dx"], [75, 5, 1, "", "dy"], [75, 5, 1, "", "dz"], [75, 5, 1, "", "file_name"], [75, 3, 1, "id6", "generate_image_name"], [75, 5, 1, "", "image"], [75, 5, 1, "", "logger"], [75, 5, 1, "id0", "metadata"], [75, 4, 1, "id10", "mode"], [75, 4, 1, "id11", "nbytes"], [75, 5, 1, "", "positions"], [75, 3, 1, "id7", "read"], [75, 5, 1, "", "save_directory"], [75, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [75, 4, 1, "id12", "shape"], [75, 5, 1, "", "shape_c"], [75, 5, 1, "", "shape_t"], [75, 5, 1, "", "shape_x"], [75, 5, 1, "", "shape_y"], [75, 5, 1, "", "shape_z"], [75, 4, 1, "id13", "voxel_size"], [75, 3, 1, "id9", "write"]], "aslm.model.device_startup_functions": [[77, 2, 1, "", "DummyDeviceConnection"], [78, 1, 1, "", "auto_redial"], [79, 1, 1, "", "device_not_found"], [80, 1, 1, "", "load_camera_connection"], [81, 1, 1, "", "load_devices"], [82, 1, 1, "", "load_filter_wheel_connection"], [83, 1, 1, "", "load_stages"], [84, 1, 1, "", "load_zoom_connection"], [85, 1, 1, "", "start_camera"], [86, 1, 1, "", "start_daq"], [87, 1, 1, "", "start_filter_wheel"], [88, 1, 1, "", "start_galvo"], [89, 1, 1, "", "start_lasers"], [90, 1, 1, "", "start_remote_focus_device"], [91, 1, 1, "", "start_shutter"], [92, 1, 1, "", "start_stage"], [93, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[77, 3, 1, "", "__init__"]], "aslm.model.devices": [[95, 0, 0, "-", "APIs"], [101, 0, 0, "-", "camera"], [112, 0, 0, "-", "daq"], [117, 0, 0, "-", "filter_wheel"], [128, 0, 0, "-", "galvo"], [133, 0, 0, "-", "lasers"], [138, 0, 0, "-", "objectives"], [140, 0, 0, "-", "remote_focus"], [145, 0, 0, "-", "shutter"], [150, 0, 0, "-", "stages"], [172, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[96, 0, 0, "-", "coherent"], [97, 0, 0, "-", "dynamixel"], [100, 0, 0, "-", "omicron"]], "aslm.model.devices.APIs.dynamixel": [[98, 0, 0, "-", "dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[99, 1, 1, "", "create_mock_dxl_device"]], "aslm.model.devices.camera": [[102, 0, 0, "-", "camera_base"], [104, 0, 0, "-", "camera_hamamatsu"], [107, 0, 0, "-", "camera_photometrics"], [109, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[103, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "calculate_light_sheet_exposure_time"], [103, 5, 1, "", "camera_controller"], [103, 5, 1, "", "camera_parameters"], [103, 3, 1, "", "close_camera"], [103, 5, 1, "", "configuration"], [103, 3, 1, "", "get_line_interval"], [103, 3, 1, "", "get_offset_variance_maps"], [103, 5, 1, "", "is_acquiring"], [103, 5, 1, "", "max_image_height"], [103, 5, 1, "", "max_image_width"], [103, 5, 1, "", "min_image_height"], [103, 5, 1, "", "min_image_width"], [103, 4, 1, "", "offset"], [103, 3, 1, "", "set_readout_direction"], [103, 5, 1, "", "step_image_height"], [103, 5, 1, "", "step_image_width"], [103, 4, 1, "", "variance"], [103, 5, 1, "", "x_pixels"], [103, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[105, 2, 1, "", "HamamatsuOrca"], [106, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[105, 3, 1, "", "__init__"], [105, 3, 1, "", "calculate_light_sheet_exposure_time"], [105, 3, 1, "", "calculate_readout_time"], [105, 5, 1, "", "camera_controller"], [105, 5, 1, "", "camera_parameters"], [105, 3, 1, "", "close_camera"], [105, 3, 1, "", "close_image_series"], [105, 5, 1, "", "configuration"], [105, 3, 1, "", "get_line_interval"], [105, 3, 1, "", "get_minimum_waiting_time"], [105, 3, 1, "", "get_new_frame"], [105, 3, 1, "", "get_offset_variance_maps"], [105, 3, 1, "", "initialize_image_series"], [105, 5, 1, "", "is_acquiring"], [105, 4, 1, "", "max_image_height"], [105, 4, 1, "", "max_image_width"], [105, 4, 1, "", "min_image_height"], [105, 4, 1, "", "min_image_width"], [105, 4, 1, "", "offset"], [105, 3, 1, "", "report_settings"], [105, 4, 1, "", "serial_number"], [105, 3, 1, "", "set_ROI"], [105, 3, 1, "", "set_binning"], [105, 3, 1, "", "set_exposure_time"], [105, 3, 1, "", "set_line_interval"], [105, 3, 1, "", "set_readout_direction"], [105, 3, 1, "", "set_sensor_mode"], [105, 4, 1, "", "step_image_height"], [105, 4, 1, "", "step_image_width"], [105, 4, 1, "", "variance"], [105, 5, 1, "", "x_pixels"], [105, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[106, 3, 1, "", "__init__"], [106, 3, 1, "", "calculate_light_sheet_exposure_time"], [106, 3, 1, "", "calculate_readout_time"], [106, 5, 1, "", "camera_controller"], [106, 5, 1, "", "camera_parameters"], [106, 3, 1, "", "close_camera"], [106, 3, 1, "", "close_image_series"], [106, 5, 1, "", "configuration"], [106, 3, 1, "", "get_line_interval"], [106, 3, 1, "", "get_minimum_waiting_time"], [106, 3, 1, "", "get_new_frame"], [106, 3, 1, "", "get_offset_variance_maps"], [106, 3, 1, "", "initialize_image_series"], [106, 5, 1, "", "is_acquiring"], [106, 4, 1, "", "max_image_height"], [106, 4, 1, "", "max_image_width"], [106, 4, 1, "", "min_image_height"], [106, 4, 1, "", "min_image_width"], [106, 4, 1, "", "offset"], [106, 3, 1, "", "report_settings"], [106, 4, 1, "", "serial_number"], [106, 3, 1, "", "set_ROI"], [106, 3, 1, "", "set_binning"], [106, 3, 1, "", "set_exposure_time"], [106, 3, 1, "", "set_line_interval"], [106, 3, 1, "", "set_readout_direction"], [106, 3, 1, "", "set_sensor_mode"], [106, 4, 1, "", "step_image_height"], [106, 4, 1, "", "step_image_width"], [106, 4, 1, "", "variance"], [106, 5, 1, "", "x_pixels"], [106, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[108, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[108, 3, 1, "", "__init__"], [108, 3, 1, "", "calculate_light_sheet_exposure_time"], [108, 3, 1, "", "calculate_readout_time"], [108, 5, 1, "", "camera_controller"], [108, 5, 1, "", "camera_parameters"], [108, 3, 1, "", "close_camera"], [108, 3, 1, "", "close_image_series"], [108, 5, 1, "", "configuration"], [108, 3, 1, "", "get_line_interval"], [108, 3, 1, "", "get_minimum_waiting_time"], [108, 3, 1, "", "get_new_frame"], [108, 3, 1, "", "get_offset_variance_maps"], [108, 3, 1, "", "initialize_image_series"], [108, 5, 1, "", "is_acquiring"], [108, 5, 1, "", "max_image_height"], [108, 5, 1, "", "max_image_width"], [108, 5, 1, "", "min_image_height"], [108, 5, 1, "", "min_image_width"], [108, 4, 1, "", "offset"], [108, 3, 1, "", "report_settings"], [108, 4, 1, "", "serial_number"], [108, 3, 1, "", "set_ROI"], [108, 3, 1, "", "set_binning"], [108, 3, 1, "", "set_exposure_time"], [108, 3, 1, "", "set_line_interval"], [108, 3, 1, "", "set_readout_direction"], [108, 3, 1, "", "set_sensor_mode"], [108, 5, 1, "", "step_image_height"], [108, 5, 1, "", "step_image_width"], [108, 4, 1, "", "variance"], [108, 5, 1, "", "x_pixels"], [108, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[110, 2, 1, "", "SyntheticCamera"], [111, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[110, 3, 1, "", "__init__"], [110, 3, 1, "", "calculate_light_sheet_exposure_time"], [110, 3, 1, "", "calculate_readout_time"], [110, 5, 1, "", "camera_controller"], [110, 5, 1, "", "camera_exposure_time"], [110, 5, 1, "", "camera_parameters"], [110, 3, 1, "", "close_camera"], [110, 3, 1, "", "close_image_series"], [110, 5, 1, "", "configuration"], [110, 5, 1, "", "current_frame_idx"], [110, 5, 1, "", "data_buffer"], [110, 3, 1, "", "generate_new_frame"], [110, 3, 1, "", "get_line_interval"], [110, 3, 1, "", "get_minimum_waiting_time"], [110, 3, 1, "", "get_new_frame"], [110, 3, 1, "", "get_offset_variance_maps"], [110, 3, 1, "", "initialize_image_series"], [110, 5, 1, "", "is_acquiring"], [110, 3, 1, "", "load_images"], [110, 5, 1, "", "max_image_height"], [110, 5, 1, "", "max_image_width"], [110, 5, 1, "", "min_image_height"], [110, 5, 1, "", "min_image_width"], [110, 5, 1, "", "num_of_frame"], [110, 4, 1, "", "offset"], [110, 5, 1, "", "pre_frame_idx"], [110, 5, 1, "", "random_image"], [110, 3, 1, "", "report_settings"], [110, 5, 1, "", "serial_number"], [110, 3, 1, "", "set_ROI"], [110, 3, 1, "", "set_binning"], [110, 3, 1, "", "set_exposure_time"], [110, 3, 1, "", "set_line_interval"], [110, 3, 1, "", "set_readout_direction"], [110, 3, 1, "", "set_sensor_mode"], [110, 5, 1, "", "step_image_height"], [110, 5, 1, "", "step_image_width"], [110, 4, 1, "", "variance"], [110, 5, 1, "", "x_pixels"], [110, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[111, 3, 1, "", "__init__"], [111, 3, 1, "", "get_property_value"], [111, 3, 1, "", "set_property_value"]], "aslm.model.devices.daq": [[113, 0, 0, "-", "daq_base"], [115, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[114, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "calculate_all_waveforms"], [114, 5, 1, "", "camera_delay"], [114, 5, 1, "", "camera_delay_percent"], [114, 5, 1, "", "camera_high_time"], [114, 5, 1, "", "camera_pulse_percent"], [114, 5, 1, "", "configuration"], [114, 5, 1, "", "daq_parameters"], [114, 3, 1, "", "enable_microscope"], [114, 5, 1, "", "microscope_name"], [114, 5, 1, "", "remote_focus_ramp_falling"], [114, 5, 1, "", "sample_rate"], [114, 5, 1, "", "sweep_time"], [114, 5, 1, "", "waveform_constants"], [114, 5, 1, "", "waveform_dict"], [114, 5, 1, "", "waveform_expand_num"], [114, 5, 1, "", "waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[116, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[116, 3, 1, "", "__init__"], [116, 3, 1, "", "add_camera"], [116, 5, 1, "", "analog_outputs"], [116, 3, 1, "", "calculate_all_waveforms"], [116, 5, 1, "", "camera"], [116, 5, 1, "", "camera_delay"], [116, 5, 1, "", "camera_delay_percent"], [116, 5, 1, "", "camera_high_time"], [116, 5, 1, "", "camera_pulse_percent"], [116, 3, 1, "", "close_tasks"], [116, 5, 1, "", "configuration"], [116, 3, 1, "", "create_camera_task"], [116, 3, 1, "", "create_galvo_remote_focus_tasks"], [116, 3, 1, "", "create_master_trigger_task"], [116, 5, 1, "", "daq_parameters"], [116, 3, 1, "", "enable_microscope"], [116, 5, 1, "", "is_updating_analog_task"], [116, 5, 1, "", "microscope_name"], [116, 3, 1, "", "prepare_acquisition"], [116, 5, 1, "", "remote_focus_ramp_falling"], [116, 3, 1, "", "run_acquisition"], [116, 5, 1, "", "sample_rate"], [116, 3, 1, "", "set_external_trigger"], [116, 3, 1, "", "start_tasks"], [116, 3, 1, "", "stop_acquisition"], [116, 3, 1, "", "stop_tasks"], [116, 5, 1, "", "sweep_time"], [116, 5, 1, "", "trigger_mode"], [116, 3, 1, "", "update_analog_task"], [116, 5, 1, "", "wait_to_run_lock"], [116, 5, 1, "", "waveform_constants"], [116, 5, 1, "", "waveform_dict"], [116, 5, 1, "", "waveform_expand_num"], [116, 5, 1, "", "waveform_repeat_num"], [116, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[118, 0, 0, "-", "filter_wheel_asi"], [121, 0, 0, "-", "filter_wheel_base"], [123, 0, 0, "-", "filter_wheel_sutter"], [126, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[119, 2, 1, "", "ASIFilterWheel"], [120, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[119, 3, 1, "", "__init__"], [119, 5, 1, "", "active_filter_wheel"], [119, 3, 1, "", "check_if_filter_in_filter_dictionary"], [119, 3, 1, "", "close"], [119, 3, 1, "", "filter_change_delay"], [119, 5, 1, "", "filter_dictionary"], [119, 5, 1, "", "filter_wheel"], [119, 5, 1, "", "filter_wheel_position"], [119, 5, 1, "", "microscope_name"], [119, 5, 1, "", "number_of_filter_wheels"], [119, 3, 1, "", "set_filter"], [119, 5, 1, "", "wait_until_done_delay"], [119, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[122, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[122, 3, 1, "", "__init__"], [122, 3, 1, "", "check_if_filter_in_filter_dictionary"], [122, 5, 1, "", "filter_dictionary"], [122, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[124, 2, 1, "", "SutterFilterWheel"], [125, 5, 1, "", "baudrate"], [125, 1, 1, "", "build_filter_wheel_connection"], [125, 5, 1, "", "comport"], [125, 5, 1, "", "timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[124, 3, 1, "", "__init__"], [124, 3, 1, "", "check_if_filter_in_filter_dictionary"], [124, 3, 1, "", "close"], [124, 5, 1, "", "delay_matrix"], [124, 3, 1, "", "filter_change_delay"], [124, 5, 1, "", "filter_dictionary"], [124, 5, 1, "", "init_finished"], [124, 5, 1, "", "microscope_name"], [124, 5, 1, "", "number_of_filter_wheels"], [124, 3, 1, "", "read"], [124, 5, 1, "", "read_on_init"], [124, 5, 1, "", "serial"], [124, 3, 1, "", "set_filter"], [124, 5, 1, "", "speed"], [124, 5, 1, "", "wait_until_done"], [124, 5, 1, "", "wait_until_done_delay"], [124, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[127, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[127, 3, 1, "", "__init__"], [127, 5, 1, "", "baudrate"], [127, 3, 1, "", "check_if_filter_in_filter_dictionary"], [127, 3, 1, "", "close"], [127, 5, 1, "", "comport"], [127, 3, 1, "", "filter_change_delay"], [127, 5, 1, "id0", "filter_dictionary"], [127, 5, 1, "", "number_of_filter_wheels"], [127, 3, 1, "", "read"], [127, 3, 1, "", "set_filter"], [127, 5, 1, "id1", "wheel_position"]], "aslm.model.devices.galvo": [[129, 0, 0, "-", "galvo_base"], [131, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[130, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[130, 3, 1, "", "__init__"], [130, 3, 1, "", "adjust"], [130, 5, 1, "", "camera_delay_percent"], [130, 3, 1, "", "close_task"], [130, 5, 1, "", "configuration"], [130, 5, 1, "", "device_config"], [130, 5, 1, "", "galvo_max_voltage"], [130, 5, 1, "", "galvo_min_voltage"], [130, 5, 1, "", "galvo_name"], [130, 5, 1, "", "galvo_waveform"], [130, 5, 1, "", "microscope_name"], [130, 3, 1, "", "prepare_task"], [130, 5, 1, "", "remote_focus_ramp_falling"], [130, 5, 1, "", "sample_rate"], [130, 5, 1, "", "samples"], [130, 3, 1, "", "start_task"], [130, 3, 1, "", "stop_task"], [130, 5, 1, "", "sweep_time"], [130, 3, 1, "", "turn_off"], [130, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[132, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[132, 3, 1, "", "__init__"], [132, 3, 1, "", "adjust"], [132, 5, 1, "", "camera_delay_percent"], [132, 3, 1, "", "close_task"], [132, 5, 1, "", "configuration"], [132, 5, 1, "", "device_config"], [132, 5, 1, "", "galvo_max_voltage"], [132, 5, 1, "", "galvo_min_voltage"], [132, 5, 1, "", "galvo_name"], [132, 5, 1, "", "galvo_waveform"], [132, 5, 1, "", "microscope_name"], [132, 3, 1, "", "prepare_task"], [132, 5, 1, "", "remote_focus_ramp_falling"], [132, 5, 1, "", "sample_rate"], [132, 5, 1, "", "samples"], [132, 3, 1, "", "start_task"], [132, 3, 1, "", "stop_task"], [132, 5, 1, "", "sweep_time"], [132, 3, 1, "", "turn_off"], [132, 5, 1, "", "waveform_dict"]], "aslm.model.devices.lasers": [[134, 0, 0, "-", "laser_base"], [136, 0, 0, "-", "laser_synthetic"]], "aslm.model.devices.lasers.laser_base": [[135, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[135, 3, 1, "", "__init__"], [135, 3, 1, "", "close"], [135, 5, 1, "", "configuration"], [135, 5, 1, "", "device_config"], [135, 3, 1, "", "initialize_laser"], [135, 5, 1, "", "microscope_name"], [135, 3, 1, "", "set_power"], [135, 3, 1, "", "turn_off"], [135, 3, 1, "", "turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[137, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[137, 3, 1, "", "__init__"], [137, 3, 1, "", "close"], [137, 5, 1, "", "configuration"], [137, 5, 1, "", "device_config"], [137, 3, 1, "", "initialize_laser"], [137, 5, 1, "", "microscope_name"], [137, 3, 1, "", "set_power"], [137, 3, 1, "", "turn_off"], [137, 3, 1, "", "turn_on"]], "aslm.model.devices.objectives": [[139, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[139, 3, 1, "", "__init__"], [139, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[141, 0, 0, "-", "remote_focus_base"], [143, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[142, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[142, 3, 1, "", "__init__"], [142, 3, 1, "", "adjust"], [142, 5, 1, "", "camera_delay_percent"], [142, 3, 1, "", "close_task"], [142, 5, 1, "", "configuration"], [142, 5, 1, "", "device_config"], [142, 5, 1, "", "microscope_name"], [142, 5, 1, "", "percent_smoothing"], [142, 3, 1, "", "prepare_task"], [142, 5, 1, "", "remote_focus_delay"], [142, 5, 1, "", "remote_focus_max_voltage"], [142, 5, 1, "", "remote_focus_min_voltage"], [142, 5, 1, "", "remote_focus_ramp_falling"], [142, 5, 1, "", "sample_rate"], [142, 5, 1, "", "samples"], [142, 3, 1, "", "start_task"], [142, 3, 1, "", "stop_task"], [142, 5, 1, "", "sweep_time"], [142, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[144, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[144, 3, 1, "", "__init__"], [144, 3, 1, "", "adjust"], [144, 5, 1, "", "camera_delay_percent"], [144, 3, 1, "", "close_task"], [144, 5, 1, "", "configuration"], [144, 5, 1, "", "device_config"], [144, 5, 1, "", "microscope_name"], [144, 3, 1, "", "move"], [144, 5, 1, "", "percent_smoothing"], [144, 3, 1, "", "prepare_task"], [144, 5, 1, "", "remote_focus_delay"], [144, 5, 1, "", "remote_focus_max_voltage"], [144, 5, 1, "", "remote_focus_min_voltage"], [144, 5, 1, "", "remote_focus_ramp_falling"], [144, 5, 1, "", "sample_rate"], [144, 5, 1, "", "samples"], [144, 3, 1, "", "start_task"], [144, 3, 1, "", "stop_task"], [144, 5, 1, "", "sweep_time"], [144, 5, 1, "", "waveform_dict"]], "aslm.model.devices.shutter": [[146, 0, 0, "-", "laser_shutter_base"], [148, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[147, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[147, 3, 1, "", "__init__"], [147, 3, 1, "", "close_shutter"], [147, 3, 1, "", "open_shutter"], [147, 5, 1, "", "shutter_state"], [147, 4, 1, "", "state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[149, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[149, 3, 1, "", "__init__"], [149, 3, 1, "", "close_shutter"], [149, 3, 1, "", "open_shutter"], [149, 5, 1, "", "shutter_state"], [149, 4, 1, "", "state"]], "aslm.model.devices.stages": [[151, 0, 0, "-", "stage_asi"], [154, 0, 0, "-", "stage_base"], [156, 0, 0, "-", "stage_galvo"], [158, 0, 0, "-", "stage_mcl"], [161, 0, 0, "-", "stage_pi"], [164, 0, 0, "-", "stage_sutter"], [167, 0, 0, "-", "stage_synthetic"], [169, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[152, 2, 1, "", "ASIStage"], [153, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[152, 3, 1, "", "__init__"], [152, 5, 1, "", "axes"], [152, 5, 1, "", "axes_mapping"], [152, 3, 1, "", "close"], [152, 3, 1, "", "get_abs_position"], [152, 3, 1, "", "get_axis_position"], [152, 3, 1, "", "get_position_dict"], [152, 3, 1, "", "get_speed"], [152, 3, 1, "", "move_absolute"], [152, 3, 1, "", "move_axis_absolute"], [152, 3, 1, "", "report_position"], [152, 3, 1, "", "scanr"], [152, 3, 1, "", "set_speed"], [152, 5, 1, "", "stage_feedback"], [152, 5, 1, "", "stage_limits"], [152, 3, 1, "", "start_scan"], [152, 3, 1, "", "stop"], [152, 3, 1, "", "stop_scan"], [152, 5, 1, "", "tiger_controller"], [152, 3, 1, "", "verify_abs_position"], [152, 3, 1, "", "verify_move"]], "aslm.model.devices.stages.stage_base": [[155, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[155, 3, 1, "", "__init__"], [155, 5, 1, "", "axes"], [155, 5, 1, "", "axes_mapping"], [155, 3, 1, "", "close"], [155, 3, 1, "", "get_abs_position"], [155, 3, 1, "", "get_position_dict"], [155, 5, 1, "", "stage_feedback"], [155, 5, 1, "", "stage_limits"], [155, 3, 1, "", "stop"], [155, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[157, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[157, 3, 1, "", "__init__"], [157, 5, 1, "", "axes"], [157, 5, 1, "", "axes_channels"], [157, 5, 1, "", "axes_mapping"], [157, 3, 1, "", "calculate_waveform"], [157, 5, 1, "", "camera_delay_percent"], [157, 3, 1, "", "close"], [157, 5, 1, "", "configuration"], [157, 5, 1, "", "daq"], [157, 5, 1, "", "exposure_times"], [157, 5, 1, "", "galvo_max_voltage"], [157, 5, 1, "", "galvo_min_voltage"], [157, 3, 1, "", "get_abs_position"], [157, 3, 1, "", "get_position_dict"], [157, 5, 1, "", "microscope_name"], [157, 3, 1, "", "move_absolute"], [157, 3, 1, "", "move_axis_absolute"], [157, 5, 1, "", "remote_focus_delay"], [157, 5, 1, "", "remote_focus_ramp_falling"], [157, 3, 1, "", "report_position"], [157, 5, 1, "", "sample_rate"], [157, 5, 1, "", "samples"], [157, 5, 1, "", "stage_feedback"], [157, 5, 1, "", "stage_limits"], [157, 3, 1, "", "stop"], [157, 5, 1, "", "sweep_time"], [157, 5, 1, "", "sweep_times"], [157, 5, 1, "", "trigger_source"], [157, 3, 1, "", "verify_abs_position"], [157, 5, 1, "", "volts_per_micron"], [157, 5, 1, "", "waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[159, 2, 1, "", "MCLStage"], [160, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[159, 3, 1, "", "__init__"], [159, 5, 1, "", "axes"], [159, 5, 1, "", "axes_mapping"], [159, 3, 1, "", "close"], [159, 3, 1, "", "get_abs_position"], [159, 3, 1, "", "get_position_dict"], [159, 5, 1, "", "handle"], [159, 5, 1, "", "mcl_controller"], [159, 3, 1, "", "move_absolute"], [159, 3, 1, "", "move_axis_absolute"], [159, 3, 1, "", "report_position"], [159, 5, 1, "", "stage_feedback"], [159, 5, 1, "", "stage_limits"], [159, 3, 1, "", "stop"], [159, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[162, 2, 1, "", "PIStage"], [163, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[162, 3, 1, "", "__init__"], [162, 5, 1, "", "axes"], [162, 5, 1, "", "axes_mapping"], [162, 3, 1, "", "close"], [162, 3, 1, "", "get_abs_position"], [162, 3, 1, "", "get_position_dict"], [162, 3, 1, "", "move_absolute"], [162, 3, 1, "", "move_axis_absolute"], [162, 5, 1, "", "pi_axes"], [162, 5, 1, "", "pi_device"], [162, 5, 1, "", "pi_tools"], [162, 3, 1, "", "report_position"], [162, 5, 1, "", "stage_feedback"], [162, 5, 1, "", "stage_limits"], [162, 3, 1, "", "stop"], [162, 3, 1, "", "verify_abs_position"], [162, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[165, 2, 1, "", "SutterStage"], [166, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[165, 3, 1, "", "__init__"], [165, 5, 1, "", "axes"], [165, 5, 1, "", "axes_mapping"], [165, 3, 1, "", "close"], [165, 5, 1, "", "device_axes"], [165, 3, 1, "", "get_abs_position"], [165, 3, 1, "", "get_position_dict"], [165, 3, 1, "", "move_absolute"], [165, 3, 1, "", "move_axis_absolute"], [165, 3, 1, "", "report_position"], [165, 5, 1, "", "resolution"], [165, 5, 1, "", "speed"], [165, 5, 1, "", "stage"], [165, 5, 1, "", "stage_feedback"], [165, 5, 1, "", "stage_limits"], [165, 5, 1, "", "stage_x_pos"], [165, 5, 1, "", "stage_y_pos"], [165, 5, 1, "", "stage_z_pos"], [165, 3, 1, "", "stop"], [165, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[168, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[168, 3, 1, "", "__init__"], [168, 5, 1, "", "axes"], [168, 5, 1, "", "axes_mapping"], [168, 3, 1, "", "close"], [168, 5, 1, "", "default_speed"], [168, 3, 1, "", "get_abs_position"], [168, 3, 1, "", "get_axis_position"], [168, 3, 1, "", "get_position_dict"], [168, 3, 1, "", "get_speed"], [168, 3, 1, "", "load_sample"], [168, 3, 1, "", "move_absolute"], [168, 3, 1, "", "move_axis_absolute"], [168, 3, 1, "", "report_position"], [168, 3, 1, "", "scanr"], [168, 3, 1, "", "set_speed"], [168, 5, 1, "", "stage_feedback"], [168, 5, 1, "", "stage_limits"], [168, 3, 1, "", "start_scan"], [168, 3, 1, "", "stop"], [168, 3, 1, "", "stop_scan"], [168, 3, 1, "", "unload_sample"], [168, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[170, 2, 1, "", "TLKIMStage"], [171, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[170, 3, 1, "", "__init__"], [170, 5, 1, "", "axes"], [170, 5, 1, "", "axes_mapping"], [170, 3, 1, "", "close"], [170, 3, 1, "", "get_abs_position"], [170, 3, 1, "", "get_position_dict"], [170, 5, 1, "", "kim_axes"], [170, 5, 1, "", "kim_controller"], [170, 3, 1, "", "move_absolute"], [170, 3, 1, "", "move_axis_absolute"], [170, 3, 1, "", "report_position"], [170, 5, 1, "", "serial_number"], [170, 5, 1, "", "stage_feedback"], [170, 5, 1, "", "stage_limits"], [170, 3, 1, "", "stop"], [170, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[173, 0, 0, "-", "zoom_base"], [175, 0, 0, "-", "zoom_dynamixel"], [178, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[174, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[174, 3, 1, "", "__init__"], [174, 3, 1, "", "build_stage_dict"], [174, 5, 1, "", "configuration"], [174, 3, 1, "", "move"], [174, 3, 1, "", "read_position"], [174, 3, 1, "", "set_zoom"], [174, 5, 1, "", "zoomdict"], [174, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[176, 2, 1, "", "DynamixelZoom"], [177, 1, 1, "", "build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[176, 3, 1, "", "__init__"], [176, 5, 1, "", "addr_mx_goal_position"], [176, 5, 1, "", "addr_mx_moving_speed"], [176, 5, 1, "", "addr_mx_p_gain"], [176, 5, 1, "", "addr_mx_present_position"], [176, 5, 1, "", "addr_mx_torque_enable"], [176, 5, 1, "", "addr_mx_torque_limit"], [176, 3, 1, "", "build_stage_dict"], [176, 5, 1, "", "configuration"], [176, 5, 1, "", "dynamixel"], [176, 5, 1, "", "goal_position_offset"], [176, 5, 1, "", "id"], [176, 3, 1, "", "move"], [176, 5, 1, "", "port_num"], [176, 3, 1, "", "read_position"], [176, 3, 1, "", "set_zoom"], [176, 5, 1, "", "sleeptime"], [176, 5, 1, "", "timeout"], [176, 5, 1, "", "torque_disable"], [176, 5, 1, "", "torque_enable"], [176, 5, 1, "", "zoomdict"], [176, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_synthetic": [[179, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[179, 3, 1, "", "__init__"], [179, 3, 1, "", "build_stage_dict"], [179, 5, 1, "", "configuration"], [179, 3, 1, "", "move"], [179, 3, 1, "", "read_position"], [179, 3, 1, "", "set_zoom"], [179, 5, 1, "", "zoomdict"], [179, 5, 1, "", "zoomvalue"]], "aslm.model.dummy": [[181, 2, 1, "", "DummyController"], [182, 2, 1, "", "DummyDevice"], [183, 2, 1, "", "DummyMicroscope"], [184, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "clear"], [181, 5, 1, "", "commands"], [181, 5, 1, "", "configuration"], [181, 5, 1, "", "configuration_controller"], [181, 3, 1, "", "execute"], [181, 5, 1, "", "menu_controller"], [181, 5, 1, "", "off_stage_pos"], [181, 3, 1, "", "pop"], [181, 5, 1, "", "stage_pos"], [181, 5, 1, "", "view"]], "aslm.model.dummy.DummyDevice": [[182, 3, 1, "", "__init__"], [182, 3, 1, "", "clear"], [182, 3, 1, "", "generate_message"], [182, 5, 1, "", "in_port"], [182, 3, 1, "", "listen"], [182, 5, 1, "", "msg_count"], [182, 5, 1, "", "out_port"], [182, 3, 1, "", "sendout"], [182, 5, 1, "", "sendout_msg_count"], [182, 3, 1, "", "setup"], [182, 5, 1, "", "stop_flag"], [182, 5, 1, "", "timecost"]], "aslm.model.dummy.DummyMicroscope": [[183, 3, 1, "", "__init__"], [183, 3, 1, "", "calculate_exposure_sweep_times"], [183, 5, 1, "", "configuration"], [183, 5, 1, "", "current_channel"], [183, 5, 1, "", "daq"], [183, 5, 1, "", "data_buffer"], [183, 5, 1, "", "galvo"], [183, 5, 1, "", "lasers"], [183, 5, 1, "", "microscope_name"], [183, 5, 1, "", "stages"]], "aslm.model.dummy.DummyModel": [[184, 3, 1, "", "__init__"], [184, 5, 1, "", "active_microscope"], [184, 5, 1, "", "active_microscope_name"], [184, 5, 1, "", "camera"], [184, 5, 1, "", "configuration"], [184, 5, 1, "", "data"], [184, 5, 1, "", "data_buffer"], [184, 5, 1, "", "data_buffer_positions"], [184, 5, 1, "", "data_container"], [184, 3, 1, "", "data_func"], [184, 5, 1, "", "data_pipe"], [184, 5, 1, "", "data_records"], [184, 5, 1, "", "data_thread"], [184, 5, 1, "", "device"], [184, 5, 1, "", "frame_id"], [184, 5, 1, "", "img_height"], [184, 5, 1, "", "img_width"], [184, 5, 1, "", "manager"], [184, 5, 1, "", "number_of_frames"], [184, 5, 1, "", "signal_container"], [184, 3, 1, "", "signal_func"], [184, 5, 1, "", "signal_pipe"], [184, 5, 1, "", "signal_records"], [184, 5, 1, "", "signal_thread"], [184, 3, 1, "", "start"], [184, 5, 1, "", "stop_flag"]], "aslm.model.features": [[186, 0, 0, "-", "auto_tile_scan"], [188, 0, 0, "-", "autofocus"], [191, 0, 0, "-", "common_features"], [202, 0, 0, "-", "constant_velocity_acquisition"], [204, 0, 0, "-", "dummy_detective"], [206, 0, 0, "-", "feature_container"], [217, 0, 0, "-", "feature_related_functions"], [222, 0, 0, "-", "image_writer"], [224, 0, 0, "-", "remove_empty_tiles"], [230, 0, 0, "-", "restful_features"], [233, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[187, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[187, 3, 1, "", "__init__"], [187, 3, 1, "", "end_func_data"], [187, 3, 1, "", "end_func_signal"], [187, 3, 1, "", "in_func_data"], [187, 3, 1, "", "in_func_signal"], [187, 3, 1, "", "pre_func_data"], [187, 3, 1, "", "pre_func_signal"]], "aslm.model.features.autofocus": [[189, 2, 1, "", "Autofocus"], [190, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[189, 3, 1, "", "__init__"], [189, 5, 1, "", "autofocus_frame_queue"], [189, 5, 1, "", "autofocus_pos_queue"], [189, 5, 1, "", "coarse_step_size"], [189, 5, 1, "", "coarse_steps"], [189, 3, 1, "", "end_func_data"], [189, 3, 1, "", "end_func_signal"], [189, 5, 1, "", "f_frame_id"], [189, 5, 1, "", "f_pos"], [189, 5, 1, "", "fine_pos_offset"], [189, 5, 1, "", "fine_step_size"], [189, 5, 1, "", "focus_pos"], [189, 5, 1, "", "frame_num"], [189, 3, 1, "", "get_autofocus_frame_num"], [189, 5, 1, "", "get_frames_num"], [189, 3, 1, "", "get_steps"], [189, 3, 1, "", "in_func_data"], [189, 3, 1, "", "in_func_signal"], [189, 5, 1, "", "init_pos"], [189, 5, 1, "", "max_entropy"], [189, 5, 1, "", "plot_data"], [189, 3, 1, "", "pre_func_data"], [189, 3, 1, "", "pre_func_signal"], [189, 3, 1, "", "robust_autofocus"], [189, 3, 1, "id0", "run"], [189, 5, 1, "", "signal_id"], [189, 5, 1, "", "target_channel"], [189, 5, 1, "", "target_frame_id"], [189, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[192, 2, 1, "", "ChangeResolution"], [193, 2, 1, "", "ConProAcquisition"], [194, 2, 1, "", "FindTissueSimple2D"], [195, 2, 1, "", "LoopByCount"], [196, 2, 1, "", "MoveToNextPositionInMultiPositionTable"], [197, 2, 1, "", "PrepareNextChannel"], [198, 2, 1, "", "Snap"], [199, 2, 1, "", "StackPause"], [200, 2, 1, "", "WaitToContinue"], [201, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "cleanup"], [192, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ConProAcquisition": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "generate_meta_data"], [193, 3, 1, "", "pre_signal_func"], [193, 3, 1, "", "signal_end"], [193, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.FindTissueSimple2D": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "data_func"]], "aslm.model.features.common_features.LoopByCount": [[195, 3, 1, "", "__init__"], [195, 3, 1, "", "data_func"], [195, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "cleanup"], [196, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.PrepareNextChannel": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.Snap": [[198, 3, 1, "", "__init__"], [198, 3, 1, "", "data_func"]], "aslm.model.features.common_features.StackPause": [[199, 3, 1, "", "__init__"], [199, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.WaitToContinue": [[200, 3, 1, "", "__init__"], [200, 3, 1, "", "cleanup"], [200, 3, 1, "", "data_func"], [200, 3, 1, "", "pre_data_func"], [200, 3, 1, "", "pre_signal_func"], [200, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ZStackAcquisition": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "cleanup_data_func"], [201, 3, 1, "", "end_data_func"], [201, 3, 1, "", "in_data_func"], [201, 3, 1, "", "pre_data_func"], [201, 3, 1, "", "pre_signal_func"], [201, 3, 1, "", "signal_end"], [201, 3, 1, "", "signal_func"], [201, 3, 1, "", "update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[203, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[203, 3, 1, "", "__init__"], [203, 3, 1, "", "cleanup"], [203, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[205, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[205, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[207, 2, 1, "", "Container"], [208, 2, 1, "", "DataContainer"], [209, 2, 1, "", "DataNode"], [210, 2, 1, "", "SignalContainer"], [211, 2, 1, "", "SignalNode"], [212, 2, 1, "", "TreeNode"], [213, 1, 1, "", "dummy_True"], [214, 1, 1, "", "dummy_func"], [215, 1, 1, "", "get_registered_funcs"], [216, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[207, 3, 1, "", "__init__"], [207, 3, 1, "", "cleanup"], [207, 3, 1, "", "reset"]], "aslm.model.features.feature_container.DataContainer": [[208, 3, 1, "", "__init__"], [208, 3, 1, "", "cleanup"], [208, 3, 1, "", "reset"], [208, 3, 1, "", "run"]], "aslm.model.features.feature_container.DataNode": [[209, 3, 1, "", "__init__"], [209, 3, 1, "", "run"], [209, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.SignalContainer": [[210, 3, 1, "", "__init__"], [210, 3, 1, "", "cleanup"], [210, 3, 1, "", "reset"], [210, 3, 1, "", "run"]], "aslm.model.features.feature_container.SignalNode": [[211, 3, 1, "", "__init__"], [211, 3, 1, "", "run"], [211, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.TreeNode": [[212, 3, 1, "", "__init__"], [212, 3, 1, "", "set_property"]], "aslm.model.features.feature_related_functions": [[218, 2, 1, "", "SharedList"], [219, 1, 1, "", "convert_feature_list_to_str"], [220, 1, 1, "", "convert_str_to_feature_list"], [221, 1, 1, "", "load_dynamic_parameter_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[218, 3, 1, "", "__init__"], [218, 3, 1, "", "append"], [218, 3, 1, "", "clear"], [218, 3, 1, "", "copy"], [218, 3, 1, "", "count"], [218, 3, 1, "", "extend"], [218, 3, 1, "", "index"], [218, 3, 1, "", "insert"], [218, 3, 1, "", "pop"], [218, 3, 1, "", "remove"], [218, 3, 1, "", "reverse"], [218, 3, 1, "", "sort"]], "aslm.model.features.image_writer": [[223, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[223, 3, 1, "", "__init__"], [223, 3, 1, "", "calculate_and_check_disk_space"], [223, 3, 1, "id0", "close"], [223, 5, 1, "", "config_table"], [223, 5, 1, "", "current_time_point"], [223, 5, 1, "", "data_buffer"], [223, 5, 1, "", "data_source"], [223, 5, 1, "", "file_type"], [223, 3, 1, "id1", "generate_image_name"], [223, 3, 1, "id2", "generate_meta_data"], [223, 5, 1, "", "mip"], [223, 5, 1, "", "mip_directory"], [223, 5, 1, "", "model"], [223, 5, 1, "", "num_of_channels"], [223, 5, 1, "", "save_directory"], [223, 3, 1, "id3", "save_image"], [223, 5, 1, "", "sub_dir"]], "aslm.model.features.remove_empty_tiles": [[225, 2, 1, "", "DetectTissueInStack"], [226, 2, 1, "", "DetectTissueInStackAndRecord"], [227, 2, 1, "", "RemoveEmptyPositions"], [228, 1, 1, "", "detect_tissue"], [229, 1, 1, "", "detect_tissue2"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[225, 3, 1, "", "__init__"], [225, 3, 1, "", "end_func_data"], [225, 3, 1, "", "end_func_signal"], [225, 3, 1, "", "in_func_data"], [225, 3, 1, "", "in_func_signal"], [225, 3, 1, "", "pre_func_data"], [225, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[226, 3, 1, "", "__init__"], [226, 3, 1, "", "end_func_data"], [226, 3, 1, "", "end_func_signal"], [226, 3, 1, "", "in_func_data"], [226, 3, 1, "", "in_func_signal"], [226, 3, 1, "", "pre_func_data"], [226, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[227, 3, 1, "", "__init__"], [227, 3, 1, "", "signal_func"]], "aslm.model.features.restful_features": [[231, 2, 1, "", "IlastikSegmentation"], [232, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[231, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[234, 2, 1, "", "VolumeSearch"], [235, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[234, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[237, 0, 0, "-", "bdv_metadata"], [239, 0, 0, "-", "metadata"], [242, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[238, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[238, 3, 1, "", "__init__"], [238, 3, 1, "", "affine_matrix_to_stage_positions"], [238, 3, 1, "", "parse_xml"], [238, 4, 1, "", "shape"], [238, 3, 1, "", "stage_positions_to_affine_matrix"], [238, 3, 1, "", "to_xml"], [238, 4, 1, "", "voxel_size"], [238, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[240, 2, 1, "", "Metadata"], [241, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[240, 3, 1, "", "__init__"], [240, 4, 1, "", "shape"], [240, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[241, 3, 1, "", "__init__"], [241, 4, 1, "", "shape"], [241, 3, 1, "", "to_xml"], [241, 4, 1, "", "voxel_size"], [241, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[243, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[243, 3, 1, "", "__init__"], [243, 3, 1, "", "ome_tiff_xml_dict"], [243, 4, 1, "", "shape"], [243, 3, 1, "", "to_xml"], [243, 4, 1, "", "voxel_size"], [243, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[245, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[245, 3, 1, "", "__init__"], [245, 5, 1, "", "ask_stage_for_position"], [245, 3, 1, "", "assemble_device_config_lists"], [245, 5, 1, "", "available_channels"], [245, 3, 1, "", "calculate_all_waveform"], [245, 3, 1, "", "calculate_exposure_sweep_times"], [245, 5, 1, "", "central_focus"], [245, 5, 1, "", "channels"], [245, 5, 1, "", "configuration"], [245, 5, 1, "", "current_channel"], [245, 5, 1, "", "current_laser_index"], [245, 5, 1, "", "daq"], [245, 5, 1, "", "data_buffer"], [245, 3, 1, "", "end_acquisition"], [245, 5, 1, "", "galvo"], [245, 3, 1, "", "get_readout_time"], [245, 3, 1, "", "get_stage_position"], [245, 5, 1, "", "info"], [245, 5, 1, "", "is_synthetic"], [245, 5, 1, "", "laser_wavelength"], [245, 5, 1, "", "lasers"], [245, 3, 1, "", "load_and_start_devices"], [245, 5, 1, "", "microscope_name"], [245, 3, 1, "", "move_remote_focus"], [245, 3, 1, "", "move_stage"], [245, 3, 1, "", "move_stage_offset"], [245, 5, 1, "", "number_of_frames"], [245, 3, 1, "", "prepare_acquisition"], [245, 3, 1, "", "prepare_next_channel"], [245, 5, 1, "", "ret_pos_dict"], [245, 5, 1, "", "stages"], [245, 5, 1, "", "stages_list"], [245, 3, 1, "", "stop_stage"], [245, 3, 1, "", "terminate"], [245, 5, 1, "", "tiger_controller"], [245, 3, 1, "", "turn_off_lasers"], [245, 3, 1, "", "turn_on_laser"], [245, 3, 1, "", "update_data_buffer"], [245, 3, 1, "", "update_stage_limits"]], "aslm.model.model": [[247, 2, 1, "", "Model"]], "aslm.model.model.Model": [[247, 3, 1, "", "__init__"], [247, 5, 1, "", "acquisition_count"], [247, 5, 1, "", "active_microscope"], [247, 5, 1, "", "active_microscope_name"], [247, 5, 1, "", "ask_to_pause_data_thread"], [247, 5, 1, "", "autofocus_on"], [247, 5, 1, "", "binning"], [247, 5, 1, "", "camera_wait_iterations"], [247, 3, 1, "", "change_resolution"], [247, 5, 1, "", "configuration"], [247, 3, 1, "", "create_pipe"], [247, 5, 1, "", "current_exposure_time"], [247, 5, 1, "", "data_buffer"], [247, 5, 1, "", "data_buffer_positions"], [247, 5, 1, "", "data_thread"], [247, 3, 1, "", "destroy_virtual_microscope"], [247, 3, 1, "", "end_acquisition"], [247, 5, 1, "", "event_queue"], [247, 5, 1, "", "f_position"], [247, 5, 1, "", "feature_list"], [247, 5, 1, "", "focus_pos"], [247, 5, 1, "", "frame_id"], [247, 3, 1, "", "get_active_microscope"], [247, 3, 1, "", "get_camera_line_interval_and_exposure_time"], [247, 3, 1, "", "get_data_buffer"], [247, 3, 1, "", "get_feature_list"], [247, 3, 1, "", "get_microscope_info"], [247, 3, 1, "", "get_offset_variance_maps"], [247, 3, 1, "", "get_stage_position"], [247, 5, 1, "", "image_count"], [247, 5, 1, "", "image_writer"], [247, 5, 1, "", "imaging_mode"], [247, 5, 1, "", "img_height"], [247, 5, 1, "", "img_width"], [247, 5, 1, "", "is_acquiring"], [247, 5, 1, "", "is_live"], [247, 5, 1, "", "is_save"], [247, 3, 1, "", "launch_virtual_microscope"], [247, 3, 1, "", "load_feature_list_from_file"], [247, 3, 1, "", "load_feature_list_from_str"], [247, 3, 1, "", "load_feature_records"], [247, 3, 1, "", "load_images"], [247, 5, 1, "", "logger"], [247, 5, 1, "", "max_entropy"], [247, 5, 1, "", "microscopes"], [247, 3, 1, "", "move_stage"], [247, 5, 1, "", "number_of_frames"], [247, 5, 1, "", "pause_data_event"], [247, 5, 1, "", "pause_data_ready_lock"], [247, 3, 1, "", "pause_data_thread"], [247, 5, 1, "", "plot_pipe"], [247, 5, 1, "", "pre_exposure_time"], [247, 3, 1, "", "prepare_acquisition"], [247, 3, 1, "", "release_pipe"], [247, 3, 1, "", "resume_data_thread"], [247, 3, 1, "", "run_acquisition"], [247, 3, 1, "", "run_command"], [247, 3, 1, "", "run_data_process"], [247, 3, 1, "", "run_live_acquisition"], [247, 5, 1, "", "show_img_pipe"], [247, 5, 1, "", "signal_thread"], [247, 3, 1, "", "simplified_data_process"], [247, 3, 1, "", "snap_image"], [247, 5, 1, "", "start_time"], [247, 5, 1, "", "stop_acquisition"], [247, 5, 1, "", "stop_send_signal"], [247, 3, 1, "", "stop_stage"], [247, 3, 1, "", "terminate"], [247, 5, 1, "", "total_acquisition_count"], [247, 5, 1, "", "total_image_count"], [247, 3, 1, "", "update_data_buffer"], [247, 3, 1, "", "update_ilastik_setting"], [247, 5, 1, "", "virtual_microscopes"]], "aslm.model.waveforms": [[249, 1, 1, "", "camera_exposure"], [250, 1, 1, "", "dc_value"], [251, 1, 1, "", "remote_focus_ramp"], [252, 1, 1, "", "sawtooth"], [253, 1, 1, "", "sine_wave"], [254, 1, 1, "", "single_pulse"], [255, 1, 1, "", "smooth_waveform"], [256, 1, 1, "", "square"]], "aslm.tools": [[258, 0, 0, "-", "beams"], [262, 0, 0, "-", "common_dict_tools"], [264, 0, 0, "-", "common_functions"], [270, 0, 0, "-", "decorators"], [273, 0, 0, "-", "file_functions"], [278, 0, 0, "-", "image"], [281, 0, 0, "-", "image_loaders"], [283, 0, 0, "-", "main_functions"], [287, 0, 0, "-", "multipos_table_tools"], [292, 0, 0, "-", "project_stats"], [294, 0, 0, "-", "sdf"], [298, 0, 0, "-", "waveform_template_funcs"], [300, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[259, 1, 1, "", "fit_gaussian_beam_error"], [260, 1, 1, "", "fit_gaussian_beam_mse"], [261, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[263, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[265, 2, 1, "", "VariableWithLock"], [266, 1, 1, "", "build_ref_name"], [267, 1, 1, "", "combine_funcs"], [268, 1, 1, "", "copy_proxy_object"], [269, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[265, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[271, 2, 1, "", "FeatureList"], [272, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[271, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[274, 1, 1, "", "create_save_path"], [275, 1, 1, "", "delete_folder"], [276, 1, 1, "", "load_yaml_file"], [277, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[279, 1, 1, "", "create_arrow_image"], [280, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[282, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[282, 3, 1, "", "__init__"], [282, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[284, 1, 1, "", "create_parser"], [285, 1, 1, "", "evaluate_parser_input_arguments"], [286, 1, 1, "", "identify_gpu"]], "aslm.tools.multipos_table_tools": [[288, 1, 1, "", "calc_num_tiles"], [289, 1, 1, "", "compute_tiles_from_bounding_box"], [290, 1, 1, "", "sign"], [291, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[293, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[295, 1, 1, "", "box"], [296, 1, 1, "", "sphere"], [297, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[299, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[301, 1, 1, "", "dict_to_xml"], [302, 1, 1, "", "parse_xml"]], "aslm.view": [[304, 0, 0, "-", "custom_widgets"], [305, 0, 0, "-", "main_window_content"], [306, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310, 313, 317], "config": [0, 1, 2, 3, 4, 5, 6, 7, 8], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_experiment_config": 7, "verify_waveform_const": 8, "control": [9, 10, 11, 12, 13, 14, 15, 321], "configuration_control": [10, 11], "configurationcontrol": 11, "thread_pool": [12, 13, 14, 15], "selflockthread": 13, "synchronizedthreadpool": 14, "threadwaitlist": 15, "log_fil": [16, 17, 18, 19, 20, 21, 22, 23, 24], "filter": [17, 18, 19, 319, 321], "nonperffilt": 18, "performancefilt": 19, "log_funct": [20, 21, 22, 23, 24], "find_filenam": 21, "log_setup": 22, "main_process_listen": 23, "update_nested_dict": 24, "model": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 314], "analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "boundary_detect": [27, 28, 29, 30, 31], "binary_detect": 28, "find_tissue_boundary_2d": 29, "has_tissu": 30, "map_boundari": 31, "camera": [32, 33, 34, 35, 36, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 319, 321], "compute_flatfield_map": 33, "compute_noise_sigma": 34, "compute_scmos_offset_and_variance_map": 35, "compute_signal_to_nois": 36, "detect": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "add_median_bord": 38, "combine_imag": 39, "log_detect": 40, "make_inside_imag": 41, "make_normalized_imag": 42, "make_sphere_3d": 43, "multiscale_surface_filter_3d": 44, "surface_filter_gauss_3d": 45, "three_level_segment": 46, "image_contrast": [47, 48], "fast_normalized_dct_shannon_entropi": 48, "concurr": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67], "concurrency_tool": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "custodythread": 51, "fancythread": 52, "mytestclass": 53, "objectinsubprocess": 54, "politethread": 55, "resultthread": 56, "sharedndarrai": 57, "testobjectinsubprocess": 58, "testresultthreadandcustodythread": 59, "testsharedndarrai": 60, "proxy_object": [61, 62, 63, 64, 65], "proxymanag": 62, "proxyobject": 63, "launch_custody_thread": 64, "launch_thread": 65, "write_paramet": [66, 67], "write_param": 67, "data_sourc": [68, 69, 70, 71, 72, 73, 74, 75], "bdv_data_sourc": [69, 70], "bigdataviewerdatasourc": 70, "datasourc": 72, "get_data_sourc": 73, "tiff_data_sourc": [74, 75], "tiffdatasourc": 75, "device_startup_funct": [76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "dummydeviceconnect": 77, "auto_redi": 78, "device_not_found": 79, "load_camera_connect": 80, "load_devic": 81, "load_filter_wheel_connect": 82, "load_stag": 83, "load_zoom_connect": 84, "start_camera": 85, "start_daq": 86, "start_filter_wheel": 87, "start_galvo": 88, "start_las": 89, "start_remote_focus_devic": 90, "start_shutt": 91, "start_stag": 92, "start_zoom": 93, "devic": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "api": [95, 96, 97, 98, 99, 100, 309, 319], "coher": [96, 321], "dynamixel": [97, 98, 99, 321], "dynamixel_funct": [98, 99], "create_mock_dxl_devic": 99, "omicron": [100, 321], "camera_bas": [102, 103], "camerabas": 103, "camera_hamamatsu": [104, 105, 106], "hamamatsuorca": 105, "hamamatsuorcalightn": 106, "camera_photometr": [107, 108], "photometricskinetix": 108, "camera_synthet": [109, 110, 111], "syntheticcamera": 110, "syntheticcameracontrol": 111, "daq": [112, 113, 114, 115, 116, 319], "daq_bas": [113, 114], "daqbas": 114, "daq_synthet": [115, 116], "syntheticdaq": 116, "filter_wheel": [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "filter_wheel_asi": [118, 119, 120], "asifilterwheel": 119, "build_filter_wheel_connect": [120, 125], "filter_wheel_bas": [121, 122], "filterwheelbas": 122, "filter_wheel_sutt": [123, 124, 125], "sutterfilterwheel": 124, "filter_wheel_synthet": [126, 127], "syntheticfilterwheel": 127, "galvo": [128, 129, 130, 131, 132, 319, 321], "galvo_bas": [129, 130], "galvobas": 130, "galvo_synthet": [131, 132], "syntheticgalvo": 132, "laser": [133, 134, 135, 136, 137, 319, 321], "laser_bas": [134, 135], "laserbas": 135, "laser_synthet": [136, 137], "syntheticlas": 137, "object": [138, 139, 316], "remote_focu": [140, 141, 142, 143, 144], "remote_focus_bas": [141, 142], "remotefocusbas": 142, "remote_focus_synthet": [143, 144], "syntheticremotefocu": 144, "shutter": [145, 146, 147, 148, 149, 319, 321], "laser_shutter_bas": [146, 147], "shutterbas": 147, "laser_shutter_synthet": [148, 149], "syntheticshutt": 149, "stage": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 310, 319, 321], "stage_asi": [151, 152, 153], "asistag": 152, "build_asi_stage_connect": 153, "stage_bas": [154, 155], "stagebas": 155, "stage_galvo": [156, 157], "galvonistag": 157, "stage_mcl": [158, 159, 160], "mclstage": 159, "build_mclstage_connect": 160, "stage_pi": [161, 162, 163], "pistag": 162, "build_pistage_connect": 163, "stage_sutt": [164, 165, 166], "sutterstag": 165, "build_mp285_connect": 166, "stage_synthet": [167, 168], "syntheticstag": 168, "stage_tl_kcube_inerti": [169, 170, 171], "tlkimstag": 170, "build_tlkimstage_connect": 171, "zoom": [172, 173, 174, 175, 176, 177, 178, 179, 319, 321], "zoom_bas": [173, 174], "zoombas": 174, "zoom_dynamixel": [175, 176, 177], "dynamixelzoom": 176, "build_dynamixel_zoom_connect": 177, "zoom_synthet": [178, 179], "syntheticzoom": 179, "dummi": [180, 181, 182, 183, 184], "dummycontrol": 181, "dummydevic": 182, "dummymicroscop": 183, "dummymodel": 184, "featur": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 314, 316], "auto_tile_scan": [186, 187], "calculatefocusrang": 187, "paramet": [187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 225, 226, 227, 228, 229, 316], "attribut": [187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 209, 210, 211, 212, 218, 225, 226, 227], "method": [187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 218, 225, 226, 227], "note": [187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 221, 228, 229], "return": [187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 209, 211, 212, 213, 214, 215, 216, 219, 225, 226, 227, 228, 229], "autofocu": [188, 189, 190], "power_t": 190, "common_featur": [191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "changeresolut": 192, "conproacquisit": 193, "findtissuesimple2d": 194, "loopbycount": 195, "movetonextpositioninmultipositiont": 196, "preparenextchannel": 197, "snap": 198, "stackpaus": 199, "waittocontinu": 200, "zstackacquisit": 201, "constant_velocity_acquisit": [202, 203], "constantvelocityacquisit": 203, "dummy_detect": [204, 205], "feature_contain": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216], "contain": [207, 316], "datacontain": 208, "datanod": 209, "signalcontain": 210, "signalnod": 211, "treenod": 212, "dummy_tru": 213, "dummy_func": 214, "get_registered_func": 215, "load_featur": 216, "feature_related_funct": [217, 218, 219, 220, 221], "sharedlist": 218, "convert_feature_list_to_str": 219, "exampl": [219, 221, 228, 310], "convert_str_to_feature_list": 220, "load_dynamic_parameter_funct": 221, "image_writ": [222, 223], "imagewrit": 223, "remove_empty_til": [224, 225, 226, 227, 228, 229], "detecttissueinstack": 225, "detecttissueinstackandrecord": 226, "removeemptyposit": 227, "detect_tissu": 228, "detect_tissue2": 229, "restful_featur": [230, 231, 232], "ilastiksegment": 231, "prepare_servic": 232, "volume_search": [233, 234, 235], "volumesearch": 234, "draw_box": 235, "metadata_sourc": [236, 237, 238, 239, 240, 241, 242, 243], "bdv_metadata": [237, 238], "bigdataviewermetadata": 238, "metadata": [239, 240, 241], "xmlmetadata": 241, "ome_tiff_metadata": [242, 243], "ometiffmetadata": 243, "microscop": [244, 245, 310, 317, 319], "waveform": [248, 249, 250, 251, 252, 253, 254, 255, 256, 319], "camera_exposur": 249, "dc_valu": 250, "remote_focus_ramp": 251, "sawtooth": 252, "sine_wav": 253, "single_puls": 254, "smooth_waveform": 255, "squar": 256, "tool": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302], "beam": [258, 259, 260, 261], "fit_gaussian_beam_error": 259, "fit_gaussian_beam_ms": 260, "gaussian_beam": 261, "common_dict_tool": [262, 263], "update_stage_dict": 263, "common_funct": [264, 265, 266, 267, 268, 269], "variablewithlock": 265, "build_ref_nam": 266, "combine_func": 267, "copy_proxy_object": 268, "load_module_from_fil": 269, "decor": [270, 271, 272], "featurelist": 271, "function_tim": 272, "file_funct": [273, 274, 275, 276, 277], "create_save_path": 274, "delete_fold": 275, "load_yaml_fil": 276, "save_yaml_fil": 277, "imag": [278, 279, 280], "create_arrow_imag": 279, "text_arrai": 280, "image_load": [281, 282], "lazytiff": 282, "main_funct": [283, 284, 285, 286], "create_pars": 284, "evaluate_parser_input_argu": 285, "identify_gpu": 286, "multipos_table_tool": [287, 288, 289, 290, 291], "calc_num_til": 288, "compute_tiles_from_bounding_box": 289, "sign": 290, "update_t": 291, "project_stat": [292, 293], "countlin": 293, "sdf": [294, 295, 296, 297], "box": 295, "sphere": 296, "volume_from_sdf": 297, "waveform_template_func": [298, 299], "get_waveform_template_paramet": 299, "xml_tool": [300, 301, 302], "dict_to_xml": 301, "parse_xml": 302, "view": [303, 304, 305, 306], "custom_widget": 304, "main_window_cont": 305, "popup": 306, "refer": 309, "configur": [310, 319], "yaml": 310, "hardwar": [310, 312, 319, 321], "section": [310, 319], "gui": [310, 319], "channel": 310, "stack": 310, "acquisit": [310, 321], "timepoint": 310, "contribut": [311, 313], "guidelin": 311, "gener": 311, "principl": 311, "code": 311, "style": 311, "dictionari": 311, "pars": 311, "unit": [311, 312], "test": 311, "develop": 311, "mac": 311, "ad": [312, 314], "new": [312, 314], "scientif": 312, "how": 312, "add": 312, "introduct": 316, "current": 316, "implement": [316, 317], "The": 316, "creat": 316, "custom": 316, "combin": 316, "load": 316, "function": 316, "edit": 316, "delet": 316, "multiscal": 317, "expans": 317, "opm": 317, "v2": 317, "ct": 317, "v1": 317, "spectral": 317, "tirf": 317, "autonom": 318, "softwar": [318, 319, 320], "light": 318, "microscopi": 318, "project": 318, "philosophi": 318, "content": 318, "author": 318, "index": 318, "search": 318, "file": 319, "remot": 319, "focu": 319, "wheel": [319, 321], "ax": 319, "definit": 319, "joystick": 319, "constant": 319, "other": 319, "templat": 319, "rest": 319, "instal": 320, "download": 320, "git": 320, "setup": 320, "your": 320, "python": 320, "environ": 320, "gpu": 320, "depend": 320, "troubleshoot": 320, "support": 321, "data": 321, "card": 321, "ni": 321, "pcie": 321, "6738": 321, "pxi": 321, "6259": 321, "hamamatsu": 321, "flash": 321, "4": 321, "0": 321, "fusion": 321, "lightn": 321, "photometr": 321, "iri": 321, "15": 321, "voicecoil": 321, "equip": 321, "solut": 321, "thorlab": 321, "blink": 321, "asi": 321, "tiger": 321, "sutter": 321, "physik": 321, "instrument": 321, "analog": 321, "piezo": 321, "etc": 321, "deform": 321, "mirror": 321, "imagin": 321, "optic": 321, "galvanomet": 321, "cambridg": 321, "technologi": 321, "novanta": 321, "scannermax": 321, "mechan": 321, "user": 322, "guid": 322}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_experiment_config": [[7, "aslm-config-config-verify-experiment-config"]], "aslm.config.config.verify_waveform_constants": [[8, "aslm-config-config-verify-waveform-constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[13, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "aslm.log_files.filters.NonPerfFilter": [[18, "aslm-log-files-filters-nonperffilter"]], "aslm.log_files.filters.PerformanceFilter": [[19, "aslm-log-files-filters-performancefilter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "aslm.log_files.log_functions.find_filename": [[21, "aslm-log-files-log-functions-find-filename"]], "aslm.log_files.log_functions.log_setup": [[22, "aslm-log-files-log-functions-log-setup"]], "aslm.log_files.log_functions.main_process_listener": [[23, "aslm-log-files-log-functions-main-process-listener"]], "aslm.log_files.log_functions.update_nested_dict": [[24, "aslm-log-files-log-functions-update-nested-dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[28, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[29, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[30, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[31, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[33, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[34, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[35, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[36, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[37, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[38, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[39, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[40, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[41, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[42, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[43, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[44, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[45, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[46, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[47, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[48, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.concurrency": [[49, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[50, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[51, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[52, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[53, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[54, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[55, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[56, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[57, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[58, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[59, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[60, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[61, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[62, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[63, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[64, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[65, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.concurrency.write_parameters": [[66, "module-aslm.model.concurrency.write_parameters"]], "aslm.model.concurrency.write_parameters.write_Params": [[67, "aslm-model-concurrency-write-parameters-write-params"]], "aslm.model.data_sources": [[68, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[69, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[70, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[71, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[72, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[73, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[74, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[75, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.device_startup_functions": [[76, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[77, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[78, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[79, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[80, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[81, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[82, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[83, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[84, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[85, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[86, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[87, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[88, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[89, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[90, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[91, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[92, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[93, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[94, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[95, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[96, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[97, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[98, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device": [[99, "aslm-model-devices-apis-dynamixel-dynamixel-functions-create-mock-dxl-device"]], "aslm.model.devices.APIs.omicron": [[100, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[101, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[102, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[103, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[104, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[105, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[106, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[107, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[108, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[109, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[110, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[111, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[112, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[113, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[114, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[115, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[116, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[117, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[118, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[119, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[120, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[121, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[122, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[123, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[124, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[125, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[126, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[127, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[128, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[129, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[130, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[131, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[132, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.lasers": [[133, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[134, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[135, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[136, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[137, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.objectives": [[138, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[139, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[140, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[141, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[142, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[143, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[144, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[145, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[146, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[147, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[148, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[149, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[150, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[151, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[152, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[153, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[154, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[155, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[156, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[157, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[158, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[159, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[160, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[161, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[162, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[163, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[164, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[165, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[166, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[167, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[168, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[169, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[170, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[171, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[172, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[173, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[174, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_dynamixel": [[175, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[176, "aslm-model-devices-zoom-zoom-dynamixel-dynamixelzoom"]], "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection": [[177, "aslm-model-devices-zoom-zoom-dynamixel-build-dynamixel-zoom-connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[178, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[179, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[180, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[181, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[182, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[183, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[184, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[185, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[186, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[187, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "Parameters:": [[187, "parameters"], [187, "id1"], [187, "id2"], [187, "id4"], [187, "id6"], [187, "id8"], [187, "id10"], [192, "parameters"], [192, "id1"], [192, "id2"], [193, "parameters"], [193, "id3"], [193, "id6"], [193, "id8"], [193, "id10"], [194, "parameters"], [194, "id1"], [195, "parameters"], [195, "id1"], [195, "id2"], [196, "parameters"], [196, "id1"], [196, "id2"], [197, "parameters"], [197, "id1"], [198, "parameters"], [198, "id1"], [199, "parameters"], [199, "id1"], [200, "parameters"], [200, "id1"], [200, "id2"], [200, "id4"], [200, "id6"], [200, "id8"], [201, "parameters"], [201, "id1"], [201, "id2"], [201, "id4"], [201, "id6"], [201, "id8"], [201, "id10"], [201, "id12"], [201, "id14"], [207, "parameters"], [208, "parameters"], [208, "id3"], [209, "parameters"], [209, "id3"], [209, "id6"], [210, "parameters"], [210, "id3"], [211, "parameters"], [211, "id3"], [211, "id6"], [212, "parameters"], [212, "id3"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [218, "parameters"], [218, "id1"], [219, "parameters"], [221, "parameters"], [225, "parameters"], [225, "id2"], [226, "parameters"], [226, "id2"], [227, "parameters"], [228, "parameters"], [229, "parameters"]], "Attributes:": [[187, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [197, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [207, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [218, "attributes"], [225, "attributes"], [226, "attributes"], [227, "attributes"]], "Methods:": [[187, "methods"], [192, "methods"], [193, "methods"], [194, "methods"], [195, "methods"], [196, "methods"], [197, "methods"], [198, "methods"], [199, "methods"], [200, "methods"], [201, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [211, "methods"], [212, "methods"], [218, "methods"], [225, "methods"], [226, "methods"], [227, "methods"]], "Notes:": [[187, "notes"], [192, "notes"], [193, "notes"], [194, "notes"], [195, "notes"], [196, "notes"], [197, "notes"], [198, "notes"], [199, "notes"], [200, "notes"], [201, "notes"], [207, "notes"], [208, "notes"], [208, "id6"], [209, "notes"], [210, "notes"], [210, "id6"], [211, "notes"], [212, "notes"], [213, "notes"], [214, "notes"], [215, "notes"], [216, "notes"], [218, "notes"], [219, "notes"], [221, "notes"], [228, "notes"], [229, "notes"]], "Returns:": [[187, "returns"], [187, "id3"], [187, "id5"], [187, "id7"], [187, "id9"], [187, "id11"], [192, "returns"], [192, "id3"], [193, "returns"], [193, "id7"], [193, "id9"], [193, "id11"], [194, "returns"], [195, "returns"], [195, "id3"], [196, "returns"], [196, "id3"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [200, "id3"], [200, "id5"], [200, "id7"], [200, "id9"], [201, "returns"], [201, "id3"], [201, "id5"], [201, "id7"], [201, "id9"], [201, "id11"], [201, "id13"], [201, "id15"], [209, "returns"], [209, "id9"], [211, "returns"], [211, "id9"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [219, "returns"], [225, "returns"], [225, "id1"], [225, "id3"], [225, "id4"], [225, "id5"], [225, "id6"], [226, "returns"], [226, "id1"], [226, "id3"], [226, "id4"], [226, "id5"], [226, "id6"], [227, "returns"], [228, "returns"], [229, "returns"]], "aslm.model.features.autofocus": [[188, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[189, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[190, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[191, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[192, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[193, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[194, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[195, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[196, "aslm-model-features-common-features-movetonextpositioninmultipositiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[197, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[198, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[199, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[200, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[201, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[202, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[203, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[204, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[205, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[206, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[207, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[208, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[209, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[210, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[211, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[212, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[213, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[214, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[215, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[216, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[217, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[218, "aslm-model-features-feature-related-functions-sharedlist"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[219, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "Example:": [[219, "example"], [221, "example"], [228, "example"]], "]": [[219, "id3"], [221, "id5"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[220, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions": [[221, "aslm-model-features-feature-related-functions-load-dynamic-parameter-functions"]], "aslm.model.features.image_writer": [[222, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[223, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.remove_empty_tiles": [[224, "module-aslm.model.features.remove_empty_tiles"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[225, "aslm-model-features-remove-empty-tiles-detecttissueinstack"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[226, "aslm-model-features-remove-empty-tiles-detecttissueinstackandrecord"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[227, "aslm-model-features-remove-empty-tiles-removeemptypositions"]], "aslm.model.features.remove_empty_tiles.detect_tissue": [[228, "aslm-model-features-remove-empty-tiles-detect-tissue"]], "aslm.model.features.remove_empty_tiles.detect_tissue2": [[229, "aslm-model-features-remove-empty-tiles-detect-tissue2"]], "aslm.model.features.restful_features": [[230, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[231, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[232, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[233, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[234, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[235, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[236, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[237, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[238, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[239, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[240, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[241, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[242, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[243, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[244, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[245, "aslm-model-microscope-microscope"]], "aslm.model.model": [[246, "module-aslm.model.model"]], "aslm.model.model.Model": [[247, "aslm-model-model-model"]], "aslm.model.waveforms": [[248, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[249, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[250, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[251, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[252, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[253, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[254, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[255, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[256, "aslm-model-waveforms-square"]], "aslm.tools": [[257, "module-aslm.tools"]], "aslm.tools.beams": [[258, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[259, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[260, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[261, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[262, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[263, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[264, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[265, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[266, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[267, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[268, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[269, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[270, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[271, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[272, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[273, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[274, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[275, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[276, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[277, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[278, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[279, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[280, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[281, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[282, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[283, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[284, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[285, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.main_functions.identify_gpu": [[286, "aslm-tools-main-functions-identify-gpu"]], "aslm.tools.multipos_table_tools": [[287, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[288, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[289, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[290, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[291, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[292, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[293, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[294, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[295, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[296, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[297, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[298, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[299, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[300, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[301, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[302, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[303, "module-aslm.view"]], "aslm.view.custom_widgets": [[304, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[305, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[306, "module-aslm.view.popups"]], "API Reference": [[309, "api-reference"]], "Configuring ASLM": [[310, "configuring-aslm"]], "Configuration.yaml": [[310, "configuration-yaml"]], "Hardware Section": [[310, "hardware-section"], [319, "hardware-section"]], "Microscope Section": [[310, "microscope-section"], [319, "microscope-section"]], "Configuring stages": [[310, "configuring-stages"]], "GUI Section": [[310, "gui-section"], [319, "gui-section"]], "Channels": [[310, "channels"]], "Stack Acquisition": [[310, "stack-acquisition"]], "Timepoint": [[310, "timepoint"]], "Example YAML Configuration": [[310, "example-yaml-configuration"]], "Contributing Guidelines": [[311, "contributing-guidelines"]], "General principles": [[311, "general-principles"]], "Coding style": [[311, "coding-style"]], "Dictionary Parsing": [[311, "dictionary-parsing"]], "Unit tests": [[311, "unit-tests"]], "Developing with a Mac": [[311, "developing-with-a-mac"]], "Adding New Hardware": [[312, "adding-new-hardware"]], "Scientific Units": [[312, "scientific-units"]], "How to Add New Hardware": [[312, "how-to-add-new-hardware"]], "Contributing to ASLM": [[313, "contributing-to-aslm"]], "Adding New Model Features": [[314, "adding-new-model-features"]], "Feature Container": [[316, "feature-container"]], "Introduction": [[316, "introduction"]], "Currently Implemented Features": [[316, "currently-implemented-features"]], "The Feature Object": [[316, "the-feature-object"]], "Creating Custom Features": [[316, "creating-custom-features"]], "Combining Features": [[316, "combining-features"]], "Loading Custom Functions": [[316, "loading-custom-functions"]], "Editing Function Parameters": [[316, "editing-function-parameters"]], "Deleting Features": [[316, "deleting-features"]], "Microscope Implementations": [[317, "microscope-implementations"]], "Multiscale Microscope": [[317, "multiscale-microscope"]], "Expansion ASLM": [[317, "expansion-aslm"]], "OPM-V2": [[317, "opm-v2"]], "CT-ASLM-V1": [[317, "ct-aslm-v1"]], "CT-ASLM-V2": [[317, "ct-aslm-v2"]], "Spectral TIRF": [[317, "spectral-tirf"]], "Autonomous Software for Light Microscopy": [[318, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[318, "project-philosophy"]], "Contents": [[318, "contents"]], "Authors": [[318, "authors"]], "Index and search": [[318, "index-and-search"]], "Software Configuration": [[319, "software-configuration"]], "Configuration File": [[319, "configuration-file"]], "DAQ Section": [[319, "daq-section"]], "Camera Section": [[319, "camera-section"]], "Remote Focus Section": [[319, "remote-focus-section"]], "Galvo Section": [[319, "galvo-section"]], "Filter Wheel Section": [[319, "filter-wheel-section"]], "Stage Section": [[319, "stage-section"]], "Stage Axes Definition": [[319, "stage-axes-definition"]], "Joystick Axes Definition": [[319, "joystick-axes-definition"]], "Zoom Section": [[319, "zoom-section"]], "Shutter Section": [[319, "shutter-section"]], "Laser Section": [[319, "laser-section"]], "Waveform Constants File": [[319, "waveform-constants-file"]], "Remote Constants Section": [[319, "remote-constants-section"]], "Galvo Constants Section": [[319, "galvo-constants-section"]], "Other Constants Section": [[319, "other-constants-section"]], "Waveform Templates File": [[319, "waveform-templates-file"]], "Rest API Configuration File": [[319, "rest-api-configuration-file"]], "Software Installation": [[320, "software-installation"]], "Download Git": [[320, "download-git"]], "Setup your Python Environment": [[320, "setup-your-python-environment"]], "GPU Dependencies": [[320, "gpu-dependencies"]], "Troubleshooting": [[320, "troubleshooting"]], "Supported Hardware": [[321, "supported-hardware"]], "Data Acquisition Card": [[321, "data-acquisition-card"]], "NI": [[321, "ni"]], "PCIe-6738": [[321, "pcie-6738"]], "PXI-6259": [[321, "pxi-6259"]], "Cameras": [[321, "cameras"]], "Hamamatsu Flash 4.0, Fusion, and Lightning": [[321, "hamamatsu-flash-4-0-fusion-and-lightning"]], "Photometrics Iris 15": [[321, "photometrics-iris-15"]], "Voicecoil": [[321, "voicecoil"]], "Equipment Solutions": [[321, "equipment-solutions"]], "Thorlabs BLINK": [[321, "thorlabs-blink"]], "Stages": [[321, "stages"]], "ASI Tiger Controller": [[321, "asi-tiger-controller"]], "Sutter": [[321, "sutter"], [321, "id1"]], "Physik Instrumente": [[321, "physik-instrumente"]], "Thorlabs": [[321, "thorlabs"], [321, "id2"]], "Analog Controlled (Galvo/Piezo/etc.)": [[321, "analog-controlled-galvo-piezo-etc"]], "Deformable Mirrors": [[321, "deformable-mirrors"]], "Imagine Optics": [[321, "imagine-optics"]], "Filter Wheels": [[321, "filter-wheels"]], "ASI": [[321, "asi"]], "Galvanometers": [[321, "galvanometers"]], "Cambridge Technologies/Novanta": [[321, "cambridge-technologies-novanta"]], "ScannerMAX": [[321, "scannermax"]], "Lasers": [[321, "lasers"]], "Coherent": [[321, "coherent"]], "Omicron": [[321, "omicron"]], "Shutters": [[321, "shutters"]], "Mechanical Zoom": [[321, "mechanical-zoom"]], "Dynamixel": [[321, "dynamixel"]], "User Guide": [[322, "user-guide"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [9, "module-aslm.controller"], [10, "module-aslm.controller.configuration_controller"], [12, "module-aslm.controller.thread_pool"], [16, "module-aslm.log_files"], [17, "module-aslm.log_files.filters"], [20, "module-aslm.log_files.log_functions"], [25, "module-aslm.model"], [26, "module-aslm.model.analysis"], [27, "module-aslm.model.analysis.boundary_detect"], [32, "module-aslm.model.analysis.camera"], [37, "module-aslm.model.analysis.detection"], [47, "module-aslm.model.analysis.image_contrast"], [49, "module-aslm.model.concurrency"], [50, "module-aslm.model.concurrency.concurrency_tools"], [61, "module-aslm.model.concurrency.proxy_objects"], [66, "module-aslm.model.concurrency.write_parameters"], [68, "module-aslm.model.data_sources"], [69, "module-aslm.model.data_sources.bdv_data_source"], [71, "module-aslm.model.data_sources.data_source"], [74, "module-aslm.model.data_sources.tiff_data_source"], [76, "module-aslm.model.device_startup_functions"], [94, "module-aslm.model.devices"], [95, "module-aslm.model.devices.APIs"], [96, "module-aslm.model.devices.APIs.coherent"], [97, "module-aslm.model.devices.APIs.dynamixel"], [98, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"], [100, "module-aslm.model.devices.APIs.omicron"], [101, "module-aslm.model.devices.camera"], [102, "module-aslm.model.devices.camera.camera_base"], [104, "module-aslm.model.devices.camera.camera_hamamatsu"], [107, "module-aslm.model.devices.camera.camera_photometrics"], [109, "module-aslm.model.devices.camera.camera_synthetic"], [112, "module-aslm.model.devices.daq"], [113, "module-aslm.model.devices.daq.daq_base"], [115, "module-aslm.model.devices.daq.daq_synthetic"], [117, "module-aslm.model.devices.filter_wheel"], [118, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [121, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [123, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [126, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [128, "module-aslm.model.devices.galvo"], [129, "module-aslm.model.devices.galvo.galvo_base"], [131, "module-aslm.model.devices.galvo.galvo_synthetic"], [133, "module-aslm.model.devices.lasers"], [134, "module-aslm.model.devices.lasers.laser_base"], [136, "module-aslm.model.devices.lasers.laser_synthetic"], [138, "module-aslm.model.devices.objectives"], [140, "module-aslm.model.devices.remote_focus"], [141, "module-aslm.model.devices.remote_focus.remote_focus_base"], [143, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [145, "module-aslm.model.devices.shutter"], [146, "module-aslm.model.devices.shutter.laser_shutter_base"], [148, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [150, "module-aslm.model.devices.stages"], [151, "module-aslm.model.devices.stages.stage_asi"], [154, "module-aslm.model.devices.stages.stage_base"], [156, "module-aslm.model.devices.stages.stage_galvo"], [158, "module-aslm.model.devices.stages.stage_mcl"], [161, "module-aslm.model.devices.stages.stage_pi"], [164, "module-aslm.model.devices.stages.stage_sutter"], [167, "module-aslm.model.devices.stages.stage_synthetic"], [169, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [172, "module-aslm.model.devices.zoom"], [173, "module-aslm.model.devices.zoom.zoom_base"], [175, "module-aslm.model.devices.zoom.zoom_dynamixel"], [178, "module-aslm.model.devices.zoom.zoom_synthetic"], [180, "module-aslm.model.dummy"], [185, "module-aslm.model.features"], [186, "module-aslm.model.features.auto_tile_scan"], [188, "module-aslm.model.features.autofocus"], [191, "module-aslm.model.features.common_features"], [202, "module-aslm.model.features.constant_velocity_acquisition"], [204, "module-aslm.model.features.dummy_detective"], [206, "module-aslm.model.features.feature_container"], [217, "module-aslm.model.features.feature_related_functions"], [222, "module-aslm.model.features.image_writer"], [224, "module-aslm.model.features.remove_empty_tiles"], [230, "module-aslm.model.features.restful_features"], [233, "module-aslm.model.features.volume_search"], [236, "module-aslm.model.metadata_sources"], [237, "module-aslm.model.metadata_sources.bdv_metadata"], [239, "module-aslm.model.metadata_sources.metadata"], [242, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [244, "module-aslm.model.microscope"], [246, "module-aslm.model.model"], [248, "module-aslm.model.waveforms"], [257, "module-aslm.tools"], [258, "module-aslm.tools.beams"], [262, "module-aslm.tools.common_dict_tools"], [264, "module-aslm.tools.common_functions"], [270, "module-aslm.tools.decorators"], [273, "module-aslm.tools.file_functions"], [278, "module-aslm.tools.image"], [281, "module-aslm.tools.image_loaders"], [283, "module-aslm.tools.main_functions"], [287, "module-aslm.tools.multipos_table_tools"], [292, "module-aslm.tools.project_stats"], [294, "module-aslm.tools.sdf"], [298, "module-aslm.tools.waveform_template_funcs"], [300, "module-aslm.tools.xml_tools"], [303, "module-aslm.view"], [304, "module-aslm.view.custom_widgets"], [305, "module-aslm.view.main_window_content"], [306, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_experiment_config() (in module aslm.config.config)": [[7, "aslm.config.config.verify_experiment_config"]], "verify_waveform_constants() (in module aslm.config.config)": [[8, "aslm.config.config.verify_waveform_constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[11, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_flip_flags"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "configuration (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.configuration"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_num (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_num"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "microscope_config (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_config"]], "microscope_name (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_name"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_flip_flags"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.run"]], "selflock (aslm.controller.thread_pool.selflockthread attribute)": [[13, "aslm.controller.thread_pool.SelfLockThread.selfLock"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "resources (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.resources"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "todeletelist (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.toDeleteList"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[15, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "waitlist (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlist"]], "waitlistlock (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlistLock"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "nonperffilter (class in aslm.log_files.filters)": [[18, "aslm.log_files.filters.NonPerfFilter"]], "__init__() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.__init__"]], "filter() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.filter"]], "performancefilter (class in aslm.log_files.filters)": [[19, "aslm.log_files.filters.PerformanceFilter"]], "__init__() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.__init__"]], "filter() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.filter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "find_filename() (in module aslm.log_files.log_functions)": [[21, "aslm.log_files.log_functions.find_filename"]], "log_setup() (in module aslm.log_files.log_functions)": [[22, "aslm.log_files.log_functions.log_setup"]], "main_process_listener() (in module aslm.log_files.log_functions)": [[23, "aslm.log_files.log_functions.main_process_listener"]], "update_nested_dict() (in module aslm.log_files.log_functions)": [[24, "aslm.log_files.log_functions.update_nested_dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[28, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[29, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[30, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[31, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[33, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[34, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[35, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[36, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[37, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[38, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[39, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[40, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[41, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[42, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[43, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[44, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[45, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[46, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[47, "module-aslm.model.analysis.image_contrast"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[48, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[49, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[50, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[52, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[54, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[54, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[55, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[61, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[63, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[63, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[64, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[65, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.concurrency.write_parameters": [[66, "module-aslm.model.concurrency.write_parameters"]], "__init__() (aslm.model.concurrency.write_parameters.write_params method)": [[67, "aslm.model.concurrency.write_parameters.write_Params.__init__"]], "write_params (class in aslm.model.concurrency.write_parameters)": [[67, "aslm.model.concurrency.write_parameters.write_Params"]], "aslm.model.data_sources": [[68, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[69, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "bits (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.bits"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"], [70, "id5"], [70, "id6"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "dc (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dc"]], "ds_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.ds_name"]], "dt (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dt"]], "dx (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dx"]], "dy (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dy"]], "dz (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dz"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"]], "get_slice() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.get_slice"]], "image (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.image"]], "logger (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.logger"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [70, "id0"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "id10"]], "mode() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "id1"]], "nbytes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "id11"]], "nbytes() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.nbytes"]], "positions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.positions"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"], [70, "id3"], [70, "id7"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"], [70, "id2"], [70, "id8"]], "setup (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.setup"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "id12"]], "shape() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shape_c (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_c"]], "shape_t (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_t"]], "shape_x (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_x"]], "shape_y (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_y"]], "shape_z (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_z"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[70, "id13"]], "voxel_size() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[70, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"], [70, "id4"], [70, "id9"]], "aslm.model.data_sources.data_source": [[71, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[72, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.__init__"]], "bits (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.bits"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.close"], [72, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[72, "aslm.model.data_sources.data_source.DataSource.data"]], "dc (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.dc"]], "dt (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.dt"]], "dx (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.dx"]], "dy (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.dy"]], "dz (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.dz"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.file_name"]], "logger (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.logger"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.metadata"]], "mode (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.mode"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[72, "id5"]], "mode() (aslm.model.data_sources.data_source.datasource method)": [[72, "id0"]], "nbytes (aslm.model.data_sources.data_source.datasource property)": [[72, "id6"]], "nbytes() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.nbytes"]], "positions (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.positions"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.read"], [72, "id2"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"], [72, "id3"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[72, "id7"]], "shape() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.shape"]], "shape_c (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.shape_c"]], "shape_t (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.shape_t"]], "shape_x (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.shape_x"]], "shape_y (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.shape_y"]], "shape_z (aslm.model.data_sources.data_source.datasource attribute)": [[72, "aslm.model.data_sources.data_source.DataSource.shape_z"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[72, "id8"]], "voxel_size() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[72, "aslm.model.data_sources.data_source.DataSource.write"], [72, "id4"]], "get_data_source() (in module aslm.model.data_sources)": [[73, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[74, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "bits (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.bits"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"], [75, "id4"], [75, "id5"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "dc (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dc"]], "dt (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dt"]], "dx (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dx"]], "dy (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dy"]], "dz (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dz"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"], [75, "id6"]], "image (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.image"]], "logger (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.logger"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [75, "id0"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[75, "id10"]], "mode() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "id1"]], "nbytes (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[75, "id11"]], "nbytes() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.nbytes"]], "positions (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.positions"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"], [75, "id2"], [75, "id7"]], "save_directory (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.save_directory"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"], [75, "id8"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[75, "id12"]], "shape() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "shape_c (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_c"]], "shape_t (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_t"]], "shape_x (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_x"]], "shape_y (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_y"]], "shape_z (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_z"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[75, "id13"]], "voxel_size() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[75, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"], [75, "id3"], [75, "id9"]], "aslm.model.device_startup_functions": [[76, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[77, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[77, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[78, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[79, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[80, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[81, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[82, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[83, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[84, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[85, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[86, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[92, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[93, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[94, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[95, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[96, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[97, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.dynamixel.dynamixel_functions": [[98, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "create_mock_dxl_device() (in module aslm.model.devices.apis.dynamixel.dynamixel_functions)": [[99, "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device"]], "aslm.model.devices.apis.omicron": [[100, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[101, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[102, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[103, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "camera_controller (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_base.camerabase method)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.close_camera"]], "configuration (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_base.camerabase method)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.get_line_interval"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_base.camerabase method)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.get_offset_variance_maps"]], "is_acquiring (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.min_image_width"]], "offset (aslm.model.devices.camera.camera_base.camerabase property)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.offset"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "step_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.step_image_width"]], "variance (aslm.model.devices.camera.camera_base.camerabase property)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.variance"]], "x_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[103, "aslm.model.devices.camera.camera_base.CameraBase.y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[104, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[105, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.y_pixels"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[106, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[107, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "configuration (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_width"]], "offset (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.offset"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_width"]], "variance (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.variance"]], "x_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[108, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[109, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_controller"]], "camera_exposure_time (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_exposure_time"]], "camera_parameters (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "configuration (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.configuration"]], "current_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.current_frame_idx"]], "data_buffer (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.data_buffer"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.is_acquiring"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "max_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_width"]], "num_of_frame (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.num_of_frame"]], "offset (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.offset"]], "pre_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.pre_frame_idx"]], "random_image (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.random_image"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "serial_number (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_width"]], "variance (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.variance"]], "x_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[110, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.y_pixels"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[111, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[111, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[111, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "set_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[111, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.set_property_value"]], "aslm.model.devices.daq": [[112, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[113, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[114, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "camera_delay (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.camera_pulse_percent"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "daq_parameters (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_base.daqbase method)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.enable_microscope"]], "microscope_name (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.microscope_name"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.sample_rate"]], "sweep_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.sweep_time"]], "waveform_constants (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[114, "aslm.model.devices.daq.daq_base.DAQBase.waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[115, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "analog_outputs (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.analog_outputs"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "camera (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera"]], "camera_delay (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_pulse_percent"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "daq_parameters (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.enable_microscope"]], "is_updating_analog_task (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.is_updating_analog_task"]], "microscope_name (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.microscope_name"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.remote_focus_ramp_falling"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "sample_rate (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sample_rate"]], "set_external_trigger() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.set_external_trigger"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "sweep_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sweep_time"]], "trigger_mode (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.trigger_mode"]], "update_analog_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.update_analog_task"]], "wait_to_run_lock (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.wait_to_run_lock"]], "waveform_constants (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_repeat_num"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[116, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[117, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[118, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "active_filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.active_filter_wheel"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_dictionary"]], "filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel"]], "filter_wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel_position"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.number_of_filter_wheels"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[119, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wheel_position"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[120, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[121, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[123, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"]], "delay_matrix (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.delay_matrix"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "init_finished (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.init_finished"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"]], "read_on_init (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read_on_init"]], "serial (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.serial"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "speed (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.speed"]], "wait_until_done (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[124, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "comport (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_sutter.comport"]], "timeout (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_sutter.timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[126, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"], [127, "id0"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[127, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"], [127, "id1"]], "aslm.model.devices.galvo": [[128, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[129, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[130, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[131, "module-aslm.model.devices.galvo.galvo_synthetic"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"]], "configuration (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.configuration"]], "device_config (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.samples"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[132, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.waveform_dict"]], "aslm.model.devices.lasers": [[133, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[134, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "configuration (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.configuration"]], "device_config (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_base.laserbase method)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_base.laserbase method)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_base.laserbase method)": [[135, "aslm.model.devices.lasers.laser_base.LaserBase.turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[136, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "configuration (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.configuration"]], "device_config (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[137, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_on"]], "aslm.model.devices.objectives": [[138, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[139, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[139, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[139, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[140, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[141, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[143, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "move() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.move"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[144, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.waveform_dict"]], "aslm.model.devices.shutter": [[145, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[146, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[147, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[147, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[147, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[147, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[147, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_base.shutterbase property)": [[147, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[148, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[149, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[149, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[149, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[149, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[149, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter property)": [[149, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[150, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[151, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes (aslm.model.devices.stages.stage_asi.asistage attribute)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_asi.asistage attribute)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_asi.asistage attribute)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"]], "tiger_controller (aslm.model.devices.stages.stage_asi.asistage attribute)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.tiger_controller"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"]], "verify_move() (aslm.model.devices.stages.stage_asi.asistage method)": [[152, "aslm.model.devices.stages.stage_asi.ASIStage.verify_move"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[153, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[154, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[155, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[155, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes (aslm.model.devices.stages.stage_base.stagebase attribute)": [[155, "aslm.model.devices.stages.stage_base.StageBase.axes"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[155, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "close() (aslm.model.devices.stages.stage_base.stagebase method)": [[155, "aslm.model.devices.stages.stage_base.StageBase.close"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[155, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[155, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"]], "stage_feedback (aslm.model.devices.stages.stage_base.stagebase attribute)": [[155, "aslm.model.devices.stages.stage_base.StageBase.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_base.stagebase attribute)": [[155, "aslm.model.devices.stages.stage_base.StageBase.stage_limits"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[155, "aslm.model.devices.stages.stage_base.StageBase.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[155, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[156, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes"]], "axes_channels (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_channels"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "calculate_waveform() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.calculate_waveform"]], "camera_delay_percent (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.camera_delay_percent"]], "close() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.close"]], "configuration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.configuration"]], "daq (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.daq"]], "exposure_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.exposure_times"]], "galvo_max_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_min_voltage"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "microscope_name (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.microscope_name"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "remote_focus_delay (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_delay"]], "remote_focus_ramp_falling (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_ramp_falling"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "sample_rate (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sample_rate"]], "samples (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.samples"]], "stage_feedback (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"]], "sweep_time (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_time"]], "sweep_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_times"]], "trigger_source (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.trigger_source"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "volts_per_micron (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.volts_per_micron"]], "waveform_dict (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[157, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[158, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "handle (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.handle"]], "mcl_controller (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.mcl_controller"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[159, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[160, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[161, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[162, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_pi.pistage attribute)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_pi.pistage attribute)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[162, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[163, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[164, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "device_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.device_axes"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stage_feedback (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_limits"]], "stage_x_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_x_pos"]], "stage_y_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_y_pos"]], "stage_z_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_z_pos"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[165, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[166, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[167, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.close"]], "default_speed (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.default_speed"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_speed"]], "load_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.load_sample"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop_scan"]], "unload_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.unload_sample"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[168, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[169, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "kim_axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_axes"]], "kim_controller (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_controller"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "serial_number (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.serial_number"]], "stage_feedback (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[170, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[171, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[172, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[173, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.configuration"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[174, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[175, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "dynamixelzoom (class in aslm.model.devices.zoom.zoom_dynamixel)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom"]], "__init__() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.__init__"]], "addr_mx_goal_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_goal_position"]], "addr_mx_moving_speed (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_moving_speed"]], "addr_mx_p_gain (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_p_gain"]], "addr_mx_present_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_present_position"]], "addr_mx_torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_enable"]], "addr_mx_torque_limit (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_limit"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.configuration"]], "dynamixel (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.dynamixel"]], "goal_position_offset (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.goal_position_offset"]], "id (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.id"]], "move() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.move"]], "port_num (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.port_num"]], "read_position() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.set_zoom"]], "sleeptime (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.sleeptime"]], "timeout (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.timeout"]], "torque_disable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_disable"]], "torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_enable"]], "zoomdict (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[176, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomvalue"]], "build_dynamixel_zoom_connection() (in module aslm.model.devices.zoom.zoom_dynamixel)": [[177, "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[178, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.configuration"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[179, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomvalue"]], "aslm.model.dummy": [[180, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[181, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[181, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[181, "aslm.model.dummy.DummyController.clear"]], "commands (aslm.model.dummy.dummycontroller attribute)": [[181, "aslm.model.dummy.DummyController.commands"]], "configuration (aslm.model.dummy.dummycontroller attribute)": [[181, "aslm.model.dummy.DummyController.configuration"]], "configuration_controller (aslm.model.dummy.dummycontroller attribute)": [[181, "aslm.model.dummy.DummyController.configuration_controller"]], "execute() (aslm.model.dummy.dummycontroller method)": [[181, "aslm.model.dummy.DummyController.execute"]], "menu_controller (aslm.model.dummy.dummycontroller attribute)": [[181, "aslm.model.dummy.DummyController.menu_controller"]], "off_stage_pos (aslm.model.dummy.dummycontroller attribute)": [[181, "aslm.model.dummy.DummyController.off_stage_pos"]], "pop() (aslm.model.dummy.dummycontroller method)": [[181, "aslm.model.dummy.DummyController.pop"]], "stage_pos (aslm.model.dummy.dummycontroller attribute)": [[181, "aslm.model.dummy.DummyController.stage_pos"]], "view (aslm.model.dummy.dummycontroller attribute)": [[181, "aslm.model.dummy.DummyController.view"]], "dummydevice (class in aslm.model.dummy)": [[182, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[182, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[182, "aslm.model.dummy.DummyDevice.clear"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[182, "aslm.model.dummy.DummyDevice.generate_message"]], "in_port (aslm.model.dummy.dummydevice attribute)": [[182, "aslm.model.dummy.DummyDevice.in_port"]], "listen() (aslm.model.dummy.dummydevice method)": [[182, "aslm.model.dummy.DummyDevice.listen"]], "msg_count (aslm.model.dummy.dummydevice attribute)": [[182, "aslm.model.dummy.DummyDevice.msg_count"]], "out_port (aslm.model.dummy.dummydevice attribute)": [[182, "aslm.model.dummy.DummyDevice.out_port"]], "sendout() (aslm.model.dummy.dummydevice method)": [[182, "aslm.model.dummy.DummyDevice.sendout"]], "sendout_msg_count (aslm.model.dummy.dummydevice attribute)": [[182, "aslm.model.dummy.DummyDevice.sendout_msg_count"]], "setup() (aslm.model.dummy.dummydevice method)": [[182, "aslm.model.dummy.DummyDevice.setup"]], "stop_flag (aslm.model.dummy.dummydevice attribute)": [[182, "aslm.model.dummy.DummyDevice.stop_flag"]], "timecost (aslm.model.dummy.dummydevice attribute)": [[182, "aslm.model.dummy.DummyDevice.timecost"]], "dummymicroscope (class in aslm.model.dummy)": [[183, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[183, "aslm.model.dummy.DummyMicroscope.__init__"]], "calculate_exposure_sweep_times() (aslm.model.dummy.dummymicroscope method)": [[183, "aslm.model.dummy.DummyMicroscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.configuration"]], "current_channel (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.current_channel"]], "daq (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.daq"]], "data_buffer (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.data_buffer"]], "galvo (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.galvo"]], "lasers (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.lasers"]], "microscope_name (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.microscope_name"]], "stages (aslm.model.dummy.dummymicroscope attribute)": [[183, "aslm.model.dummy.DummyMicroscope.stages"]], "dummymodel (class in aslm.model.dummy)": [[184, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[184, "aslm.model.dummy.DummyModel.__init__"]], "active_microscope (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.active_microscope"]], "active_microscope_name (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.active_microscope_name"]], "camera (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.camera"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.data"]], "data_buffer (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.data_buffer"]], "data_buffer_positions (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.data_buffer_positions"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[184, "aslm.model.dummy.DummyModel.data_func"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.data_pipe"]], "data_records (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.data_records"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.data_thread"]], "device (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.device"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.frame_id"]], "img_height (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.img_height"]], "img_width (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.img_width"]], "manager (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.manager"]], "number_of_frames (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.number_of_frames"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[184, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_records (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.signal_records"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[184, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[184, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[185, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[186, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "end_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_data"]], "end_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_signal"]], "in_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_data"]], "in_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_signal"]], "pre_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_data"]], "pre_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[187, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_signal"]], "aslm.model.features.autofocus": [[188, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[189, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[189, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[189, "aslm.model.features.autofocus.Autofocus.run"], [189, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[189, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[190, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[191, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[192, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[192, "aslm.model.features.common_features.ChangeResolution.__init__"]], "cleanup() (aslm.model.features.common_features.changeresolution method)": [[192, "aslm.model.features.common_features.ChangeResolution.cleanup"]], "signal_func() (aslm.model.features.common_features.changeresolution method)": [[192, "aslm.model.features.common_features.ChangeResolution.signal_func"]], "conproacquisition (class in aslm.model.features.common_features)": [[193, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[193, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "generate_meta_data() (aslm.model.features.common_features.conproacquisition method)": [[193, "aslm.model.features.common_features.ConProAcquisition.generate_meta_data"]], "pre_signal_func() (aslm.model.features.common_features.conproacquisition method)": [[193, "aslm.model.features.common_features.ConProAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.conproacquisition method)": [[193, "aslm.model.features.common_features.ConProAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.conproacquisition method)": [[193, "aslm.model.features.common_features.ConProAcquisition.signal_func"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[194, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[194, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "data_func() (aslm.model.features.common_features.findtissuesimple2d method)": [[194, "aslm.model.features.common_features.FindTissueSimple2D.data_func"]], "loopbycount (class in aslm.model.features.common_features)": [[195, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[195, "aslm.model.features.common_features.LoopByCount.__init__"]], "data_func() (aslm.model.features.common_features.loopbycount method)": [[195, "aslm.model.features.common_features.LoopByCount.data_func"]], "signal_func() (aslm.model.features.common_features.loopbycount method)": [[195, "aslm.model.features.common_features.LoopByCount.signal_func"]], "movetonextpositioninmultipositiontable (class in aslm.model.features.common_features)": [[196, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[196, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.__init__"]], "cleanup() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[196, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.cleanup"]], "signal_func() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[196, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.signal_func"]], "preparenextchannel (class in aslm.model.features.common_features)": [[197, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[197, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "signal_func() (aslm.model.features.common_features.preparenextchannel method)": [[197, "aslm.model.features.common_features.PrepareNextChannel.signal_func"]], "snap (class in aslm.model.features.common_features)": [[198, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[198, "aslm.model.features.common_features.Snap.__init__"]], "data_func() (aslm.model.features.common_features.snap method)": [[198, "aslm.model.features.common_features.Snap.data_func"]], "stackpause (class in aslm.model.features.common_features)": [[199, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[199, "aslm.model.features.common_features.StackPause.__init__"]], "signal_func() (aslm.model.features.common_features.stackpause method)": [[199, "aslm.model.features.common_features.StackPause.signal_func"]], "waittocontinue (class in aslm.model.features.common_features)": [[200, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[200, "aslm.model.features.common_features.WaitToContinue.__init__"]], "cleanup() (aslm.model.features.common_features.waittocontinue method)": [[200, "aslm.model.features.common_features.WaitToContinue.cleanup"]], "data_func() (aslm.model.features.common_features.waittocontinue method)": [[200, "aslm.model.features.common_features.WaitToContinue.data_func"]], "pre_data_func() (aslm.model.features.common_features.waittocontinue method)": [[200, "aslm.model.features.common_features.WaitToContinue.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.waittocontinue method)": [[200, "aslm.model.features.common_features.WaitToContinue.pre_signal_func"]], "signal_func() (aslm.model.features.common_features.waittocontinue method)": [[200, "aslm.model.features.common_features.WaitToContinue.signal_func"]], "zstackacquisition (class in aslm.model.features.common_features)": [[201, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "cleanup_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.cleanup_data_func"]], "end_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.end_data_func"]], "in_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.in_data_func"]], "pre_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.signal_func"]], "update_channel() (aslm.model.features.common_features.zstackacquisition method)": [[201, "aslm.model.features.common_features.ZStackAcquisition.update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[202, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[203, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[203, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[203, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[203, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[204, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[205, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[205, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[206, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[207, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[207, "aslm.model.features.feature_container.Container.__init__"]], "cleanup() (aslm.model.features.feature_container.container method)": [[207, "aslm.model.features.feature_container.Container.cleanup"]], "reset() (aslm.model.features.feature_container.container method)": [[207, "aslm.model.features.feature_container.Container.reset"]], "datacontainer (class in aslm.model.features.feature_container)": [[208, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[208, "aslm.model.features.feature_container.DataContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.datacontainer method)": [[208, "aslm.model.features.feature_container.DataContainer.cleanup"]], "reset() (aslm.model.features.feature_container.datacontainer method)": [[208, "aslm.model.features.feature_container.DataContainer.reset"]], "run() (aslm.model.features.feature_container.datacontainer method)": [[208, "aslm.model.features.feature_container.DataContainer.run"]], "datanode (class in aslm.model.features.feature_container)": [[209, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[209, "aslm.model.features.feature_container.DataNode.__init__"]], "run() (aslm.model.features.feature_container.datanode method)": [[209, "aslm.model.features.feature_container.DataNode.run"]], "set_property() (aslm.model.features.feature_container.datanode method)": [[209, "aslm.model.features.feature_container.DataNode.set_property"]], "signalcontainer (class in aslm.model.features.feature_container)": [[210, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[210, "aslm.model.features.feature_container.SignalContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.signalcontainer method)": [[210, "aslm.model.features.feature_container.SignalContainer.cleanup"]], "reset() (aslm.model.features.feature_container.signalcontainer method)": [[210, "aslm.model.features.feature_container.SignalContainer.reset"]], "run() (aslm.model.features.feature_container.signalcontainer method)": [[210, "aslm.model.features.feature_container.SignalContainer.run"]], "signalnode (class in aslm.model.features.feature_container)": [[211, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[211, "aslm.model.features.feature_container.SignalNode.__init__"]], "run() (aslm.model.features.feature_container.signalnode method)": [[211, "aslm.model.features.feature_container.SignalNode.run"]], "set_property() (aslm.model.features.feature_container.signalnode method)": [[211, "aslm.model.features.feature_container.SignalNode.set_property"]], "treenode (class in aslm.model.features.feature_container)": [[212, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[212, "aslm.model.features.feature_container.TreeNode.__init__"]], "set_property() (aslm.model.features.feature_container.treenode method)": [[212, "aslm.model.features.feature_container.TreeNode.set_property"]], "dummy_true() (in module aslm.model.features.feature_container)": [[213, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[214, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[215, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[216, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[217, "module-aslm.model.features.feature_related_functions"]], "sharedlist (class in aslm.model.features.feature_related_functions)": [[218, "aslm.model.features.feature_related_functions.SharedList"]], "__init__() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.__init__"]], "append() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.append"]], "clear() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.clear"]], "copy() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.copy"]], "count() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.count"]], "extend() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.extend"]], "index() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.index"]], "insert() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.insert"]], "pop() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.pop"]], "remove() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.remove"]], "reverse() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.reverse"]], "sort() (aslm.model.features.feature_related_functions.sharedlist method)": [[218, "aslm.model.features.feature_related_functions.SharedList.sort"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[219, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[220, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "load_dynamic_parameter_functions() (in module aslm.model.features.feature_related_functions)": [[221, "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions"]], "aslm.model.features.image_writer": [[222, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[223, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[223, "aslm.model.features.image_writer.ImageWriter.__init__"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[223, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[223, "aslm.model.features.image_writer.ImageWriter.close"], [223, "id0"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.config_table"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.current_time_point"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.data_buffer"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.data_source"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.file_type"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[223, "aslm.model.features.image_writer.ImageWriter.generate_image_name"], [223, "id1"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[223, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"], [223, "id2"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.mip"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.mip_directory"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.model"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.num_of_channels"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.save_directory"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[223, "aslm.model.features.image_writer.ImageWriter.save_image"], [223, "id3"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[223, "aslm.model.features.image_writer.ImageWriter.sub_dir"]], "aslm.model.features.remove_empty_tiles": [[224, "module-aslm.model.features.remove_empty_tiles"]], "detecttissueinstack (class in aslm.model.features.remove_empty_tiles)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[225, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_signal"]], "detecttissueinstackandrecord (class in aslm.model.features.remove_empty_tiles)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[226, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_signal"]], "removeemptypositions (class in aslm.model.features.remove_empty_tiles)": [[227, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions"]], "__init__() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[227, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.__init__"]], "signal_func() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[227, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.signal_func"]], "detect_tissue() (in module aslm.model.features.remove_empty_tiles)": [[228, "aslm.model.features.remove_empty_tiles.detect_tissue"]], "detect_tissue2() (in module aslm.model.features.remove_empty_tiles)": [[229, "aslm.model.features.remove_empty_tiles.detect_tissue2"]], "aslm.model.features.restful_features": [[230, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[231, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[231, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[232, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[233, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[234, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[234, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[235, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[236, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[237, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "affine_matrix_to_stage_positions() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.affine_matrix_to_stage_positions"]], "parse_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[238, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[239, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[240, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[240, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[240, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[240, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[241, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[241, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[241, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[241, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[241, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[241, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[242, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[243, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[243, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[243, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[243, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[243, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[243, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[243, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[244, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[245, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.__init__"]], "ask_stage_for_position (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.ask_stage_for_position"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "available_channels (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.available_channels"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "central_focus (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.central_focus"]], "channels (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.channels"]], "configuration (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.configuration"]], "current_channel (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.current_channel"]], "current_laser_index (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.current_laser_index"]], "daq (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.end_acquisition"]], "galvo (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.galvo"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.get_readout_time"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.get_stage_position"]], "info (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.info"]], "is_synthetic (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.is_synthetic"]], "laser_wavelength (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.laser_wavelength"]], "lasers (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.lasers"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.microscope_name"]], "move_remote_focus() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.move_remote_focus"]], "move_stage() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.move_stage_offset"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.prepare_next_channel"]], "ret_pos_dict (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.ret_pos_dict"]], "stages (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.stages"]], "stages_list (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.stages_list"]], "stop_stage() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.terminate"]], "tiger_controller (aslm.model.microscope.microscope attribute)": [[245, "aslm.model.microscope.Microscope.tiger_controller"]], "turn_off_lasers() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.turn_off_lasers"]], "turn_on_laser() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.turn_on_laser"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.update_data_buffer"]], "update_stage_limits() (aslm.model.microscope.microscope method)": [[245, "aslm.model.microscope.Microscope.update_stage_limits"]], "aslm.model.model": [[246, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[247, "aslm.model.model.Model"]], "__init__() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.__init__"]], "acquisition_count (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.acquisition_count"]], "active_microscope (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.active_microscope"]], "active_microscope_name (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.active_microscope_name"]], "ask_to_pause_data_thread (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.ask_to_pause_data_thread"]], "autofocus_on (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.autofocus_on"]], "binning (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.binning"]], "camera_wait_iterations (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.camera_wait_iterations"]], "change_resolution() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.create_pipe"]], "current_exposure_time (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.current_exposure_time"]], "data_buffer (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.data_buffer"]], "data_buffer_positions (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.data_buffer_positions"]], "data_thread (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.data_thread"]], "destroy_virtual_microscope() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.destroy_virtual_microscope"]], "end_acquisition() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.end_acquisition"]], "event_queue (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.event_queue"]], "f_position (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.f_position"]], "feature_list (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.feature_list"]], "focus_pos (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.focus_pos"]], "frame_id (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.frame_id"]], "get_active_microscope() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.get_active_microscope"]], "get_camera_line_interval_and_exposure_time() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.get_camera_line_interval_and_exposure_time"]], "get_data_buffer() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.get_data_buffer"]], "get_feature_list() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.get_offset_variance_maps"]], "get_stage_position() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.get_stage_position"]], "image_count (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.image_count"]], "image_writer (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.image_writer"]], "imaging_mode (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.imaging_mode"]], "img_height (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.img_height"]], "img_width (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.img_width"]], "is_acquiring (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.is_acquiring"]], "is_live (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.is_live"]], "is_save (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.is_save"]], "launch_virtual_microscope() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.launch_virtual_microscope"]], "load_feature_list_from_file() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.load_feature_list_from_file"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.load_images"]], "logger (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.logger"]], "max_entropy (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.max_entropy"]], "microscopes (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.microscopes"]], "move_stage() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.move_stage"]], "number_of_frames (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.number_of_frames"]], "pause_data_event (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.pause_data_event"]], "pause_data_ready_lock (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.pause_data_ready_lock"]], "pause_data_thread() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.pause_data_thread"]], "plot_pipe (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.plot_pipe"]], "pre_exposure_time (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.pre_exposure_time"]], "prepare_acquisition() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.prepare_acquisition"]], "release_pipe() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.release_pipe"]], "resume_data_thread() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.run_command"]], "run_data_process() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.run_data_process"]], "run_live_acquisition() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.run_live_acquisition"]], "show_img_pipe (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.show_img_pipe"]], "signal_thread (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.signal_thread"]], "simplified_data_process() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.simplified_data_process"]], "snap_image() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.snap_image"]], "start_time (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.start_time"]], "stop_acquisition (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.stop_acquisition"]], "stop_send_signal (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.stop_send_signal"]], "stop_stage() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.stop_stage"]], "terminate() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.terminate"]], "total_acquisition_count (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.total_acquisition_count"]], "total_image_count (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.total_image_count"]], "update_data_buffer() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.update_data_buffer"]], "update_ilastik_setting() (aslm.model.model.model method)": [[247, "aslm.model.model.Model.update_ilastik_setting"]], "virtual_microscopes (aslm.model.model.model attribute)": [[247, "aslm.model.model.Model.virtual_microscopes"]], "aslm.model.waveforms": [[248, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[249, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[250, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[251, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[252, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[253, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[254, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[255, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[256, "aslm.model.waveforms.square"]], "aslm.tools": [[257, "module-aslm.tools"]], "aslm.tools.beams": [[258, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[259, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[260, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[261, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[262, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[263, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[264, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[265, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[265, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[266, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[267, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[268, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[269, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[270, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[271, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[271, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[272, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[273, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[274, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[275, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[276, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[277, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[278, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[279, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[280, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[281, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[282, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[282, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[282, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[283, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[284, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[285, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "identify_gpu() (in module aslm.tools.main_functions)": [[286, "aslm.tools.main_functions.identify_gpu"]], "aslm.tools.multipos_table_tools": [[287, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[288, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[289, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[290, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[291, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[292, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[293, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[294, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[295, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[296, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[297, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[298, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[299, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[300, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[301, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[302, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[303, "module-aslm.view"]], "aslm.view.custom_widgets": [[304, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[305, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[306, "module-aslm.view.popups"]]}})