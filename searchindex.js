Search.setIndex({"docnames": ["_autosummary/aslm.config", "_autosummary/aslm.config.config", "_autosummary/aslm.config.config.build_nested_dict", "_autosummary/aslm.config.config.get_aslm_path", "_autosummary/aslm.config.config.get_configuration_paths", "_autosummary/aslm.config.config.load_configs", "_autosummary/aslm.config.config.update_config_dict", "_autosummary/aslm.config.config.verify_experiment_config", "_autosummary/aslm.config.config.verify_waveform_constants", "_autosummary/aslm.controller", "_autosummary/aslm.controller.configuration_controller", "_autosummary/aslm.controller.configuration_controller.ConfigurationController", "_autosummary/aslm.controller.thread_pool", "_autosummary/aslm.controller.thread_pool.SelfLockThread", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist", "_autosummary/aslm.log_files", "_autosummary/aslm.log_files.filters", "_autosummary/aslm.log_files.filters.NonPerfFilter", "_autosummary/aslm.log_files.filters.PerformanceFilter", "_autosummary/aslm.log_files.log_functions", "_autosummary/aslm.log_files.log_functions.find_filename", "_autosummary/aslm.log_files.log_functions.log_setup", "_autosummary/aslm.log_files.log_functions.main_process_listener", "_autosummary/aslm.log_files.log_functions.update_nested_dict", "_autosummary/aslm.model", "_autosummary/aslm.model.analysis", "_autosummary/aslm.model.analysis.boundary_detect", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary", "_autosummary/aslm.model.analysis.camera", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise", "_autosummary/aslm.model.analysis.detection", "_autosummary/aslm.model.analysis.detection.add_median_border", "_autosummary/aslm.model.analysis.detection.combine_images", "_autosummary/aslm.model.analysis.detection.log_detection", "_autosummary/aslm.model.analysis.detection.make_inside_image", "_autosummary/aslm.model.analysis.detection.make_normalized_image", "_autosummary/aslm.model.analysis.detection.make_sphere_3D", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D", "_autosummary/aslm.model.analysis.detection.three_level_segmentation", "_autosummary/aslm.model.analysis.image_contrast", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "_autosummary/aslm.model.concurrency", "_autosummary/aslm.model.concurrency.concurrency_tools", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "_autosummary/aslm.model.concurrency.proxy_objects", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread", "_autosummary/aslm.model.data_sources", "_autosummary/aslm.model.data_sources.bdv_data_source", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "_autosummary/aslm.model.data_sources.data_source", "_autosummary/aslm.model.data_sources.data_source.DataSource", "_autosummary/aslm.model.data_sources.get_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource", "_autosummary/aslm.model.device_startup_functions", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection", "_autosummary/aslm.model.device_startup_functions.auto_redial", "_autosummary/aslm.model.device_startup_functions.device_not_found", "_autosummary/aslm.model.device_startup_functions.load_camera_connection", "_autosummary/aslm.model.device_startup_functions.load_devices", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection", "_autosummary/aslm.model.device_startup_functions.load_stages", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection", "_autosummary/aslm.model.device_startup_functions.start_camera", "_autosummary/aslm.model.device_startup_functions.start_daq", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel", "_autosummary/aslm.model.device_startup_functions.start_galvo", "_autosummary/aslm.model.device_startup_functions.start_lasers", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device", "_autosummary/aslm.model.device_startup_functions.start_shutter", "_autosummary/aslm.model.device_startup_functions.start_stage", "_autosummary/aslm.model.device_startup_functions.start_zoom", "_autosummary/aslm.model.devices", "_autosummary/aslm.model.devices.APIs", "_autosummary/aslm.model.devices.APIs.coherent", "_autosummary/aslm.model.devices.APIs.dynamixel", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "_autosummary/aslm.model.devices.APIs.omicron", "_autosummary/aslm.model.devices.camera", "_autosummary/aslm.model.devices.camera.camera_base", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase", "_autosummary/aslm.model.devices.camera.camera_hamamatsu", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "_autosummary/aslm.model.devices.camera.camera_photometrics", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "_autosummary/aslm.model.devices.camera.camera_synthetic", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "_autosummary/aslm.model.devices.daq", "_autosummary/aslm.model.devices.daq.daq_base", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase", "_autosummary/aslm.model.devices.daq.daq_synthetic", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "_autosummary/aslm.model.devices.filter_wheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "_autosummary/aslm.model.devices.galvo", "_autosummary/aslm.model.devices.galvo.galvo_base", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase", "_autosummary/aslm.model.devices.galvo.galvo_synthetic", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "_autosummary/aslm.model.devices.lasers", "_autosummary/aslm.model.devices.lasers.laser_base", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase", "_autosummary/aslm.model.devices.lasers.laser_synthetic", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "_autosummary/aslm.model.devices.objectives", "_autosummary/aslm.model.devices.objectives.Objective", "_autosummary/aslm.model.devices.remote_focus", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "_autosummary/aslm.model.devices.shutter", "_autosummary/aslm.model.devices.shutter.laser_shutter_base", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "_autosummary/aslm.model.devices.stages", "_autosummary/aslm.model.devices.stages.stage_asi", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "_autosummary/aslm.model.devices.stages.stage_base", "_autosummary/aslm.model.devices.stages.stage_base.StageBase", "_autosummary/aslm.model.devices.stages.stage_galvo", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage", "_autosummary/aslm.model.devices.stages.stage_mcl", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "_autosummary/aslm.model.devices.stages.stage_pi", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection", "_autosummary/aslm.model.devices.stages.stage_sutter", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection", "_autosummary/aslm.model.devices.stages.stage_synthetic", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "_autosummary/aslm.model.devices.zoom", "_autosummary/aslm.model.devices.zoom.zoom_base", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "_autosummary/aslm.model.devices.zoom.zoom_synthetic", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "_autosummary/aslm.model.dummy", "_autosummary/aslm.model.dummy.DummyController", "_autosummary/aslm.model.dummy.DummyDevice", "_autosummary/aslm.model.dummy.DummyMicroscope", "_autosummary/aslm.model.dummy.DummyModel", "_autosummary/aslm.model.features", "_autosummary/aslm.model.features.auto_tile_scan", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange", "_autosummary/aslm.model.features.autofocus", "_autosummary/aslm.model.features.autofocus.Autofocus", "_autosummary/aslm.model.features.autofocus.power_tent", "_autosummary/aslm.model.features.common_features", "_autosummary/aslm.model.features.common_features.ChangeResolution", "_autosummary/aslm.model.features.common_features.ConProAcquisition", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D", "_autosummary/aslm.model.features.common_features.LoopByCount", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "_autosummary/aslm.model.features.common_features.PrepareNextChannel", "_autosummary/aslm.model.features.common_features.Snap", "_autosummary/aslm.model.features.common_features.StackPause", "_autosummary/aslm.model.features.common_features.WaitToContinue", "_autosummary/aslm.model.features.common_features.ZStackAcquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "_autosummary/aslm.model.features.dummy_detective", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective", "_autosummary/aslm.model.features.feature_container", "_autosummary/aslm.model.features.feature_container.Container", "_autosummary/aslm.model.features.feature_container.DataContainer", "_autosummary/aslm.model.features.feature_container.DataNode", "_autosummary/aslm.model.features.feature_container.SignalContainer", "_autosummary/aslm.model.features.feature_container.SignalNode", "_autosummary/aslm.model.features.feature_container.TreeNode", "_autosummary/aslm.model.features.feature_container.dummy_True", "_autosummary/aslm.model.features.feature_container.dummy_func", "_autosummary/aslm.model.features.feature_container.get_registered_funcs", "_autosummary/aslm.model.features.feature_container.load_features", "_autosummary/aslm.model.features.feature_related_functions", "_autosummary/aslm.model.features.feature_related_functions.SharedList", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "_autosummary/aslm.model.features.image_writer", "_autosummary/aslm.model.features.image_writer.ImageWriter", "_autosummary/aslm.model.features.remove_empty_tiles", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2", "_autosummary/aslm.model.features.restful_features", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation", "_autosummary/aslm.model.features.restful_features.prepare_service", "_autosummary/aslm.model.features.volume_search", "_autosummary/aslm.model.features.volume_search.VolumeSearch", "_autosummary/aslm.model.features.volume_search.draw_box", "_autosummary/aslm.model.metadata_sources", "_autosummary/aslm.model.metadata_sources.bdv_metadata", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "_autosummary/aslm.model.metadata_sources.metadata", "_autosummary/aslm.model.metadata_sources.metadata.Metadata", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "_autosummary/aslm.model.microscope", "_autosummary/aslm.model.microscope.Microscope", "_autosummary/aslm.model.model", "_autosummary/aslm.model.model.Model", "_autosummary/aslm.model.waveforms", "_autosummary/aslm.model.waveforms.camera_exposure", "_autosummary/aslm.model.waveforms.dc_value", "_autosummary/aslm.model.waveforms.remote_focus_ramp", "_autosummary/aslm.model.waveforms.sawtooth", "_autosummary/aslm.model.waveforms.sine_wave", "_autosummary/aslm.model.waveforms.single_pulse", "_autosummary/aslm.model.waveforms.smooth_waveform", "_autosummary/aslm.model.waveforms.square", "_autosummary/aslm.tools", "_autosummary/aslm.tools.beams", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse", "_autosummary/aslm.tools.beams.gaussian_beam", "_autosummary/aslm.tools.common_dict_tools", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict", "_autosummary/aslm.tools.common_functions", "_autosummary/aslm.tools.common_functions.VariableWithLock", "_autosummary/aslm.tools.common_functions.build_ref_name", "_autosummary/aslm.tools.common_functions.combine_funcs", "_autosummary/aslm.tools.common_functions.copy_proxy_object", "_autosummary/aslm.tools.common_functions.load_module_from_file", "_autosummary/aslm.tools.decorators", "_autosummary/aslm.tools.decorators.FeatureList", "_autosummary/aslm.tools.decorators.function_timer", "_autosummary/aslm.tools.file_functions", "_autosummary/aslm.tools.file_functions.create_save_path", "_autosummary/aslm.tools.file_functions.delete_folder", "_autosummary/aslm.tools.file_functions.load_yaml_file", "_autosummary/aslm.tools.file_functions.save_yaml_file", "_autosummary/aslm.tools.image", "_autosummary/aslm.tools.image.create_arrow_image", "_autosummary/aslm.tools.image.text_array", "_autosummary/aslm.tools.image_loaders", "_autosummary/aslm.tools.image_loaders.LazyTiff", "_autosummary/aslm.tools.main_functions", "_autosummary/aslm.tools.main_functions.create_parser", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments", "_autosummary/aslm.tools.multipos_table_tools", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "_autosummary/aslm.tools.multipos_table_tools.sign", "_autosummary/aslm.tools.multipos_table_tools.update_table", "_autosummary/aslm.tools.project_stats", "_autosummary/aslm.tools.project_stats.countlines", "_autosummary/aslm.tools.sdf", "_autosummary/aslm.tools.sdf.box", "_autosummary/aslm.tools.sdf.sphere", "_autosummary/aslm.tools.sdf.volume_from_sdf", "_autosummary/aslm.tools.waveform_template_funcs", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "_autosummary/aslm.tools.xml_tools", "_autosummary/aslm.tools.xml_tools.dict_to_xml", "_autosummary/aslm.tools.xml_tools.parse_xml", "_autosummary/aslm.view", "_autosummary/aslm.view.custom_widgets", "_autosummary/aslm.view.main_window_content", "_autosummary/aslm.view.popups", "_templates/custom_class", "_templates/custom_module", "api", "config", "contributing/contributing_guidelines", "contributing/contributing_hardware", "contributing/contributing_home", "contributing/contributing_model", "contributing/sphinx_numpydoc", "feature_container/feature_container_home", "implementations", "index", "software_configuration", "software_installation", "supported_hardware"], "filenames": ["_autosummary/aslm.config.rst", "_autosummary/aslm.config.config.rst", "_autosummary/aslm.config.config.build_nested_dict.rst", "_autosummary/aslm.config.config.get_aslm_path.rst", "_autosummary/aslm.config.config.get_configuration_paths.rst", "_autosummary/aslm.config.config.load_configs.rst", "_autosummary/aslm.config.config.update_config_dict.rst", "_autosummary/aslm.config.config.verify_experiment_config.rst", "_autosummary/aslm.config.config.verify_waveform_constants.rst", "_autosummary/aslm.controller.rst", "_autosummary/aslm.controller.configuration_controller.rst", "_autosummary/aslm.controller.configuration_controller.ConfigurationController.rst", "_autosummary/aslm.controller.thread_pool.rst", "_autosummary/aslm.controller.thread_pool.SelfLockThread.rst", "_autosummary/aslm.controller.thread_pool.SynchronizedThreadPool.rst", "_autosummary/aslm.controller.thread_pool.ThreadWaitlist.rst", "_autosummary/aslm.log_files.rst", "_autosummary/aslm.log_files.filters.rst", "_autosummary/aslm.log_files.filters.NonPerfFilter.rst", "_autosummary/aslm.log_files.filters.PerformanceFilter.rst", "_autosummary/aslm.log_files.log_functions.rst", "_autosummary/aslm.log_files.log_functions.find_filename.rst", "_autosummary/aslm.log_files.log_functions.log_setup.rst", "_autosummary/aslm.log_files.log_functions.main_process_listener.rst", "_autosummary/aslm.log_files.log_functions.update_nested_dict.rst", "_autosummary/aslm.model.rst", "_autosummary/aslm.model.analysis.rst", "_autosummary/aslm.model.analysis.boundary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.binary_detect.rst", "_autosummary/aslm.model.analysis.boundary_detect.find_tissue_boundary_2d.rst", "_autosummary/aslm.model.analysis.boundary_detect.has_tissue.rst", "_autosummary/aslm.model.analysis.boundary_detect.map_boundary.rst", "_autosummary/aslm.model.analysis.camera.rst", "_autosummary/aslm.model.analysis.camera.compute_flatfield_map.rst", "_autosummary/aslm.model.analysis.camera.compute_noise_sigma.rst", "_autosummary/aslm.model.analysis.camera.compute_scmos_offset_and_variance_map.rst", "_autosummary/aslm.model.analysis.camera.compute_signal_to_noise.rst", "_autosummary/aslm.model.analysis.detection.rst", "_autosummary/aslm.model.analysis.detection.add_median_border.rst", "_autosummary/aslm.model.analysis.detection.combine_images.rst", "_autosummary/aslm.model.analysis.detection.log_detection.rst", "_autosummary/aslm.model.analysis.detection.make_inside_image.rst", "_autosummary/aslm.model.analysis.detection.make_normalized_image.rst", "_autosummary/aslm.model.analysis.detection.make_sphere_3D.rst", "_autosummary/aslm.model.analysis.detection.multiscale_surface_filter_3D.rst", "_autosummary/aslm.model.analysis.detection.surface_filter_gauss_3D.rst", "_autosummary/aslm.model.analysis.detection.three_level_segmentation.rst", "_autosummary/aslm.model.analysis.image_contrast.rst", "_autosummary/aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy.rst", "_autosummary/aslm.model.concurrency.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.CustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.FancyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.MyTestClass.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.PoliteThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.ResultThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.SharedNDArray.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.rst", "_autosummary/aslm.model.concurrency.concurrency_tools.TestSharedNDArray.rst", "_autosummary/aslm.model.concurrency.proxy_objects.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyManager.rst", "_autosummary/aslm.model.concurrency.proxy_objects.ProxyObject.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_custody_thread.rst", "_autosummary/aslm.model.concurrency.proxy_objects.launch_thread.rst", "_autosummary/aslm.model.data_sources.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.rst", "_autosummary/aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.rst", "_autosummary/aslm.model.data_sources.data_source.rst", "_autosummary/aslm.model.data_sources.data_source.DataSource.rst", "_autosummary/aslm.model.data_sources.get_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.rst", "_autosummary/aslm.model.data_sources.tiff_data_source.TiffDataSource.rst", "_autosummary/aslm.model.device_startup_functions.rst", "_autosummary/aslm.model.device_startup_functions.DummyDeviceConnection.rst", "_autosummary/aslm.model.device_startup_functions.auto_redial.rst", "_autosummary/aslm.model.device_startup_functions.device_not_found.rst", "_autosummary/aslm.model.device_startup_functions.load_camera_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_devices.rst", "_autosummary/aslm.model.device_startup_functions.load_filter_wheel_connection.rst", "_autosummary/aslm.model.device_startup_functions.load_stages.rst", "_autosummary/aslm.model.device_startup_functions.load_zoom_connection.rst", "_autosummary/aslm.model.device_startup_functions.start_camera.rst", "_autosummary/aslm.model.device_startup_functions.start_daq.rst", "_autosummary/aslm.model.device_startup_functions.start_filter_wheel.rst", "_autosummary/aslm.model.device_startup_functions.start_galvo.rst", "_autosummary/aslm.model.device_startup_functions.start_lasers.rst", "_autosummary/aslm.model.device_startup_functions.start_remote_focus_device.rst", "_autosummary/aslm.model.device_startup_functions.start_shutter.rst", "_autosummary/aslm.model.device_startup_functions.start_stage.rst", "_autosummary/aslm.model.device_startup_functions.start_zoom.rst", "_autosummary/aslm.model.devices.rst", "_autosummary/aslm.model.devices.APIs.rst", "_autosummary/aslm.model.devices.APIs.coherent.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.rst", "_autosummary/aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device.rst", "_autosummary/aslm.model.devices.APIs.omicron.rst", "_autosummary/aslm.model.devices.camera.rst", "_autosummary/aslm.model.devices.camera.camera_base.rst", "_autosummary/aslm.model.devices.camera.camera_base.CameraBase.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.rst", "_autosummary/aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.rst", "_autosummary/aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCamera.rst", "_autosummary/aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.rst", "_autosummary/aslm.model.devices.daq.rst", "_autosummary/aslm.model.devices.daq.daq_base.rst", "_autosummary/aslm.model.devices.daq.daq_base.DAQBase.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.rst", "_autosummary/aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.rst", "_autosummary/aslm.model.devices.filter_wheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.rst", "_autosummary/aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.rst", "_autosummary/aslm.model.devices.galvo.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.rst", "_autosummary/aslm.model.devices.galvo.galvo_base.GalvoBase.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.rst", "_autosummary/aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.rst", "_autosummary/aslm.model.devices.lasers.rst", "_autosummary/aslm.model.devices.lasers.laser_base.rst", "_autosummary/aslm.model.devices.lasers.laser_base.LaserBase.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.rst", "_autosummary/aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.rst", "_autosummary/aslm.model.devices.objectives.rst", "_autosummary/aslm.model.devices.objectives.Objective.rst", "_autosummary/aslm.model.devices.remote_focus.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.rst", "_autosummary/aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.rst", "_autosummary/aslm.model.devices.shutter.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_base.ShutterBase.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.rst", "_autosummary/aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.rst", "_autosummary/aslm.model.devices.stages.rst", "_autosummary/aslm.model.devices.stages.stage_asi.rst", "_autosummary/aslm.model.devices.stages.stage_asi.ASIStage.rst", "_autosummary/aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_base.rst", "_autosummary/aslm.model.devices.stages.stage_base.StageBase.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.rst", "_autosummary/aslm.model.devices.stages.stage_galvo.GalvoNIStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.MCLStage.rst", "_autosummary/aslm.model.devices.stages.stage_mcl.build_MCLStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_pi.rst", "_autosummary/aslm.model.devices.stages.stage_pi.PIStage.rst", "_autosummary/aslm.model.devices.stages.stage_pi.build_PIStage_connection.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.SutterStage.rst", "_autosummary/aslm.model.devices.stages.stage_sutter.build_MP285_connection.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.rst", "_autosummary/aslm.model.devices.stages.stage_synthetic.SyntheticStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.rst", "_autosummary/aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection.rst", "_autosummary/aslm.model.devices.zoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.rst", "_autosummary/aslm.model.devices.zoom.zoom_base.ZoomBase.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.rst", "_autosummary/aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.rst", "_autosummary/aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.rst", "_autosummary/aslm.model.dummy.rst", "_autosummary/aslm.model.dummy.DummyController.rst", "_autosummary/aslm.model.dummy.DummyDevice.rst", "_autosummary/aslm.model.dummy.DummyMicroscope.rst", "_autosummary/aslm.model.dummy.DummyModel.rst", "_autosummary/aslm.model.features.rst", "_autosummary/aslm.model.features.auto_tile_scan.rst", "_autosummary/aslm.model.features.auto_tile_scan.CalculateFocusRange.rst", "_autosummary/aslm.model.features.autofocus.rst", "_autosummary/aslm.model.features.autofocus.Autofocus.rst", "_autosummary/aslm.model.features.autofocus.power_tent.rst", "_autosummary/aslm.model.features.common_features.rst", "_autosummary/aslm.model.features.common_features.ChangeResolution.rst", "_autosummary/aslm.model.features.common_features.ConProAcquisition.rst", "_autosummary/aslm.model.features.common_features.FindTissueSimple2D.rst", "_autosummary/aslm.model.features.common_features.LoopByCount.rst", "_autosummary/aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.rst", "_autosummary/aslm.model.features.common_features.PrepareNextChannel.rst", "_autosummary/aslm.model.features.common_features.Snap.rst", "_autosummary/aslm.model.features.common_features.StackPause.rst", "_autosummary/aslm.model.features.common_features.WaitToContinue.rst", "_autosummary/aslm.model.features.common_features.ZStackAcquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.rst", "_autosummary/aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.rst", "_autosummary/aslm.model.features.dummy_detective.rst", "_autosummary/aslm.model.features.dummy_detective.Dummy_Detective.rst", "_autosummary/aslm.model.features.feature_container.rst", "_autosummary/aslm.model.features.feature_container.Container.rst", "_autosummary/aslm.model.features.feature_container.DataContainer.rst", "_autosummary/aslm.model.features.feature_container.DataNode.rst", "_autosummary/aslm.model.features.feature_container.SignalContainer.rst", "_autosummary/aslm.model.features.feature_container.SignalNode.rst", "_autosummary/aslm.model.features.feature_container.TreeNode.rst", "_autosummary/aslm.model.features.feature_container.dummy_True.rst", "_autosummary/aslm.model.features.feature_container.dummy_func.rst", "_autosummary/aslm.model.features.feature_container.get_registered_funcs.rst", "_autosummary/aslm.model.features.feature_container.load_features.rst", "_autosummary/aslm.model.features.feature_related_functions.rst", "_autosummary/aslm.model.features.feature_related_functions.SharedList.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_feature_list_to_str.rst", "_autosummary/aslm.model.features.feature_related_functions.convert_str_to_feature_list.rst", "_autosummary/aslm.model.features.feature_related_functions.load_dynamic_parameter_functions.rst", "_autosummary/aslm.model.features.image_writer.rst", "_autosummary/aslm.model.features.image_writer.ImageWriter.rst", "_autosummary/aslm.model.features.remove_empty_tiles.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStack.rst", "_autosummary/aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.rst", "_autosummary/aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue.rst", "_autosummary/aslm.model.features.remove_empty_tiles.detect_tissue2.rst", "_autosummary/aslm.model.features.restful_features.rst", "_autosummary/aslm.model.features.restful_features.IlastikSegmentation.rst", "_autosummary/aslm.model.features.restful_features.prepare_service.rst", "_autosummary/aslm.model.features.volume_search.rst", "_autosummary/aslm.model.features.volume_search.VolumeSearch.rst", "_autosummary/aslm.model.features.volume_search.draw_box.rst", "_autosummary/aslm.model.metadata_sources.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.rst", "_autosummary/aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.Metadata.rst", "_autosummary/aslm.model.metadata_sources.metadata.XMLMetadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.rst", "_autosummary/aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.rst", "_autosummary/aslm.model.microscope.rst", "_autosummary/aslm.model.microscope.Microscope.rst", "_autosummary/aslm.model.model.rst", "_autosummary/aslm.model.model.Model.rst", "_autosummary/aslm.model.waveforms.rst", "_autosummary/aslm.model.waveforms.camera_exposure.rst", "_autosummary/aslm.model.waveforms.dc_value.rst", "_autosummary/aslm.model.waveforms.remote_focus_ramp.rst", "_autosummary/aslm.model.waveforms.sawtooth.rst", "_autosummary/aslm.model.waveforms.sine_wave.rst", "_autosummary/aslm.model.waveforms.single_pulse.rst", "_autosummary/aslm.model.waveforms.smooth_waveform.rst", "_autosummary/aslm.model.waveforms.square.rst", "_autosummary/aslm.tools.rst", "_autosummary/aslm.tools.beams.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_error.rst", "_autosummary/aslm.tools.beams.fit_gaussian_beam_mse.rst", "_autosummary/aslm.tools.beams.gaussian_beam.rst", "_autosummary/aslm.tools.common_dict_tools.rst", "_autosummary/aslm.tools.common_dict_tools.update_stage_dict.rst", "_autosummary/aslm.tools.common_functions.rst", "_autosummary/aslm.tools.common_functions.VariableWithLock.rst", "_autosummary/aslm.tools.common_functions.build_ref_name.rst", "_autosummary/aslm.tools.common_functions.combine_funcs.rst", "_autosummary/aslm.tools.common_functions.copy_proxy_object.rst", "_autosummary/aslm.tools.common_functions.load_module_from_file.rst", "_autosummary/aslm.tools.decorators.rst", "_autosummary/aslm.tools.decorators.FeatureList.rst", "_autosummary/aslm.tools.decorators.function_timer.rst", "_autosummary/aslm.tools.file_functions.rst", "_autosummary/aslm.tools.file_functions.create_save_path.rst", "_autosummary/aslm.tools.file_functions.delete_folder.rst", "_autosummary/aslm.tools.file_functions.load_yaml_file.rst", "_autosummary/aslm.tools.file_functions.save_yaml_file.rst", "_autosummary/aslm.tools.image.rst", "_autosummary/aslm.tools.image.create_arrow_image.rst", "_autosummary/aslm.tools.image.text_array.rst", "_autosummary/aslm.tools.image_loaders.rst", "_autosummary/aslm.tools.image_loaders.LazyTiff.rst", "_autosummary/aslm.tools.main_functions.rst", "_autosummary/aslm.tools.main_functions.create_parser.rst", "_autosummary/aslm.tools.main_functions.evaluate_parser_input_arguments.rst", "_autosummary/aslm.tools.multipos_table_tools.rst", "_autosummary/aslm.tools.multipos_table_tools.calc_num_tiles.rst", "_autosummary/aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box.rst", "_autosummary/aslm.tools.multipos_table_tools.sign.rst", "_autosummary/aslm.tools.multipos_table_tools.update_table.rst", "_autosummary/aslm.tools.project_stats.rst", "_autosummary/aslm.tools.project_stats.countlines.rst", "_autosummary/aslm.tools.sdf.rst", "_autosummary/aslm.tools.sdf.box.rst", "_autosummary/aslm.tools.sdf.sphere.rst", "_autosummary/aslm.tools.sdf.volume_from_sdf.rst", "_autosummary/aslm.tools.waveform_template_funcs.rst", "_autosummary/aslm.tools.waveform_template_funcs.get_waveform_template_parameters.rst", "_autosummary/aslm.tools.xml_tools.rst", "_autosummary/aslm.tools.xml_tools.dict_to_xml.rst", "_autosummary/aslm.tools.xml_tools.parse_xml.rst", "_autosummary/aslm.view.rst", "_autosummary/aslm.view.custom_widgets.rst", "_autosummary/aslm.view.main_window_content.rst", "_autosummary/aslm.view.popups.rst", "_templates/custom_class.rst", "_templates/custom_module.rst", "api.rst", "config.rst", "contributing/contributing_guidelines.rst", "contributing/contributing_hardware.rst", "contributing/contributing_home.rst", "contributing/contributing_model.rst", "contributing/sphinx_numpydoc.rst", "feature_container/feature_container_home.rst", "implementations.rst", "index.rst", "software_configuration.rst", "software_installation.rst", "supported_hardware.rst"], "titles": ["aslm.config", "aslm.config.config", "aslm.config.config.build_nested_dict", "aslm.config.config.get_aslm_path", "aslm.config.config.get_configuration_paths", "aslm.config.config.load_configs", "aslm.config.config.update_config_dict", "aslm.config.config.verify_experiment_config", "aslm.config.config.verify_waveform_constants", "aslm.controller", "aslm.controller.configuration_controller", "aslm.controller.configuration_controller.ConfigurationController", "aslm.controller.thread_pool", "aslm.controller.thread_pool.SelfLockThread", "aslm.controller.thread_pool.SynchronizedThreadPool", "aslm.controller.thread_pool.ThreadWaitlist", "aslm.log_files", "aslm.log_files.filters", "aslm.log_files.filters.NonPerfFilter", "aslm.log_files.filters.PerformanceFilter", "aslm.log_files.log_functions", "aslm.log_files.log_functions.find_filename", "aslm.log_files.log_functions.log_setup", "aslm.log_files.log_functions.main_process_listener", "aslm.log_files.log_functions.update_nested_dict", "aslm.model", "aslm.model.analysis", "aslm.model.analysis.boundary_detect", "aslm.model.analysis.boundary_detect.binary_detect", "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d", "aslm.model.analysis.boundary_detect.has_tissue", "aslm.model.analysis.boundary_detect.map_boundary", "aslm.model.analysis.camera", "aslm.model.analysis.camera.compute_flatfield_map", "aslm.model.analysis.camera.compute_noise_sigma", "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map", "aslm.model.analysis.camera.compute_signal_to_noise", "aslm.model.analysis.detection", "aslm.model.analysis.detection.add_median_border", "aslm.model.analysis.detection.combine_images", "aslm.model.analysis.detection.log_detection", "aslm.model.analysis.detection.make_inside_image", "aslm.model.analysis.detection.make_normalized_image", "aslm.model.analysis.detection.make_sphere_3D", "aslm.model.analysis.detection.multiscale_surface_filter_3D", "aslm.model.analysis.detection.surface_filter_gauss_3D", "aslm.model.analysis.detection.three_level_segmentation", "aslm.model.analysis.image_contrast", "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy", "aslm.model.concurrency", "aslm.model.concurrency.concurrency_tools", "aslm.model.concurrency.concurrency_tools.CustodyThread", "aslm.model.concurrency.concurrency_tools.FancyThread", "aslm.model.concurrency.concurrency_tools.MyTestClass", "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.PoliteThread", "aslm.model.concurrency.concurrency_tools.ResultThread", "aslm.model.concurrency.concurrency_tools.SharedNDArray", "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess", "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread", "aslm.model.concurrency.concurrency_tools.TestSharedNDArray", "aslm.model.concurrency.proxy_objects", "aslm.model.concurrency.proxy_objects.ProxyManager", "aslm.model.concurrency.proxy_objects.ProxyObject", "aslm.model.concurrency.proxy_objects.launch_custody_thread", "aslm.model.concurrency.proxy_objects.launch_thread", "aslm.model.data_sources", "aslm.model.data_sources.bdv_data_source", "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource", "aslm.model.data_sources.data_source", "aslm.model.data_sources.data_source.DataSource", "aslm.model.data_sources.get_data_source", "aslm.model.data_sources.tiff_data_source", "aslm.model.data_sources.tiff_data_source.TiffDataSource", "aslm.model.device_startup_functions", "aslm.model.device_startup_functions.DummyDeviceConnection", "aslm.model.device_startup_functions.auto_redial", "aslm.model.device_startup_functions.device_not_found", "aslm.model.device_startup_functions.load_camera_connection", "aslm.model.device_startup_functions.load_devices", "aslm.model.device_startup_functions.load_filter_wheel_connection", "aslm.model.device_startup_functions.load_stages", "aslm.model.device_startup_functions.load_zoom_connection", "aslm.model.device_startup_functions.start_camera", "aslm.model.device_startup_functions.start_daq", "aslm.model.device_startup_functions.start_filter_wheel", "aslm.model.device_startup_functions.start_galvo", "aslm.model.device_startup_functions.start_lasers", "aslm.model.device_startup_functions.start_remote_focus_device", "aslm.model.device_startup_functions.start_shutter", "aslm.model.device_startup_functions.start_stage", "aslm.model.device_startup_functions.start_zoom", "aslm.model.devices", "aslm.model.devices.APIs", "aslm.model.devices.APIs.coherent", "aslm.model.devices.APIs.dynamixel", "aslm.model.devices.APIs.dynamixel.dynamixel_functions", "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device", "aslm.model.devices.APIs.omicron", "aslm.model.devices.camera", "aslm.model.devices.camera.camera_base", "aslm.model.devices.camera.camera_base.CameraBase", "aslm.model.devices.camera.camera_hamamatsu", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca", "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning", "aslm.model.devices.camera.camera_photometrics", "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix", "aslm.model.devices.camera.camera_synthetic", "aslm.model.devices.camera.camera_synthetic.SyntheticCamera", "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController", "aslm.model.devices.daq", "aslm.model.devices.daq.daq_base", "aslm.model.devices.daq.daq_base.DAQBase", "aslm.model.devices.daq.daq_synthetic", "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ", "aslm.model.devices.filter_wheel", "aslm.model.devices.filter_wheel.filter_wheel_asi", "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_base", "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase", "aslm.model.devices.filter_wheel.filter_wheel_sutter", "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel", "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection", "aslm.model.devices.filter_wheel.filter_wheel_synthetic", "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel", "aslm.model.devices.galvo", "aslm.model.devices.galvo.galvo_base", "aslm.model.devices.galvo.galvo_base.GalvoBase", "aslm.model.devices.galvo.galvo_synthetic", "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo", "aslm.model.devices.lasers", "aslm.model.devices.lasers.laser_base", "aslm.model.devices.lasers.laser_base.LaserBase", "aslm.model.devices.lasers.laser_synthetic", "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser", "aslm.model.devices.objectives", "aslm.model.devices.objectives.Objective", "aslm.model.devices.remote_focus", "aslm.model.devices.remote_focus.remote_focus_base", "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase", "aslm.model.devices.remote_focus.remote_focus_synthetic", "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus", "aslm.model.devices.shutter", "aslm.model.devices.shutter.laser_shutter_base", "aslm.model.devices.shutter.laser_shutter_base.ShutterBase", "aslm.model.devices.shutter.laser_shutter_synthetic", "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter", "aslm.model.devices.stages", "aslm.model.devices.stages.stage_asi", "aslm.model.devices.stages.stage_asi.ASIStage", "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection", "aslm.model.devices.stages.stage_base", "aslm.model.devices.stages.stage_base.StageBase", "aslm.model.devices.stages.stage_galvo", "aslm.model.devices.stages.stage_galvo.GalvoNIStage", "aslm.model.devices.stages.stage_mcl", "aslm.model.devices.stages.stage_mcl.MCLStage", "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection", "aslm.model.devices.stages.stage_pi", "aslm.model.devices.stages.stage_pi.PIStage", "aslm.model.devices.stages.stage_pi.build_PIStage_connection", "aslm.model.devices.stages.stage_sutter", "aslm.model.devices.stages.stage_sutter.SutterStage", "aslm.model.devices.stages.stage_sutter.build_MP285_connection", "aslm.model.devices.stages.stage_synthetic", "aslm.model.devices.stages.stage_synthetic.SyntheticStage", "aslm.model.devices.stages.stage_tl_kcube_inertial", "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage", "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection", "aslm.model.devices.zoom", "aslm.model.devices.zoom.zoom_base", "aslm.model.devices.zoom.zoom_base.ZoomBase", "aslm.model.devices.zoom.zoom_dynamixel", "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom", "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection", "aslm.model.devices.zoom.zoom_synthetic", "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom", "aslm.model.dummy", "aslm.model.dummy.DummyController", "aslm.model.dummy.DummyDevice", "aslm.model.dummy.DummyMicroscope", "aslm.model.dummy.DummyModel", "aslm.model.features", "aslm.model.features.auto_tile_scan", "aslm.model.features.auto_tile_scan.CalculateFocusRange", "aslm.model.features.autofocus", "aslm.model.features.autofocus.Autofocus", "aslm.model.features.autofocus.power_tent", "aslm.model.features.common_features", "aslm.model.features.common_features.ChangeResolution", "aslm.model.features.common_features.ConProAcquisition", "aslm.model.features.common_features.FindTissueSimple2D", "aslm.model.features.common_features.LoopByCount", "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable", "aslm.model.features.common_features.PrepareNextChannel", "aslm.model.features.common_features.Snap", "aslm.model.features.common_features.StackPause", "aslm.model.features.common_features.WaitToContinue", "aslm.model.features.common_features.ZStackAcquisition", "aslm.model.features.constant_velocity_acquisition", "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition", "aslm.model.features.dummy_detective", "aslm.model.features.dummy_detective.Dummy_Detective", "aslm.model.features.feature_container", "aslm.model.features.feature_container.Container", "aslm.model.features.feature_container.DataContainer", "aslm.model.features.feature_container.DataNode", "aslm.model.features.feature_container.SignalContainer", "aslm.model.features.feature_container.SignalNode", "aslm.model.features.feature_container.TreeNode", "aslm.model.features.feature_container.dummy_True", "aslm.model.features.feature_container.dummy_func", "aslm.model.features.feature_container.get_registered_funcs", "aslm.model.features.feature_container.load_features", "aslm.model.features.feature_related_functions", "aslm.model.features.feature_related_functions.SharedList", "aslm.model.features.feature_related_functions.convert_feature_list_to_str", "aslm.model.features.feature_related_functions.convert_str_to_feature_list", "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions", "aslm.model.features.image_writer", "aslm.model.features.image_writer.ImageWriter", "aslm.model.features.remove_empty_tiles", "aslm.model.features.remove_empty_tiles.DetectTissueInStack", "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord", "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions", "aslm.model.features.remove_empty_tiles.detect_tissue", "aslm.model.features.remove_empty_tiles.detect_tissue2", "aslm.model.features.restful_features", "aslm.model.features.restful_features.IlastikSegmentation", "aslm.model.features.restful_features.prepare_service", "aslm.model.features.volume_search", "aslm.model.features.volume_search.VolumeSearch", "aslm.model.features.volume_search.draw_box", "aslm.model.metadata_sources", "aslm.model.metadata_sources.bdv_metadata", "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata", "aslm.model.metadata_sources.metadata", "aslm.model.metadata_sources.metadata.Metadata", "aslm.model.metadata_sources.metadata.XMLMetadata", "aslm.model.metadata_sources.ome_tiff_metadata", "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata", "aslm.model.microscope", "aslm.model.microscope.Microscope", "aslm.model.model", "aslm.model.model.Model", "aslm.model.waveforms", "aslm.model.waveforms.camera_exposure", "aslm.model.waveforms.dc_value", "aslm.model.waveforms.remote_focus_ramp", "aslm.model.waveforms.sawtooth", "aslm.model.waveforms.sine_wave", "aslm.model.waveforms.single_pulse", "aslm.model.waveforms.smooth_waveform", "aslm.model.waveforms.square", "aslm.tools", "aslm.tools.beams", "aslm.tools.beams.fit_gaussian_beam_error", "aslm.tools.beams.fit_gaussian_beam_mse", "aslm.tools.beams.gaussian_beam", "aslm.tools.common_dict_tools", "aslm.tools.common_dict_tools.update_stage_dict", "aslm.tools.common_functions", "aslm.tools.common_functions.VariableWithLock", "aslm.tools.common_functions.build_ref_name", "aslm.tools.common_functions.combine_funcs", "aslm.tools.common_functions.copy_proxy_object", "aslm.tools.common_functions.load_module_from_file", "aslm.tools.decorators", "aslm.tools.decorators.FeatureList", "aslm.tools.decorators.function_timer", "aslm.tools.file_functions", "aslm.tools.file_functions.create_save_path", "aslm.tools.file_functions.delete_folder", "aslm.tools.file_functions.load_yaml_file", "aslm.tools.file_functions.save_yaml_file", "aslm.tools.image", "aslm.tools.image.create_arrow_image", "aslm.tools.image.text_array", "aslm.tools.image_loaders", "aslm.tools.image_loaders.LazyTiff", "aslm.tools.main_functions", "aslm.tools.main_functions.create_parser", "aslm.tools.main_functions.evaluate_parser_input_arguments", "aslm.tools.multipos_table_tools", "aslm.tools.multipos_table_tools.calc_num_tiles", "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box", "aslm.tools.multipos_table_tools.sign", "aslm.tools.multipos_table_tools.update_table", "aslm.tools.project_stats", "aslm.tools.project_stats.countlines", "aslm.tools.sdf", "aslm.tools.sdf.box", "aslm.tools.sdf.sphere", "aslm.tools.sdf.volume_from_sdf", "aslm.tools.waveform_template_funcs", "aslm.tools.waveform_template_funcs.get_waveform_template_parameters", "aslm.tools.xml_tools", "aslm.tools.xml_tools.dict_to_xml", "aslm.tools.xml_tools.parse_xml", "aslm.view", "aslm.view.custom_widgets", "aslm.view.main_window_content", "aslm.view.popups", "&lt;no title&gt;", "&lt;no title&gt;", "API Reference", "Configuring ASLM", "Contributing Guidelines", "Adding New Hardware", "Contributing to ASLM", "Adding New Model Features", "&lt;no title&gt;", "Feature Container", "Microscope Implementations", "<strong>Autonomous Software for Light Microscopy</strong>", "Software Configuration", "Software Installation", "Supported Hardware"], "terms": {"modul": [0, 9, 13, 16, 18, 19, 25, 26, 49, 51, 56, 57, 64, 65, 66, 92, 93, 94, 95, 98, 99, 110, 115, 126, 131, 138, 143, 148, 170, 183, 213, 214, 234, 255, 267, 300, 301, 302, 303, 305, 312, 313, 314], "function": [1, 8, 13, 14, 20, 23, 24, 27, 32, 37, 39, 41, 44, 45, 47, 51, 53, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 74, 76, 96, 103, 104, 106, 108, 116, 121, 122, 149, 156, 159, 162, 167, 173, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 231, 243, 245, 246, 250, 254, 256, 257, 258, 260, 262, 264, 265, 266, 267, 268, 270, 271, 272, 276, 281, 284, 289, 291, 292, 293, 294, 295, 296, 297, 308, 312, 314, 315, 316, 318], "manag": [2, 5, 6, 7, 8, 14, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 145, 147, 150, 153, 155, 160, 172, 177, 182, 191, 194, 195, 197, 199, 205, 206, 208, 317, 318], "parent_dict": [2, 6], "key_nam": 2, "dict_data": 2, "nest": [2, 24, 57, 214, 236, 239, 241], "dictionari": [2, 5, 6, 8, 11, 21, 22, 24, 51, 56, 57, 79, 86, 87, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 140, 142, 150, 153, 155, 157, 158, 160, 161, 163, 166, 168, 172, 174, 175, 177, 179, 181, 182, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 209, 210, 213, 214, 217, 219, 221, 223, 236, 239, 241, 243, 245, 261, 272, 274, 275, 283, 296, 298, 299, 307, 313, 316], "recurs": [2, 24, 57, 217], "paramet": [2, 4, 5, 6, 7, 8, 11, 13, 14, 18, 19, 21, 22, 23, 24, 28, 29, 30, 33, 34, 35, 48, 53, 57, 58, 59, 60, 68, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 109, 112, 114, 117, 118, 120, 122, 125, 128, 130, 133, 135, 137, 140, 142, 145, 147, 150, 151, 153, 155, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 174, 175, 177, 179, 180, 181, 182, 187, 188, 218, 221, 232, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 264, 265, 266, 267, 270, 272, 273, 274, 275, 277, 278, 280, 282, 283, 285, 286, 287, 288, 290, 292, 293, 294, 296, 298, 299, 307, 312, 315, 316], "multiprocess": [2, 5, 6, 7, 8, 23, 62, 78, 81, 83, 147, 150, 153, 155, 160, 177, 245], "share": [2, 5, 6, 7, 8, 51, 57, 62, 63, 64, 114, 214, 216, 245, 308, 318], "object": [2, 5, 6, 7, 8, 11, 13, 14, 15, 51, 53, 54, 56, 57, 58, 62, 63, 64, 68, 70, 73, 75, 76, 83, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 109, 112, 114, 117, 118, 120, 128, 133, 135, 140, 142, 145, 147, 150, 151, 153, 155, 157, 160, 161, 163, 168, 172, 174, 177, 179, 180, 181, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 207, 209, 210, 214, 216, 221, 223, 224, 225, 229, 232, 236, 238, 243, 245, 261, 263, 266, 269, 277, 280, 282, 283, 288, 294, 307, 308, 314, 315, 316, 318], "e": [2, 4, 5, 6, 7, 8, 11, 34, 57, 73, 103, 104, 106, 108, 118, 123, 125, 128, 130, 151, 161, 172, 174, 177, 191, 192, 199, 216, 219, 221, 239, 285, 307, 308, 313, 317, 318], "g": [2, 5, 6, 7, 8, 11, 57, 73, 103, 104, 106, 108, 118, 123, 125, 128, 130, 137, 151, 161, 172, 174, 177, 191, 192, 199, 219, 221, 239, 285, 307, 313, 317, 318], "dict": [2, 5, 6, 7, 8, 11, 13, 14, 24, 28, 68, 70, 73, 79, 101, 103, 104, 106, 108, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 137, 140, 142, 150, 153, 155, 157, 158, 160, 161, 163, 166, 168, 172, 174, 175, 177, 179, 181, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 209, 210, 213, 221, 223, 243, 245, 261, 266, 272, 274, 275, 296, 298, 299, 307], "between": [2, 5, 6, 7, 8, 29, 57, 68, 70, 73, 106, 172, 174, 177, 192, 198, 206, 208, 216, 232, 257, 258, 264, 285, 307, 316, 318], "process": [2, 5, 6, 7, 8, 23, 54, 57, 62, 63, 65, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 209, 214, 217, 223, 224, 225, 245, 308, 313], "we": [2, 6, 21, 53, 54, 56, 57, 60, 63, 68, 70, 73, 103, 104, 122, 125, 181, 221, 236, 239, 241, 243, 307, 308, 309, 310, 313, 316, 317, 318], "ar": [2, 6, 8, 11, 13, 24, 51, 56, 57, 58, 73, 89, 103, 104, 106, 108, 114, 150, 153, 155, 157, 160, 163, 166, 168, 181, 182, 185, 187, 195, 198, 201, 205, 206, 207, 208, 209, 210, 213, 214, 217, 219, 221, 232, 239, 243, 245, 257, 258, 273, 280, 307, 308, 312, 313, 314, 316, 317, 318], "ad": [2, 6, 8, 53, 56, 57, 150, 214, 232, 282, 288, 310, 313, 315], "str": [2, 3, 4, 6, 11, 13, 14, 21, 22, 28, 29, 30, 33, 35, 53, 57, 58, 59, 60, 68, 70, 71, 73, 83, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 109, 112, 114, 117, 118, 120, 122, 123, 125, 128, 130, 133, 135, 137, 140, 142, 145, 147, 150, 151, 153, 155, 157, 160, 161, 163, 164, 166, 168, 169, 172, 174, 177, 179, 181, 182, 190, 191, 192, 193, 197, 199, 207, 209, 210, 213, 216, 217, 218, 219, 221, 232, 236, 239, 241, 243, 245, 259, 264, 267, 272, 273, 274, 275, 277, 278, 280, 283, 290, 296, 298, 312], "name": [2, 6, 11, 13, 14, 18, 19, 51, 53, 54, 56, 57, 58, 59, 60, 68, 70, 73, 83, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 109, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 137, 140, 142, 145, 147, 150, 153, 155, 157, 160, 161, 163, 166, 168, 172, 174, 177, 181, 182, 207, 209, 210, 216, 217, 219, 221, 232, 243, 245, 264, 267, 273, 275, 296, 307, 308, 312, 313, 316, 318], "insert": [2, 57, 216, 313, 318], "return": [2, 3, 4, 5, 6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 34, 45, 48, 51, 53, 54, 56, 57, 63, 68, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 101, 103, 104, 106, 108, 109, 112, 114, 117, 118, 120, 122, 123, 125, 128, 130, 137, 140, 142, 145, 147, 150, 151, 153, 155, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 174, 175, 177, 179, 180, 181, 182, 187, 188, 216, 218, 221, 236, 238, 239, 241, 243, 245, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 264, 265, 266, 267, 270, 272, 274, 275, 277, 278, 280, 282, 283, 285, 286, 287, 288, 292, 293, 294, 296, 298, 299, 308, 312, 313], "type": [2, 3, 5, 6, 11, 13, 14, 15, 18, 19, 21, 24, 29, 30, 34, 35, 48, 57, 68, 70, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 101, 103, 104, 106, 108, 109, 112, 114, 117, 118, 120, 122, 123, 125, 128, 130, 133, 135, 137, 140, 142, 145, 147, 150, 151, 153, 155, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 174, 175, 177, 179, 180, 181, 182, 185, 187, 188, 190, 191, 194, 199, 206, 207, 209, 210, 213, 216, 218, 221, 238, 239, 241, 243, 245, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 264, 265, 266, 267, 270, 272, 274, 275, 277, 278, 280, 282, 285, 286, 287, 288, 292, 293, 294, 298, 299, 307, 312, 313, 315, 316], "none": [2, 13, 14, 22, 28, 30, 40, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 70, 73, 103, 104, 106, 108, 114, 140, 142, 150, 153, 155, 157, 160, 163, 166, 168, 179, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 205, 206, 207, 208, 209, 210, 212, 216, 218, 221, 223, 224, 236, 238, 239, 241, 243, 245, 261, 274, 277, 282, 288, 290, 298, 312, 316], "exampl": [2, 3, 6, 21, 51, 56, 57, 64, 65, 71, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 150, 155, 157, 160, 163, 166, 168, 179, 180, 182, 221, 247, 248, 249, 250, 251, 252, 253, 254, 257, 273, 280, 294, 308, 309, 312, 313, 316, 317, 318], "establish": 3, "program": [3, 13, 51, 56, 216, 308], "home": [3, 117], "directori": [3, 73, 199, 219, 221, 239, 272, 273, 275, 290, 316, 317], "appdata": [3, 307, 316], "local": [3, 14, 33, 57, 307, 316, 317], "window": [3, 226, 272, 307, 313, 316, 317, 318], "mac": [3, 307, 316, 317], "linux": [3, 307, 316, 317], "path": [3, 4, 5, 22, 57, 73, 219, 267, 272, 273, 274, 280, 283, 290, 317], "c": [3, 57, 68, 70, 73, 161, 241, 307, 316, 317], "user": [3, 57, 217, 245, 272, 307, 310, 313, 315, 316, 317, 318], "usernam": [3, 317], "get": [4, 11, 14, 56, 57, 68, 71, 101, 103, 104, 106, 108, 145, 147, 150, 166, 181, 187, 199, 213, 243, 245, 296, 308, 317], "variou": [4, 59, 60, 185, 243, 307, 316, 318], "configur": [4, 5, 6, 7, 8, 11, 22, 68, 70, 73, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 175, 177, 179, 181, 182, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 213, 214, 217, 219, 221, 223, 232, 238, 239, 241, 243, 245, 283, 308, 313, 315, 317, 318], "file": [4, 5, 6, 7, 22, 57, 68, 70, 71, 73, 101, 103, 104, 106, 108, 155, 217, 219, 221, 236, 238, 239, 241, 245, 267, 273, 274, 275, 280, 283, 290, 299, 307, 308, 313, 315, 317, 318], "us": [4, 11, 13, 18, 19, 34, 51, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 108, 109, 155, 166, 179, 180, 181, 182, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 221, 223, 224, 225, 226, 227, 232, 239, 241, 243, 245, 247, 248, 249, 250, 251, 252, 254, 278, 280, 290, 307, 308, 309, 312, 313, 316, 317, 318], "configuration_path": [4, 283], "contain": [4, 5, 7, 8, 22, 28, 29, 30, 57, 157, 158, 160, 161, 163, 166, 168, 182, 185, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 213, 214, 217, 219, 223, 224, 226, 227, 243, 245, 272, 280, 288, 307, 312, 315, 316], "global": [4, 14, 33, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 145, 147, 150, 153, 155, 160, 172, 177, 245], "microscop": [4, 8, 11, 68, 70, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 181, 182, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 209, 210, 223, 224, 225, 232, 245, 296, 308, 313, 315, 318], "i": [4, 13, 14, 18, 19, 24, 30, 34, 38, 51, 53, 56, 57, 58, 60, 64, 65, 68, 73, 77, 78, 101, 103, 104, 106, 108, 114, 117, 118, 120, 122, 125, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 180, 181, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 217, 219, 221, 223, 224, 225, 226, 227, 232, 239, 243, 245, 249, 257, 258, 259, 261, 273, 275, 283, 286, 288, 290, 294, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318], "hardwar": [4, 57, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 177, 221, 243, 310, 313, 315, 317], "setup": [4, 22, 68, 180, 243, 307, 315, 316, 318], "experiment_path": [4, 283], "per": [4, 13, 51, 56, 57, 68, 70, 73, 117, 128, 130, 155, 201, 313, 318], "experi": [4, 7, 68, 70, 73, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 221, 232, 238, 239, 241, 275, 283, 308, 313, 317], "waveform_constants_path": [4, 283], "remot": [4, 8, 11, 88, 112, 114, 140, 142, 155, 243, 249, 283, 314, 318], "focu": [4, 8, 11, 88, 112, 114, 140, 142, 155, 172, 174, 177, 185, 187, 199, 236, 243, 245, 249, 286, 307, 313, 318], "all": [4, 7, 13, 14, 29, 51, 53, 56, 57, 58, 59, 60, 73, 106, 108, 112, 114, 150, 153, 155, 157, 160, 163, 166, 168, 181, 199, 201, 216, 243, 245, 273, 280, 285, 307, 308, 312, 313, 316, 318], "magnif": [4, 172, 174, 177, 192], "rest_api_path": [4, 283], "rest": [4, 106, 283, 307, 315], "api": [4, 57, 78, 103, 104, 106, 109, 150, 160, 283, 307, 315, 318], "waveform_templates_path": [4, 283], "waveform": [4, 8, 112, 114, 128, 130, 140, 142, 155, 243, 245, 283, 296, 308, 315, 318], "templat": [4, 57, 283, 296, 315], "kwarg": [5, 13, 14, 51, 53, 56, 57, 58, 59, 60, 64, 65, 76, 207, 209, 210, 230, 245, 312], "load": [5, 22, 57, 79, 101, 103, 104, 106, 108, 117, 166, 214, 219, 243, 245, 267, 274, 280, 308, 315], "list": [5, 11, 28, 29, 44, 57, 87, 150, 153, 155, 157, 160, 163, 166, 168, 179, 182, 185, 187, 191, 192, 193, 194, 196, 198, 199, 205, 206, 208, 211, 212, 214, 216, 217, 218, 219, 223, 224, 225, 232, 236, 241, 243, 245, 264, 265, 266, 274, 277, 288, 307, 312, 313, 315, 316], "config_dict": 5, "amalgam": 5, "input": [5, 44, 57, 217, 227, 243, 272, 282, 283, 294, 318], "config_nam": 6, "new_config": 6, "bool": [6, 11, 13, 14, 18, 19, 21, 24, 28, 29, 30, 33, 35, 53, 57, 58, 59, 60, 68, 70, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 114, 117, 120, 122, 125, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 180, 181, 182, 185, 190, 191, 193, 194, 195, 196, 198, 199, 205, 207, 208, 209, 210, 211, 223, 224, 225, 226, 227, 232, 236, 243, 245, 257, 259, 275, 286, 288, 290, 312], "read": [6, 57, 68, 70, 73, 122, 125, 172, 174, 177, 316], "new": [6, 11, 23, 24, 57, 73, 150, 155, 157, 160, 163, 166, 168, 191, 195, 199, 201, 232, 243, 265, 272, 277, 288, 308, 310, 312, 313, 315, 316, 317], "updat": [6, 8, 24, 57, 114, 190, 191, 193, 194, 199, 207, 209, 210, 214, 219, 224, 243, 245, 261, 277, 288, 307, 315, 317], "info": [6, 11, 243], "subdictionari": 6, "replac": [6, 57, 219, 307, 316], "valu": [6, 8, 11, 13, 21, 24, 28, 48, 51, 56, 57, 103, 104, 109, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 185, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 207, 209, 210, 211, 216, 218, 219, 226, 232, 239, 248, 285, 294, 307, 308, 312, 313, 316, 317], "yaml": [6, 7, 22, 219, 274, 275, 308, 316], "true": [6, 13, 18, 19, 21, 31, 51, 53, 56, 57, 58, 59, 60, 103, 104, 106, 117, 122, 125, 150, 153, 155, 157, 160, 163, 166, 168, 182, 193, 207, 209, 211, 213, 223, 224, 225, 226, 243, 245, 257, 275, 290, 312, 313], "fals": [6, 13, 18, 19, 21, 33, 51, 53, 54, 56, 57, 58, 59, 60, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 104, 106, 108, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 181, 182, 193, 199, 207, 208, 209, 210, 216, 223, 224, 226, 227, 232, 243, 245, 257, 275, 286, 288, 312], "verifi": [7, 8, 150, 153, 155, 157, 160, 163, 166, 168], "waveform_const": [7, 112, 114], "constant": [8, 112, 114, 166, 201, 283, 315, 318], "thi": [8, 13, 14, 18, 19, 22, 23, 24, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 68, 70, 73, 103, 104, 106, 114, 142, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 223, 224, 225, 226, 227, 239, 243, 245, 259, 264, 265, 266, 267, 272, 273, 285, 290, 296, 307, 308, 309, 312, 313, 314, 315, 316, 317, 318], "check": [8, 13, 21, 57, 76, 117, 120, 122, 125, 172, 177, 185, 199, 223, 224, 245], "ensur": [8, 150, 153, 155, 157, 160, 163, 166, 168, 194, 195, 197, 198, 213, 243, 308], "given": [8, 13, 34, 51, 56, 57, 71, 103, 104, 106, 108, 117, 120, 122, 125, 128, 130, 142, 213, 216, 217, 219, 226, 288, 312, 313, 317], "conform": 8, "expect": [8, 53, 56, 58, 59, 64, 68, 70, 73, 122, 150, 153, 155, 157, 160, 163, 166, 168, 199, 207, 209, 210, 212, 307, 308, 316], "structur": [8, 43, 57, 214, 241, 245, 313], "It": [8, 13, 14, 18, 19, 24, 51, 56, 57, 68, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 205, 206, 207, 208, 209, 211, 212, 213, 214, 216, 219, 223, 224, 225, 226, 243, 272, 307, 312, 313, 315, 316, 317, 318], "relat": [8, 14, 182, 185, 190, 191, 192, 194, 196, 199, 207, 209, 210, 278, 307, 316], "devic": [8, 75, 76, 77, 78, 79, 83, 85, 86, 87, 88, 89, 90, 91, 180, 181, 182, 185, 187, 190, 194, 201, 207, 208, 209, 210, 243, 245, 307, 314, 316, 318], "laser": [8, 11, 87, 114, 145, 181, 243, 251, 252, 254, 307, 313, 314, 315], "galvo": [8, 11, 77, 86, 112, 114, 155, 181, 243, 248, 250, 283, 308], "multipl": [8, 13, 33, 35, 44, 51, 56, 57, 58, 195, 239, 312, 318], "The": [8, 11, 13, 14, 15, 18, 19, 51, 56, 57, 64, 65, 68, 76, 114, 122, 130, 135, 142, 150, 166, 172, 174, 177, 179, 180, 181, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 219, 223, 224, 225, 226, 227, 243, 249, 253, 261, 270, 285, 287, 290, 294, 307, 308, 312, 315, 316, 317, 318], "If": [8, 18, 19, 48, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 65, 68, 70, 73, 101, 103, 104, 106, 108, 114, 117, 120, 122, 125, 150, 153, 155, 157, 160, 163, 166, 168, 174, 187, 213, 216, 218, 221, 223, 224, 226, 245, 257, 280, 283, 307, 308, 312, 313, 316, 317, 318], "miss": [8, 57, 213], "default": [8, 11, 13, 14, 22, 51, 53, 56, 57, 103, 104, 106, 108, 118, 125, 150, 153, 155, 157, 160, 163, 166, 168, 185, 190, 192, 193, 197, 199, 201, 205, 206, 207, 208, 209, 210, 213, 216, 221, 223, 224, 225, 226, 227, 243, 245, 251, 275, 278, 283, 307, 308, 312, 313, 316, 318], "empti": [8, 11, 57, 122, 125, 150, 153, 155, 157, 160, 163, 166, 168, 185, 187, 192, 205, 206, 208, 216, 224, 225, 316], "necessari": [8, 57, 112, 114, 117, 122, 125, 194, 206, 208, 223, 224, 243, 270, 272, 307, 308, 309, 313, 316, 318], "valid": [8, 217, 218], "convert": [8, 57, 101, 103, 106, 108, 160, 163, 217, 218, 236, 238, 239, 241, 278, 288], "float": [8, 11, 13, 28, 29, 30, 33, 34, 35, 48, 51, 53, 56, 57, 58, 59, 60, 68, 70, 73, 101, 103, 104, 106, 108, 112, 114, 117, 118, 122, 123, 125, 128, 130, 137, 140, 142, 150, 153, 155, 157, 160, 163, 164, 166, 168, 172, 174, 177, 179, 180, 181, 187, 188, 191, 192, 194, 199, 223, 224, 226, 227, 232, 236, 243, 245, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 285, 286, 287, 293, 294, 307], "possibl": [8, 54, 57, 63, 226, 249, 310, 313, 316], "non": [8, 13, 18, 24, 51, 56, 57, 283], "exist": [8, 57, 117, 120, 122, 125, 172, 177, 207, 209, 210, 245, 274, 277, 308, 313], "zoom": [8, 82, 91, 190, 192, 232, 307, 315], "level": [8, 57, 68, 192, 298, 312], "remov": [8, 14, 57, 216, 225, 307, 313, 316], "from": [8, 11, 13, 14, 22, 23, 33, 36, 42, 51, 53, 56, 57, 58, 62, 64, 65, 68, 70, 73, 76, 79, 101, 103, 104, 106, 108, 122, 125, 137, 147, 155, 160, 163, 187, 193, 205, 206, 207, 208, 209, 210, 216, 219, 225, 238, 239, 241, 243, 245, 249, 267, 272, 273, 274, 278, 285, 290, 292, 293, 294, 298, 307, 308, 309, 312, 313, 315, 317, 318], "class": [10, 11, 12, 13, 14, 15, 17, 18, 19, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 215, 216, 220, 221, 222, 223, 224, 225, 228, 229, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 262, 263, 267, 268, 269, 279, 280, 308, 309, 312], "base": [11, 13, 14, 15, 18, 19, 24, 29, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 68, 70, 73, 75, 101, 103, 104, 106, 108, 109, 112, 114, 117, 120, 122, 125, 128, 130, 132, 133, 135, 137, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 180, 181, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 216, 219, 221, 223, 224, 225, 227, 229, 232, 236, 238, 239, 241, 243, 245, 263, 269, 280, 286, 288, 307, 308, 309, 317, 318], "__init__": [11, 13, 14, 15, 18, 19, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 68, 70, 73, 75, 76, 101, 103, 104, 106, 108, 109, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 137, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 180, 181, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 216, 221, 223, 224, 225, 229, 232, 236, 238, 239, 241, 243, 245, 263, 269, 280, 312, 313], "initi": [11, 13, 14, 15, 18, 19, 22, 51, 54, 56, 57, 62, 63, 68, 70, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 109, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 151, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 180, 181, 182, 185, 187, 191, 198, 199, 207, 209, 210, 216, 223, 224, 236, 243, 245, 316], "method": [11, 13, 14, 15, 18, 19, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 68, 70, 73, 75, 101, 103, 104, 106, 108, 109, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 137, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 180, 181, 182, 187, 201, 203, 221, 227, 229, 232, 236, 238, 239, 241, 243, 245, 263, 269, 280, 312, 313], "attribut": [11, 13, 14, 15, 51, 56, 57, 58, 68, 70, 73, 101, 103, 104, 106, 108, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 180, 181, 182, 236, 238, 239, 241, 243, 245, 280, 312], "change_microscop": 11, "accord": [11, 24, 57, 68, 70, 73, 103, 104, 106, 108, 216, 312], "result": [11, 56, 57, 65, 76, 103, 104, 106, 172, 174, 177, 185, 207, 209, 217, 226, 243, 266, 308], "get_microscope_configuration_dict": 11, "microscope_configuration_dict": 11, "get_stage_position_limit": 11, "suffix": 11, "posit": [11, 28, 30, 57, 68, 70, 73, 117, 120, 122, 125, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 179, 182, 187, 191, 192, 194, 199, 223, 224, 225, 232, 236, 243, 245, 261, 285, 286, 288, 307, 316, 318], "limit": [11, 53, 57, 58, 59, 60, 150, 153, 155, 157, 160, 163, 166, 168, 174, 243, 308, 312], "stage": [11, 81, 90, 172, 174, 177, 179, 181, 185, 187, 190, 191, 194, 195, 196, 197, 198, 199, 201, 223, 224, 232, 236, 243, 245, 308, 309, 313, 315], "_min": 11, "_max": 11, "position_limit": 11, "depend": [11, 57, 117, 286, 313, 315], "min": [11, 28, 30, 57, 103, 128, 130, 140, 142, 307, 316], "max": [11, 57, 103, 106, 128, 130, 140, 142, 307, 316, 318], "x": [11, 30, 48, 57, 68, 70, 73, 101, 103, 104, 106, 108, 150, 153, 155, 157, 160, 163, 166, 168, 188, 199, 232, 236, 245, 257, 258, 277, 278, 280, 285, 286, 287, 288, 294, 307, 316], "2000": [11, 57, 307, 318], "y": [11, 30, 45, 57, 68, 70, 73, 101, 103, 104, 106, 108, 150, 153, 155, 157, 160, 163, 166, 168, 188, 199, 232, 236, 245, 277, 278, 280, 286, 288, 294, 307, 316], "z": [11, 45, 57, 68, 70, 73, 137, 150, 153, 155, 157, 160, 163, 166, 168, 194, 199, 201, 223, 224, 232, 236, 257, 258, 259, 286, 288, 294, 307, 313, 316], "theta": [11, 150, 153, 155, 157, 160, 163, 166, 168, 199, 236, 286, 307, 316], "0": [11, 29, 30, 34, 40, 57, 68, 76, 78, 86, 87, 90, 103, 104, 106, 118, 123, 125, 128, 130, 150, 153, 155, 157, 160, 163, 164, 166, 168, 172, 174, 177, 180, 181, 192, 216, 223, 224, 226, 227, 232, 241, 245, 247, 248, 249, 250, 251, 252, 254, 257, 258, 259, 278, 285, 290, 294, 298, 307, 312, 314, 316], "f": [11, 56, 57, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 187, 223, 224, 236, 286, 288, 307, 308, 314, 316, 318], "properti": [11, 13, 51, 56, 57, 68, 70, 73, 101, 103, 104, 106, 108, 109, 137, 145, 147, 207, 209, 210, 236, 238, 239, 241, 280, 308, 312, 313], "camera_config_dict": 11, "camera": [11, 28, 30, 57, 78, 83, 112, 114, 128, 130, 140, 142, 155, 181, 182, 196, 243, 245, 247, 307, 314, 315], "camera_set": 11, "set": [11, 13, 33, 51, 53, 56, 57, 68, 70, 73, 101, 103, 104, 106, 108, 109, 114, 117, 122, 125, 133, 135, 150, 153, 155, 160, 163, 166, 172, 174, 177, 180, 182, 185, 190, 205, 206, 207, 208, 209, 210, 216, 219, 243, 245, 288, 307, 309, 312, 313, 316, 317], "camera_flip_flag": 11, "flip": [11, 232], "flag": [11, 57, 103, 104, 106, 108, 114, 117, 120, 122, 125, 180, 181, 182, 191, 193, 199, 205, 206, 208, 216, 225, 243, 245, 317], "flip_flag": 11, "camera_pixel": 11, "pixel": [11, 28, 29, 30, 34, 68, 70, 73, 101, 103, 104, 106, 108, 245, 257, 258, 259, 278, 294], "x_pixel": [11, 101, 103, 104, 106, 108, 316], "int": [11, 28, 29, 30, 33, 35, 53, 57, 58, 59, 60, 68, 70, 73, 76, 78, 86, 87, 90, 101, 103, 104, 106, 108, 109, 112, 114, 117, 118, 120, 122, 123, 125, 128, 130, 133, 135, 140, 142, 150, 151, 153, 155, 157, 158, 160, 163, 164, 166, 168, 172, 174, 175, 177, 180, 181, 182, 187, 191, 193, 194, 197, 199, 208, 221, 223, 224, 236, 241, 243, 245, 251, 253, 259, 277, 278, 285, 286, 287, 290, 294, 296, 307, 312], "number": [11, 13, 51, 56, 57, 68, 70, 73, 76, 101, 103, 104, 106, 108, 112, 114, 117, 122, 125, 128, 130, 140, 142, 150, 155, 158, 161, 168, 169, 174, 175, 182, 187, 191, 193, 197, 199, 208, 216, 221, 223, 224, 226, 243, 245, 285, 286, 287, 290, 296, 307, 308, 312, 315], "y_pixel": [11, 101, 103, 104, 106, 108, 316], "channels_info": 11, "channel": [11, 68, 70, 73, 112, 114, 128, 130, 140, 142, 155, 168, 181, 187, 191, 195, 199, 221, 243, 245, 316, 318], "popul": [11, 108], "combobox": 11, "avail": [11, 13, 51, 56, 57, 64, 117, 120, 122, 125, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 182, 221, 243, 307, 308, 313, 317, 318], "488nm": [11, 316], "561nm": 11, "642nm": [11, 316], "filter": [11, 80, 85, 117, 118, 120, 122, 123, 125, 243, 314, 315], "align": [11, 57, 122, 125, 150, 153, 155, 157, 160, 163, 166, 168, 316], "gfp": [11, 125, 316], "ff01": [11, 316], "515": [11, 316], "30": [11, 57, 294, 307, 316], "32": [11, 57, 221, 316], "daq_sample_r": 11, "daq": [11, 84, 87, 89, 140, 142, 155, 181, 243, 245, 307], "sampl": [11, 112, 114, 128, 130, 140, 142, 155, 166, 257, 258, 259, 313, 314, 318], "rate": [11, 103, 104, 106, 108, 112, 114, 118, 123, 125, 128, 130, 140, 142, 151, 155, 164], "filter_wheel_setting_dict": 11, "wheel": [11, 80, 85, 117, 118, 120, 122, 123, 125, 243, 314, 315], "galvo_num": 11, "galvo_parameter_dict": 11, "lasers_info": 11, "laser_list": 11, "microscope_config": [11, 245], "microscope_nam": [11, 77, 83, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 112, 114, 117, 120, 122, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 181, 243, 245], "number_of_channel": 11, "remote_focus_dict": 11, "delay_perc": [11, 103, 316], "pulse_perc": [11, 103, 316], "remote_focus_paramet": 11, "percent": [11, 128, 130, 140, 142, 150, 155, 232, 247, 249, 250, 252, 254, 307], "delai": [11, 112, 114, 117, 122, 128, 130, 140, 142, 155, 160, 172, 174, 177, 243, 249, 252], "puls": [11, 112, 114, 150, 252, 316, 318], "stage_default_posit": 11, "current": [11, 13, 29, 51, 56, 57, 101, 103, 104, 106, 108, 109, 155, 166, 168, 172, 174, 177, 181, 187, 190, 191, 194, 199, 201, 205, 206, 207, 208, 209, 216, 221, 232, 243, 245, 307, 315, 316], "stage_flip_flag": 11, "stage_setting_dict": 11, "stage_step": 11, "step": [11, 57, 68, 70, 73, 101, 103, 104, 106, 108, 182, 185, 187, 190, 191, 192, 193, 194, 195, 198, 199, 201, 205, 206, 207, 209, 210, 307, 313, 316, 317], "size": [11, 28, 29, 30, 57, 68, 70, 73, 101, 103, 104, 106, 108, 187, 191, 199, 201, 221, 236, 238, 239, 241, 245, 257, 258, 259, 278, 285, 307, 316], "same": [11, 13, 28, 30, 51, 56, 57, 172, 174, 177, 185, 241, 275, 280, 312, 316], "group": [13, 51, 56], "target": [13, 14, 29, 51, 56, 64, 65, 160, 172, 174, 177, 192, 245, 261], "arg": [13, 14, 51, 53, 56, 57, 58, 59, 60, 64, 65, 76, 77, 179, 191, 206, 207, 208, 209, 211, 212, 217, 219, 245, 264, 283, 312, 313], "daemon": [13, 51, 56], "thread": [13, 14, 15, 51, 54, 56, 58, 64, 65, 80, 81, 82, 84, 85, 89, 91, 182, 187, 194, 197, 198, 199, 245], "A": [13, 14, 15, 18, 19, 51, 56, 57, 64, 65, 150, 153, 155, 157, 160, 163, 166, 168, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 213, 214, 216, 217, 218, 219, 223, 224, 225, 226, 232, 274, 280, 285, 294, 308, 313, 316, 318], "custom": [13, 14, 15, 18, 19, 216, 223, 224, 315, 318], "self": [13, 56, 57, 103, 104, 112, 114, 122, 153, 160, 172, 174, 177, 187, 221, 232, 308, 312, 313], "lock": [13, 15, 57, 114, 198, 245], "capabl": [13, 15, 191, 207, 209], "extend": [13, 206, 208, 216, 224], "python": [13, 18, 19, 22, 51, 54, 56, 57, 63, 68, 70, 73, 238, 239, 241, 267, 273, 298, 307, 312, 313, 315, 316], "provid": [13, 14, 57, 109, 185, 190, 191, 193, 194, 195, 196, 197, 199, 205, 206, 207, 208, 209, 210, 216, 283, 307, 308, 309, 313, 316, 318], "abil": 13, "unlock": 13, "explicitli": [13, 243], "scenario": 13, "where": [13, 51, 56, 57, 207, 209, 210, 211, 212, 217, 219, 221, 224, 245, 307, 309, 313, 316, 317], "synchron": [13, 14, 15, 197, 198, 318], "requir": [13, 38, 57, 89, 150, 153, 155, 157, 160, 163, 166, 168, 185, 190, 212, 223, 224, 226, 245, 312, 314, 317, 318], "addit": [13, 22, 57, 70, 117, 122, 150, 185, 191, 207, 209, 216, 245], "over": [13, 14, 29, 57, 217, 317], "execut": [13, 179, 185, 191, 193, 194, 198, 199, 205, 206, 207, 208, 209, 210, 225, 270, 313], "wait": [13, 51, 56, 64, 103, 104, 106, 108, 114, 117, 122, 125, 150, 155, 160, 163, 179, 198, 206, 208, 209, 243, 245, 313], "allow": [13, 14, 18, 19, 53, 57, 58, 59, 60, 191, 193, 197, 198, 199, 205, 207, 209, 210, 245, 307, 308, 313, 315, 316, 317, 318], "whether": [13, 14, 51, 56, 57, 78, 101, 103, 104, 106, 108, 150, 153, 155, 157, 160, 163, 166, 168, 185, 191, 193, 194, 199, 205, 207, 208, 209, 210, 221, 223, 224, 290], "islock": 13, "threadgroup": [13, 51, 56], "option": [13, 14, 22, 28, 29, 30, 51, 54, 56, 57, 68, 106, 114, 150, 153, 155, 157, 160, 163, 166, 168, 185, 190, 192, 193, 197, 199, 205, 206, 207, 208, 209, 210, 213, 216, 217, 219, 223, 224, 225, 226, 227, 236, 239, 241, 243, 251, 307, 312, 313], "callabl": [13, 14, 51, 53, 54, 56, 58, 59, 60, 63], "tupl": [13, 14, 35, 51, 56, 57, 68, 70, 73, 76, 160, 207, 209, 211, 212, 214, 217, 219, 236, 238, 239, 241, 278, 280, 292], "argument": [13, 14, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 68, 70, 73, 76, 117, 122, 125, 191, 206, 207, 208, 209, 210, 211, 212, 217, 219, 245, 264, 282, 283, 312, 313], "keyword": [13, 14, 51, 56, 57, 64, 68, 70, 73, 207, 209, 210, 245, 312], "getnam": [13, 51, 56], "string": [13, 51, 53, 54, 56, 57, 73, 117, 120, 122, 125, 133, 140, 166, 168, 174, 193, 216, 217, 218, 221, 245, 274, 275, 298, 312], "identif": [13, 51, 56, 216], "purpos": [13, 51, 56, 57, 65, 112, 114, 166, 317], "onli": [13, 51, 56, 57, 114, 150, 155, 201, 247, 294, 307, 308, 312, 316, 317, 318], "deprec": [13, 51, 56, 57], "instead": [13, 51, 56, 57, 65, 307, 312], "isdaemon": [13, 51, 56], "is_al": [13, 51, 56], "aliv": [13, 51, 56], "just": [13, 51, 56, 57, 58, 313], "befor": [13, 51, 56, 57, 133, 135, 163, 179, 185, 191, 195, 199, 209, 216, 245, 288, 312, 313, 317], "run": [13, 14, 24, 51, 53, 56, 58, 59, 60, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 114, 182, 187, 205, 206, 207, 208, 209, 245, 307, 308, 313, 316, 317, 318], "start": [13, 18, 19, 30, 51, 53, 56, 57, 106, 114, 128, 130, 140, 142, 150, 166, 182, 191, 199, 216, 243, 245, 249, 286, 290, 307, 308, 312, 313, 317, 318], "until": [13, 51, 56, 64, 114, 122, 150, 155, 157, 160, 163, 166, 168, 182, 198, 243, 245], "after": [13, 51, 56, 57, 109, 172, 177, 182, 190, 194, 199, 209, 245, 308, 312, 313, 316, 317], "termin": [13, 51, 56, 182, 205, 243, 245, 308, 316, 317, 318], "see": [13, 51, 53, 56, 57, 64, 65, 239, 299, 308, 312, 313, 315, 317], "also": [13, 51, 56, 57, 214, 221, 224, 308, 312, 317, 318], "enumer": [13, 51, 56], "join": [13, 51, 56, 65], "timeout": [13, 51, 56, 118, 123, 164, 174, 180, 245], "block": [13, 51, 56, 57, 68, 150, 155, 157, 160, 163, 166, 168, 305, 312], "call": [13, 14, 51, 53, 54, 56, 57, 64, 65, 68, 114, 157, 187, 195, 212, 216, 221, 223, 224, 245, 307, 316, 317], "whose": [13, 18, 19, 51, 56, 57], "either": [13, 51, 56, 57, 108, 193, 213, 307, 312, 316], "normal": [13, 39, 42, 51, 56, 57, 101, 103, 104, 106, 108, 181, 243, 316], "through": [13, 18, 19, 24, 48, 51, 56, 57, 191, 199, 206, 207, 208, 209, 210, 219, 223, 232, 243, 313], "an": [13, 24, 28, 29, 30, 33, 35, 36, 48, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 76, 101, 103, 104, 106, 108, 150, 153, 155, 157, 160, 163, 166, 168, 174, 185, 192, 193, 199, 205, 206, 208, 216, 224, 225, 226, 227, 236, 239, 243, 245, 277, 283, 285, 288, 294, 299, 307, 308, 309, 312, 313, 316, 318], "unhandl": [13, 51, 56], "except": [13, 14, 51, 53, 56, 57, 58, 59, 60, 65, 76, 150, 153, 155, 157, 160, 163, 166, 168, 312], "occur": [13, 51, 56, 57, 150, 309], "when": [13, 51, 54, 56, 57, 65, 182, 198, 205, 206, 207, 208, 209, 210, 212, 216, 243, 245, 307, 308, 313, 316, 317, 318], "present": [13, 30, 51, 56, 101, 103, 104, 106, 108, 174, 213, 216, 217], "should": [13, 18, 19, 51, 56, 57, 64, 65, 103, 104, 106, 122, 150, 185, 193, 196, 198, 205, 206, 207, 208, 209, 210, 219, 223, 224, 226, 285, 307, 308, 312, 316, 317, 318], "point": [13, 51, 53, 56, 57, 73, 205, 221, 277, 292, 293, 294, 307], "specifi": [13, 18, 19, 51, 56, 57, 122, 125, 166, 190, 192, 193, 197, 205, 206, 207, 208, 209, 210, 213, 217, 219, 221, 223, 224, 225, 226, 227, 272, 275, 307, 312, 313, 316], "oper": [13, 14, 51, 54, 56, 60, 63, 163, 181, 182, 185, 201, 205, 211, 212, 221, 243, 309, 313, 314, 316, 317, 318], "second": [13, 51, 56, 57, 68, 70, 73, 103, 104, 106, 108, 128, 130, 142, 181, 243, 247, 248, 249, 250, 251, 252, 254, 307, 312, 316], "fraction": [13, 51, 56, 285, 286], "thereof": [13, 51, 56], "As": [13, 51, 54, 56, 57, 63, 313, 318], "alwai": [13, 51, 56, 57, 68, 70, 73, 211, 227], "you": [13, 51, 54, 56, 57, 62, 63, 64, 65, 216, 307, 308, 313, 316, 317, 318], "must": [13, 28, 30, 51, 56, 57, 64, 68, 122, 294, 308, 312, 313, 318], "decid": [13, 51, 56, 193, 194, 307, 316], "happen": [13, 51, 56, 313], "still": [13, 51, 56, 57, 198, 307, 316, 317, 318], "time": [13, 51, 56, 57, 68, 70, 73, 76, 101, 103, 104, 106, 108, 112, 114, 117, 122, 125, 128, 130, 140, 142, 150, 155, 164, 174, 179, 180, 181, 191, 197, 199, 201, 208, 221, 243, 245, 247, 270, 307, 309, 316, 318], "out": [13, 18, 19, 51, 53, 56, 57, 103, 104, 122, 150, 153, 155, 157, 160, 163, 166, 168, 180, 185, 187, 190, 192, 216, 226, 232, 252, 285, 286, 307, 308, 312, 316, 318], "can": [13, 51, 54, 56, 57, 58, 62, 65, 68, 70, 73, 106, 108, 117, 122, 185, 190, 193, 207, 209, 210, 216, 217, 218, 239, 245, 280, 307, 308, 309, 312, 313, 316, 317, 318], "ed": [13, 51, 56], "mani": [13, 51, 56, 57, 187, 208, 308, 313, 316], "rais": [13, 51, 53, 56, 57, 58, 59, 60, 65, 68, 70, 73, 77, 101, 103, 104, 106, 108, 117, 120, 122, 123, 125, 163, 174, 216, 280, 312], "runtimeerror": [13, 51, 56, 57, 58], "attempt": [13, 51, 56, 57, 76], "made": [13, 51, 56, 57], "would": [13, 51, 53, 56, 57, 217, 219, 226, 307, 316, 318], "caus": [13, 51, 56, 57], "deadlock": [13, 51, 56], "error": [13, 51, 56, 57, 65, 77, 122, 163, 257, 258, 274, 278, 308, 312, 317], "ha": [13, 51, 56, 57, 62, 122, 150, 153, 155, 157, 160, 163, 166, 168, 191, 199, 201, 205, 207, 209, 210, 274, 285, 307, 312, 313, 314, 316], "been": [13, 51, 56, 191, 199, 205, 207, 209, 210, 223, 224], "do": [13, 18, 19, 51, 56, 57, 103, 104, 114, 150, 212, 213, 236, 239, 241, 307, 308, 312, 313, 316, 317, 318], "so": [13, 51, 56, 57, 65, 114, 201, 307, 317, 318], "setdaemon": [13, 51, 56], "setnam": [13, 51, 56], "": [13, 34, 51, 54, 56, 57, 101, 103, 106, 108, 122, 164, 166, 190, 192, 205, 206, 208, 209, 213, 221, 225, 243, 245, 307, 308, 312, 313, 317], "activ": [13, 51, 56, 103, 104, 106, 108, 112, 114, 117, 182, 190, 191, 195, 196, 199, 245, 308, 315, 316, 317, 318], "most": [13, 51, 56, 57, 308, 316, 318], "onc": [13, 51, 56, 57, 216, 313, 317, 318], "arrang": [13, 51, 56], "invok": [13, 51, 56, 57], "separ": [13, 51, 56, 57, 182, 239, 264, 308, 312, 314], "more": [13, 51, 56, 57, 150, 153, 155, 157, 160, 163, 166, 168, 307, 308, 315, 317], "than": [13, 28, 30, 51, 56, 57, 68, 103, 104, 106, 226, 308, 318], "finish": [13, 163, 187], "boolean": [13, 51, 56, 57, 185, 190, 191, 193, 194, 195, 196, 198, 199, 205, 207, 208, 209, 210, 211], "indic": [13, 28, 51, 56, 57, 68, 185, 190, 191, 193, 194, 195, 196, 198, 199, 205, 207, 208, 209, 210, 221, 225, 227, 232, 243, 285, 313], "otherwis": [13, 14, 18, 19, 21, 51, 56, 57, 103, 104, 106, 181, 182, 207, 209, 210, 223, 224, 226, 243, 275, 312], "Its": [13, 51, 56], "inherit": [13, 51, 56, 57, 76, 207, 209], "creat": [13, 14, 51, 53, 56, 57, 65, 97, 114, 150, 155, 157, 160, 163, 168, 214, 245, 248, 250, 251, 252, 254, 272, 277, 278, 286, 308, 312, 315, 317, 318], "main": [13, 23, 51, 56, 65, 185, 191, 192, 194, 195, 196, 197, 198, 199, 207, 209, 213, 225, 308, 313], "therefor": [13, 51, 56, 57], "entir": [13, 51, 56, 232], "exit": [13, 51, 54, 56, 133, 135, 193, 313], "left": [13, 51, 56, 57, 249, 277, 278, 285, 317], "ident": [13, 51, 56, 313, 316], "identifi": [13, 44, 45, 51, 56, 122, 207, 209, 210, 216, 318], "nonzero": [13, 51, 56, 57], "integ": [13, 51, 56, 57, 193, 247, 248, 249, 250, 252, 254, 308], "get_id": [13, 51, 56], "mai": [13, 51, 56, 57, 185, 198, 219, 308, 312, 313, 317, 318], "recycl": [13, 51, 56], "anoth": [13, 51, 53, 56, 57, 65, 307, 308, 316, 317], "even": [13, 33, 51, 56, 57], "semant": [13, 51, 56], "constructor": [13, 51, 56], "native_id": [13, 51, 56], "nativ": [13, 51, 56, 57], "integr": [13, 51, 56, 318], "id": [13, 51, 56, 77, 78, 86, 87, 90, 106, 108, 128, 130, 133, 135, 153, 157, 160, 166, 168, 174, 182, 185, 187, 192, 193, 196, 198, 199, 223, 224, 245], "neg": [13, 51, 56], "get_native_id": [13, 51, 56], "repres": [13, 51, 56, 193, 205, 207, 209, 210, 214, 217, 218, 223, 224, 225, 226, 307, 316], "report": [13, 51, 56, 150, 155, 157, 160, 163, 166, 168, 245, 308], "kernel": [13, 51, 56], "selflock": 13, "pool": 14, "featur": [14, 53, 56, 182, 245, 308, 310, 315], "associ": [14, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 308], "differ": [14, 57, 172, 174, 177, 185, 190, 205, 207, 209, 210, 216, 223, 307, 309, 313, 315, 316, 317, 318], "resourc": [14, 51, 58, 64, 205, 206, 208], "regist": [14, 213, 318], "wrap": [14, 270], "task": [14, 114, 128, 130, 140, 142, 201, 214, 318], "other": [14, 57, 62, 114, 137, 198, 227, 243, 307, 308, 312, 313, 318], "explicit": 14, "creation": [14, 57], "effici": [14, 34], "clear": [14, 57, 179, 180, 205, 206, 208, 216, 245], "move": [14, 57, 117, 122, 125, 142, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 187, 191, 194, 199, 223, 224, 232, 243, 245, 307, 313, 316, 318], "todeletelist": 14, "later": 14, "delet": [14, 221, 273, 315], "createthread": 14, "resourcenam": 14, "callback": 14, "cbarg": 14, "cbkarg": 14, "add": [14, 38, 53, 207, 209, 282, 283, 307, 308, 313, 316, 317], "waitlist": [14, 15], "selflockthread": 14, "getrunningthread": 14, "globaltrac": 14, "frame": [14, 33, 34, 35, 103, 104, 106, 108, 182, 185, 187, 191, 192, 193, 196, 198, 199, 207, 223, 224, 232, 243, 245, 314, 318], "event": [14, 18, 19, 209, 210, 225, 245], "trace": [14, 57], "ani": [14, 51, 53, 56, 57, 68, 70, 73, 150, 153, 155, 157, 160, 163, 166, 168, 195, 198, 207, 209, 212, 213, 223, 224, 312, 313, 318], "killthreadinlist": 14, "threadlist": 14, "kill": 14, "localtrac": 14, "movetodelet": 14, "taskthread": 14, "registerresourc": 14, "removethread": 14, "threadtaskwrap": 14, "dequ": 15, "waitlistlock": 15, "log": [18, 19, 22, 23, 68, 70, 73, 103, 104, 196, 283], "exclud": [18, 19], "perform": [18, 19, 28, 53, 58, 59, 60, 122, 182, 185, 190, 192, 193, 198, 199, 205, 206, 208, 212, 227, 243, 313, 315, 318], "messag": [18, 19, 77, 180], "design": [18, 19, 117, 120, 122, 125, 174, 206, 208, 211, 216, 219, 221, 313, 318], "record": [18, 19, 57, 182, 224], "spec": [18, 19, 68, 236, 241], "logger": [18, 19, 22, 68, 70, 73, 245], "which": [18, 19, 54, 57, 64, 68, 70, 73, 150, 153, 155, 157, 160, 163, 166, 168, 185, 193, 196, 198, 205, 206, 207, 208, 209, 210, 214, 217, 225, 232, 245, 292, 293, 307, 308, 313, 314, 316, 318], "togeth": [18, 19], "its": [18, 19, 57, 150, 155, 157, 160, 163, 166, 168, 206, 207, 208, 210, 216, 217, 313], "children": [18, 19], "have": [18, 19, 54, 57, 63, 114, 191, 199, 205, 206, 208, 212, 223, 224, 239, 307, 308, 312, 313, 316, 317, 318], "everi": [18, 19, 150, 294, 307, 316, 318], "logrecord": [18, 19], "includ": [19, 57, 128, 130, 150, 153, 155, 157, 160, 163, 166, 168, 185, 190, 191, 192, 194, 195, 198, 199, 205, 206, 207, 208, 209, 210, 213, 216, 236, 239, 241, 307, 312, 313, 315, 316, 317, 318], "k": [21, 57], "v": [21, 57, 137], "ve": [21, 313], "met": [21, 24], "condit": [21, 24, 57], "kei": [21, 24, 57, 128, 130, 140, 142, 172, 174, 177, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 209, 210, 216, 217, 219, 298, 308, 315], "filenam": [21, 57, 73, 108, 221, 245, 275], "test": [21, 53, 57, 58, 59, 60, 97, 166, 179, 180, 181, 182], "logging_configur": 22, "logging_path": [22, 283], "inform": [22, 57, 103, 104, 106, 117, 122, 157, 158, 194, 196, 245, 272, 275, 285, 307, 308, 316, 317], "format": [22, 53, 57, 58, 59, 60, 68, 70, 73, 112, 114, 217, 221, 236, 239, 307, 308, 312, 313, 316], "here": [22, 24, 103, 104, 249, 307, 308, 309, 312, 316], "http": [22, 34, 68, 70, 73, 117, 122, 150, 236, 238, 239, 241, 273, 312, 316, 317, 318], "doc": [22, 117, 150, 241, 273, 312], "org": [22, 236, 241, 273], "3": [22, 57, 236, 241, 254, 257, 258, 273, 292, 293, 294, 312, 313, 316, 317], "librari": [22, 57, 273, 308, 315], "config": [22, 243, 315, 316, 317], "html": [22, 241, 273, 312], "dictschema": 22, "rel": [22, 150, 201, 290, 318], "locat": [22, 28, 57, 122, 172, 174, 177, 283, 307, 317, 318], "folder": [22, 245, 273, 280, 308, 317], "store": [22, 57, 68, 70, 73, 101, 106, 108, 236, 238, 239, 241, 308], "aslm_path": 22, "queue": [23, 187, 225, 245, 318], "listen": [23, 180], "put": [23, 57, 58, 225, 316], "sub": [23, 57, 199, 221, 273], "via": [23, 57, 89, 114, 123, 179, 253, 307], "d": [24, 57, 108, 298, 299], "find_func": 24, "apply_func": 24, "appli": [24, 57, 150, 192, 214, 216, 226], "loop": [24, 57, 182, 193, 313], "todo": [24, 103, 104, 187, 221, 239, 299, 311], "highli": 24, "gener": [24, 53, 57, 73, 108, 155, 166, 180, 191, 192, 221, 241, 257, 258, 259, 294, 312, 313], "doesn": [24, 57], "t": [24, 53, 54, 56, 57, 63, 68, 70, 73, 103, 104, 114, 122, 150, 241, 318], "belong": 24, "might": 24, "nice": 24, "make": [24, 43, 51, 54, 56, 57, 63, 286, 307, 308, 310, 313, 316], "func": [24, 53, 58, 59, 60, 76, 269, 270], "accept": [24, 51, 56, 57, 64, 150, 283, 294, 312, 313], "pair": [24, 207, 209, 210, 245, 313], "match": [24, 57, 219, 259, 294, 307, 312, 318], "d2": 24, "version": [24, 57, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 227, 314, 316, 317], "pass": [24, 51, 56, 57, 62, 63, 73, 112, 114, 206, 207, 208, 209, 216, 245, 307, 309, 312], "img_data": 28, "union": [28, 29, 30, 33, 35, 68, 70, 73, 236, 241, 259], "_supportsarrai": [28, 29, 30, 33, 35, 68, 70, 73, 236, 259], "dtype": [28, 29, 30, 33, 35, 56, 57, 60, 62, 68, 70, 73, 236, 259], "_nestedsequ": [28, 29, 30, 33, 35, 68, 70, 73, 236, 259], "complex": [28, 29, 30, 33, 35, 57, 68, 70, 73, 236, 259], "byte": [28, 29, 30, 33, 35, 57, 68, 70, 73, 122, 125, 236, 259], "boundari": [28, 29, 31, 232, 285], "width": [28, 30, 57, 101, 103, 104, 106, 108, 182, 226, 243, 257, 258, 259, 277, 292], "1": [28, 29, 30, 34, 56, 57, 68, 70, 73, 78, 103, 106, 109, 128, 130, 150, 179, 181, 192, 193, 201, 208, 216, 223, 224, 226, 232, 241, 243, 245, 248, 249, 250, 251, 252, 254, 257, 258, 259, 285, 294, 307, 312, 313, 316, 318], "offset": [28, 30, 33, 35, 36, 57, 101, 103, 104, 106, 108, 140, 142, 172, 174, 177, 179, 187, 188, 191, 192, 243, 245, 249, 250, 251, 252, 254, 257, 258, 259, 278, 316], "varianc": [28, 30, 35, 36, 57, 101, 103, 104, 106, 108, 245], "binari": [28, 57, 278], "search": [28, 219, 317], "tissu": [28, 29, 30, 192, 223, 224, 226, 227, 232], "imag": [28, 29, 30, 33, 35, 36, 38, 39, 42, 45, 48, 57, 68, 73, 101, 103, 104, 106, 108, 114, 137, 182, 187, 190, 192, 195, 199, 221, 223, 224, 226, 227, 232, 243, 245, 257, 258, 259, 280, 286, 294, 313, 314, 318], "image_data": [28, 29, 30, 38, 40, 42, 45, 46, 226, 227], "npt": [28, 29, 30, 33, 35, 68, 70, 73, 292, 293, 294], "arraylik": [28, 29, 30, 33, 35, 68, 70, 73, 292, 293, 294], "xy": [28, 33, 277], "presenc": [28, 223, 224], "subimag": [28, 30], "smaller": [28, 30, 57], "shape": [28, 30, 43, 57, 60, 62, 68, 70, 73, 236, 238, 239, 241, 280], "map": [28, 30, 33, 35, 36, 57, 101, 103, 104, 106, 108, 150, 155, 166, 168, 239, 245, 307, 316], "mag_ratio": 29, "find": [29, 57, 232, 307, 313, 316, 317, 318], "otsu": [29, 41, 42, 192], "threshold": [29, 41, 42, 155, 192, 194, 226, 227], "space": [29, 57, 192, 221, 285, 286], "resampl": 29, "ratio": 29, "tile": [29, 192, 232, 285, 286], "row": [29, 57, 288, 307], "downsampl": [29, 192], "determin": [30, 57, 68, 155, 185, 192, 193, 197, 198, 199, 207, 223, 224, 226, 227], "direct": [31, 45, 57, 101, 103, 104, 106, 108, 232, 257, 258, 259, 277, 318], "offset_map": [33, 36], "comput": [33, 35, 36, 192, 212, 243, 307, 316, 317, 318], "flatfield": 33, "evenli": 33, "illumin": 33, "scmo": [33, 34, 35], "zyx": [33, 35, 68], "defocus": 33, "signal": [33, 34, 114, 142, 180, 182, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 205, 208, 209, 210, 213, 214, 223, 224, 225, 245, 250, 313, 318], "np": [33, 34, 48, 56, 57, 101, 103, 104, 106, 108, 122, 181, 221, 226, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 278, 286, 288], "absenc": 33, "oppos": 33, "fn": 34, "qe": 34, "82": 34, "ib": 34, "nr": 34, "4": [34, 57, 103, 106, 137, 247, 248, 250, 251, 252, 254, 257, 258, 312, 313, 314, 316], "m": [34, 101, 103, 108, 137, 161, 245, 307, 316, 317], "www": [34, 122, 318], "hamamatsu": [34, 103, 104, 106, 314], "com": [34, 68, 70, 73, 117, 122, 150, 164, 238, 239, 241, 317, 318], "content": [34, 57, 218, 266, 274, 275, 313], "dam": 34, "photon": 34, "site": 34, "document": [34, 57, 97, 103, 104, 106, 150, 312, 313, 315, 317], "99_sales_librari": 34, "sy": [34, 57], "scas0134e_c13440": 34, "20cu_tec": 34, "pdf": [34, 122], "mean": [34, 51, 56, 57, 258], "nois": 34, "sigma": [34, 45, 187, 188], "excess": 34, "factor": [34, 155, 308], "unitless": 34, "quantum": 34, "arrai": [34, 57, 60, 62, 68, 70, 73, 226, 227, 248, 249, 250, 251, 252, 253, 254, 257, 259, 278, 280, 286, 288, 292, 293], "background": [34, 257, 258, 259], "readout": [34, 101, 103, 104, 106, 108, 128, 130, 140, 142, 181, 243], "rm": 34, "em": 34, "gain": [34, 174], "estim": [34, 117, 221], "electron": 34, "numpi": [35, 57, 62, 103, 104, 108, 140, 142, 226, 227, 243, 248, 249, 250, 251, 252, 253, 254, 280, 312], "_array_lik": 35, "_nested_sequ": 35, "dark": 35, "taken": [35, 51, 56, 172, 174, 177], "sequenti": [35, 51, 56, 243], "variance_map": 36, "snr": 36, "border": 38, "median": 38, "3d": [38, 43, 48, 68], "inside_imag": 39, "normalized_cel": 39, "surface_cel": 39, "combin": [39, 265, 315], "insid": [39, 57, 317], "cell": [39, 41], "surfac": [39, 44, 45], "image_threshold": 40, "pixel_s": [40, 257, 258, 259, 294, 316], "206": 40, "padded_image_data": 41, "insidegamma": 41, "insideblur": 41, "insidedilateradiu": 41, "insideeroderadiu": 41, "tri": [41, 76, 308], "fill": [41, 57, 187, 233], "interior": 41, "gaussian": [41, 257, 258, 259], "blur": 41, "follow": [41, 172, 174, 177, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 217, 219, 308, 312, 313, 316, 317], "dilat": 41, "hole": 41, "eros": 41, "subtract": 42, "standard": [42, 51, 56, 57, 312, 315], "deviat": [42, 57, 309], "radiu": [43, 293], "element": [43, 57, 179, 216, 236, 299], "sphere": 43, "scale": [44, 155, 294], "each": [45, 48, 57, 62, 68, 70, 73, 76, 112, 114, 140, 142, 150, 155, 166, 172, 174, 177, 182, 185, 187, 195, 198, 207, 209, 210, 214, 216, 219, 221, 223, 224, 243, 245, 264, 285, 286, 288, 294, 307, 308, 309, 312, 313, 316, 318], "input_arrai": 48, "psf_support_diameter_xi": 48, "calcul": [48, 57, 101, 103, 104, 106, 108, 112, 114, 122, 125, 137, 155, 185, 187, 192, 197, 201, 226, 243, 245, 247, 285, 318], "entropi": [48, 187, 245], "ndarrai": [48, 57, 60, 101, 103, 104, 106, 108, 140, 142, 181, 182, 221, 226, 227, 243, 257, 258, 259], "2d": [48, 57, 192, 257, 259], "iter": [48, 57, 182, 206, 207, 208, 209, 210, 216, 219, 243], "plane": [48, 191, 223, 224, 313, 318], "support": [48, 57, 68, 155, 219, 312, 315], "psf": 48, "dimens": [48, 57, 68, 70, 73, 245, 285, 286, 316], "first_resourc": [51, 64], "resultthread": [51, 52, 59], "access": [51, 56, 57, 58, 62, 68, 70, 73, 307, 317], "order": [51, 57, 58, 198, 206, 208, 216, 307, 316], "thei": [51, 54, 57, 63, 114, 213, 307, 312, 316, 317, 318], "were": [51, 57, 221, 316, 317], "launch": [51, 56, 65, 245, 316], "docstr": [51, 64, 65, 308, 312], "top": [51, 64, 65, 101, 103, 104, 106, 108, 273, 307, 316], "reserv": [51, 56], "futur": [51, 56, 57, 308], "extens": [51, 56, 221], "implement": [51, 56, 57, 68, 70, 73, 106, 155, 157, 163, 166, 168, 211, 239, 307, 315, 318], "noth": [51, 56, 212, 213], "By": [51, 53, 56, 57, 312, 316, 318], "uniqu": [51, 56, 318], "construct": [51, 56, 57, 172, 174, 177, 232], "form": [51, 56, 57, 226, 308, 312, 313, 318], "n": [51, 56, 57, 73, 190, 192, 232, 257, 258, 259, 292, 293, 294, 308, 312, 316, 317], "small": [51, 56, 308], "decim": [51, 56, 57], "invoc": [51, 56], "subclass": [51, 53, 56, 57], "overrid": [51, 56, 68], "sure": [51, 56, 57, 307, 316], "anyth": [51, 56], "els": [51, 56], "get_result": [51, 56], "timeouterror": [51, 53, 56, 58, 59, 60], "respect": [51, 56, 57, 217, 226, 316], "control": [51, 56, 57, 78, 117, 118, 120, 122, 150, 151, 155, 157, 161, 168, 169, 174, 177, 179, 180, 181, 182, 185, 191, 192, 193, 194, 197, 198, 199, 205, 206, 207, 208, 209, 210, 221, 243, 245, 261, 307, 308, 313, 315, 316], "alia": [52, 55, 57], "homemad": 53, "mostli": 53, "written": [53, 57, 68, 221, 308, 312], "curios": 53, "what": [53, 57, 259, 285, 307, 313, 316], "want": [53, 57, 62, 122, 125, 307, 310, 313, 316, 317, 318], "could": [53, 57, 123, 155, 273, 313, 318], "done": [53, 57, 103, 104, 122, 243, 245, 307, 316, 317, 318], "easili": [53, 217], "without": [53, 54, 56, 57, 58, 62, 63, 209, 221, 307, 308, 316, 318], "import": [53, 57, 308, 313, 315, 316, 318], "Not": [53, 106, 109, 166, 239, 247], "real": [53, 57, 211, 212, 245], "packag": [53, 317], "wasn": 53, "To": [53, 57, 239, 307, 308, 310, 313, 316, 318], "test_": [53, 58, 59, 60], "specif": [53, 57, 58, 59, 60, 122, 150, 185, 195, 196, 197, 209, 210, 211, 307, 316, 318], "print": [53, 56, 57, 103, 104, 106, 108, 290, 312], "output": [53, 57, 87, 89, 114, 150, 155, 252, 312, 318], "stdout": 53, "test_prefix": [53, 58, 59, 60], "fail": [53, 57, 58, 59, 60, 307, 313, 316], "fail_fast": [53, 58, 59, 60], "begin": [53, 57, 58, 59, 60, 185, 205, 206, 208, 223, 224], "time_it": [53, 58, 59, 60], "n_loop": [53, 58, 59, 60], "timeout_u": [53, 58, 59, 60], "averag": [53, 57, 58, 59, 60], "durat": [53, 58, 59, 60, 101, 103, 104, 106, 108, 114, 117, 122, 125, 155, 164, 174, 245, 247, 270], "exce": [53, 58, 59, 60, 226], "bar": [53, 58, 59, 60], "progress": [53, 58, 59, 60, 316, 318], "initarg": [54, 62, 63], "custom_loop": [54, 62, 63], "close_method_nam": [54, 63], "closearg": [54, 63], "closekwarg": [54, 63], "with_lock": 54, "initkwarg": [54, 62, 63], "child": [54, 56, 63, 207, 209, 210, 214], "act": [54, 57, 63, 315], "like": [54, 57, 63, 64, 65, 280, 285, 307, 312, 316, 317, 318], "isn": [54, 63, 122], "much": [54, 63, 318], "try": [54, 56, 63, 308, 317], "instanc": [54, 57, 63, 64, 185, 190, 199, 214, 288, 307, 316], "behav": [54, 57, 60, 63, 307, 308, 316], "re": [54, 56, 63], "live": [54, 57, 63, 245, 308], "parent": [54, 56, 62, 63, 101, 112, 120, 128, 140, 145, 153, 172], "cours": [54, 63], "spare": [54, 63], "core": [54, 57, 63], "your": [54, 57, 62, 63, 65, 273, 307, 308, 313, 315, 316, 318], "machin": [54, 57, 63, 150, 317], "turn": [54, 63, 128, 130, 133, 135, 243, 245, 307, 313, 316, 318], "cpu": [54, 57, 63], "bound": [54, 63, 150, 153, 155, 157, 160, 163, 166, 168, 192, 307, 316], "parallel": [54, 318], "io": [54, 63, 312], "too": [54, 63, 314], "mental": [54, 63], "overhead": [54, 58, 63, 245], "coder": [54, 63, 308], "our": [54, 56, 57, 62, 106, 108, 236, 239, 241, 307, 308, 315, 316, 317, 318], "automat": [54, 308, 313], "close_method": 54, "custodythread": [55, 58, 59], "simpl": [56, 57, 211, 313], "wish": 56, "had": 56, "chang": [56, 57, 103, 104, 106, 108, 117, 122, 125, 150, 172, 174, 177, 190, 192, 194, 245, 312, 313, 316, 317, 318], "trivial": 56, "save": [56, 73, 106, 150, 153, 155, 157, 160, 163, 166, 168, 187, 199, 217, 221, 245, 272, 275, 313], "u": [56, 57, 308, 318], "line": [56, 57, 64, 101, 103, 104, 106, 108, 245, 277, 290, 308, 312, 313, 316], "code": [56, 57, 68, 70, 73, 106, 109, 179, 187, 238, 239, 241, 290, 307, 310, 312, 313, 315, 316, 317], "def": [56, 312, 313], "doe": [56, 57, 70, 73, 191, 212, 299, 307, 316, 317, 318], "someth": [56, 57, 308, 316], "sum": [56, 57], "ones": 56, "2": [56, 57, 103, 106, 128, 130, 180, 227, 236, 249, 250, 257, 258, 294, 307, 312, 313, 314, 316, 318], "uint8": [56, 57, 62], "problem": [56, 57, 317], "th": [56, 57], "redefin": 56, "solut": 56, "res_th": 56, "assert": 56, "handl": [56, 155, 157, 191, 197, 199, 206, 207, 208, 209, 214, 307, 316], "idea": 56, "attributeerror": [56, 57, 312], "wa": [56, 57, 106, 150, 155, 157, 160, 163, 166, 168, 191, 221, 224, 245, 275], "assertionerror": 56, "dure": [56, 68, 70, 73, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 208, 223, 224, 249], "evalu": [56, 57, 221, 270, 292, 293, 294, 308, 316], "rerais": 56, "traceback": [56, 57], "stderr": 56, "don": [56, 103, 104, 150, 318], "affect": [56, 57, 192], "yet": [56, 211, 307], "note": [56, 57, 182, 312, 316], "modifi": [56, 190, 216, 308, 313, 316], "excepthook": 56, "copi": [56, 57, 216, 316], "past": 56, "definit": [56, 64, 65], "work": [56, 57, 114, 308, 317], "shared_memory_nam": 57, "stride": 57, "memori": [57, 62, 63, 245, 308], "objectinsubprocess": [57, 58], "serial": [57, 60, 62, 103, 104, 106, 108, 117, 118, 122, 123, 125, 158, 161, 164, 168, 169, 266], "pretti": 57, "fast": [57, 150], "larg": [57, 308], "regularli": 57, "deal": [57, 239], "sens": 57, "wai": [57, 245, 285, 307, 308, 312, 316], "avoid": [57, 278, 308, 316], "slow": [57, 62], "mayb": [57, 64, 65], "write": [57, 68, 70, 73, 114, 199, 221, 236, 239, 241, 245, 308], "look": [57, 109, 285, 307, 316, 318], "data_buf": 57, "zero": [57, 153, 160, 259], "400": 57, "uint16": 57, "display_buf": 57, "preprocessor": 57, "displai": [57, 77, 112, 114, 217, 245, 313], "num_imag": 57, "show": [57, 245, 313, 317, 318], "payoff": 57, "own": [57, 316], "AND": 57, "realli": 57, "memmap": 57, "axi": [57, 150, 153, 155, 157, 160, 163, 166, 168, 172, 174, 177, 201, 285, 294, 307, 316], "keepdim": 57, "refer": [57, 161, 193, 197, 207, 209, 210, 243, 249, 264, 315], "full": [57, 104, 307, 318], "equival": [57, 317, 318], "argmax": 57, "maximum": [57, 101, 103, 104, 106, 108, 150, 155, 187, 221, 245, 307, 315, 316], "along": [57, 64, 65, 68, 150, 155, 157, 160, 163, 166, 168, 245, 285, 286], "argmin": 57, "minimum": [57, 101, 103, 104, 106, 108, 155, 201, 223, 224, 226, 307, 314, 316], "detail": [57, 122], "argpartit": 57, "kth": 57, "kind": 57, "introselect": 57, "partit": 57, "8": [57, 316], "argsort": 57, "sort": [57, 216], "astyp": 57, "cast": 57, "unsaf": 57, "subok": 57, "typecod": 57, "data": [57, 68, 70, 71, 73, 84, 103, 104, 106, 108, 112, 114, 155, 181, 182, 185, 187, 190, 192, 193, 194, 196, 197, 198, 199, 201, 206, 207, 213, 214, 216, 221, 223, 224, 226, 227, 243, 245, 272, 275, 288, 307, 313, 314, 315], "layout": [57, 192], "fortran": 57, "contigu": 57, "close": [57, 68, 70, 73, 101, 103, 104, 106, 108, 114, 117, 122, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 174, 205, 206, 208, 221, 243, 245, 285, 313], "appear": [57, 313, 316], "equiv": 57, "safe": 57, "same_kind": 57, "backward": 57, "compat": [57, 68, 308], "preserv": 57, "within": [57, 65, 150, 153, 155, 157, 160, 163, 166, 168, 214, 217, 226, 294, 308, 313, 316, 317, 318], "float64": 57, "float32": 57, "convers": [57, 103, 104], "forc": 57, "newli": [57, 245], "alloc": [57, 62], "satisfi": [57, 313], "arr_t": 57, "unless": [57, 308], "descript": [57, 312], "17": [57, 318], "one": [57, 64, 65, 73, 150, 153, 155, 157, 160, 163, 166, 168, 198, 206, 207, 209, 210, 245, 307, 312, 313, 318], "field": [57, 307, 316], "9": [57, 316, 317], "numer": [57, 257, 258, 259, 312, 315], "mode": [57, 68, 70, 73, 101, 103, 104, 106, 108, 114, 161, 163, 166, 181, 190, 191, 199, 201, 243, 245, 313, 314, 316, 318], "length": [57, 211, 212, 285, 286, 294, 312], "long": 57, "enough": 57, "complexwarn": 57, "5": [57, 226, 249, 307, 313, 314, 316, 318], "byteswap": 57, "inplac": 57, "swap": 57, "toggl": 57, "low": [57, 285, 314], "endian": 57, "big": [57, 221], "represent": [57, 68, 70, 73, 216, 217, 238, 239, 241, 299, 313], "place": [57, 216, 307, 316], "imaginari": 57, "part": [57, 216, 308], "individu": [57, 196, 315], "view": [57, 62, 179, 180, 181, 182, 236, 241, 245, 308, 315], "256": 57, "8755": 57, "int16": 57, "hex": 57, "0x1": 57, "0x100": 57, "0x2233": 57, "13090": 57, "0x3322": 57, "b": [57, 122, 123], "ceg": 57, "fac": 57, "s3": 57, "newbyteord": 57, "produc": [57, 298], "choos": [57, 312, 313], "choic": [57, 313], "index": [57, 68, 86, 87, 114, 122, 172, 174, 177, 194, 199, 216, 221, 241, 243, 245, 257, 258, 259, 280, 307, 316], "clip": 57, "One": [57, 73], "compress": [57, 221], "select": [57, 112, 114, 140, 142, 243, 313, 318], "slice": [57, 60, 68, 280, 294], "conj": 57, "conjug": 57, "wise": 57, "veri": 57, "similar": [57, 207, 209, 210, 307, 308, 312, 316], "behavior": [57, 59, 207, 209, 210, 308, 312, 313, 318], "copyto": 57, "prefer": 57, "6": [57, 241, 313, 316], "c_contigu": 57, "cumprod": 57, "cumul": 57, "product": [57, 150, 308, 315, 318], "cumsum": 57, "diagon": 57, "axis1": 57, "axis2": 57, "In": [57, 239, 307, 308, 313, 316, 318], "previou": [57, 108, 194], "restrict": 57, "dump": 57, "pickl": 57, "back": [57, 236, 239, 249, 313, 318], "pathlib": 57, "now": [57, 191, 236, 317], "scalar": 57, "assign": [57, 213], "flatten": [57, 257], "collaps": 57, "major": 57, "style": [57, 312, 318], "column": 57, "ravel": [57, 257], "flat": 57, "getfield": 57, "certain": [57, 316], "need": [57, 65, 103, 104, 106, 108, 185, 187, 190, 191, 199, 201, 206, 207, 209, 210, 211, 212, 214, 216, 221, 243, 245, 285, 307, 312, 313, 316, 317, 318], "fit": [57, 187, 188, 257, 258, 312], "complex128": 57, "16": [57, 221], "take": [57, 214, 217, 219, 226, 243, 286], "bit": [57, 68, 70, 73, 221, 239], "12": [57, 316], "larger": 57, "itself": [57, 216, 312], "skip": 57, "diag": 57, "j": [57, 137], "item": [57, 216, 305, 307, 316], "variabl": [57, 137, 198, 211, 212, 214, 223, 224, 226, 308, 312, 317], "case": [57, 308], "int_typ": 57, "interpret": 57, "singl": [57, 68, 137, 150, 155, 157, 160, 163, 166, 168, 252, 280, 285], "nd": 57, "suitabl": 57, "longdoubl": 57, "clongdoubl": 57, "becaus": [57, 307], "lose": 57, "void": 57, "buffer": [57, 103, 104, 106, 108, 181, 182, 221, 243, 245], "defin": [57, 76, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 208, 210, 213, 239, 294, 307, 313, 316], "speed": [57, 122, 150, 163, 166, 174, 308, 314], "up": [57, 68, 70, 73, 106, 109, 114, 155, 180, 185, 199, 201, 277, 313, 316, 318], "arithmet": 57, "optim": [57, 185, 318], "math": 57, "random": [57, 60, 108], "seed": 57, "123": 57, "randint": 57, "7": [57, 249, 313, 314, 316, 317], "itemset": 57, "There": [57, 239, 318], "least": 57, "last": [57, 216, 285, 317], "Then": [57, 313], "faster": [57, 198], "two": [57, 216, 245, 307, 312, 316], "first": [57, 62, 172, 174, 177, 179, 198, 216, 239, 285, 307, 312, 313, 316, 317, 318], "compar": [57, 187], "syntax": 57, "some": [57, 62, 68, 70, 73, 238, 239, 241, 308, 313, 317, 318], "increas": [57, 308], "particular": [57, 318], "howev": [57, 308, 318], "discourag": 57, "among": 57, "complic": 57, "amax": 57, "amin": 57, "new_ord": 57, "arr": 57, "newbytord": 57, "below": [57, 307, 308, 312, 313, 314, 316, 317], "opposit": 57, "littl": 57, "byteord": 57, "ignor": [57, 236, 308], "new_arr": 57, "reflect": [57, 316], "rearrang": 57, "equal": [57, 216, 226, 312], "greater": [57, 226], "behind": 57, "undefin": 57, "sequenc": [57, 205, 206, 207, 208, 209, 210, 280, 313], "final": [57, 185, 205, 206, 208, 307, 316], "them": [57, 206, 208, 213, 214, 216, 308, 317], "sinc": [57, 318], "22": [57, 201], "algorithm": 57, "etc": [57, 68, 70, 73, 106, 150, 153, 155, 157, 160, 163, 166, 168, 238, 239, 241, 283, 285, 315], "unspecifi": 57, "come": [57, 108], "break": [57, 308, 312], "ti": 57, "paritit": 57, "indirect": 57, "prod": 57, "ptp": 57, "peak": [57, 249, 257, 258, 259], "repeat": [57, 112, 114, 296, 314, 316], "reshap": 57, "unlik": [57, 227], "free": [57, 318], "For": [57, 114, 150, 155, 157, 160, 163, 166, 168, 227, 273, 307, 308, 313, 316, 318], "10": [57, 76, 103, 122, 123, 150, 192, 226, 247, 249, 250, 251, 252, 253, 254, 307, 316], "11": [57, 161, 316, 318], "resiz": 57, "new_shap": 57, "refcheck": 57, "count": [57, 150, 180, 193, 194, 197, 199, 201, 216, 226, 290, 307, 316], "valueerror": [57, 117, 120, 122, 125, 174, 216, 312], "pypi": 57, "reliabl": 57, "systemerror": 57, "behaviour": 57, "bug": [57, 308], "realloc": 57, "area": [57, 226], "consecut": 57, "shrink": 57, "enlarg": 57, "abov": [57, 316], "entri": [57, 205, 261, 307, 313, 316], "referenc": 57, "prevent": 57, "recent": 57, "cannot": 57, "round": 57, "around": [57, 64, 65, 313], "searchsort": 57, "side": [57, 212, 285], "sorter": 57, "maintain": [57, 198, 205, 216], "setfield": 57, "val": [57, 76], "ey": 57, "int32": 57, "0e": 57, "000": 57, "5e": 57, "323": 57, "setflag": 57, "uic": 57, "writeabl": 57, "writebackifcopi": 57, "updateifcopi": 57, "These": [57, 190, 205, 206, 208, 219, 307, 318], "how": [57, 60, 187, 208, 307, 308, 312, 313, 316, 317], "actual": [57, 68, 70, 73, 103, 104, 212, 227, 247, 285, 308], "never": 57, "ultim": 57, "owner": 57, "expos": 57, "interfac": [57, 106, 312], "unpickl": 57, "describ": [57, 312, 313], "properli": [57, 307, 318], "about": [57, 196, 275, 285, 308], "four": [57, 318], "w": [57, 68, 70, 73, 292], "appropri": [57, 308, 317], "compil": 57, "pyarray_resolvewritebackifcopi": 57, "upper": [57, 278, 312], "letter": 57, "well": [57, 315], "f_contigu": 57, "owndata": 57, "stdin": 57, "quicksort": 57, "mergesort": 57, "heapsort": 57, "stabl": [57, 216], "both": [57, 68, 89, 150, 195, 239, 312, 313, 317], "timsort": 57, "under": [57, 307, 313, 315, 316, 318], "cover": [57, 285, 318], "vari": 57, "datatyp": 57, "retain": 57, "15": [57, 259, 294], "lexsort": 57, "partial": 57, "s1": 57, "i8": 57, "squeez": 57, "ax": [57, 150, 153, 155, 157, 160, 163, 166, 168, 307], "std": 57, "ddof": 57, "swapax": 57, "interchang": 57, "tobyt": 57, "raw": 57, "short": 57, "exhibit": 57, "u2": 57, "x00": 57, "x01": 57, "x02": 57, "x03": 57, "tofil": 57, "fid": 57, "sep": 57, "text": [57, 278, 312, 313, 317], "independ": [57, 318], "recov": 57, "fromfil": 57, "open": [57, 68, 70, 73, 145, 147, 174, 245, 308, 313, 317, 318], "closest": 57, "conveni": 57, "quick": [57, 150], "storag": [57, 182], "precis": [57, 318], "lost": 57, "good": [57, 308], "intend": [57, 217], "archiv": 57, "transport": 57, "overcom": 57, "expens": 57, "directli": [57, 64, 65, 103, 104, 193, 313, 318], "bypass": 57, "gzipfil": 57, "fileno": 57, "bytesio": 57, "tolist": 57, "ndim": 57, "deep": 57, "nearest": 57, "builtin": 57, "depth": 57, "possibli": [57, 185], "recreat": 57, "although": 57, "sometim": 57, "1d": 57, "almost": [57, 64], "uint32": 57, "a_list": 57, "a_tolist": 57, "addition": [57, 243], "0d": 57, "typeerror": 57, "tostr": 57, "exactli": 57, "despit": 57, "19": 57, "transpos": 57, "effect": [57, 212, 257, 258, 259], "vector": 57, "simpli": [57, 212, 308], "atleast2d": 57, "achiev": 57, "newaxi": 57, "matrix": [57, 122, 236], "permut": 57, "revers": [57, 216], "becom": 57, "altern": [57, 106, 238, 239, 241, 312], "give": [57, 216, 307], "var": 57, "omit": 57, "former": [57, 243], "float_": 57, "descriptor": 57, "again": 57, "omiss": 57, "some_dtyp": 57, "reinterpret": 57, "ndarray_subclass": 57, "regular": [57, 308, 312], "predict": 57, "superfici": 57, "shown": [57, 313, 317], "versu": 57, "int8": 57, "513": 57, "xv": 57, "underli": 57, "20": [57, 226, 316], "i1": 57, "recarrai": 57, "i2": 57, "ctype": 57, "simplifi": 57, "interact": [57, 316], "easier": [57, 216], "themselv": [57, 313], "possess": 57, "ctypeslib": 57, "public": [57, 312], "guid": [57, 150, 308], "undocu": 57, "privat": [57, 312], "_ctype": 57, "pointer": [57, 68, 70, 73, 313], "correct": [57, 155], "arbitrari": [57, 68, 70, 73, 312, 313], "troubl": 57, "crash": [57, 308], "bewar": 57, "_array_interface_": 57, "data_a": 57, "kept": 57, "c_void_p": 57, "dealloc": 57, "spelt": 57, "basetyp": 57, "correspond": [57, 150, 155, 157, 163, 182, 192, 207, 209, 210, 217, 219, 307, 316, 318], "p": [57, 68, 174, 292, 293, 294], "platform": 57, "c_intp": 57, "c_int": 57, "c_long": 57, "c_longlong": 57, "jump": 57, "next": [57, 179, 187, 194, 195, 243, 312, 313, 318], "obj": [57, 117, 122, 174, 312], "_as_parameter_": 57, "perhap": 57, "c_doubl": 57, "keep": [57, 208, 308], "shape_a": 57, "c_short": 57, "strides_a": 57, "as_paramet": 57, "31962608": 57, "c_uint32": 57, "__main__": 57, "lp_c_uint": 57, "0x7ff2fc1fc200": 57, "c_uint": 57, "c_uint64": 57, "c_ulong": 57, "4294967296": 57, "_intern": 57, "c_long_array_2": 57, "0x7ff2fc1fce60": 57, "0x7ff2fc1ff320": 57, "segment": [57, 245], "o": [57, 267, 273, 274, 278, 317], "borrow": [57, 68, 70, 73, 238, 239, 241], "subsequ": [57, 316], "while": [57, 58, 163, 307], "remain": [57, 150, 193, 197, 198, 208], "alreadi": [57, 207, 308, 317], "circumst": 57, "alter": [57, 150], "previous": 57, "onto": [57, 318], "fnc": 57, "carrai": 57, "ca": 57, "farrai": 57, "fa": 57, "lowercas": 57, "arbitrarili": 57, "truli": [57, 318], "simultan": [57, 73, 150, 308, 318], "dimension": 57, "higher": [57, 187], "dim": [57, 280], "hold": [57, 275], "items": 57, "flatit": 57, "similarli": [57, 239], "built": [57, 216, 309], "arang": 57, "sqrt": 57, "0j": 57, "1j": 57, "70710678": 57, "nbyte": [57, 68, 70, 73], "total": [57, 155, 187, 193, 199, 208, 226, 245, 285, 307], "consum": 57, "480": 57, "usual": 57, "infer": 57, "unchang": 57, "incompat": 57, "modif": [57, 308], "desir": [57, 103, 104, 106, 108, 172, 174, 177, 190, 192, 245, 283], "obtain": 57, "suggest": 57, "int_": 57, "relev": [57, 196, 211, 312], "further": 57, "overflow": 57, "fix": [57, 193, 308], "travers": 57, "explan": 57, "found": [57, 77, 101, 103, 104, 106, 108, 117, 122, 245, 307, 308, 316, 317], "rst": 57, "imagin": 57, "40": 57, "known": [57, 318], "tell": [57, 307, 308], "lib": 57, "stride_trick": 57, "as_strid": 57, "13": 57, "14": [57, 294, 316], "18": 57, "21": 57, "23": 57, "48": 57, "224": 57, "1344": 57, "813": 57, "mytestclass": [58, 59, 60], "testclass": 58, "toi": 58, "subprocess": 58, "test_incorrect_thread_manag": 58, "custodi": [58, 64, 65], "test_lock_with_waitlist": 58, "stai": [58, 249], "objectsinsubprocess": 58, "mock": [58, 97], "_waitinglist": [58, 64], "test_object_in_subprocess_overhead": 58, "test_sending_shared_arrai": 58, "send": [58, 155, 180, 182], "sharedndarrai": [58, 60, 221, 243, 245, 308], "test_ndarraylike_behavior": 60, "broke": 60, "suppos": 60, "test_seri": 60, "deseri": 60, "test_serializing_and_deseri": 60, "shared_memory_s": 62, "spawn": 62, "proxi": [62, 63, 266, 317], "proxyobject": [62, 64, 65], "shared_numpy_arrai": 62, "which_mp_arrai": 62, "shared_mp_arrai": 63, "proxymanag": [63, 64, 65], "thin": [64, 65], "wrapper": [64, 65], "few": [64, 65, 313], "usag": [64, 65], "_custodi": 64, "switch_from": 64, "_wait_in_lin": 64, "immedi": [64, 312], "acquir": [65, 101, 103, 104, 106, 108, 191, 192, 199, 201, 221, 243, 245, 307, 313, 318], "releas": [65, 198], "launch_custody_thread": 65, "feel": 65, "detect": [65, 192, 223, 224, 226, 227], "occour": 65, "file_nam": [68, 70, 73, 236, 239, 241], "datasourc": [68, 71, 73, 221], "bigdataview": [68, 236, 239], "sourc": [68, 70, 71, 73, 155, 201, 221, 314, 318], "hdf5": 68, "n5": 68, "multi": [68, 191, 194, 199, 207, 209, 210, 313, 318], "resolut": [68, 163, 190, 192, 201, 232, 245, 314], "pyramid": [68, 70, 73], "subdivid": 68, "32x32x1": 68, "r": [68, 70, 73, 288, 293], "h5py": 68, "zarr": 68, "n5store": 68, "ds_name": 68, "dataset": 68, "metadata": [68, 70, 73, 191, 236, 241], "bigdataviewermetadata": 68, "set_metadata_from_configuration_experi": [68, 70, 73], "kw": [68, 70, 73, 236, 239, 241], "metdata": [68, 70, 73], "concept": [68, 70, 73, 238, 239, 241], "microscopi": [68, 70, 73, 137, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 238, 239, 241], "github": [68, 70, 73, 238, 239, 241, 315, 316, 317], "dx": [68, 70, 73], "micron": [68, 70, 73, 150, 153, 155, 160, 163, 314], "dy": [68, 70, 73], "dz": [68, 70, 73], "dt": [68, 70, 73], "displac": [68, 70, 73], "dc": [68, 70, 73, 248], "shape_x": [68, 70, 73], "shape_i": [68, 70, 73], "shape_z": [68, 70, 73], "shape_t": [68, 70, 73], "shape_c": [68, 70, 73], "voxel_s": [68, 70, 73, 236, 238, 239, 241], "voxel": [68, 70, 73, 236, 238, 239, 241], "xyczt": [68, 70, 73, 236, 238, 239, 241], "clean": [68, 70, 73, 199, 201, 315], "leftov": [68, 70, 73], "get_slic": 68, "subdiv": 68, "grab": [68, 179], "timepoint": [68, 73, 191, 197, 316], "subdivis": 68, "dictproxi": [68, 70, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 145, 147, 150, 153, 155, 160, 172, 177], "notimplementederror": [68, 70, 73], "deriv": [68, 70, 73], "getter": [68, 70, 73, 312], "account": [68, 70, 73, 128, 130, 299], "xyz": [68, 150], "bdv": 68, "rather": [68, 318], "file_typ": [71, 221, 236, 239, 241], "tif": [71, 73, 221, 280], "tifdatasourc": 71, "is_bigtiff": 73, "tiff": [73, 108, 221, 239, 241, 280], "bigtiff": 73, "tifffil": 73, "save_directori": [73, 221, 272], "generate_image_nam": [73, 221], "current_channel": [73, 181, 221, 243], "current_time_point": [73, 221], "intern": [73, 201, 238, 239, 241], "ch00_000000": [73, 221], "stack": [73, 106, 108, 187, 197, 199, 201, 223, 224, 313, 318], "At": 73, "imsav": 73, "dummi": [75, 211, 212, 213], "n_tri": 76, "retri": 76, "connect": [76, 83, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 114, 117, 118, 120, 122, 123, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 151, 153, 155, 157, 158, 160, 161, 163, 164, 166, 168, 169, 172, 174, 175, 177, 243, 245, 307, 316, 318], "startup": [76, 307, 316], "redial": 76, "baseexcept": 76, "dcam": [76, 318], "incorrect": 77, "device_typ": 77, "camera_id": 78, "is_synthet": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 181, 243, 308], "synthet": [78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 108, 109, 114, 147, 166, 181, 243, 245, 307, 309, 316], "dedic": [80, 81, 82, 84, 85, 89, 91], "multiproces": [80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 145, 172], "device_connect": [83, 85, 86, 87, 88, 89, 90, 91, 101, 103, 104, 106, 108, 117, 120, 122, 125, 128, 130, 133, 135, 140, 142, 145, 147, 150, 153, 155, 157, 160, 163, 166, 168, 174, 177, 243, 308], "acquisit": [84, 101, 103, 104, 106, 108, 112, 114, 128, 130, 155, 185, 190, 191, 193, 194, 195, 197, 198, 199, 201, 221, 243, 245, 313, 314, 315], "filterwheel": 85, "scan": [86, 106, 150, 166, 191, 201, 223, 224, 314, 318], "switch": [87, 122, 245, 249, 307, 316, 318], "analog": [87, 114, 155, 251, 252, 254, 314], "digit": [87, 89, 318], "trigger": [87, 89, 114, 147, 155, 164, 201, 225, 247, 318], "focus": [88, 140, 249, 283, 314, 318], "shutter": [89, 101, 103, 104, 108, 245, 315], "thorlabsshutt": 89, "syntheticshutt": 89, "ni": [89, 307, 316], "card": [89, 155, 245, 315], "thu": [89, 316, 318], "enabl": [89, 112, 114, 125, 150, 153, 155, 157, 160, 163, 166, 168, 174, 199, 309, 312, 314, 318], "dxl_lib": 97, "magicmock": 97, "nameerror": 101, "calculate_light_sheet_exposure_tim": [101, 103, 104, 106, 108], "full_chip_exposure_tim": [101, 103, 104, 106, 108], "shutter_width": [101, 103, 104, 106, 108], "exposur": [101, 103, 104, 106, 108, 112, 114, 128, 130, 140, 142, 155, 181, 201, 243, 245, 247, 307], "light": [101, 103, 104, 106, 108, 245, 316, 318], "sheet": [101, 103, 104, 106, 108, 245, 316, 318], "roll": [101, 103, 108], "exposure_tim": [101, 103, 104, 106, 108, 112, 114, 128, 130, 140, 142, 155, 243, 245, 249, 307, 316], "camera_line_interv": [101, 103, 104, 106, 108, 245], "hamamatsuorca": [101, 104, 106, 108, 307, 316], "interv": [101, 103, 104, 106, 108, 245, 307, 318], "close_camera": [101, 103, 104, 106, 108], "get_line_interv": [101, 103, 104, 106, 108], "line_interv": [101, 106, 108, 316], "get_offset_variance_map": [101, 103, 104, 106, 108, 245], "filenotfounderror": [101, 103, 104, 106, 108, 280], "set_readout_direct": [101, 103, 104, 106, 108], "bottom": [101, 103, 104, 106, 108, 313, 316], "bytrigg": [101, 103, 104, 108], "diverg": [101, 103, 104, 108], "camera_control": [101, 103, 104, 106, 108], "camera_paramet": [101, 103, 104, 106, 108], "is_acquir": [101, 103, 104, 106, 108, 245], "max_image_height": [101, 103, 104, 106, 108], "height": [101, 103, 104, 106, 108, 182, 243, 277], "max_image_width": [101, 103, 104, 106, 108], "min_image_height": [101, 103, 104, 106, 108], "min_image_width": [101, 103, 104, 106, 108], "step_image_height": [101, 103, 104, 106, 108], "step_image_width": [101, 103, 104, 106, 108], "camerabas": [103, 106, 108], "orca": [103, 106], "flash": [103, 106, 314], "fusion": 103, "lightn": 103, "serial_numb": [103, 104, 106, 108, 161, 168, 307, 316], "302158": [103, 307, 316], "302159": 103, "302352": [103, 307, 316], "lightsheet_rolling_shutter_width": [103, 316], "608": [103, 316], "defect_correct_mod": [103, 316], "off": [103, 128, 130, 133, 135, 179, 243, 245, 313], "On": 103, "x_pixels_step": 103, "y_pixels_step": 103, "x_pixels_min": 103, "y_pixels_min": 103, "exposure_time_rang": [103, 316], "1000": [103, 307, 308, 316], "flip_x": 103, "flip_i": 103, "calculate_readout_tim": [103, 104, 106, 108], "assum": [103, 104, 117, 172, 174, 177, 201, 221, 232, 236, 239, 241, 273, 280, 286, 307, 317], "c13440": [103, 104], "link": [103, 104, 273], "commun": [103, 104, 118, 123, 125, 151, 182, 307, 316], "pull": [103, 104, 308, 316], "readout_tim": [103, 104, 106, 108, 142, 181, 243], "max_frame_r": [103, 104, 106, 108], "framer": [103, 104, 106, 108], "think": [103, 104], "get_property_valu": [103, 104, 109], "close_image_seri": [103, 104, 106, 108], "seri": [103, 104, 106, 108], "stop": [103, 104, 106, 108, 114, 128, 130, 140, 142, 150, 153, 155, 157, 160, 163, 166, 168, 180, 182, 205, 208, 216, 243, 245], "line_interval_tim": [103, 104, 106, 108], "get_minimum_waiting_tim": [103, 104, 106, 108], "cyclic_trigger_period": [103, 104, 106], "minimum_trigger_blank": [103, 104, 106], "minimum_trigger_interv": [103, 104, 106], "trigger_blank": [103, 104, 106], "bigger": [103, 104, 106], "trigger_interv": [103, 104, 106], "get_new_fram": [103, 104, 106, 108], "initialize_image_seri": [103, 104, 106, 108], "data_buff": [103, 104, 106, 108, 181, 182, 221, 243, 245], "number_of_fram": [103, 104, 106, 108, 182, 243, 245], "100": [103, 104, 106, 108, 180, 307, 314, 316], "report_set": [103, 104, 106, 108], "consol": [103, 104], "set_roi": [103, 104, 106, 108], "roi_height": [103, 104, 106, 108], "2048": [103, 104, 108, 316], "roi_width": [103, 104, 106, 108], "region": [103, 104, 106, 108, 192, 285], "success": [103, 104, 150, 155, 157, 160, 163, 166, 168, 190, 191, 195, 196, 198, 225, 243, 245, 312], "set_bin": [103, 104, 106, 108], "binning_str": [103, 104, 106, 108], "bin": [103, 104, 106, 108, 245, 316], "1x1": [103, 104, 106, 316], "2x2": [103, 104, 106, 108], "4x4": [103, 104, 106, 108], "8x8": [103, 104, 106, 108], "16x16": [103, 104, 106], "1x2": [103, 104, 106], "2x4": [103, 104, 106], "set_exposure_tim": [103, 104, 106, 108], "unit": [103, 104, 106, 108, 150, 153, 160, 247, 248, 249, 250, 251, 252, 254, 314, 318], "millisecond": [103, 104, 106, 108, 155, 245, 307, 309, 316], "set_line_interv": [103, 104, 106, 108], "set_sensor_mod": [103, 104, 106, 108], "sensor": [103, 104, 106, 108, 208, 245], "chip": 104, "photometr": 106, "kinetix": 106, "warn": [106, 122], "hard": [106, 109, 187], "3200": 106, "successfulli": [106, 151, 182, 243, 275, 318], "down": [106, 249, 277, 313], "programm": 106, "static": [106, 187], "generate_new_fram": 108, "load_imag": [108, 245], "pre": [108, 112, 114, 213, 245, 313], "camera_exposure_tim": 108, "current_frame_idx": 108, "num_of_fram": [108, 245], "pre_frame_idx": 108, "random_imag": 108, "idprop": 109, "property_dict": 109, "property_valu": 109, "set_property_valu": 109, "calculate_all_waveform": [112, 114, 243], "sweep_tim": [112, 114, 128, 130, 140, 142, 155, 243, 247, 248, 249, 250, 251, 252, 254, 316], "organ": [112, 114, 214], "sweep": [112, 114, 128, 130, 140, 142, 155, 181, 243], "waveform_dict": [112, 114, 128, 130, 140, 142, 155], "etl": [112, 114, 283], "plu": [112, 114], "enable_microscop": [112, 114], "camera_delai": [112, 114, 247, 249], "camera_delay_perc": [112, 114, 128, 130, 140, 142, 155], "percentag": [112, 114, 192, 223, 224, 226, 227, 243, 253], "camera_high_tim": [112, 114], "high": [112, 114, 190, 285, 314], "camera_pulse_perc": [112, 114], "daq_paramet": [112, 114], "remote_focus_ramp_fal": [112, 114, 128, 130, 140, 142, 155], "ramp": [112, 114, 128, 130, 140, 142, 249], "fall": [112, 114, 140, 142, 249], "sample_r": [112, 114, 128, 130, 140, 142, 155, 247, 248, 249, 250, 251, 252, 254, 316], "waveform_expand_num": [112, 114], "expand": [112, 114, 296, 316], "waveform_repeat_num": [112, 114], "daqbas": 114, "add_camera": 114, "close_task": [114, 128, 130, 140, 142], "counter": [114, 318], "create_camera_task": 114, "create_galvo_remote_focus_task": 114, "create_master_trigger_task": 114, "master": 114, "prepare_acquisit": [114, 243, 245], "channel_kei": [114, 128, 130, 140, 142], "prepar": [114, 128, 130, 140, 142, 185, 187, 195, 198, 201, 205, 206, 208, 243, 245], "run_acquisit": [114, 245], "set_external_trigg": 114, "external_trigg": 114, "extern": [114, 219, 316, 318], "start_task": [114, 128, 130, 140, 142], "won": 114, "run_task": 114, "stop_acquisit": [114, 245], "stop_task": [114, 128, 130, 140, 142], "update_analog_task": 114, "board_nam": 114, "board": [114, 318], "write_waveforms_to_task": 114, "analog_output": 114, "is_updating_analog_task": 114, "trigger_mod": [114, 316], "wait_to_run_lock": 114, "filterwheelbas": [117, 122, 125], "asi": [117, 118, 150, 151, 201, 307, 316], "asiimag": [117, 150], "fw_1000": 117, "fw": 117, "1000_ascii_command_set": 117, "check_if_filter_in_filter_dictionari": [117, 120, 122, 125], "filter_nam": [117, 120, 122, 125], "filter_exist": [117, 120, 122, 125], "port": [117, 118, 122, 123, 125, 135, 151, 164, 174, 175, 307, 316, 318], "filter_change_delai": [117, 122, 125], "40m": 117, "adjac": 117, "set_filt": [117, 122, 125], "wait_until_don": [117, 122, 125, 150, 155, 157, 160, 163, 166, 168, 172, 174, 177, 243, 245], "active_filter_wheel": 117, "filter_dictionari": [117, 120, 122, 125], "tiger": [117, 118, 150, 151, 243], "filter_wheel_posit": 117, "number_of_filter_wheel": [117, 122, 125], "wait_until_done_delai": [117, 122, 125], "wheel_posit": [117, 120, 122, 125], "comport": [118, 123, 125], "baudrat": [118, 123, 125, 307, 316], "115200": [118, 151, 307, 316], "25": [118, 123, 164], "build": [118, 123, 158, 164, 264, 272, 313], "asifilterwheel": 118, "com1": [118, 123, 125, 151], "baud": [118, 123, 125, 151, 164], "tiger_control": [118, 150, 243], "tigercontrol": 118, "sutter": [122, 123, 164, 309], "lambda": [122, 123, 294], "manual": 122, "lb10": 122, "3_opman": 122, "retriev": [122, 155, 182, 213, 272, 283, 308], "delay_matrix": 122, "page": [122, 137], "38": [122, 316], "rang": [122, 150, 185, 187, 191, 216, 312], "num_byt": [122, 125], "userwarn": [122, 123, 163], "respond": 122, "init_finish": 122, "softwar": [122, 155, 157, 166, 168, 245, 307, 308, 310, 313, 314, 318], "complet": [122, 198, 207, 209, 213, 313], "read_on_init": 122, "movement": [122, 150, 153, 155, 157, 160, 163, 166, 168, 194, 199, 307, 316], "sutterfilterwheel": [123, 307, 316], "9600": [123, 125, 151, 307, 316], "instal": [125, 245, 315, 318], "period": [125, 249], "galvo_id": [128, 130], "galvanomet": [128, 243, 315], "adjust": [128, 130, 140, 142, 190, 191, 199, 243, 245, 307, 318], "basi": [128, 130, 318], "channel_1": [128, 130], "channel_2": [128, 130], "prepare_task": [128, 130, 140, 142], "turn_off": [128, 130, 133, 135], "device_config": [128, 130, 133, 135, 140, 142, 308], "galvo_max_voltag": [128, 130, 155], "voltag": [128, 130, 140, 142, 155, 248, 249, 251, 254], "galvo_min_voltag": [128, 130, 155], "galvo_nam": [128, 130], "galvo_waveform": [128, 130, 308], "sawtooth": [128, 130, 249, 308], "rise": [128, 130, 249], "galvobas": 130, "laser_id": [133, 135], "initialize_las": [133, 135], "set_pow": [133, 135], "laser_intens": [133, 135], "power": [133, 135, 188, 243, 307, 310, 313, 316], "intens": [133, 135, 221, 252, 257, 258, 259], "turn_on": [133, 135], "laserbas": 135, "calculate_entrance_pupil": 137, "entranc": 137, "pupil": 137, "incid": 137, "angl": 137, "fluoresc": 137, "interfer": 137, "contrast": 137, "carolin": 137, "ajo": 137, "franklin": 137, "prasad": 137, "ganesan": 137, "steven": 137, "boxer": 137, "biophi": 137, "volum": [137, 294], "89": 137, "issu": [137, 308, 317], "octob": 137, "2005": 137, "2759": 137, "2769": 137, "entrance_pupil_diamet": 137, "diamet": 137, "millimet": [137, 160], "nidaqmx": 140, "percent_smooth": [140, 142, 253, 316], "smooth": [140, 142, 243, 253, 316], "remote_focus_delai": [140, 142, 155, 249], "remote_focus_max_voltag": [140, 142], "remote_focus_min_voltag": [140, 142], "remotefocusbas": 142, "volt": [142, 155, 248, 249, 250, 251, 252, 254, 318], "close_shutt": [145, 147], "open_shutt": [145, 147], "shutter_st": [145, 147], "state": [145, 147, 150, 205, 206, 208, 245, 296, 307, 313, 316], "shutterbas": 147, "deliv": [147, 318], "device_id": [150, 153, 155, 157, 160, 163, 166, 168], "stagebas": [150, 155, 157, 160, 163, 166, 168], "scientif": 150, "instrument": [150, 155, 160, 161, 307, 314], "serial_command": 150, "command_quick_start": 150, "firmwar": 150, "distanc": [150, 155, 187, 194, 285, 292, 293, 294, 309], "10th": 150, "ever": 150, "ftp": [150, 318], "stilt": 150, "strain": 150, "system": [150, 214, 221, 243, 245, 257, 258, 259, 307, 308, 314, 316, 317, 318], "get_abs_posit": [150, 153, 155, 157, 160, 163, 166, 168], "axis_ab": [150, 153, 155, 157, 160, 163, 166, 168], "request": [150, 153, 155, 157, 160, 163, 166, 168, 182, 308], "absolut": [150, 153, 155, 157, 160, 163, 166, 168, 308], "get_axis_posit": [150, 166], "get_position_dict": [150, 153, 155, 157, 160, 163, 166, 168], "get_spe": [150, 166], "veloc": [150, 163, 166, 201, 307, 316, 318], "move_absolut": [150, 155, 157, 160, 163, 166, 168], "move_dictionari": [150, 153, 155, 157, 160, 163, 166, 168], "x_ab": [150, 153, 155, 157, 160, 163, 166, 168], "micromet": [150, 153, 155, 157, 160, 163, 166, 168, 309], "degre": [150, 153, 155, 157, 160, 163, 166, 168, 201], "spot": [150, 155, 157, 160, 163, 166, 168], "move_axis_absolut": [150, 155, 157, 160, 163, 166, 168], "abs_po": [150, 155, 157, 160, 163, 166, 168], "command": [150, 172, 177, 179, 245, 308, 317], "prefix": [150, 155], "x_min": [150, 155, 163, 307, 316], "report_posit": [150, 155, 157, 160, 163, 166, 168], "scanr": [150, 166], "start_position_mm": [150, 166], "end_position_mm": [150, 166], "enc_divid": [150, 166], "end": [150, 166, 182, 187, 191, 198, 199, 205, 206, 208, 213, 216, 223, 224, 243, 245, 307, 308, 312, 313], "encod": [150, 166, 201, 318], "set_spe": [150, 166], "velocity_dict": [150, 166], "start_scan": [150, 166], "abruptli": [150, 153, 155, 157, 160, 163, 166], "stop_scan": [150, 166], "verify_abs_posit": [150, 153, 155, 157, 160, 163, 166, 168], "is_strict": [150, 153, 155, 157, 160, 163, 166, 168], "y_ab": [150, 153, 155, 157, 160, 163, 166, 168], "abs_posit": [150, 153, 155, 157, 160, 163, 166, 168], "verify_mov": 150, "submit": 150, "aren": 150, "res_dict": 150, "axes_map": [150, 153, 155, 157, 160, 163, 166, 168, 307, 316], "stage_feedback": [150, 153, 155, 157, 160, 163, 166, 168], "feedback": [150, 153, 155, 157, 160, 163, 166, 168], "stage_limit": [150, 153, 155, 157, 160, 163, 166, 168], "com_port": [151, 164], "baud_rat": [151, 164], "asi_stag": 151, "x_po": [153, 160, 307], "y_po": [153, 160, 307], "matter": [153, 160], "piezo": 155, "nation": [155, 314], "calculate_waveform": 155, "logic": [155, 157, 163, 166, 168, 208, 209], "axes_channel": [155, 316], "distance_threshold": 155, "stage_settle_dur": 155, "settl": 155, "trigger_sourc": [155, 316, 318], "volts_per_micron": [155, 316], "mad": [157, 158, 314], "citi": [157, 158, 314], "lab": [157, 158, 308, 314, 317], "mcl": 157, "mcl_control": 157, "serialnum": [158, 169], "stage_connect": [158, 161], "physik": [160, 161], "pi": [160, 161, 250, 254, 307, 316], "xyzf": 160, "position_dict": [160, 166, 168], "wait_on_target": 160, "pi_ax": 160, "pi_devic": [160, 161], "pi_tool": [160, 161], "controller_nam": 161, "reference_mod": 161, "863": 161, "0112345678": 161, "111": 161, "1dg": 161, "frf": [161, 307, 316], "mp": [163, 309], "285": [163, 309], "mp285": [163, 164], "device_ax": 163, "stage_x_po": 163, "stage_y_po": 163, "stage_z_po": 163, "sutterstag": 164, "load_sampl": 166, "mm": [166, 201], "divid": [166, 201, 226, 285], "unload_sampl": 166, "unload": [166, 245], "default_spe": 166, "thorlab": [168, 169, 307, 314, 316], "kim": [168, 169], "kim_ax": 168, "kim_control": [168, 169], "device_control": 172, "build_stage_dict": [172, 174, 177], "stage_posit": [172, 174, 177, 243, 316], "ideal": [172, 174, 177, 313], "solvent": [172, 174, 177], "babb": [172, 174, 177, 316], "63x": [172, 174, 177, 316], "1x": [172, 174, 177, 316], "70775": [172, 174, 177], "2x": [172, 174, 177, 249, 314, 316], "72455": [172, 174, 177], "3x": [172, 174, 177, 316], "72710": [172, 174, 177], "4x": [172, 174, 177, 316], "72795": [172, 174, 177], "5x": [172, 174, 177, 316], "72850": [172, 174, 177], "6x": [172, 174, 177, 316], "72880": [172, 174, 177], "refract": [172, 174, 177, 257, 258, 259], "servo": [172, 174, 175, 177, 318], "read_posit": [172, 174, 177], "cur_posit": [172, 174, 177], "set_zoom": [172, 174, 177], "confirm": [172, 174, 177, 221, 313, 318], "tha": [172, 177], "zoomdict": [172, 174, 177], "zoomvalu": [172, 174, 177], "zoombas": [174, 177], "dynamixel": 174, "4096": 174, "addr_mx_goal_posit": 174, "goal": 174, "addr_mx_moving_spe": 174, "addr_mx_p_gain": 174, "addr_mx_present_posit": 174, "addr_mx_torque_en": 174, "torqu": 174, "addr_mx_torque_limit": 174, "goal_position_offset": 174, "port_num": [174, 175], "sleeptim": 174, "sleep": 174, "torque_dis": 174, "disabl": [174, 316], "torque_en": 174, "dynamixelzoom": [175, 307, 316], "dummyview": 179, "sec": 179, "append": [179, 182, 216, 245, 288], "sent": 179, "oldest": 179, "pop": [179, 216], "move_stag": [179, 243, 245], "configuration_control": 179, "configurationcontrol": 179, "menu_control": 179, "menu": [179, 313], "menucontrol": 179, "off_stage_po": 179, "stage_po": 179, "timecost": 180, "cost": 180, "pipe": [180, 182, 245], "generate_messag": 180, "sendout": 180, "receiv": [180, 182, 199, 209, 210, 223, 224, 245], "in_port": 180, "msg_count": 180, "out_port": 180, "sendout_msg_count": 180, "stop_flag": [180, 182], "devices_dict": [181, 243], "calculate_exposure_sweep_tim": [181, 243], "data_func": [182, 192, 193, 196, 198, 245], "respons": [182, 185, 188, 190, 192, 194, 205, 206, 207, 208, 209, 210, 213, 243, 315], "continu": [182, 191, 193, 194, 199, 317, 318], "applic": [182, 185, 206, 208, 308], "shutdown": [182, 318], "signal_func": [182, 190, 191, 193, 194, 195, 197, 198, 199, 225], "reset": [182, 201, 205, 206, 208], "frame_id": [182, 185, 187, 192, 193, 196, 198, 199, 221, 223, 224, 245], "increment": [182, 223, 224, 307, 314], "util": [182, 185], "end_flag": [182, 205, 208], "feature_list": [182, 214, 217, 218, 219, 245], "active_microscop": [182, 245], "dummymicroscop": 182, "active_microscope_nam": [182, 232, 245], "data_buffer_posit": [182, 245], "data_contain": 182, "data_pip": 182, "data_record": 182, "data_thread": [182, 245], "dummydevic": 182, "img_height": [182, 243, 245], "img_width": [182, 243, 245], "signal_contain": 182, "signal_pip": 182, "signal_record": 182, "signal_thread": [182, 245], "autofocu": [185, 245, 313], "measur": [185, 285], "microscopemodel": [185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "config_t": [185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 221, 223, 313], "node": [185, 190, 191, 194, 198, 199, 205, 206, 207, 208, 209, 210, 214, 313], "pre_func_sign": [185, 187, 201, 223, 224, 313], "in_func_sign": [185, 187, 223, 224, 313], "action": [185, 190, 199, 205, 209, 210], "end_func_sign": [185, 187, 223, 224, 313], "pre_func_data": [185, 187, 223, 224, 313], "in_func_data": [185, 187, 223, 224, 313], "end_func_data": [185, 187, 223, 224, 313], "involv": [185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 206, 208], "autom": [185, 194, 315], "carri": [185, 190], "device_ref": 187, "autofocus_frame_queu": 187, "autofocus_pos_queu": 187, "max_entropi": [187, 245], "f_frame_id": 187, "frame_num": 187, "init_po": 187, "f_po": [187, 307], "focus_po": [187, 245], "target_frame_id": 187, "get_frames_num": 187, "plot_data": 187, "total_frame_num": 187, "fine_step_s": 187, "fine": [187, 308], "fine_pos_offset": 187, "coarse_step_s": 187, "coars": [187, 314], "coarse_step": 187, "signal_id": 187, "target_channel": 187, "routin": [187, 188, 315], "get_autofocus_frame_num": 187, "best": [187, 308], "get_step": 187, "step_siz": [187, 307, 316], "autofocus": 187, "travel": 187, "pos_offset": 187, "figur": [187, 308], "robust_autofocu": 187, "robust": 187, "amplitud": [187, 188, 248, 249, 250, 251, 252, 254, 316], "alpha": [187, 188], "unfortun": 187, "unstabl": 187, "x_offset": [188, 307, 316], "y_offset": [188, 307, 316], "tent": 188, "curv": 188, "resolution_mod": 190, "zoom_valu": 190, "reconfigur": [190, 313], "cleanup": [190, 194, 198, 199, 201, 205, 206, 208, 214, 313], "accordingli": [190, 194, 197], "typic": [190, 194, 195, 196, 205, 206, 208, 209, 213, 217, 219, 249, 308], "adapt": 190, "resum": [190, 194, 245, 312], "scanrang": 191, "n_plane": [191, 316], "offset_start": 191, "offset_end": 191, "offset_step_s": 191, "need_to_move_new_plan": 191, "offset_update_tim": 191, "conpro_cycling_mod": 191, "cycl": [191, 199], "per_stack": [191, 199], "device_rel": [191, 199, 207, 209, 210, 313], "pre_signal_func": [191, 198, 199], "signal_end": [191, 199], "generate_meta_data": [191, 221], "update_channel": [191, 199], "overlap": [192, 232, 285, 286], "target_resolut": [192, 232], "nanoscal": [192, 232, 316], "target_zoom": [192, 232], "grid": [192, 286], "interest": 192, "preprocess": [192, 226], "box": [192, 294, 313, 317, 318], "step_by_fram": 193, "data_fram": 193, "ontain": 193, "flexibl": [193, 197, 318], "dynam": [193, 197, 219, 313], "track": [193, 198, 205, 208, 223, 224, 286], "decrement": 193, "advanc": [194, 307, 308, 313], "tabl": [194, 213, 288], "pre_z": 194, "current_idx": 194, "multiposition_t": 194, "position_count": 194, "stage_distance_threshold": 194, "paus": [194, 197, 245, 307], "proper": [194, 317, 318], "virtual": [195, 243, 245], "primari": [195, 313], "readi": [195, 226, 243, 245], "transit": [195, 206, 208], "prepare_next_channel": [195, 243], "captur": [196, 223, 224], "pause_num": 197, "microscopest": [197, 221, 232, 313], "pause_signal_lock": 198, "pause_data_lock": 198, "first_enter_nod": 198, "variablewithlock": 198, "enter": [198, 317], "pre_data_func": [198, 199], "manner": [198, 307, 316], "slower": 198, "improv": [198, 308], "proce": 198, "help": [198, 307, 312, 316], "held": 198, "get_origin": 199, "saving_flag": 199, "saving_dir": 199, "origin": [199, 317], "number_z_step": 199, "start_z_posit": 199, "start_focu": 199, "z_step_siz": 199, "focus_step_s": 199, "current_position_idx": 199, "being": [199, 261], "current_z_posit": 199, "current_focus_posit": 199, "need_to_move_new_posit": 199, "need_to_move_z_posit": 199, "z_position_moved_tim": 199, "stack_cycling_mod": 199, "image_writ": [199, 245], "imagewrit": [199, 245, 313], "in_data_func": 199, "incom": 199, "end_data_func": 199, "cleanup_data_func": 199, "inject": 201, "rotari": 201, "45": 201, "396": 201, "nm": [201, 257, 258, 259, 314], "quadratur": 201, "88": 201, "motion": [201, 314], "optic": [201, 257, 258, 259, 316], "root": [205, 206, 208, 214, 236, 239, 241, 298, 299], "cleanup_list": [205, 206, 208], "tree": [205, 206, 207, 208, 209, 210, 214, 313], "consist": [205, 208, 307, 308, 312], "treenod": [205, 206, 207, 208, 209], "curr_nod": [205, 208], "is_clos": [205, 208], "serv": [205, 211, 212], "special": [206, 207, 208, 312], "analysi": [206, 313], "mark": [206, 207, 245], "feature_nam": [207, 209, 210], "func_dict": [207, 209, 210], "node_typ": [207, 209, 210, 313], "need_respons": [207, 209, 210, 313], "those": [207, 209, 210], "is_mark": 207, "node_nam": [207, 209, 210], "node_func": [207, 209, 210], "is_initi": [207, 209, 210], "sibl": [207, 209, 210, 214], "statu": 207, "meet": [207, 308], "criteria": 207, "set_properti": [207, 209, 210], "number_of_execut": 208, "remaining_number_of_execut": 208, "wait_respons": [208, 209], "placehold": [211, 212, 227], "unus": [211, 212], "often": [211, 316], "situat": [211, 212], "context": 211, "feature_modul": 213, "func_typ": 213, "essenti": 213, "init": [213, 313], "dummy_func": 213, "dummy_tru": 213, "signalnod": 214, "datanod": 214, "signalcontain": 214, "datacontain": 214, "shared_vari": 214, "create_nod": 214, "build_feature_tre": 214, "assist": 214, "particularli": 216, "shared_list__": 216, "__name__": 216, "__str__": 216, "compon": [216, 243, 318], "meaning": 216, "shallow": 216, "occurr": 216, "9223372036854775807": 216, "indexerror": 216, "IN": 216, "ascend": 216, "descend": 216, "transmit": 217, "parenthes": [217, 313, 317], "squar": [217, 226, 258], "bracket": [217, 316], "network": 217, "func1": [217, 219], "arg1": [217, 219], "arg2": [217, 219], "func2": [217, 219], "func3": [217, 219], "arg3": [217, 219], "func4": [217, 219], "feature_parameter_setting_path": 219, "function_nam": 219, "yml": [219, 275], "inspect": 219, "value1": 219, "value2": 219, "sub_dir": 221, "image_nam": 221, "disk": [221, 273, 274, 275], "ext": [221, 318], "meta": 221, "save_imag": 221, "data_sourc": 221, "mip": 221, "project": [221, 316], "mip_directori": 221, "num_of_channel": 221, "calculate_and_check_disk_spac": 221, "suffici": [221, 223, 224], "wherea": [221, 316], "64": 221, "color": 221, "vestigi": 221, "75": [223, 224], "detect_func": [223, 224], "analyz": [223, 224, 227], "consid": [223, 224, 226, 227, 243, 308], "detect_tissu": [223, 224], "phase": [223, 224, 250, 251, 254, 316], "position_record": [224, 225], "detecttissueinstack": [224, 313], "position_flag": 225, "remove_posit": 225, "slide": 226, "approach": [226, 318], "service_url": 230, "flipx": 232, "flipi": 232, "debug": 232, "outer": 232, "img": 233, "xl": 233, "yl": 233, "xu": 233, "yu": 233, "65535": 233, "xmlmetadata": [236, 241], "xml": [236, 239, 241, 298, 299], "section": [236, 312, 315, 317], "arxiv": 236, "ab": 236, "1412": 236, "0488": 236, "affine_matrix_to_stage_posit": 236, "mat": 236, "affin": 236, "parse_xml": [236, 239], "pars": [236, 239, 283, 298, 299], "stage_positions_to_affine_matrix": 236, "to_xml": [236, 239, 241], "write_xml": [236, 239, 241], "header": [236, 239, 241, 290], "om": [239, 241, 299], "proprietari": 239, "address": [239, 317], "_xml_dict": 239, "ome_tiff_xml_dict": [239, 241], "Will": [239, 309], "xml_tool": 239, "openmicroscopi": 241, "uid": 241, "heirarch": 241, "ome_dict": 241, "is_virtu": 243, "assemble_device_config_list": 243, "device_nam": [243, 308], "device_name_dict": 243, "assembl": 243, "device_config_list": 243, "device_name_list": 243, "end_acquisit": [243, 245], "get_readout_tim": 243, "get_stage_posit": [243, 245], "load_and_start_devic": 243, "is_list": 243, "device_ref_nam": 243, "move_remote_focu": 243, "pos_dict": [243, 245, 261], "update_focu": 243, "central": 243, "move_stage_offset": 243, "former_microscop": 243, "experiment": 243, "stop_stag": [243, 245], "turn_off_las": 243, "turn_on_las": 243, "update_data_buff": [243, 245], "update_stage_limit": 243, "limits_flag": 243, "ask_stage_for_posit": 243, "ask": [243, 245], "available_channel": 243, "central_focu": 243, "current_laser_index": 243, "laser_wavelength": 243, "wavelength": [243, 257, 258, 259, 316], "ret_pos_dict": [243, 245], "stages_list": 243, "event_queu": 245, "architectur": [245, 308, 314, 315], "argpars": [245, 283], "namespac": [245, 283, 299], "change_resolut": 245, "resolution_valu": 245, "create_pip": 245, "pipe_nam": 245, "duplex": 245, "end1": 245, "destroy_virtual_microscop": 245, "destroi": 245, "disconnect": 245, "get_active_microscop": 245, "get_camera_line_interval_and_exposure_tim": 245, "number_of_pixel": 245, "get_data_buff": 245, "512": 245, "get_feature_list": 245, "idx": 245, "feature_list_str": 245, "get_microscope_info": 245, "microscope_info": 245, "offset_variance_map": 245, "launch_virtual_microscop": 245, "load_feature_list_from_fil": 245, "load_feature_list_from_str": 245, "load_feature_record": 245, "folcer": 245, "pause_data_thread": 245, "turn_off_flag": 245, "release_pip": 245, "resume_data_thread": 245, "run_command": 245, "run_data_process": 245, "run_live_acquisit": 245, "stream": 245, "gui": [245, 288, 315], "recalcul": 245, "therebi": 245, "peopl": 245, "simplified_data_process": 245, "show_img_pip": 245, "snap_imag": 245, "due": 245, "update_ilastik_set": 245, "display_segment": 245, "mark_posit": 245, "target_label": 245, "ilastik": [245, 316], "label": 245, "acquisition_count": 245, "ask_to_pause_data_thread": 245, "autofocus_on": 245, "camera_wait_iter": 245, "abort": 245, "current_exposure_tim": 245, "f_posit": 245, "image_count": 245, "writer": 245, "imaging_mod": 245, "is_liv": 245, "is_sav": 245, "physic": [245, 307, 316], "pause_data_ev": 245, "pause_data_ready_lock": 245, "plot_pip": 245, "plot": 245, "pre_exposure_tim": 245, "start_tim": 245, "stop_send_sign": 245, "total_acquisition_count": 245, "total_image_count": 245, "virtual_microscop": 245, "100000": [247, 248, 249, 250, 251, 252, 254, 307, 316], "meant": 247, "visual": 247, "hz": [247, 248, 249, 250, 251, 252, 254], "exposure_start": 247, "exposure_end": 247, "reson": 248, "drive": [248, 251, 254, 315], "typical_galvo": [248, 250], "24": 249, "linearli": 249, "drop": [249, 313], "right": [249, 277, 285, 313, 317, 318], "exchang": 249, "etl_ramp": 249, "tunable_lens_ramp": 249, "etl_delai": 249, "frequenc": [250, 251, 254, 316], "duty_cycl": [250, 254, 316], "50": [250, 254, 316], "5707963267948966": 250, "radian": [250, 251, 254], "sine": [251, 316], "typical_las": [251, 254], "pulse_width": 252, "ttl": 252, "typical_ttl_puls": 252, "convolut": 253, "smoothed_waveform": 253, "141592653589793": 254, "na": [257, 258, 259], "wvl": [257, 258, 259], "radial": [257, 258, 259], "waist": [257, 258, 259], "apertur": [257, 258, 259], "r0": [257, 259], "z0": [257, 259], "w0": [257, 259], "i0": [257, 259], "bg0": 257, "rl": 259, "zl": 259, "33": 259, "488": [259, 314, 316], "bg": 259, "common": [261, 318], "model": [261, 308, 310, 313, 315], "variabletyp": 263, "ref_nam": 264, "funclist": 265, "new_func": 265, "module_nam": 267, "file_path": [267, 274], "statement": [270, 308], "wrap_func": 270, "saving_set": 272, "popup": [272, 313], "walk": 273, "everyth": 273, "reachabl": 273, "symbol": 273, "caution": 273, "danger": 273, "config_data": 274, "file_directori": 275, "content_dict": 275, "image_width": 277, "300": 277, "image_height": 277, "200": [277, 307, 316], "draw": 277, "arrow": 277, "ojbect": 277, "piec": [278, 309], "font": 278, "font_siz": 278, "fp": 280, "lazi": 280, "pil": 280, "containt": 280, "low_res_fp": 280, "2022": 280, "07": 280, "02": 280, "cell_001": 280, "low_r": 280, "imshow": 280, "500": [280, 307, 316], "parser": [282, 283], "argumentpars": [282, 283], "argumentparserobject": 282, "dist": 285, "roi_length": 285, "roi": [285, 286], "watch": 285, "sign": [285, 286, 292, 293], "num_til": 285, "x_start": 286, "x_tile": 286, "x_length": 286, "x_overlap": 286, "y_start": 286, "y_tile": 286, "y_length": 286, "y_overlap": 286, "z_start": 286, "z_tile": 286, "z_length": 286, "z_overlap": 286, "theta_start": 286, "theta_til": 286, "theta_length": 286, "theta_overlap": 286, "f_start": 286, "f_tile": 286, "f_length": 286, "f_overlap": 286, "f_track_with_z": 286, "fov": 286, "rotat": [286, 316], "n_posit": 286, "po": 288, "redraw": 288, "panda": 288, "datafram": 288, "multi_position_t": 288, "multiposit": 288, "begin_start": 290, "half": 292, "subsample_z": 294, "nxnxn": 294, "euclidean": 294, "rescal": 294, "subsampl": [294, 316], "128": 294, "29": 294, "waveform_template_nam": 296, "waveform_template_dict": 296, "microscope_state_dict": 296, "repeat_num": 296, "expand_num": 296, "tag": 298, "elementtre": 299, "etre": 299, "fullnam": [304, 305], "escap": [304, 305], "underlin": [304, 305], "rubric": 305, "endfor": 305, "endif": 305, "endblock": 305, "filter_wheel": [307, 316], "com19": [307, 316], "number_of_wheel": [307, 316], "controllernam": [307, 316], "884": [307, 316], "l": [307, 314, 316], "509": [307, 314, 316], "20dg10": [307, 314, 316], "40dg10": [307, 316], "060": [307, 316], "dg": [307, 316], "406": [307, 316], "4pd": [307, 316], "nostag": [307, 316], "refmod": [307, 316], "119060508": [307, 316], "74000375": [307, 316], "servo_id": [307, 316], "com18": [307, 316], "1000000": [307, 316], "manufactur": [307, 309, 316, 318], "123456789": [307, 316], "com7": [307, 316], "instanti": [307, 316], "eg": [307, 316], "emploi": [307, 316], "syntheticstag": [307, 316], "987654321": [307, 316], "notic": [307, 316], "syntheticzoom": [307, 316], "abbrevi": 307, "y_unload_posit": 307, "10000": [307, 316], "y_load_posit": 307, "90000": 307, "startfocu": 307, "75000": 307, "x_max": [307, 316], "33500": 307, "16000": 307, "y_max": [307, 316], "y_min": [307, 316], "z_max": [307, 316], "50000": 307, "z_min": [307, 316], "25000": 307, "f_max": [307, 316], "f_min": [307, 316], "theta_max": [307, 316], "360": [307, 316], "theta_min": [307, 316], "x_rot_posit": 307, "y_rot_posit": 307, "z_rot_posit": 307, "x_step": [307, 316], "y_step": [307, 316], "z_step": [307, 316], "theta_step": [307, 316], "f_step": [307, 316], "25250": 307, "40000": 307, "z_po": 307, "70000": 307, "theta_po": 307, "z_offset": [307, 316], "f_offset": [307, 316], "theta_offset": [307, 316], "explicil": [307, 316], "explictli": 307, "fashion": 307, "queri": 307, "awar": 307, "pimikromov": 307, "third": [307, 316], "spinbox": [307, 316], "develop": [307, 315, 316, 318], "plan": [307, 316], "go": [307, 316, 317], "forward": [307, 316], "widget": [307, 316], "tab": 307, "interval_tim": [307, 316], "eventu": 307, "frequent": [307, 317], "ch00": 307, "ch01": 307, "ch02": 307, "laser_pow": [307, 316], "inclus": 307, "stack_acquisit": [307, 316], "start_po": [307, 316], "end_po": [307, 316], "stack_paus": [307, 316], "5000": [307, 316], "welcom": 308, "pleas": [308, 317], "fork": 308, "branch": 308, "review": 308, "practic": 308, "outlin": 308, "refactor": 308, "reach": 308, "prior": [308, 318], "happi": 308, "bring": 308, "discuss": 308, "strong": 308, "especi": 308, "disrupt": 308, "clariti": 308, "team": 308, "merg": 308, "aslm": [308, 309, 313, 315, 316, 317, 318], "repositori": [308, 315, 317], "conda": [308, 317], "pip": [308, 317], "dev": [308, 318], "pep8": 308, "camelcas": 308, "lowercase_and_separated_by_underscor": 308, "numpydoc": [308, 312], "sphinx": [308, 312], "leverag": 308, "workflow": [308, 313], "enforc": 308, "rare": 308, "ruff": 308, "complain": 308, "start_stag": 308, "exec": 308, "device_startup_funct": 308, "start_": 308, "noqa": 308, "comment": [308, 312], "easi": [308, 317], "opportun": 308, "alert": 308, "pytest": 308, "appl": 308, "encount": 308, "resolv": 308, "oserror": 308, "ulimit": 308, "hand": 308, "abstract": [309, 315], "layer": [309, 315], "divers": [309, 318], "equip": [309, 314], "accompani": 309, "contribut": [309, 313, 315], "encourag": [310, 313], "engag": [310, 313], "collabor": [310, 313], "guidelin": [310, 315], "restructuredtext": 312, "liter": 312, "example_numpi": 312, "py": 312, "blank": 312, "implicitli": 312, "anytim": 312, "bodi": 312, "indent": 312, "stand": 312, "surround": 312, "unind": 312, "module_level_variable1": 312, "inlin": 312, "mix": [312, 314, 318], "convent": 312, "_numpi": 312, "readthedoc": 312, "en": 312, "latest": 312, "12345": 312, "module_level_variable2": 312, "98765": 312, "span": 312, "colon": 312, "function_with_types_in_docstr": 312, "param1": 312, "param2": 312, "pep": 312, "484": 312, "annot": 312, "_": [312, 318], "function_with_pep484_type_annot": 312, "duplic": 312, "compli": 312, "module_level_funct": 312, "obviou": [312, 315], "paragraph": 312, "example_gener": 312, "yield": 312, "doctest": 312, "illustr": 312, "exampleerror": 312, "msg": 312, "human": 312, "readabl": 312, "exampleclass": 312, "summari": 312, "declar": 312, "decor": [312, 313], "attr1": 312, "attr2": 312, "param3": 312, "attr3": 312, "attr4": 312, "attr5": 312, "readonly_properti": 312, "readwrite_properti": 312, "setter": 312, "notabl": 312, "mention": [312, 316], "example_method": 312, "__special__": 312, "member": 312, "doubl": 312, "underscor": 312, "napoleon_include_special_with_doc": 312, "conf": 312, "__special_without_docstring__": 312, "_privat": 312, "napoleon_include_private_with_doc": 312, "_private_without_docstr": 312, "snap": 313, "pictur": 313, "common_featur": 313, "zstackacquisit": 313, "discret": 313, "cosin": 313, "transform": 313, "volumesearch": 313, "ilastiksegment": 313, "detecttissueinstackandrecord": 313, "removeemptyposit": 313, "constantvelocityacquisit": 313, "changeresolut": 313, "conproacquisit": 313, "findtissuesimple2d": 313, "loopbycount": 313, "movetonextpositioninmultipositiont": 313, "preparenextchannel": 313, "stackpaus": 313, "waittocontinu": 313, "dictat": 313, "cleanup_func_sign": 313, "cleanup_func_data": 313, "acqusit": 313, "failsaf": 313, "latter": 313, "inde": 313, "proceed": 313, "intellig": 313, "explain": 313, "featurelist": 313, "tool": [313, 315, 318], "feature_related_funct": 313, "feature_exampl": 313, "selected_channel": 313, "navig": [313, 317], "4a": 313, "dialog": 313, "analys": 313, "whole": 313, "preview": 313, "ok": 313, "click": [313, 317, 318], "button": [313, 318], "graphic": 313, "omicron": 314, "lighthub": 314, "ultra": 314, "acc": 314, "642": 314, "561": 314, "obi": 314, "unidirect": 314, "bidirect": 314, "repeatablil": 314, "borderlin": 314, "gpu": 314, "nvidia": 314, "titan": 314, "rtx": 314, "cuda": 314, "driver": [314, 318], "456": 314, "71": 314, "grabber": [314, 318], "optotun": 314, "electrotun": 314, "len": [314, 318], "blink": 314, "pxie": [314, 318], "1073": 314, "chassi": 314, "pxi6733": [314, 316], "pxi6259": [314, 316, 318], "32mm": 314, "position": 314, "nano": 314, "ut": 315, "southwestern": 315, "ecosystem": 315, "aim": 315, "recip": 315, "maker": 315, "minim": 315, "priorit": 315, "stabil": 315, "brutal": 315, "maxim": 315, "biolog": 315, "download": [315, 318], "git": 315, "environ": [315, 316], "troubleshoot": 315, "multiscal": 315, "expans": 315, "opm": 315, "v2": 315, "ct": 315, "v1": 315, "spectral": 315, "tirf": 315, "voicecoil": 315, "deform": 315, "mirror": 315, "mechan": [315, 316], "introduct": 315, "edit": 315, "log_fil": 315, "zach": 315, "marin": 315, "anni": 315, "wang": 315, "dax": 315, "collison": 315, "kevin": 315, "dean": [315, 317], "sampath": 315, "rapuri": 315, "renil": 315, "gupta": 315, "samir": 315, "mamtani": 315, "andrew": 315, "jamieson": 315, "york": 315, "nathaniel": 315, "thayer": 315, "confus": 316, "recommend": [316, 317], "anaconda": [316, 317], "prompt": [316, 317, 318], "sh": [316, 317], "thereaft": 316, "conflict": 316, "master_trigger_out_lin": [316, 318], "camera_trigger_out_lin": [316, 318], "laser_port_switch": 316, "laser_switch_st": 316, "pixel_size_in_micron": 316, "sensor_mod": 316, "readout_direct": 316, "readout_spe": 316, "trigger_act": 316, "trigger_polar": 316, "throughout": 316, "000075": 316, "display_acquisition_subsampl": 316, "average_frame_r": 316, "969": 316, "frames_to_averag": 316, "remote_focus_devic": 316, "ao2": [316, 318], "ramp_rising_perc": 316, "85": 316, "ramp_falling_perc": 316, "ao0": [316, 318], "99": 316, "57079": 316, "wheel_numb": 316, "filter_wheel_delai": 316, "030": 316, "available_filt": 316, "rfp": 316, "595": 316, "31": 316, "far": [316, 317], "red": 316, "blp01": 316, "647r": 316, "blocked1": 316, "blocked2": 316, "blocked3": 316, "blocked4": 316, "blocked5": 316, "blocked6": 316, "earlier": 316, "joystick_ax": 316, "coordin": 316, "agre": [316, 318], "vertic": 316, "vice": 316, "versa": 316, "627": 316, "1711": 316, "2301": 316, "2710": 316, "3079": 316, "3383": 316, "609": 316, "255": 316, "044": 316, "port0": [316, 318], "line0": 316, "onoff": 316, "line2": 316, "luxx": 316, "87": 316, "remote_focus_const": 316, "336": 316, "percent_delai": 316, "562nm": 316, "galvo_const": 316, "mesoscal": 316, "other_const": 316, "duty_wait_dur": 316, "confoc": 316, "url": 316, "127": 316, "repo": 317, "desktop": 317, "friendli": 317, "head": 317, "miniconda": 317, "websit": 317, "handi": 317, "cheatsheet": 317, "accustom": 317, "pin": [317, 318], "taskbar": 317, "mycomput": 317, "firewal": 317, "utsw": 317, "campu": 317, "circumv": 317, "activatin": 317, "upgrad": 317, "clone": 317, "cd": 317, "mkdir": 317, "myfoldernam": 317, "thedeanlab": 317, "completet": 317, "upon": [317, 318], "shortcut": 317, "windir": 317, "system32": 317, "cmd": 317, "ex": 317, "script": 317, "bat": 317, "http_proxi": 317, "swmed": 317, "edu": 317, "3128": 317, "https_proxi": 317, "typo": 317, "perspect": 317, "onlin": 317, "usersuserprofil": 317, "condarc": 317, "usersuserprofilepippip": 317, "ini": 317, "password": 317, "8080": 317, "sever": 318, "6733": 318, "daqmx": 318, "recogn": 318, "visibl": 318, "pinout": 318, "scb": 318, "68a": 318, "breakout": 318, "mislead": 318, "aspect": 318, "wire": 318, "receipt": 318, "determinist": 318, "jitter": 318, "anticip": 318, "dev1": 318, "dev2": 318, "commonli": 318, "line1": 318, "pfi0": 318, "p0": 318, "pfio": 318, "gate": 318, "attach": 318, "outsid": 318, "bank": 318, "ao6": 318, "ao8": 318, "ao9": 318, "ao10": 318, "compet": 318, "ao": 318, "distribut": 318, "across": 318, "ao14": 318, "ao19": 318, "pxi6723": 318, "With": 318, "ctr0out": 318, "lead": 318, "ground": 318, "36": 318, "usb": 318, "came": 318, "hcimagel": 318, "intal": 318, "silicon": 318, "firebird": 318, "framegrabb": 318, "apporpri": 318, "x16": 318, "slot": 318, "motherboard": 318, "excap": 318, "ctr0": 318, "pvcam": 318, "sdk": 318, "term": 318, "unknown": 318, "broadcom": 318, "pci": 318, "kit": 318, "bridg": 318, "abl": 318, "pvcamtest": 318, "voic": 318, "coil": 318, "linear": 318, "actuat": 318, "plai": 318, "crucial": 318, "role": 318, "aberr": 318, "electromagnet": 318, "axial": 318, "focal": 318, "shift": 318, "sca814": 318, "lfa": 318, "2010": 318, "empow": 318, "cater": 318, "modal": 318, "suit": 318, "seamless": 318, "versatil": 318, "tailor": 318, "research": 318, "sync": 318, "less": 318, "perz": 318, "whatev": 318, "damag": 318}, "objects": {"aslm": [[0, 0, 0, "-", "config"], [9, 0, 0, "-", "controller"], [16, 0, 0, "-", "log_files"], [25, 0, 0, "-", "model"], [255, 0, 0, "-", "tools"], [300, 0, 0, "-", "view"]], "aslm.config": [[1, 0, 0, "-", "config"]], "aslm.config.config": [[2, 1, 1, "", "build_nested_dict"], [3, 1, 1, "", "get_aslm_path"], [4, 1, 1, "", "get_configuration_paths"], [5, 1, 1, "", "load_configs"], [6, 1, 1, "", "update_config_dict"], [7, 1, 1, "", "verify_experiment_config"], [8, 1, 1, "", "verify_waveform_constants"]], "aslm.controller": [[10, 0, 0, "-", "configuration_controller"], [12, 0, 0, "-", "thread_pool"]], "aslm.controller.configuration_controller": [[11, 2, 1, "", "ConfigurationController"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, 3, 1, "", "__init__"], [11, 4, 1, "", "camera_config_dict"], [11, 4, 1, "", "camera_flip_flags"], [11, 4, 1, "", "camera_pixels"], [11, 3, 1, "", "change_microscope"], [11, 4, 1, "", "channels_info"], [11, 5, 1, "", "configuration"], [11, 4, 1, "", "daq_sample_rate"], [11, 4, 1, "", "filter_wheel_setting_dict"], [11, 5, 1, "", "galvo_num"], [11, 4, 1, "", "galvo_parameter_dict"], [11, 3, 1, "", "get_microscope_configuration_dict"], [11, 3, 1, "", "get_stage_position_limits"], [11, 4, 1, "", "lasers_info"], [11, 5, 1, "", "microscope_config"], [11, 5, 1, "", "microscope_name"], [11, 4, 1, "", "number_of_channels"], [11, 4, 1, "", "remote_focus_dict"], [11, 4, 1, "", "stage_default_position"], [11, 4, 1, "", "stage_flip_flags"], [11, 4, 1, "", "stage_setting_dict"], [11, 4, 1, "", "stage_step"]], "aslm.controller.thread_pool": [[13, 2, 1, "", "SelfLockThread"], [14, 2, 1, "", "SynchronizedThreadPool"], [15, 2, 1, "", "ThreadWaitlist"]], "aslm.controller.thread_pool.SelfLockThread": [[13, 3, 1, "", "__init__"], [13, 4, 1, "", "daemon"], [13, 3, 1, "", "getName"], [13, 4, 1, "", "ident"], [13, 3, 1, "", "isDaemon"], [13, 3, 1, "", "isLocked"], [13, 3, 1, "", "is_alive"], [13, 3, 1, "", "join"], [13, 4, 1, "", "name"], [13, 4, 1, "", "native_id"], [13, 3, 1, "", "run"], [13, 5, 1, "", "selfLock"], [13, 3, 1, "", "setDaemon"], [13, 3, 1, "", "setName"], [13, 3, 1, "", "start"], [13, 3, 1, "", "unlock"], [13, 3, 1, "", "wait"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, 3, 1, "", "__init__"], [14, 3, 1, "", "clear"], [14, 3, 1, "", "createThread"], [14, 3, 1, "", "getRunningThread"], [14, 3, 1, "", "globaltrace"], [14, 3, 1, "", "killThreadInList"], [14, 3, 1, "", "localtrace"], [14, 3, 1, "", "moveToDelete"], [14, 3, 1, "", "registerResource"], [14, 3, 1, "", "removeThread"], [14, 5, 1, "", "resources"], [14, 3, 1, "", "threadTaskWrapping"], [14, 5, 1, "", "toDeleteList"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, 3, 1, "", "__init__"], [15, 5, 1, "", "waitlist"], [15, 5, 1, "", "waitlistLock"]], "aslm.log_files": [[17, 0, 0, "-", "filters"], [20, 0, 0, "-", "log_functions"]], "aslm.log_files.filters": [[18, 2, 1, "", "NonPerfFilter"], [19, 2, 1, "", "PerformanceFilter"]], "aslm.log_files.filters.NonPerfFilter": [[18, 3, 1, "", "__init__"], [18, 3, 1, "", "filter"]], "aslm.log_files.filters.PerformanceFilter": [[19, 3, 1, "", "__init__"], [19, 3, 1, "", "filter"]], "aslm.log_files.log_functions": [[21, 1, 1, "", "find_filename"], [22, 1, 1, "", "log_setup"], [23, 1, 1, "", "main_process_listener"], [24, 1, 1, "", "update_nested_dict"]], "aslm.model": [[26, 0, 0, "-", "analysis"], [49, 0, 0, "-", "concurrency"], [66, 0, 0, "-", "data_sources"], [74, 0, 0, "-", "device_startup_functions"], [92, 0, 0, "-", "devices"], [178, 0, 0, "-", "dummy"], [183, 0, 0, "-", "features"], [234, 0, 0, "-", "metadata_sources"], [242, 0, 0, "-", "microscope"], [244, 0, 0, "-", "model"], [246, 0, 0, "-", "waveforms"]], "aslm.model.analysis": [[27, 0, 0, "-", "boundary_detect"], [32, 0, 0, "-", "camera"], [37, 0, 0, "-", "detection"], [47, 0, 0, "-", "image_contrast"]], "aslm.model.analysis.boundary_detect": [[28, 1, 1, "", "binary_detect"], [29, 1, 1, "", "find_tissue_boundary_2d"], [30, 1, 1, "", "has_tissue"], [31, 1, 1, "", "map_boundary"]], "aslm.model.analysis.camera": [[33, 1, 1, "", "compute_flatfield_map"], [34, 1, 1, "", "compute_noise_sigma"], [35, 1, 1, "", "compute_scmos_offset_and_variance_map"], [36, 1, 1, "", "compute_signal_to_noise"]], "aslm.model.analysis.detection": [[38, 1, 1, "", "add_median_border"], [39, 1, 1, "", "combine_images"], [40, 1, 1, "", "log_detection"], [41, 1, 1, "", "make_inside_image"], [42, 1, 1, "", "make_normalized_image"], [43, 1, 1, "", "make_sphere_3D"], [44, 1, 1, "", "multiscale_surface_filter_3D"], [45, 1, 1, "", "surface_filter_gauss_3D"], [46, 1, 1, "", "three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[48, 1, 1, "", "fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[50, 0, 0, "-", "concurrency_tools"], [61, 0, 0, "-", "proxy_objects"]], "aslm.model.concurrency.concurrency_tools": [[51, 2, 1, "", "CustodyThread"], [52, 5, 1, "", "FancyThread"], [53, 2, 1, "", "MyTestClass"], [54, 2, 1, "", "ObjectInSubprocess"], [55, 5, 1, "", "PoliteThread"], [56, 2, 1, "", "ResultThread"], [57, 2, 1, "", "SharedNDArray"], [58, 2, 1, "", "TestObjectInSubprocess"], [59, 2, 1, "", "TestResultThreadAndCustodyThread"], [60, 2, 1, "", "TestSharedNDArray"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[51, 3, 1, "", "__init__"], [51, 4, 1, "", "daemon"], [51, 3, 1, "", "getName"], [51, 3, 1, "", "get_result"], [51, 4, 1, "", "ident"], [51, 3, 1, "", "isDaemon"], [51, 3, 1, "", "is_alive"], [51, 3, 1, "", "join"], [51, 4, 1, "", "name"], [51, 4, 1, "", "native_id"], [51, 3, 1, "", "run"], [51, 3, 1, "", "setDaemon"], [51, 3, 1, "", "setName"], [51, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[53, 3, 1, "", "__init__"], [53, 3, 1, "", "run"], [53, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[54, 3, 1, "", "__init__"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[56, 3, 1, "", "__init__"], [56, 4, 1, "", "daemon"], [56, 3, 1, "", "getName"], [56, 3, 1, "", "get_result"], [56, 4, 1, "", "ident"], [56, 3, 1, "", "isDaemon"], [56, 3, 1, "", "is_alive"], [56, 3, 1, "", "join"], [56, 4, 1, "", "name"], [56, 4, 1, "", "native_id"], [56, 3, 1, "", "run"], [56, 3, 1, "", "setDaemon"], [56, 3, 1, "", "setName"], [56, 3, 1, "", "start"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[57, 5, 1, "", "ALIGNED"], [57, 5, 1, "", "BEHAVED"], [57, 5, 1, "", "CARRAY"], [57, 5, 1, "", "C_CONTIGUOUS"], [57, 5, 1, "", "FARRAY"], [57, 5, 1, "", "FNC"], [57, 5, 1, "", "FORC"], [57, 5, 1, "", "F_CONTIGUOUS"], [57, 5, 1, "", "OWNDATA"], [57, 5, 1, "", "T"], [57, 5, 1, "", "UPDATEIFCOPY"], [57, 5, 1, "", "WRITEABLE"], [57, 5, 1, "", "WRITEBACKIFCOPY"], [57, 3, 1, "", "__init__"], [57, 3, 1, "", "all"], [57, 3, 1, "", "any"], [57, 3, 1, "", "argmax"], [57, 3, 1, "", "argmin"], [57, 3, 1, "", "argpartition"], [57, 3, 1, "", "argsort"], [57, 3, 1, "", "astype"], [57, 5, 1, "", "base"], [57, 3, 1, "", "byteswap"], [57, 3, 1, "", "choose"], [57, 3, 1, "", "clip"], [57, 3, 1, "", "compress"], [57, 3, 1, "", "conj"], [57, 3, 1, "", "conjugate"], [57, 3, 1, "", "copy"], [57, 5, 1, "", "ctypes"], [57, 3, 1, "", "cumprod"], [57, 3, 1, "", "cumsum"], [57, 5, 1, "", "data"], [57, 3, 1, "", "diagonal"], [57, 5, 1, "", "dtype"], [57, 3, 1, "", "dump"], [57, 3, 1, "", "dumps"], [57, 3, 1, "", "fill"], [57, 5, 1, "", "flags"], [57, 5, 1, "", "flat"], [57, 3, 1, "", "flatten"], [57, 3, 1, "", "getfield"], [57, 5, 1, "", "imag"], [57, 3, 1, "", "item"], [57, 3, 1, "", "itemset"], [57, 5, 1, "", "itemsize"], [57, 3, 1, "", "max"], [57, 3, 1, "", "mean"], [57, 3, 1, "", "min"], [57, 5, 1, "", "nbytes"], [57, 5, 1, "", "ndim"], [57, 3, 1, "", "newbyteorder"], [57, 3, 1, "", "nonzero"], [57, 3, 1, "", "partition"], [57, 3, 1, "", "prod"], [57, 3, 1, "", "ptp"], [57, 3, 1, "", "put"], [57, 3, 1, "", "ravel"], [57, 5, 1, "", "real"], [57, 3, 1, "", "repeat"], [57, 3, 1, "", "reshape"], [57, 3, 1, "", "resize"], [57, 3, 1, "", "round"], [57, 3, 1, "", "searchsorted"], [57, 3, 1, "", "setfield"], [57, 3, 1, "", "setflags"], [57, 5, 1, "", "shape"], [57, 5, 1, "", "size"], [57, 3, 1, "", "sort"], [57, 3, 1, "", "squeeze"], [57, 3, 1, "", "std"], [57, 5, 1, "", "strides"], [57, 3, 1, "", "sum"], [57, 3, 1, "", "swapaxes"], [57, 3, 1, "", "take"], [57, 3, 1, "", "tobytes"], [57, 3, 1, "", "tofile"], [57, 3, 1, "", "tolist"], [57, 3, 1, "", "tostring"], [57, 3, 1, "", "trace"], [57, 3, 1, "", "transpose"], [57, 3, 1, "", "var"], [57, 3, 1, "", "view"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[58, 2, 1, "", "TestClass"], [58, 3, 1, "", "__init__"], [58, 3, 1, "", "run"], [58, 3, 1, "", "test_incorrect_thread_management"], [58, 3, 1, "", "test_lock_with_waitlist"], [58, 3, 1, "", "test_object_in_subprocess_overhead"], [58, 3, 1, "", "test_sending_shared_arrays"], [58, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[59, 3, 1, "", "__init__"], [59, 3, 1, "", "run"], [59, 3, 1, "", "time_it"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[60, 3, 1, "", "__init__"], [60, 3, 1, "", "run"], [60, 3, 1, "", "test_ndarraylike_behavior"], [60, 3, 1, "", "test_serialization"], [60, 3, 1, "", "test_serializing_and_deserializing"], [60, 3, 1, "", "time_it"]], "aslm.model.concurrency.proxy_objects": [[62, 2, 1, "", "ProxyManager"], [63, 2, 1, "", "ProxyObject"], [64, 1, 1, "", "launch_custody_thread"], [65, 1, 1, "", "launch_thread"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[62, 3, 1, "", "__init__"], [62, 3, 1, "", "proxy_object"], [62, 3, 1, "", "shared_numpy_array"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[63, 3, 1, "", "__init__"]], "aslm.model.data_sources": [[67, 0, 0, "-", "bdv_data_source"], [69, 0, 0, "-", "data_source"], [71, 1, 1, "", "get_data_source"], [72, 0, 0, "-", "tiff_data_source"]], "aslm.model.data_sources.bdv_data_source": [[68, 2, 1, "", "BigDataViewerDataSource"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[68, 3, 1, "", "__init__"], [68, 5, 1, "", "bits"], [68, 3, 1, "id6", "close"], [68, 4, 1, "", "data"], [68, 5, 1, "", "dc"], [68, 5, 1, "", "ds_name"], [68, 5, 1, "", "dt"], [68, 5, 1, "", "dx"], [68, 5, 1, "", "dy"], [68, 5, 1, "", "dz"], [68, 5, 1, "", "file_name"], [68, 3, 1, "", "get_slice"], [68, 5, 1, "", "image"], [68, 5, 1, "", "logger"], [68, 5, 1, "id0", "metadata"], [68, 4, 1, "id10", "mode"], [68, 4, 1, "id11", "nbytes"], [68, 5, 1, "", "positions"], [68, 3, 1, "id7", "read"], [68, 4, 1, "", "resolutions"], [68, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [68, 5, 1, "", "setup"], [68, 4, 1, "id12", "shape"], [68, 5, 1, "", "shape_c"], [68, 5, 1, "", "shape_t"], [68, 5, 1, "", "shape_x"], [68, 5, 1, "", "shape_y"], [68, 5, 1, "", "shape_z"], [68, 4, 1, "", "shapes"], [68, 4, 1, "", "subdivisions"], [68, 4, 1, "id13", "voxel_size"], [68, 3, 1, "id9", "write"]], "aslm.model.data_sources.data_source": [[70, 2, 1, "", "DataSource"]], "aslm.model.data_sources.data_source.DataSource": [[70, 3, 1, "", "__init__"], [70, 5, 1, "", "bits"], [70, 3, 1, "id1", "close"], [70, 4, 1, "", "data"], [70, 5, 1, "", "dc"], [70, 5, 1, "", "dt"], [70, 5, 1, "", "dx"], [70, 5, 1, "", "dy"], [70, 5, 1, "", "dz"], [70, 5, 1, "", "file_name"], [70, 5, 1, "", "logger"], [70, 5, 1, "", "metadata"], [70, 4, 1, "id5", "mode"], [70, 4, 1, "id6", "nbytes"], [70, 5, 1, "", "positions"], [70, 3, 1, "id2", "read"], [70, 3, 1, "id3", "set_metadata_from_configuration_experiment"], [70, 4, 1, "id7", "shape"], [70, 5, 1, "", "shape_c"], [70, 5, 1, "", "shape_t"], [70, 5, 1, "", "shape_x"], [70, 5, 1, "", "shape_y"], [70, 5, 1, "", "shape_z"], [70, 4, 1, "id8", "voxel_size"], [70, 3, 1, "id4", "write"]], "aslm.model.data_sources.tiff_data_source": [[73, 2, 1, "", "TiffDataSource"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[73, 3, 1, "", "__init__"], [73, 5, 1, "", "bits"], [73, 3, 1, "id5", "close"], [73, 4, 1, "", "data"], [73, 5, 1, "", "dc"], [73, 5, 1, "", "dt"], [73, 5, 1, "", "dx"], [73, 5, 1, "", "dy"], [73, 5, 1, "", "dz"], [73, 5, 1, "", "file_name"], [73, 3, 1, "id6", "generate_image_name"], [73, 5, 1, "", "image"], [73, 5, 1, "", "logger"], [73, 5, 1, "id0", "metadata"], [73, 4, 1, "id10", "mode"], [73, 4, 1, "id11", "nbytes"], [73, 5, 1, "", "positions"], [73, 3, 1, "id7", "read"], [73, 5, 1, "", "save_directory"], [73, 3, 1, "id8", "set_metadata_from_configuration_experiment"], [73, 4, 1, "id12", "shape"], [73, 5, 1, "", "shape_c"], [73, 5, 1, "", "shape_t"], [73, 5, 1, "", "shape_x"], [73, 5, 1, "", "shape_y"], [73, 5, 1, "", "shape_z"], [73, 4, 1, "id13", "voxel_size"], [73, 3, 1, "id9", "write"]], "aslm.model.device_startup_functions": [[75, 2, 1, "", "DummyDeviceConnection"], [76, 1, 1, "", "auto_redial"], [77, 1, 1, "", "device_not_found"], [78, 1, 1, "", "load_camera_connection"], [79, 1, 1, "", "load_devices"], [80, 1, 1, "", "load_filter_wheel_connection"], [81, 1, 1, "", "load_stages"], [82, 1, 1, "", "load_zoom_connection"], [83, 1, 1, "", "start_camera"], [84, 1, 1, "", "start_daq"], [85, 1, 1, "", "start_filter_wheel"], [86, 1, 1, "", "start_galvo"], [87, 1, 1, "", "start_lasers"], [88, 1, 1, "", "start_remote_focus_device"], [89, 1, 1, "", "start_shutter"], [90, 1, 1, "", "start_stage"], [91, 1, 1, "", "start_zoom"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[75, 3, 1, "", "__init__"]], "aslm.model.devices": [[93, 0, 0, "-", "APIs"], [99, 0, 0, "-", "camera"], [110, 0, 0, "-", "daq"], [115, 0, 0, "-", "filter_wheel"], [126, 0, 0, "-", "galvo"], [131, 0, 0, "-", "lasers"], [136, 0, 0, "-", "objectives"], [138, 0, 0, "-", "remote_focus"], [143, 0, 0, "-", "shutter"], [148, 0, 0, "-", "stages"], [170, 0, 0, "-", "zoom"]], "aslm.model.devices.APIs": [[94, 0, 0, "-", "coherent"], [95, 0, 0, "-", "dynamixel"], [98, 0, 0, "-", "omicron"]], "aslm.model.devices.APIs.dynamixel": [[96, 0, 0, "-", "dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[97, 1, 1, "", "create_mock_dxl_device"]], "aslm.model.devices.camera": [[100, 0, 0, "-", "camera_base"], [102, 0, 0, "-", "camera_hamamatsu"], [105, 0, 0, "-", "camera_photometrics"], [107, 0, 0, "-", "camera_synthetic"]], "aslm.model.devices.camera.camera_base": [[101, 2, 1, "", "CameraBase"]], "aslm.model.devices.camera.camera_base.CameraBase": [[101, 3, 1, "", "__init__"], [101, 3, 1, "", "calculate_light_sheet_exposure_time"], [101, 5, 1, "", "camera_controller"], [101, 5, 1, "", "camera_parameters"], [101, 3, 1, "", "close_camera"], [101, 5, 1, "", "configuration"], [101, 3, 1, "", "get_line_interval"], [101, 3, 1, "", "get_offset_variance_maps"], [101, 5, 1, "", "is_acquiring"], [101, 5, 1, "", "max_image_height"], [101, 5, 1, "", "max_image_width"], [101, 5, 1, "", "min_image_height"], [101, 5, 1, "", "min_image_width"], [101, 4, 1, "", "offset"], [101, 3, 1, "", "set_readout_direction"], [101, 5, 1, "", "step_image_height"], [101, 5, 1, "", "step_image_width"], [101, 4, 1, "", "variance"], [101, 5, 1, "", "x_pixels"], [101, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[103, 2, 1, "", "HamamatsuOrca"], [104, 2, 1, "", "HamamatsuOrcaLightning"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[103, 3, 1, "", "__init__"], [103, 3, 1, "", "calculate_light_sheet_exposure_time"], [103, 3, 1, "", "calculate_readout_time"], [103, 5, 1, "", "camera_controller"], [103, 5, 1, "", "camera_parameters"], [103, 3, 1, "", "close_camera"], [103, 3, 1, "", "close_image_series"], [103, 5, 1, "", "configuration"], [103, 3, 1, "", "get_line_interval"], [103, 3, 1, "", "get_minimum_waiting_time"], [103, 3, 1, "", "get_new_frame"], [103, 3, 1, "", "get_offset_variance_maps"], [103, 3, 1, "", "initialize_image_series"], [103, 5, 1, "", "is_acquiring"], [103, 4, 1, "", "max_image_height"], [103, 4, 1, "", "max_image_width"], [103, 4, 1, "", "min_image_height"], [103, 4, 1, "", "min_image_width"], [103, 4, 1, "", "offset"], [103, 3, 1, "", "report_settings"], [103, 4, 1, "", "serial_number"], [103, 3, 1, "", "set_ROI"], [103, 3, 1, "", "set_binning"], [103, 3, 1, "", "set_exposure_time"], [103, 3, 1, "", "set_line_interval"], [103, 3, 1, "", "set_readout_direction"], [103, 3, 1, "", "set_sensor_mode"], [103, 4, 1, "", "step_image_height"], [103, 4, 1, "", "step_image_width"], [103, 4, 1, "", "variance"], [103, 5, 1, "", "x_pixels"], [103, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[104, 3, 1, "", "__init__"], [104, 3, 1, "", "calculate_light_sheet_exposure_time"], [104, 3, 1, "", "calculate_readout_time"], [104, 5, 1, "", "camera_controller"], [104, 5, 1, "", "camera_parameters"], [104, 3, 1, "", "close_camera"], [104, 3, 1, "", "close_image_series"], [104, 5, 1, "", "configuration"], [104, 3, 1, "", "get_line_interval"], [104, 3, 1, "", "get_minimum_waiting_time"], [104, 3, 1, "", "get_new_frame"], [104, 3, 1, "", "get_offset_variance_maps"], [104, 3, 1, "", "initialize_image_series"], [104, 5, 1, "", "is_acquiring"], [104, 4, 1, "", "max_image_height"], [104, 4, 1, "", "max_image_width"], [104, 4, 1, "", "min_image_height"], [104, 4, 1, "", "min_image_width"], [104, 4, 1, "", "offset"], [104, 3, 1, "", "report_settings"], [104, 4, 1, "", "serial_number"], [104, 3, 1, "", "set_ROI"], [104, 3, 1, "", "set_binning"], [104, 3, 1, "", "set_exposure_time"], [104, 3, 1, "", "set_line_interval"], [104, 3, 1, "", "set_readout_direction"], [104, 3, 1, "", "set_sensor_mode"], [104, 4, 1, "", "step_image_height"], [104, 4, 1, "", "step_image_width"], [104, 4, 1, "", "variance"], [104, 5, 1, "", "x_pixels"], [104, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[106, 2, 1, "", "PhotometricsKinetix"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[106, 3, 1, "", "__init__"], [106, 3, 1, "", "calculate_light_sheet_exposure_time"], [106, 3, 1, "", "calculate_readout_time"], [106, 5, 1, "", "camera_controller"], [106, 5, 1, "", "camera_parameters"], [106, 3, 1, "", "close_camera"], [106, 3, 1, "", "close_image_series"], [106, 5, 1, "", "configuration"], [106, 3, 1, "", "get_line_interval"], [106, 3, 1, "", "get_minimum_waiting_time"], [106, 3, 1, "", "get_new_frame"], [106, 3, 1, "", "get_offset_variance_maps"], [106, 3, 1, "", "initialize_image_series"], [106, 5, 1, "", "is_acquiring"], [106, 5, 1, "", "max_image_height"], [106, 5, 1, "", "max_image_width"], [106, 5, 1, "", "min_image_height"], [106, 5, 1, "", "min_image_width"], [106, 4, 1, "", "offset"], [106, 3, 1, "", "report_settings"], [106, 4, 1, "", "serial_number"], [106, 3, 1, "", "set_ROI"], [106, 3, 1, "", "set_binning"], [106, 3, 1, "", "set_exposure_time"], [106, 3, 1, "", "set_line_interval"], [106, 3, 1, "", "set_readout_direction"], [106, 3, 1, "", "set_sensor_mode"], [106, 5, 1, "", "step_image_height"], [106, 5, 1, "", "step_image_width"], [106, 4, 1, "", "variance"], [106, 5, 1, "", "x_pixels"], [106, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[108, 2, 1, "", "SyntheticCamera"], [109, 2, 1, "", "SyntheticCameraController"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[108, 3, 1, "", "__init__"], [108, 3, 1, "", "calculate_light_sheet_exposure_time"], [108, 3, 1, "", "calculate_readout_time"], [108, 5, 1, "", "camera_controller"], [108, 5, 1, "", "camera_exposure_time"], [108, 5, 1, "", "camera_parameters"], [108, 3, 1, "", "close_camera"], [108, 3, 1, "", "close_image_series"], [108, 5, 1, "", "configuration"], [108, 5, 1, "", "current_frame_idx"], [108, 5, 1, "", "data_buffer"], [108, 3, 1, "", "generate_new_frame"], [108, 3, 1, "", "get_line_interval"], [108, 3, 1, "", "get_minimum_waiting_time"], [108, 3, 1, "", "get_new_frame"], [108, 3, 1, "", "get_offset_variance_maps"], [108, 3, 1, "", "initialize_image_series"], [108, 5, 1, "", "is_acquiring"], [108, 3, 1, "", "load_images"], [108, 5, 1, "", "max_image_height"], [108, 5, 1, "", "max_image_width"], [108, 5, 1, "", "min_image_height"], [108, 5, 1, "", "min_image_width"], [108, 5, 1, "", "num_of_frame"], [108, 4, 1, "", "offset"], [108, 5, 1, "", "pre_frame_idx"], [108, 5, 1, "", "random_image"], [108, 3, 1, "", "report_settings"], [108, 5, 1, "", "serial_number"], [108, 3, 1, "", "set_ROI"], [108, 3, 1, "", "set_binning"], [108, 3, 1, "", "set_exposure_time"], [108, 3, 1, "", "set_line_interval"], [108, 3, 1, "", "set_readout_direction"], [108, 3, 1, "", "set_sensor_mode"], [108, 5, 1, "", "step_image_height"], [108, 5, 1, "", "step_image_width"], [108, 4, 1, "", "variance"], [108, 5, 1, "", "x_pixels"], [108, 5, 1, "", "y_pixels"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[109, 3, 1, "", "__init__"], [109, 3, 1, "", "get_property_value"], [109, 3, 1, "", "set_property_value"]], "aslm.model.devices.daq": [[111, 0, 0, "-", "daq_base"], [113, 0, 0, "-", "daq_synthetic"]], "aslm.model.devices.daq.daq_base": [[112, 2, 1, "", "DAQBase"]], "aslm.model.devices.daq.daq_base.DAQBase": [[112, 3, 1, "", "__init__"], [112, 3, 1, "", "calculate_all_waveforms"], [112, 5, 1, "", "camera_delay"], [112, 5, 1, "", "camera_delay_percent"], [112, 5, 1, "", "camera_high_time"], [112, 5, 1, "", "camera_pulse_percent"], [112, 5, 1, "", "configuration"], [112, 5, 1, "", "daq_parameters"], [112, 3, 1, "", "enable_microscope"], [112, 5, 1, "", "microscope_name"], [112, 5, 1, "", "remote_focus_ramp_falling"], [112, 5, 1, "", "sample_rate"], [112, 5, 1, "", "sweep_time"], [112, 5, 1, "", "waveform_constants"], [112, 5, 1, "", "waveform_dict"], [112, 5, 1, "", "waveform_expand_num"], [112, 5, 1, "", "waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[114, 2, 1, "", "SyntheticDAQ"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[114, 3, 1, "", "__init__"], [114, 3, 1, "", "add_camera"], [114, 5, 1, "", "analog_outputs"], [114, 3, 1, "", "calculate_all_waveforms"], [114, 5, 1, "", "camera"], [114, 5, 1, "", "camera_delay"], [114, 5, 1, "", "camera_delay_percent"], [114, 5, 1, "", "camera_high_time"], [114, 5, 1, "", "camera_pulse_percent"], [114, 3, 1, "", "close_tasks"], [114, 5, 1, "", "configuration"], [114, 3, 1, "", "create_camera_task"], [114, 3, 1, "", "create_galvo_remote_focus_tasks"], [114, 3, 1, "", "create_master_trigger_task"], [114, 5, 1, "", "daq_parameters"], [114, 3, 1, "", "enable_microscope"], [114, 5, 1, "", "is_updating_analog_task"], [114, 5, 1, "", "microscope_name"], [114, 3, 1, "", "prepare_acquisition"], [114, 5, 1, "", "remote_focus_ramp_falling"], [114, 3, 1, "", "run_acquisition"], [114, 5, 1, "", "sample_rate"], [114, 3, 1, "", "set_external_trigger"], [114, 3, 1, "", "start_tasks"], [114, 3, 1, "", "stop_acquisition"], [114, 3, 1, "", "stop_tasks"], [114, 5, 1, "", "sweep_time"], [114, 5, 1, "", "trigger_mode"], [114, 3, 1, "", "update_analog_task"], [114, 5, 1, "", "wait_to_run_lock"], [114, 5, 1, "", "waveform_constants"], [114, 5, 1, "", "waveform_dict"], [114, 5, 1, "", "waveform_expand_num"], [114, 5, 1, "", "waveform_repeat_num"], [114, 3, 1, "", "write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[116, 0, 0, "-", "filter_wheel_asi"], [119, 0, 0, "-", "filter_wheel_base"], [121, 0, 0, "-", "filter_wheel_sutter"], [124, 0, 0, "-", "filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[117, 2, 1, "", "ASIFilterWheel"], [118, 1, 1, "", "build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[117, 3, 1, "", "__init__"], [117, 5, 1, "", "active_filter_wheel"], [117, 3, 1, "", "check_if_filter_in_filter_dictionary"], [117, 3, 1, "", "close"], [117, 3, 1, "", "filter_change_delay"], [117, 5, 1, "", "filter_dictionary"], [117, 5, 1, "", "filter_wheel"], [117, 5, 1, "", "filter_wheel_position"], [117, 5, 1, "", "microscope_name"], [117, 5, 1, "", "number_of_filter_wheels"], [117, 3, 1, "", "set_filter"], [117, 5, 1, "", "wait_until_done_delay"], [117, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[120, 2, 1, "", "FilterWheelBase"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[120, 3, 1, "", "__init__"], [120, 3, 1, "", "check_if_filter_in_filter_dictionary"], [120, 5, 1, "", "filter_dictionary"], [120, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[122, 2, 1, "", "SutterFilterWheel"], [123, 5, 1, "", "baudrate"], [123, 1, 1, "", "build_filter_wheel_connection"], [123, 5, 1, "", "comport"], [123, 5, 1, "", "timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[122, 3, 1, "", "__init__"], [122, 3, 1, "", "check_if_filter_in_filter_dictionary"], [122, 3, 1, "", "close"], [122, 5, 1, "", "delay_matrix"], [122, 3, 1, "", "filter_change_delay"], [122, 5, 1, "", "filter_dictionary"], [122, 5, 1, "", "init_finished"], [122, 5, 1, "", "microscope_name"], [122, 5, 1, "", "number_of_filter_wheels"], [122, 3, 1, "", "read"], [122, 5, 1, "", "read_on_init"], [122, 5, 1, "", "serial"], [122, 3, 1, "", "set_filter"], [122, 5, 1, "", "speed"], [122, 5, 1, "", "wait_until_done"], [122, 5, 1, "", "wait_until_done_delay"], [122, 5, 1, "", "wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[125, 2, 1, "", "SyntheticFilterWheel"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[125, 3, 1, "", "__init__"], [125, 5, 1, "", "baudrate"], [125, 3, 1, "", "check_if_filter_in_filter_dictionary"], [125, 3, 1, "", "close"], [125, 5, 1, "", "comport"], [125, 3, 1, "", "filter_change_delay"], [125, 5, 1, "id0", "filter_dictionary"], [125, 5, 1, "", "number_of_filter_wheels"], [125, 3, 1, "", "read"], [125, 3, 1, "", "set_filter"], [125, 5, 1, "id1", "wheel_position"]], "aslm.model.devices.galvo": [[127, 0, 0, "-", "galvo_base"], [129, 0, 0, "-", "galvo_synthetic"]], "aslm.model.devices.galvo.galvo_base": [[128, 2, 1, "", "GalvoBase"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[128, 3, 1, "", "__init__"], [128, 3, 1, "", "adjust"], [128, 5, 1, "", "camera_delay_percent"], [128, 3, 1, "", "close_task"], [128, 5, 1, "", "configuration"], [128, 5, 1, "", "device_config"], [128, 5, 1, "", "galvo_max_voltage"], [128, 5, 1, "", "galvo_min_voltage"], [128, 5, 1, "", "galvo_name"], [128, 5, 1, "", "galvo_waveform"], [128, 5, 1, "", "microscope_name"], [128, 3, 1, "", "prepare_task"], [128, 5, 1, "", "remote_focus_ramp_falling"], [128, 5, 1, "", "sample_rate"], [128, 5, 1, "", "samples"], [128, 3, 1, "", "start_task"], [128, 3, 1, "", "stop_task"], [128, 5, 1, "", "sweep_time"], [128, 3, 1, "", "turn_off"], [128, 5, 1, "", "waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[130, 2, 1, "", "SyntheticGalvo"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[130, 3, 1, "", "__init__"], [130, 3, 1, "", "adjust"], [130, 5, 1, "", "camera_delay_percent"], [130, 3, 1, "", "close_task"], [130, 5, 1, "", "configuration"], [130, 5, 1, "", "device_config"], [130, 5, 1, "", "galvo_max_voltage"], [130, 5, 1, "", "galvo_min_voltage"], [130, 5, 1, "", "galvo_name"], [130, 5, 1, "", "galvo_waveform"], [130, 5, 1, "", "microscope_name"], [130, 3, 1, "", "prepare_task"], [130, 5, 1, "", "remote_focus_ramp_falling"], [130, 5, 1, "", "sample_rate"], [130, 5, 1, "", "samples"], [130, 3, 1, "", "start_task"], [130, 3, 1, "", "stop_task"], [130, 5, 1, "", "sweep_time"], [130, 3, 1, "", "turn_off"], [130, 5, 1, "", "waveform_dict"]], "aslm.model.devices.lasers": [[132, 0, 0, "-", "laser_base"], [134, 0, 0, "-", "laser_synthetic"]], "aslm.model.devices.lasers.laser_base": [[133, 2, 1, "", "LaserBase"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[133, 3, 1, "", "__init__"], [133, 3, 1, "", "close"], [133, 5, 1, "", "configuration"], [133, 5, 1, "", "device_config"], [133, 3, 1, "", "initialize_laser"], [133, 5, 1, "", "microscope_name"], [133, 3, 1, "", "set_power"], [133, 3, 1, "", "turn_off"], [133, 3, 1, "", "turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[135, 2, 1, "", "SyntheticLaser"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[135, 3, 1, "", "__init__"], [135, 3, 1, "", "close"], [135, 5, 1, "", "configuration"], [135, 5, 1, "", "device_config"], [135, 3, 1, "", "initialize_laser"], [135, 5, 1, "", "microscope_name"], [135, 3, 1, "", "set_power"], [135, 3, 1, "", "turn_off"], [135, 3, 1, "", "turn_on"]], "aslm.model.devices.objectives": [[137, 2, 1, "", "Objective"]], "aslm.model.devices.objectives.Objective": [[137, 3, 1, "", "__init__"], [137, 3, 1, "", "calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[139, 0, 0, "-", "remote_focus_base"], [141, 0, 0, "-", "remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_base": [[140, 2, 1, "", "RemoteFocusBase"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[140, 3, 1, "", "__init__"], [140, 3, 1, "", "adjust"], [140, 5, 1, "", "camera_delay_percent"], [140, 3, 1, "", "close_task"], [140, 5, 1, "", "configuration"], [140, 5, 1, "", "device_config"], [140, 5, 1, "", "microscope_name"], [140, 5, 1, "", "percent_smoothing"], [140, 3, 1, "", "prepare_task"], [140, 5, 1, "", "remote_focus_delay"], [140, 5, 1, "", "remote_focus_max_voltage"], [140, 5, 1, "", "remote_focus_min_voltage"], [140, 5, 1, "", "remote_focus_ramp_falling"], [140, 5, 1, "", "sample_rate"], [140, 5, 1, "", "samples"], [140, 3, 1, "", "start_task"], [140, 3, 1, "", "stop_task"], [140, 5, 1, "", "sweep_time"], [140, 5, 1, "", "waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[142, 2, 1, "", "SyntheticRemoteFocus"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[142, 3, 1, "", "__init__"], [142, 3, 1, "", "adjust"], [142, 5, 1, "", "camera_delay_percent"], [142, 3, 1, "", "close_task"], [142, 5, 1, "", "configuration"], [142, 5, 1, "", "device_config"], [142, 5, 1, "", "microscope_name"], [142, 3, 1, "", "move"], [142, 5, 1, "", "percent_smoothing"], [142, 3, 1, "", "prepare_task"], [142, 5, 1, "", "remote_focus_delay"], [142, 5, 1, "", "remote_focus_max_voltage"], [142, 5, 1, "", "remote_focus_min_voltage"], [142, 5, 1, "", "remote_focus_ramp_falling"], [142, 5, 1, "", "sample_rate"], [142, 5, 1, "", "samples"], [142, 3, 1, "", "start_task"], [142, 3, 1, "", "stop_task"], [142, 5, 1, "", "sweep_time"], [142, 5, 1, "", "waveform_dict"]], "aslm.model.devices.shutter": [[144, 0, 0, "-", "laser_shutter_base"], [146, 0, 0, "-", "laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_base": [[145, 2, 1, "", "ShutterBase"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[145, 3, 1, "", "__init__"], [145, 3, 1, "", "close_shutter"], [145, 3, 1, "", "open_shutter"], [145, 5, 1, "", "shutter_state"], [145, 4, 1, "", "state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[147, 2, 1, "", "SyntheticShutter"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[147, 3, 1, "", "__init__"], [147, 3, 1, "", "close_shutter"], [147, 3, 1, "", "open_shutter"], [147, 5, 1, "", "shutter_state"], [147, 4, 1, "", "state"]], "aslm.model.devices.stages": [[149, 0, 0, "-", "stage_asi"], [152, 0, 0, "-", "stage_base"], [154, 0, 0, "-", "stage_galvo"], [156, 0, 0, "-", "stage_mcl"], [159, 0, 0, "-", "stage_pi"], [162, 0, 0, "-", "stage_sutter"], [165, 0, 0, "-", "stage_synthetic"], [167, 0, 0, "-", "stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_asi": [[150, 2, 1, "", "ASIStage"], [151, 1, 1, "", "build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[150, 3, 1, "", "__init__"], [150, 5, 1, "", "axes"], [150, 5, 1, "", "axes_mapping"], [150, 3, 1, "", "close"], [150, 3, 1, "", "get_abs_position"], [150, 3, 1, "", "get_axis_position"], [150, 3, 1, "", "get_position_dict"], [150, 3, 1, "", "get_speed"], [150, 3, 1, "", "move_absolute"], [150, 3, 1, "", "move_axis_absolute"], [150, 3, 1, "", "report_position"], [150, 3, 1, "", "scanr"], [150, 3, 1, "", "set_speed"], [150, 5, 1, "", "stage_feedback"], [150, 5, 1, "", "stage_limits"], [150, 3, 1, "", "start_scan"], [150, 3, 1, "", "stop"], [150, 3, 1, "", "stop_scan"], [150, 5, 1, "", "tiger_controller"], [150, 3, 1, "", "verify_abs_position"], [150, 3, 1, "", "verify_move"]], "aslm.model.devices.stages.stage_base": [[153, 2, 1, "", "StageBase"]], "aslm.model.devices.stages.stage_base.StageBase": [[153, 3, 1, "", "__init__"], [153, 5, 1, "", "axes"], [153, 5, 1, "", "axes_mapping"], [153, 3, 1, "", "close"], [153, 3, 1, "", "get_abs_position"], [153, 3, 1, "", "get_position_dict"], [153, 5, 1, "", "stage_feedback"], [153, 5, 1, "", "stage_limits"], [153, 3, 1, "", "stop"], [153, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[155, 2, 1, "", "GalvoNIStage"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[155, 3, 1, "", "__init__"], [155, 5, 1, "", "axes"], [155, 5, 1, "", "axes_channels"], [155, 5, 1, "", "axes_mapping"], [155, 3, 1, "", "calculate_waveform"], [155, 5, 1, "", "camera_delay_percent"], [155, 3, 1, "", "close"], [155, 5, 1, "", "configuration"], [155, 5, 1, "", "daq"], [155, 5, 1, "", "distance_threshold"], [155, 5, 1, "", "exposure_times"], [155, 5, 1, "", "galvo_max_voltage"], [155, 5, 1, "", "galvo_min_voltage"], [155, 3, 1, "", "get_abs_position"], [155, 3, 1, "", "get_position_dict"], [155, 5, 1, "", "microscope_name"], [155, 3, 1, "", "move_absolute"], [155, 3, 1, "", "move_axis_absolute"], [155, 5, 1, "", "remote_focus_delay"], [155, 5, 1, "", "remote_focus_ramp_falling"], [155, 3, 1, "", "report_position"], [155, 5, 1, "", "sample_rate"], [155, 5, 1, "", "samples"], [155, 5, 1, "", "stage_feedback"], [155, 5, 1, "", "stage_limits"], [155, 5, 1, "", "stage_settle_duration"], [155, 3, 1, "", "stop"], [155, 5, 1, "", "sweep_time"], [155, 5, 1, "", "sweep_times"], [155, 5, 1, "", "trigger_source"], [155, 3, 1, "", "verify_abs_position"], [155, 5, 1, "", "volts_per_micron"], [155, 5, 1, "", "waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[157, 2, 1, "", "MCLStage"], [158, 1, 1, "", "build_MCLStage_connection"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[157, 3, 1, "", "__init__"], [157, 5, 1, "", "axes"], [157, 5, 1, "", "axes_mapping"], [157, 3, 1, "", "close"], [157, 3, 1, "", "get_abs_position"], [157, 3, 1, "", "get_position_dict"], [157, 5, 1, "", "handle"], [157, 5, 1, "", "mcl_controller"], [157, 3, 1, "", "move_absolute"], [157, 3, 1, "", "move_axis_absolute"], [157, 3, 1, "", "report_position"], [157, 5, 1, "", "stage_feedback"], [157, 5, 1, "", "stage_limits"], [157, 3, 1, "", "stop"], [157, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_pi": [[160, 2, 1, "", "PIStage"], [161, 1, 1, "", "build_PIStage_connection"]], "aslm.model.devices.stages.stage_pi.PIStage": [[160, 3, 1, "", "__init__"], [160, 5, 1, "", "axes"], [160, 5, 1, "", "axes_mapping"], [160, 3, 1, "", "close"], [160, 3, 1, "", "get_abs_position"], [160, 3, 1, "", "get_position_dict"], [160, 3, 1, "", "move_absolute"], [160, 3, 1, "", "move_axis_absolute"], [160, 5, 1, "", "pi_axes"], [160, 5, 1, "", "pi_device"], [160, 5, 1, "", "pi_tools"], [160, 3, 1, "", "report_position"], [160, 5, 1, "", "stage_feedback"], [160, 5, 1, "", "stage_limits"], [160, 3, 1, "", "stop"], [160, 3, 1, "", "verify_abs_position"], [160, 3, 1, "", "wait_on_target"]], "aslm.model.devices.stages.stage_sutter": [[163, 2, 1, "", "SutterStage"], [164, 1, 1, "", "build_MP285_connection"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[163, 3, 1, "", "__init__"], [163, 5, 1, "", "axes"], [163, 5, 1, "", "axes_mapping"], [163, 3, 1, "", "close"], [163, 5, 1, "", "device_axes"], [163, 3, 1, "", "get_abs_position"], [163, 3, 1, "", "get_position_dict"], [163, 3, 1, "", "move_absolute"], [163, 3, 1, "", "move_axis_absolute"], [163, 3, 1, "", "report_position"], [163, 5, 1, "", "resolution"], [163, 5, 1, "", "speed"], [163, 5, 1, "", "stage"], [163, 5, 1, "", "stage_feedback"], [163, 5, 1, "", "stage_limits"], [163, 5, 1, "", "stage_x_pos"], [163, 5, 1, "", "stage_y_pos"], [163, 5, 1, "", "stage_z_pos"], [163, 3, 1, "", "stop"], [163, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_synthetic": [[166, 2, 1, "", "SyntheticStage"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[166, 3, 1, "", "__init__"], [166, 5, 1, "", "axes"], [166, 5, 1, "", "axes_mapping"], [166, 3, 1, "", "close"], [166, 5, 1, "", "default_speed"], [166, 3, 1, "", "get_abs_position"], [166, 3, 1, "", "get_axis_position"], [166, 3, 1, "", "get_position_dict"], [166, 3, 1, "", "get_speed"], [166, 3, 1, "", "load_sample"], [166, 3, 1, "", "move_absolute"], [166, 3, 1, "", "move_axis_absolute"], [166, 3, 1, "", "report_position"], [166, 3, 1, "", "scanr"], [166, 3, 1, "", "set_speed"], [166, 5, 1, "", "stage_feedback"], [166, 5, 1, "", "stage_limits"], [166, 3, 1, "", "start_scan"], [166, 3, 1, "", "stop"], [166, 3, 1, "", "stop_scan"], [166, 3, 1, "", "unload_sample"], [166, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[168, 2, 1, "", "TLKIMStage"], [169, 1, 1, "", "build_TLKIMStage_connection"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[168, 3, 1, "", "__init__"], [168, 5, 1, "", "axes"], [168, 5, 1, "", "axes_mapping"], [168, 3, 1, "", "close"], [168, 3, 1, "", "get_abs_position"], [168, 3, 1, "", "get_position_dict"], [168, 5, 1, "", "kim_axes"], [168, 5, 1, "", "kim_controller"], [168, 3, 1, "", "move_absolute"], [168, 3, 1, "", "move_axis_absolute"], [168, 3, 1, "", "report_position"], [168, 5, 1, "", "serial_number"], [168, 5, 1, "", "stage_feedback"], [168, 5, 1, "", "stage_limits"], [168, 3, 1, "", "stop"], [168, 3, 1, "", "verify_abs_position"]], "aslm.model.devices.zoom": [[171, 0, 0, "-", "zoom_base"], [173, 0, 0, "-", "zoom_dynamixel"], [176, 0, 0, "-", "zoom_synthetic"]], "aslm.model.devices.zoom.zoom_base": [[172, 2, 1, "", "ZoomBase"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[172, 3, 1, "", "__init__"], [172, 3, 1, "", "build_stage_dict"], [172, 5, 1, "", "configuration"], [172, 3, 1, "", "move"], [172, 3, 1, "", "read_position"], [172, 3, 1, "", "set_zoom"], [172, 5, 1, "", "zoomdict"], [172, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[174, 2, 1, "", "DynamixelZoom"], [175, 1, 1, "", "build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[174, 3, 1, "", "__init__"], [174, 5, 1, "", "addr_mx_goal_position"], [174, 5, 1, "", "addr_mx_moving_speed"], [174, 5, 1, "", "addr_mx_p_gain"], [174, 5, 1, "", "addr_mx_present_position"], [174, 5, 1, "", "addr_mx_torque_enable"], [174, 5, 1, "", "addr_mx_torque_limit"], [174, 3, 1, "", "build_stage_dict"], [174, 5, 1, "", "configuration"], [174, 5, 1, "", "dynamixel"], [174, 5, 1, "", "goal_position_offset"], [174, 5, 1, "", "id"], [174, 3, 1, "", "move"], [174, 5, 1, "", "port_num"], [174, 3, 1, "", "read_position"], [174, 3, 1, "", "set_zoom"], [174, 5, 1, "", "sleeptime"], [174, 5, 1, "", "timeout"], [174, 5, 1, "", "torque_disable"], [174, 5, 1, "", "torque_enable"], [174, 5, 1, "", "zoomdict"], [174, 5, 1, "", "zoomvalue"]], "aslm.model.devices.zoom.zoom_synthetic": [[177, 2, 1, "", "SyntheticZoom"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[177, 3, 1, "", "__init__"], [177, 3, 1, "", "build_stage_dict"], [177, 5, 1, "", "configuration"], [177, 3, 1, "", "move"], [177, 3, 1, "", "read_position"], [177, 3, 1, "", "set_zoom"], [177, 5, 1, "", "zoomdict"], [177, 5, 1, "", "zoomvalue"]], "aslm.model.dummy": [[179, 2, 1, "", "DummyController"], [180, 2, 1, "", "DummyDevice"], [181, 2, 1, "", "DummyMicroscope"], [182, 2, 1, "", "DummyModel"]], "aslm.model.dummy.DummyController": [[179, 3, 1, "", "__init__"], [179, 3, 1, "", "clear"], [179, 5, 1, "", "commands"], [179, 5, 1, "", "configuration"], [179, 5, 1, "", "configuration_controller"], [179, 3, 1, "", "execute"], [179, 5, 1, "", "menu_controller"], [179, 5, 1, "", "off_stage_pos"], [179, 3, 1, "", "pop"], [179, 5, 1, "", "stage_pos"], [179, 5, 1, "", "view"]], "aslm.model.dummy.DummyDevice": [[180, 3, 1, "", "__init__"], [180, 3, 1, "", "clear"], [180, 3, 1, "", "generate_message"], [180, 5, 1, "", "in_port"], [180, 3, 1, "", "listen"], [180, 5, 1, "", "msg_count"], [180, 5, 1, "", "out_port"], [180, 3, 1, "", "sendout"], [180, 5, 1, "", "sendout_msg_count"], [180, 3, 1, "", "setup"], [180, 5, 1, "", "stop_flag"], [180, 5, 1, "", "timecost"]], "aslm.model.dummy.DummyMicroscope": [[181, 3, 1, "", "__init__"], [181, 3, 1, "", "calculate_exposure_sweep_times"], [181, 5, 1, "", "configuration"], [181, 5, 1, "", "current_channel"], [181, 5, 1, "", "daq"], [181, 5, 1, "", "data_buffer"], [181, 5, 1, "", "galvo"], [181, 5, 1, "", "lasers"], [181, 5, 1, "", "microscope_name"], [181, 5, 1, "", "stages"]], "aslm.model.dummy.DummyModel": [[182, 3, 1, "", "__init__"], [182, 5, 1, "", "active_microscope"], [182, 5, 1, "", "active_microscope_name"], [182, 5, 1, "", "camera"], [182, 5, 1, "", "configuration"], [182, 5, 1, "", "data"], [182, 5, 1, "", "data_buffer"], [182, 5, 1, "", "data_buffer_positions"], [182, 5, 1, "", "data_container"], [182, 3, 1, "", "data_func"], [182, 5, 1, "", "data_pipe"], [182, 5, 1, "", "data_records"], [182, 5, 1, "", "data_thread"], [182, 5, 1, "", "device"], [182, 5, 1, "", "frame_id"], [182, 5, 1, "", "img_height"], [182, 5, 1, "", "img_width"], [182, 5, 1, "", "manager"], [182, 5, 1, "", "number_of_frames"], [182, 5, 1, "", "signal_container"], [182, 3, 1, "", "signal_func"], [182, 5, 1, "", "signal_pipe"], [182, 5, 1, "", "signal_records"], [182, 5, 1, "", "signal_thread"], [182, 3, 1, "", "start"], [182, 5, 1, "", "stop_flag"]], "aslm.model.features": [[184, 0, 0, "-", "auto_tile_scan"], [186, 0, 0, "-", "autofocus"], [189, 0, 0, "-", "common_features"], [200, 0, 0, "-", "constant_velocity_acquisition"], [202, 0, 0, "-", "dummy_detective"], [204, 0, 0, "-", "feature_container"], [215, 0, 0, "-", "feature_related_functions"], [220, 0, 0, "-", "image_writer"], [222, 0, 0, "-", "remove_empty_tiles"], [228, 0, 0, "-", "restful_features"], [231, 0, 0, "-", "volume_search"]], "aslm.model.features.auto_tile_scan": [[185, 2, 1, "", "CalculateFocusRange"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[185, 3, 1, "", "__init__"], [185, 3, 1, "", "end_func_data"], [185, 3, 1, "", "end_func_signal"], [185, 3, 1, "", "in_func_data"], [185, 3, 1, "", "in_func_signal"], [185, 3, 1, "", "pre_func_data"], [185, 3, 1, "", "pre_func_signal"]], "aslm.model.features.autofocus": [[187, 2, 1, "", "Autofocus"], [188, 1, 1, "", "power_tent"]], "aslm.model.features.autofocus.Autofocus": [[187, 3, 1, "", "__init__"], [187, 5, 1, "", "autofocus_frame_queue"], [187, 5, 1, "", "autofocus_pos_queue"], [187, 5, 1, "", "coarse_step_size"], [187, 5, 1, "", "coarse_steps"], [187, 3, 1, "", "end_func_data"], [187, 3, 1, "", "end_func_signal"], [187, 5, 1, "", "f_frame_id"], [187, 5, 1, "", "f_pos"], [187, 5, 1, "", "fine_pos_offset"], [187, 5, 1, "", "fine_step_size"], [187, 5, 1, "", "focus_pos"], [187, 5, 1, "", "frame_num"], [187, 3, 1, "", "get_autofocus_frame_num"], [187, 5, 1, "", "get_frames_num"], [187, 3, 1, "", "get_steps"], [187, 3, 1, "", "in_func_data"], [187, 3, 1, "", "in_func_signal"], [187, 5, 1, "", "init_pos"], [187, 5, 1, "", "max_entropy"], [187, 5, 1, "", "plot_data"], [187, 3, 1, "", "pre_func_data"], [187, 3, 1, "", "pre_func_signal"], [187, 3, 1, "", "robust_autofocus"], [187, 3, 1, "id0", "run"], [187, 5, 1, "", "signal_id"], [187, 5, 1, "", "target_channel"], [187, 5, 1, "", "target_frame_id"], [187, 5, 1, "", "total_frame_num"]], "aslm.model.features.common_features": [[190, 2, 1, "", "ChangeResolution"], [191, 2, 1, "", "ConProAcquisition"], [192, 2, 1, "", "FindTissueSimple2D"], [193, 2, 1, "", "LoopByCount"], [194, 2, 1, "", "MoveToNextPositionInMultiPositionTable"], [195, 2, 1, "", "PrepareNextChannel"], [196, 2, 1, "", "Snap"], [197, 2, 1, "", "StackPause"], [198, 2, 1, "", "WaitToContinue"], [199, 2, 1, "", "ZStackAcquisition"]], "aslm.model.features.common_features.ChangeResolution": [[190, 3, 1, "", "__init__"], [190, 3, 1, "", "cleanup"], [190, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ConProAcquisition": [[191, 3, 1, "", "__init__"], [191, 3, 1, "", "generate_meta_data"], [191, 3, 1, "", "pre_signal_func"], [191, 3, 1, "", "signal_end"], [191, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.FindTissueSimple2D": [[192, 3, 1, "", "__init__"], [192, 3, 1, "", "data_func"]], "aslm.model.features.common_features.LoopByCount": [[193, 3, 1, "", "__init__"], [193, 3, 1, "", "data_func"], [193, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[194, 3, 1, "", "__init__"], [194, 3, 1, "", "cleanup"], [194, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.PrepareNextChannel": [[195, 3, 1, "", "__init__"], [195, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.Snap": [[196, 3, 1, "", "__init__"], [196, 3, 1, "", "data_func"]], "aslm.model.features.common_features.StackPause": [[197, 3, 1, "", "__init__"], [197, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.WaitToContinue": [[198, 3, 1, "", "__init__"], [198, 3, 1, "", "cleanup"], [198, 3, 1, "", "data_func"], [198, 3, 1, "", "pre_data_func"], [198, 3, 1, "", "pre_signal_func"], [198, 3, 1, "", "signal_func"]], "aslm.model.features.common_features.ZStackAcquisition": [[199, 3, 1, "", "__init__"], [199, 3, 1, "", "cleanup_data_func"], [199, 3, 1, "", "end_data_func"], [199, 3, 1, "", "in_data_func"], [199, 3, 1, "", "pre_data_func"], [199, 3, 1, "", "pre_signal_func"], [199, 3, 1, "", "signal_end"], [199, 3, 1, "", "signal_func"], [199, 3, 1, "", "update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[201, 2, 1, "", "ConstantVelocityAcquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[201, 3, 1, "", "__init__"], [201, 3, 1, "", "cleanup"], [201, 3, 1, "", "pre_func_signal"]], "aslm.model.features.dummy_detective": [[203, 2, 1, "", "Dummy_Detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[203, 3, 1, "", "__init__"]], "aslm.model.features.feature_container": [[205, 2, 1, "", "Container"], [206, 2, 1, "", "DataContainer"], [207, 2, 1, "", "DataNode"], [208, 2, 1, "", "SignalContainer"], [209, 2, 1, "", "SignalNode"], [210, 2, 1, "", "TreeNode"], [211, 1, 1, "", "dummy_True"], [212, 1, 1, "", "dummy_func"], [213, 1, 1, "", "get_registered_funcs"], [214, 1, 1, "", "load_features"]], "aslm.model.features.feature_container.Container": [[205, 3, 1, "", "__init__"], [205, 3, 1, "", "cleanup"], [205, 3, 1, "", "reset"]], "aslm.model.features.feature_container.DataContainer": [[206, 3, 1, "", "__init__"], [206, 3, 1, "", "cleanup"], [206, 3, 1, "", "reset"], [206, 3, 1, "", "run"]], "aslm.model.features.feature_container.DataNode": [[207, 3, 1, "", "__init__"], [207, 3, 1, "", "run"], [207, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.SignalContainer": [[208, 3, 1, "", "__init__"], [208, 3, 1, "", "cleanup"], [208, 3, 1, "", "reset"], [208, 3, 1, "", "run"]], "aslm.model.features.feature_container.SignalNode": [[209, 3, 1, "", "__init__"], [209, 3, 1, "", "run"], [209, 3, 1, "", "set_property"]], "aslm.model.features.feature_container.TreeNode": [[210, 3, 1, "", "__init__"], [210, 3, 1, "", "set_property"]], "aslm.model.features.feature_related_functions": [[216, 2, 1, "", "SharedList"], [217, 1, 1, "", "convert_feature_list_to_str"], [218, 1, 1, "", "convert_str_to_feature_list"], [219, 1, 1, "", "load_dynamic_parameter_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[216, 3, 1, "", "__init__"], [216, 3, 1, "", "append"], [216, 3, 1, "", "clear"], [216, 3, 1, "", "copy"], [216, 3, 1, "", "count"], [216, 3, 1, "", "extend"], [216, 3, 1, "", "index"], [216, 3, 1, "", "insert"], [216, 3, 1, "", "pop"], [216, 3, 1, "", "remove"], [216, 3, 1, "", "reverse"], [216, 3, 1, "", "sort"]], "aslm.model.features.image_writer": [[221, 2, 1, "", "ImageWriter"]], "aslm.model.features.image_writer.ImageWriter": [[221, 3, 1, "", "__init__"], [221, 3, 1, "", "calculate_and_check_disk_space"], [221, 3, 1, "id0", "close"], [221, 5, 1, "", "config_table"], [221, 5, 1, "", "current_time_point"], [221, 5, 1, "", "data_buffer"], [221, 5, 1, "", "data_source"], [221, 5, 1, "", "file_type"], [221, 3, 1, "id1", "generate_image_name"], [221, 3, 1, "id2", "generate_meta_data"], [221, 5, 1, "", "mip"], [221, 5, 1, "", "mip_directory"], [221, 5, 1, "", "model"], [221, 5, 1, "", "num_of_channels"], [221, 5, 1, "", "save_directory"], [221, 3, 1, "id3", "save_image"], [221, 5, 1, "", "sub_dir"]], "aslm.model.features.remove_empty_tiles": [[223, 2, 1, "", "DetectTissueInStack"], [224, 2, 1, "", "DetectTissueInStackAndRecord"], [225, 2, 1, "", "RemoveEmptyPositions"], [226, 1, 1, "", "detect_tissue"], [227, 1, 1, "", "detect_tissue2"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[223, 3, 1, "", "__init__"], [223, 3, 1, "", "end_func_data"], [223, 3, 1, "", "end_func_signal"], [223, 3, 1, "", "in_func_data"], [223, 3, 1, "", "in_func_signal"], [223, 3, 1, "", "pre_func_data"], [223, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[224, 3, 1, "", "__init__"], [224, 3, 1, "", "end_func_data"], [224, 3, 1, "", "end_func_signal"], [224, 3, 1, "", "in_func_data"], [224, 3, 1, "", "in_func_signal"], [224, 3, 1, "", "pre_func_data"], [224, 3, 1, "", "pre_func_signal"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[225, 3, 1, "", "__init__"], [225, 3, 1, "", "signal_func"]], "aslm.model.features.restful_features": [[229, 2, 1, "", "IlastikSegmentation"], [230, 1, 1, "", "prepare_service"]], "aslm.model.features.restful_features.IlastikSegmentation": [[229, 3, 1, "", "__init__"]], "aslm.model.features.volume_search": [[232, 2, 1, "", "VolumeSearch"], [233, 1, 1, "", "draw_box"]], "aslm.model.features.volume_search.VolumeSearch": [[232, 3, 1, "", "__init__"]], "aslm.model.metadata_sources": [[235, 0, 0, "-", "bdv_metadata"], [237, 0, 0, "-", "metadata"], [240, 0, 0, "-", "ome_tiff_metadata"]], "aslm.model.metadata_sources.bdv_metadata": [[236, 2, 1, "", "BigDataViewerMetadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[236, 3, 1, "", "__init__"], [236, 3, 1, "", "affine_matrix_to_stage_positions"], [236, 3, 1, "", "parse_xml"], [236, 4, 1, "", "shape"], [236, 3, 1, "", "stage_positions_to_affine_matrix"], [236, 3, 1, "", "to_xml"], [236, 4, 1, "", "voxel_size"], [236, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.metadata": [[238, 2, 1, "", "Metadata"], [239, 2, 1, "", "XMLMetadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[238, 3, 1, "", "__init__"], [238, 4, 1, "", "shape"], [238, 4, 1, "", "voxel_size"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[239, 3, 1, "", "__init__"], [239, 4, 1, "", "shape"], [239, 3, 1, "", "to_xml"], [239, 4, 1, "", "voxel_size"], [239, 3, 1, "", "write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[241, 2, 1, "", "OMETIFFMetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[241, 3, 1, "", "__init__"], [241, 3, 1, "", "ome_tiff_xml_dict"], [241, 4, 1, "", "shape"], [241, 3, 1, "", "to_xml"], [241, 4, 1, "", "voxel_size"], [241, 3, 1, "", "write_xml"]], "aslm.model.microscope": [[243, 2, 1, "", "Microscope"]], "aslm.model.microscope.Microscope": [[243, 3, 1, "", "__init__"], [243, 5, 1, "", "ask_stage_for_position"], [243, 3, 1, "", "assemble_device_config_lists"], [243, 5, 1, "", "available_channels"], [243, 3, 1, "", "calculate_all_waveform"], [243, 3, 1, "", "calculate_exposure_sweep_times"], [243, 5, 1, "", "central_focus"], [243, 5, 1, "", "channels"], [243, 5, 1, "", "configuration"], [243, 5, 1, "", "current_channel"], [243, 5, 1, "", "current_laser_index"], [243, 5, 1, "", "daq"], [243, 5, 1, "", "data_buffer"], [243, 3, 1, "", "end_acquisition"], [243, 5, 1, "", "galvo"], [243, 3, 1, "", "get_readout_time"], [243, 3, 1, "", "get_stage_position"], [243, 5, 1, "", "info"], [243, 5, 1, "", "is_synthetic"], [243, 5, 1, "", "laser_wavelength"], [243, 5, 1, "", "lasers"], [243, 3, 1, "", "load_and_start_devices"], [243, 5, 1, "", "microscope_name"], [243, 3, 1, "", "move_remote_focus"], [243, 3, 1, "", "move_stage"], [243, 3, 1, "", "move_stage_offset"], [243, 5, 1, "", "number_of_frames"], [243, 3, 1, "", "prepare_acquisition"], [243, 3, 1, "", "prepare_next_channel"], [243, 5, 1, "", "ret_pos_dict"], [243, 5, 1, "", "stages"], [243, 5, 1, "", "stages_list"], [243, 3, 1, "", "stop_stage"], [243, 3, 1, "", "terminate"], [243, 5, 1, "", "tiger_controller"], [243, 3, 1, "", "turn_off_lasers"], [243, 3, 1, "", "turn_on_laser"], [243, 3, 1, "", "update_data_buffer"], [243, 3, 1, "", "update_stage_limits"]], "aslm.model.model": [[245, 2, 1, "", "Model"]], "aslm.model.model.Model": [[245, 3, 1, "", "__init__"], [245, 5, 1, "", "acquisition_count"], [245, 5, 1, "", "active_microscope"], [245, 5, 1, "", "active_microscope_name"], [245, 5, 1, "", "ask_to_pause_data_thread"], [245, 5, 1, "", "autofocus_on"], [245, 5, 1, "", "binning"], [245, 5, 1, "", "camera_wait_iterations"], [245, 3, 1, "", "change_resolution"], [245, 5, 1, "", "configuration"], [245, 3, 1, "", "create_pipe"], [245, 5, 1, "", "current_exposure_time"], [245, 5, 1, "", "data_buffer"], [245, 5, 1, "", "data_buffer_positions"], [245, 5, 1, "", "data_thread"], [245, 3, 1, "", "destroy_virtual_microscope"], [245, 3, 1, "", "end_acquisition"], [245, 5, 1, "", "event_queue"], [245, 5, 1, "", "f_position"], [245, 5, 1, "", "feature_list"], [245, 5, 1, "", "focus_pos"], [245, 5, 1, "", "frame_id"], [245, 3, 1, "", "get_active_microscope"], [245, 3, 1, "", "get_camera_line_interval_and_exposure_time"], [245, 3, 1, "", "get_data_buffer"], [245, 3, 1, "", "get_feature_list"], [245, 3, 1, "", "get_microscope_info"], [245, 3, 1, "", "get_offset_variance_maps"], [245, 3, 1, "", "get_stage_position"], [245, 5, 1, "", "image_count"], [245, 5, 1, "", "image_writer"], [245, 5, 1, "", "imaging_mode"], [245, 5, 1, "", "img_height"], [245, 5, 1, "", "img_width"], [245, 5, 1, "", "is_acquiring"], [245, 5, 1, "", "is_live"], [245, 5, 1, "", "is_save"], [245, 3, 1, "", "launch_virtual_microscope"], [245, 3, 1, "", "load_feature_list_from_file"], [245, 3, 1, "", "load_feature_list_from_str"], [245, 3, 1, "", "load_feature_records"], [245, 3, 1, "", "load_images"], [245, 5, 1, "", "logger"], [245, 5, 1, "", "max_entropy"], [245, 5, 1, "", "microscopes"], [245, 3, 1, "", "move_stage"], [245, 5, 1, "", "number_of_frames"], [245, 5, 1, "", "pause_data_event"], [245, 5, 1, "", "pause_data_ready_lock"], [245, 3, 1, "", "pause_data_thread"], [245, 5, 1, "", "plot_pipe"], [245, 5, 1, "", "pre_exposure_time"], [245, 3, 1, "", "prepare_acquisition"], [245, 3, 1, "", "release_pipe"], [245, 3, 1, "", "resume_data_thread"], [245, 3, 1, "", "run_acquisition"], [245, 3, 1, "", "run_command"], [245, 3, 1, "", "run_data_process"], [245, 3, 1, "", "run_live_acquisition"], [245, 5, 1, "", "show_img_pipe"], [245, 5, 1, "", "signal_thread"], [245, 3, 1, "", "simplified_data_process"], [245, 3, 1, "", "snap_image"], [245, 5, 1, "", "start_time"], [245, 5, 1, "", "stop_acquisition"], [245, 5, 1, "", "stop_send_signal"], [245, 3, 1, "", "stop_stage"], [245, 3, 1, "", "terminate"], [245, 5, 1, "", "total_acquisition_count"], [245, 5, 1, "", "total_image_count"], [245, 3, 1, "", "update_data_buffer"], [245, 3, 1, "", "update_ilastik_setting"], [245, 5, 1, "", "virtual_microscopes"]], "aslm.model.waveforms": [[247, 1, 1, "", "camera_exposure"], [248, 1, 1, "", "dc_value"], [249, 1, 1, "", "remote_focus_ramp"], [250, 1, 1, "", "sawtooth"], [251, 1, 1, "", "sine_wave"], [252, 1, 1, "", "single_pulse"], [253, 1, 1, "", "smooth_waveform"], [254, 1, 1, "", "square"]], "aslm.tools": [[256, 0, 0, "-", "beams"], [260, 0, 0, "-", "common_dict_tools"], [262, 0, 0, "-", "common_functions"], [268, 0, 0, "-", "decorators"], [271, 0, 0, "-", "file_functions"], [276, 0, 0, "-", "image"], [279, 0, 0, "-", "image_loaders"], [281, 0, 0, "-", "main_functions"], [284, 0, 0, "-", "multipos_table_tools"], [289, 0, 0, "-", "project_stats"], [291, 0, 0, "-", "sdf"], [295, 0, 0, "-", "waveform_template_funcs"], [297, 0, 0, "-", "xml_tools"]], "aslm.tools.beams": [[257, 1, 1, "", "fit_gaussian_beam_error"], [258, 1, 1, "", "fit_gaussian_beam_mse"], [259, 1, 1, "", "gaussian_beam"]], "aslm.tools.common_dict_tools": [[261, 1, 1, "", "update_stage_dict"]], "aslm.tools.common_functions": [[263, 2, 1, "", "VariableWithLock"], [264, 1, 1, "", "build_ref_name"], [265, 1, 1, "", "combine_funcs"], [266, 1, 1, "", "copy_proxy_object"], [267, 1, 1, "", "load_module_from_file"]], "aslm.tools.common_functions.VariableWithLock": [[263, 3, 1, "", "__init__"]], "aslm.tools.decorators": [[269, 2, 1, "", "FeatureList"], [270, 1, 1, "", "function_timer"]], "aslm.tools.decorators.FeatureList": [[269, 3, 1, "", "__init__"]], "aslm.tools.file_functions": [[272, 1, 1, "", "create_save_path"], [273, 1, 1, "", "delete_folder"], [274, 1, 1, "", "load_yaml_file"], [275, 1, 1, "", "save_yaml_file"]], "aslm.tools.image": [[277, 1, 1, "", "create_arrow_image"], [278, 1, 1, "", "text_array"]], "aslm.tools.image_loaders": [[280, 2, 1, "", "LazyTiff"]], "aslm.tools.image_loaders.LazyTiff": [[280, 3, 1, "", "__init__"], [280, 4, 1, "", "shape"]], "aslm.tools.main_functions": [[282, 1, 1, "", "create_parser"], [283, 1, 1, "", "evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[285, 1, 1, "", "calc_num_tiles"], [286, 1, 1, "", "compute_tiles_from_bounding_box"], [287, 1, 1, "", "sign"], [288, 1, 1, "", "update_table"]], "aslm.tools.project_stats": [[290, 1, 1, "", "countlines"]], "aslm.tools.sdf": [[292, 1, 1, "", "box"], [293, 1, 1, "", "sphere"], [294, 1, 1, "", "volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[296, 1, 1, "", "get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[298, 1, 1, "", "dict_to_xml"], [299, 1, 1, "", "parse_xml"]], "aslm.view": [[301, 0, 0, "-", "custom_widgets"], [302, 0, 0, "-", "main_window_content"], [303, 0, 0, "-", "popups"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"aslm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 307, 310, 314], "config": [0, 1, 2, 3, 4, 5, 6, 7, 8], "build_nested_dict": 2, "get_aslm_path": 3, "get_configuration_path": 4, "load_config": 5, "update_config_dict": 6, "verify_experiment_config": 7, "verify_waveform_const": 8, "control": [9, 10, 11, 12, 13, 14, 15, 318], "configuration_control": [10, 11], "configurationcontrol": 11, "thread_pool": [12, 13, 14, 15], "selflockthread": 13, "synchronizedthreadpool": 14, "threadwaitlist": 15, "log_fil": [16, 17, 18, 19, 20, 21, 22, 23, 24], "filter": [17, 18, 19, 316, 318], "nonperffilt": 18, "performancefilt": 19, "log_funct": [20, 21, 22, 23, 24], "find_filenam": 21, "log_setup": 22, "main_process_listen": 23, "update_nested_dict": 24, "model": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 311], "analysi": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "boundary_detect": [27, 28, 29, 30, 31], "binary_detect": 28, "find_tissue_boundary_2d": 29, "has_tissu": 30, "map_boundari": 31, "camera": [32, 33, 34, 35, 36, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 316, 318], "compute_flatfield_map": 33, "compute_noise_sigma": 34, "compute_scmos_offset_and_variance_map": 35, "compute_signal_to_nois": 36, "detect": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46], "add_median_bord": 38, "combine_imag": 39, "log_detect": 40, "make_inside_imag": 41, "make_normalized_imag": 42, "make_sphere_3d": 43, "multiscale_surface_filter_3d": 44, "surface_filter_gauss_3d": 45, "three_level_segment": 46, "image_contrast": [47, 48], "fast_normalized_dct_shannon_entropi": 48, "concurr": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65], "concurrency_tool": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "custodythread": 51, "fancythread": 52, "mytestclass": 53, "objectinsubprocess": 54, "politethread": 55, "resultthread": 56, "sharedndarrai": 57, "testobjectinsubprocess": 58, "testresultthreadandcustodythread": 59, "testsharedndarrai": 60, "proxy_object": [61, 62, 63, 64, 65], "proxymanag": 62, "proxyobject": 63, "launch_custody_thread": 64, "launch_thread": 65, "data_sourc": [66, 67, 68, 69, 70, 71, 72, 73], "bdv_data_sourc": [67, 68], "bigdataviewerdatasourc": 68, "datasourc": 70, "get_data_sourc": 71, "tiff_data_sourc": [72, 73], "tiffdatasourc": 73, "device_startup_funct": [74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "dummydeviceconnect": 75, "auto_redi": 76, "device_not_found": 77, "load_camera_connect": 78, "load_devic": 79, "load_filter_wheel_connect": 80, "load_stag": 81, "load_zoom_connect": 82, "start_camera": 83, "start_daq": 84, "start_filter_wheel": 85, "start_galvo": 86, "start_las": 87, "start_remote_focus_devic": 88, "start_shutt": 89, "start_stag": 90, "start_zoom": 91, "devic": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "api": [93, 94, 95, 96, 97, 98, 306, 316], "coher": [94, 318], "dynamixel": [95, 96, 97, 318], "dynamixel_funct": [96, 97], "create_mock_dxl_devic": 97, "omicron": [98, 318], "camera_bas": [100, 101], "camerabas": 101, "camera_hamamatsu": [102, 103, 104], "hamamatsuorca": 103, "hamamatsuorcalightn": 104, "camera_photometr": [105, 106], "photometricskinetix": 106, "camera_synthet": [107, 108, 109], "syntheticcamera": 108, "syntheticcameracontrol": 109, "daq": [110, 111, 112, 113, 114, 316], "daq_bas": [111, 112], "daqbas": 112, "daq_synthet": [113, 114], "syntheticdaq": 114, "filter_wheel": [115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "filter_wheel_asi": [116, 117, 118], "asifilterwheel": 117, "build_filter_wheel_connect": [118, 123], "filter_wheel_bas": [119, 120], "filterwheelbas": 120, "filter_wheel_sutt": [121, 122, 123], "sutterfilterwheel": 122, "filter_wheel_synthet": [124, 125], "syntheticfilterwheel": 125, "galvo": [126, 127, 128, 129, 130, 316, 318], "galvo_bas": [127, 128], "galvobas": 128, "galvo_synthet": [129, 130], "syntheticgalvo": 130, "laser": [131, 132, 133, 134, 135, 316, 318], "laser_bas": [132, 133], "laserbas": 133, "laser_synthet": [134, 135], "syntheticlas": 135, "object": [136, 137, 313], "remote_focu": [138, 139, 140, 141, 142], "remote_focus_bas": [139, 140], "remotefocusbas": 140, "remote_focus_synthet": [141, 142], "syntheticremotefocu": 142, "shutter": [143, 144, 145, 146, 147, 316, 318], "laser_shutter_bas": [144, 145], "shutterbas": 145, "laser_shutter_synthet": [146, 147], "syntheticshutt": 147, "stage": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 307, 316, 318], "stage_asi": [149, 150, 151], "asistag": 150, "build_asi_stage_connect": 151, "stage_bas": [152, 153], "stagebas": 153, "stage_galvo": [154, 155], "galvonistag": 155, "stage_mcl": [156, 157, 158], "mclstage": 157, "build_mclstage_connect": 158, "stage_pi": [159, 160, 161], "pistag": 160, "build_pistage_connect": 161, "stage_sutt": [162, 163, 164], "sutterstag": 163, "build_mp285_connect": 164, "stage_synthet": [165, 166], "syntheticstag": 166, "stage_tl_kcube_inerti": [167, 168, 169], "tlkimstag": 168, "build_tlkimstage_connect": 169, "zoom": [170, 171, 172, 173, 174, 175, 176, 177, 316, 318], "zoom_bas": [171, 172], "zoombas": 172, "zoom_dynamixel": [173, 174, 175], "dynamixelzoom": 174, "build_dynamixel_zoom_connect": 175, "zoom_synthet": [176, 177], "syntheticzoom": 177, "dummi": [178, 179, 180, 181, 182], "dummycontrol": 179, "dummydevic": 180, "dummymicroscop": 181, "dummymodel": 182, "featur": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 311, 313], "auto_tile_scan": [184, 185], "calculatefocusrang": 185, "paramet": [185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 223, 224, 225, 226, 227, 313], "attribut": [185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 207, 208, 209, 210, 216, 223, 224, 225], "method": [185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 216, 223, 224, 225], "note": [185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 226, 227], "return": [185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 207, 209, 210, 211, 212, 213, 214, 217, 223, 224, 225, 226, 227], "autofocu": [186, 187, 188], "power_t": 188, "common_featur": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "changeresolut": 190, "conproacquisit": 191, "findtissuesimple2d": 192, "loopbycount": 193, "movetonextpositioninmultipositiont": 194, "preparenextchannel": 195, "snap": 196, "stackpaus": 197, "waittocontinu": 198, "zstackacquisit": 199, "constant_velocity_acquisit": [200, 201], "constantvelocityacquisit": 201, "dummy_detect": [202, 203], "feature_contain": [204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], "contain": [205, 313], "datacontain": 206, "datanod": 207, "signalcontain": 208, "signalnod": 209, "treenod": 210, "dummy_tru": 211, "dummy_func": 212, "get_registered_func": 213, "load_featur": 214, "feature_related_funct": [215, 216, 217, 218, 219], "sharedlist": 216, "convert_feature_list_to_str": 217, "exampl": [217, 219, 226, 307], "convert_str_to_feature_list": 218, "load_dynamic_parameter_funct": 219, "image_writ": [220, 221], "imagewrit": 221, "remove_empty_til": [222, 223, 224, 225, 226, 227], "detecttissueinstack": 223, "detecttissueinstackandrecord": 224, "removeemptyposit": 225, "detect_tissu": 226, "detect_tissue2": 227, "restful_featur": [228, 229, 230], "ilastiksegment": 229, "prepare_servic": 230, "volume_search": [231, 232, 233], "volumesearch": 232, "draw_box": 233, "metadata_sourc": [234, 235, 236, 237, 238, 239, 240, 241], "bdv_metadata": [235, 236], "bigdataviewermetadata": 236, "metadata": [237, 238, 239], "xmlmetadata": 239, "ome_tiff_metadata": [240, 241], "ometiffmetadata": 241, "microscop": [242, 243, 307, 314, 316], "waveform": [246, 247, 248, 249, 250, 251, 252, 253, 254, 316], "camera_exposur": 247, "dc_valu": 248, "remote_focus_ramp": 249, "sawtooth": 250, "sine_wav": 251, "single_puls": 252, "smooth_waveform": 253, "squar": 254, "tool": [255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "beam": [256, 257, 258, 259], "fit_gaussian_beam_error": 257, "fit_gaussian_beam_ms": 258, "gaussian_beam": 259, "common_dict_tool": [260, 261], "update_stage_dict": 261, "common_funct": [262, 263, 264, 265, 266, 267], "variablewithlock": 263, "build_ref_nam": 264, "combine_func": 265, "copy_proxy_object": 266, "load_module_from_fil": 267, "decor": [268, 269, 270], "featurelist": 269, "function_tim": 270, "file_funct": [271, 272, 273, 274, 275], "create_save_path": 272, "delete_fold": 273, "load_yaml_fil": 274, "save_yaml_fil": 275, "imag": [276, 277, 278], "create_arrow_imag": 277, "text_arrai": 278, "image_load": [279, 280], "lazytiff": 280, "main_funct": [281, 282, 283], "create_pars": 282, "evaluate_parser_input_argu": 283, "multipos_table_tool": [284, 285, 286, 287, 288], "calc_num_til": 285, "compute_tiles_from_bounding_box": 286, "sign": 287, "update_t": 288, "project_stat": [289, 290], "countlin": 290, "sdf": [291, 292, 293, 294], "box": 292, "sphere": 293, "volume_from_sdf": 294, "waveform_template_func": [295, 296], "get_waveform_template_paramet": 296, "xml_tool": [297, 298, 299], "dict_to_xml": 298, "parse_xml": 299, "view": [300, 301, 302, 303], "custom_widget": 301, "main_window_cont": 302, "popup": 303, "refer": 306, "configur": [307, 316], "yaml": 307, "hardwar": [307, 309, 316, 318], "section": [307, 316], "gui": [307, 316], "channel": 307, "stack": 307, "acquisit": [307, 318], "timepoint": 307, "contribut": [308, 310], "guidelin": 308, "gener": 308, "principl": 308, "instal": [308, 317], "develop": 308, "depend": 308, "code": 308, "style": 308, "document": 308, "pre": 308, "commit": 308, "hook": 308, "dictionari": 308, "pars": 308, "unit": [308, 309], "test": 308, "mac": 308, "ad": [309, 311], "new": [309, 311], "scientif": 309, "how": 309, "add": 309, "introduct": 313, "current": 313, "implement": [313, 314], "The": 313, "creat": 313, "custom": 313, "combin": 313, "load": 313, "function": 313, "edit": 313, "delet": 313, "multiscal": 314, "expans": 314, "opm": 314, "v2": 314, "ct": 314, "v1": 314, "spectral": 314, "tirf": 314, "autonom": 315, "softwar": [315, 316, 317], "light": 315, "microscopi": 315, "project": 315, "philosophi": 315, "content": 315, "author": 315, "index": 315, "search": 315, "file": 316, "remot": 316, "focu": 316, "wheel": [316, 318], "ax": 316, "definit": 316, "joystick": 316, "constant": 316, "other": 316, "templat": 316, "rest": 316, "download": 317, "git": 317, "setup": 317, "your": 317, "python": 317, "environ": 317, "troubleshoot": 317, "support": 318, "data": 318, "card": 318, "ni": 318, "pcie": 318, "6738": 318, "pxi": 318, "6259": 318, "6723": 318, "hamamatsu": 318, "flash": 318, "4": 318, "0": 318, "fusion": 318, "lightn": 318, "photometr": 318, "iri": 318, "15": 318, "voicecoil": 318, "equip": 318, "solut": 318, "thorlab": 318, "blink": 318, "asi": 318, "tiger": 318, "sutter": 318, "physik": 318, "instrument": 318, "analog": 318, "piezo": 318, "etc": 318, "deform": 318, "mirror": 318, "imagin": 318, "optic": 318, "galvanomet": 318, "cambridg": 318, "technologi": 318, "novanta": 318, "scannermax": 318, "mechan": 318}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"aslm.config": [[0, "module-aslm.config"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "aslm.config.config.build_nested_dict": [[2, "aslm-config-config-build-nested-dict"]], "aslm.config.config.get_aslm_path": [[3, "aslm-config-config-get-aslm-path"]], "aslm.config.config.get_configuration_paths": [[4, "aslm-config-config-get-configuration-paths"]], "aslm.config.config.load_configs": [[5, "aslm-config-config-load-configs"]], "aslm.config.config.update_config_dict": [[6, "aslm-config-config-update-config-dict"]], "aslm.config.config.verify_experiment_config": [[7, "aslm-config-config-verify-experiment-config"]], "aslm.config.config.verify_waveform_constants": [[8, "aslm-config-config-verify-waveform-constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "aslm.controller.configuration_controller.ConfigurationController": [[11, "aslm-controller-configuration-controller-configurationcontroller"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "aslm.controller.thread_pool.SelfLockThread": [[13, "aslm-controller-thread-pool-selflockthread"]], "aslm.controller.thread_pool.SynchronizedThreadPool": [[14, "aslm-controller-thread-pool-synchronizedthreadpool"]], "aslm.controller.thread_pool.ThreadWaitlist": [[15, "aslm-controller-thread-pool-threadwaitlist"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "aslm.log_files.filters.NonPerfFilter": [[18, "aslm-log-files-filters-nonperffilter"]], "aslm.log_files.filters.PerformanceFilter": [[19, "aslm-log-files-filters-performancefilter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "aslm.log_files.log_functions.find_filename": [[21, "aslm-log-files-log-functions-find-filename"]], "aslm.log_files.log_functions.log_setup": [[22, "aslm-log-files-log-functions-log-setup"]], "aslm.log_files.log_functions.main_process_listener": [[23, "aslm-log-files-log-functions-main-process-listener"]], "aslm.log_files.log_functions.update_nested_dict": [[24, "aslm-log-files-log-functions-update-nested-dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "aslm.model.analysis.boundary_detect.binary_detect": [[28, "aslm-model-analysis-boundary-detect-binary-detect"]], "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d": [[29, "aslm-model-analysis-boundary-detect-find-tissue-boundary-2d"]], "aslm.model.analysis.boundary_detect.has_tissue": [[30, "aslm-model-analysis-boundary-detect-has-tissue"]], "aslm.model.analysis.boundary_detect.map_boundary": [[31, "aslm-model-analysis-boundary-detect-map-boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "aslm.model.analysis.camera.compute_flatfield_map": [[33, "aslm-model-analysis-camera-compute-flatfield-map"]], "aslm.model.analysis.camera.compute_noise_sigma": [[34, "aslm-model-analysis-camera-compute-noise-sigma"]], "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map": [[35, "aslm-model-analysis-camera-compute-scmos-offset-and-variance-map"]], "aslm.model.analysis.camera.compute_signal_to_noise": [[36, "aslm-model-analysis-camera-compute-signal-to-noise"]], "aslm.model.analysis.detection": [[37, "module-aslm.model.analysis.detection"]], "aslm.model.analysis.detection.add_median_border": [[38, "aslm-model-analysis-detection-add-median-border"]], "aslm.model.analysis.detection.combine_images": [[39, "aslm-model-analysis-detection-combine-images"]], "aslm.model.analysis.detection.log_detection": [[40, "aslm-model-analysis-detection-log-detection"]], "aslm.model.analysis.detection.make_inside_image": [[41, "aslm-model-analysis-detection-make-inside-image"]], "aslm.model.analysis.detection.make_normalized_image": [[42, "aslm-model-analysis-detection-make-normalized-image"]], "aslm.model.analysis.detection.make_sphere_3D": [[43, "aslm-model-analysis-detection-make-sphere-3d"]], "aslm.model.analysis.detection.multiscale_surface_filter_3D": [[44, "aslm-model-analysis-detection-multiscale-surface-filter-3d"]], "aslm.model.analysis.detection.surface_filter_gauss_3D": [[45, "aslm-model-analysis-detection-surface-filter-gauss-3d"]], "aslm.model.analysis.detection.three_level_segmentation": [[46, "aslm-model-analysis-detection-three-level-segmentation"]], "aslm.model.analysis.image_contrast": [[47, "module-aslm.model.analysis.image_contrast"]], "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy": [[48, "aslm-model-analysis-image-contrast-fast-normalized-dct-shannon-entropy"]], "aslm.model.concurrency": [[49, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[50, "module-aslm.model.concurrency.concurrency_tools"]], "aslm.model.concurrency.concurrency_tools.CustodyThread": [[51, "aslm-model-concurrency-concurrency-tools-custodythread"]], "aslm.model.concurrency.concurrency_tools.FancyThread": [[52, "aslm-model-concurrency-concurrency-tools-fancythread"]], "aslm.model.concurrency.concurrency_tools.MyTestClass": [[53, "aslm-model-concurrency-concurrency-tools-mytestclass"]], "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess": [[54, "aslm-model-concurrency-concurrency-tools-objectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.PoliteThread": [[55, "aslm-model-concurrency-concurrency-tools-politethread"]], "aslm.model.concurrency.concurrency_tools.ResultThread": [[56, "aslm-model-concurrency-concurrency-tools-resultthread"]], "aslm.model.concurrency.concurrency_tools.SharedNDArray": [[57, "aslm-model-concurrency-concurrency-tools-sharedndarray"]], "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess": [[58, "aslm-model-concurrency-concurrency-tools-testobjectinsubprocess"]], "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread": [[59, "aslm-model-concurrency-concurrency-tools-testresultthreadandcustodythread"]], "aslm.model.concurrency.concurrency_tools.TestSharedNDArray": [[60, "aslm-model-concurrency-concurrency-tools-testsharedndarray"]], "aslm.model.concurrency.proxy_objects": [[61, "module-aslm.model.concurrency.proxy_objects"]], "aslm.model.concurrency.proxy_objects.ProxyManager": [[62, "aslm-model-concurrency-proxy-objects-proxymanager"]], "aslm.model.concurrency.proxy_objects.ProxyObject": [[63, "aslm-model-concurrency-proxy-objects-proxyobject"]], "aslm.model.concurrency.proxy_objects.launch_custody_thread": [[64, "aslm-model-concurrency-proxy-objects-launch-custody-thread"]], "aslm.model.concurrency.proxy_objects.launch_thread": [[65, "aslm-model-concurrency-proxy-objects-launch-thread"]], "aslm.model.data_sources": [[66, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[67, "module-aslm.model.data_sources.bdv_data_source"]], "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource": [[68, "aslm-model-data-sources-bdv-data-source-bigdataviewerdatasource"]], "aslm.model.data_sources.data_source": [[69, "module-aslm.model.data_sources.data_source"]], "aslm.model.data_sources.data_source.DataSource": [[70, "aslm-model-data-sources-data-source-datasource"]], "aslm.model.data_sources.get_data_source": [[71, "aslm-model-data-sources-get-data-source"]], "aslm.model.data_sources.tiff_data_source": [[72, "module-aslm.model.data_sources.tiff_data_source"]], "aslm.model.data_sources.tiff_data_source.TiffDataSource": [[73, "aslm-model-data-sources-tiff-data-source-tiffdatasource"]], "aslm.model.device_startup_functions": [[74, "module-aslm.model.device_startup_functions"]], "aslm.model.device_startup_functions.DummyDeviceConnection": [[75, "aslm-model-device-startup-functions-dummydeviceconnection"]], "aslm.model.device_startup_functions.auto_redial": [[76, "aslm-model-device-startup-functions-auto-redial"]], "aslm.model.device_startup_functions.device_not_found": [[77, "aslm-model-device-startup-functions-device-not-found"]], "aslm.model.device_startup_functions.load_camera_connection": [[78, "aslm-model-device-startup-functions-load-camera-connection"]], "aslm.model.device_startup_functions.load_devices": [[79, "aslm-model-device-startup-functions-load-devices"]], "aslm.model.device_startup_functions.load_filter_wheel_connection": [[80, "aslm-model-device-startup-functions-load-filter-wheel-connection"]], "aslm.model.device_startup_functions.load_stages": [[81, "aslm-model-device-startup-functions-load-stages"]], "aslm.model.device_startup_functions.load_zoom_connection": [[82, "aslm-model-device-startup-functions-load-zoom-connection"]], "aslm.model.device_startup_functions.start_camera": [[83, "aslm-model-device-startup-functions-start-camera"]], "aslm.model.device_startup_functions.start_daq": [[84, "aslm-model-device-startup-functions-start-daq"]], "aslm.model.device_startup_functions.start_filter_wheel": [[85, "aslm-model-device-startup-functions-start-filter-wheel"]], "aslm.model.device_startup_functions.start_galvo": [[86, "aslm-model-device-startup-functions-start-galvo"]], "aslm.model.device_startup_functions.start_lasers": [[87, "aslm-model-device-startup-functions-start-lasers"]], "aslm.model.device_startup_functions.start_remote_focus_device": [[88, "aslm-model-device-startup-functions-start-remote-focus-device"]], "aslm.model.device_startup_functions.start_shutter": [[89, "aslm-model-device-startup-functions-start-shutter"]], "aslm.model.device_startup_functions.start_stage": [[90, "aslm-model-device-startup-functions-start-stage"]], "aslm.model.device_startup_functions.start_zoom": [[91, "aslm-model-device-startup-functions-start-zoom"]], "aslm.model.devices": [[92, "module-aslm.model.devices"]], "aslm.model.devices.APIs": [[93, "module-aslm.model.devices.APIs"]], "aslm.model.devices.APIs.coherent": [[94, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.APIs.dynamixel": [[95, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions": [[96, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device": [[97, "aslm-model-devices-apis-dynamixel-dynamixel-functions-create-mock-dxl-device"]], "aslm.model.devices.APIs.omicron": [[98, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[99, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[100, "module-aslm.model.devices.camera.camera_base"]], "aslm.model.devices.camera.camera_base.CameraBase": [[101, "aslm-model-devices-camera-camera-base-camerabase"]], "aslm.model.devices.camera.camera_hamamatsu": [[102, "module-aslm.model.devices.camera.camera_hamamatsu"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca": [[103, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorca"]], "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning": [[104, "aslm-model-devices-camera-camera-hamamatsu-hamamatsuorcalightning"]], "aslm.model.devices.camera.camera_photometrics": [[105, "module-aslm.model.devices.camera.camera_photometrics"]], "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix": [[106, "aslm-model-devices-camera-camera-photometrics-photometricskinetix"]], "aslm.model.devices.camera.camera_synthetic": [[107, "module-aslm.model.devices.camera.camera_synthetic"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCamera": [[108, "aslm-model-devices-camera-camera-synthetic-syntheticcamera"]], "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController": [[109, "aslm-model-devices-camera-camera-synthetic-syntheticcameracontroller"]], "aslm.model.devices.daq": [[110, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[111, "module-aslm.model.devices.daq.daq_base"]], "aslm.model.devices.daq.daq_base.DAQBase": [[112, "aslm-model-devices-daq-daq-base-daqbase"]], "aslm.model.devices.daq.daq_synthetic": [[113, "module-aslm.model.devices.daq.daq_synthetic"]], "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ": [[114, "aslm-model-devices-daq-daq-synthetic-syntheticdaq"]], "aslm.model.devices.filter_wheel": [[115, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[116, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel": [[117, "aslm-model-devices-filter-wheel-filter-wheel-asi-asifilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection": [[118, "aslm-model-devices-filter-wheel-filter-wheel-asi-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[119, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase": [[120, "aslm-model-devices-filter-wheel-filter-wheel-base-filterwheelbase"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[121, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel": [[122, "aslm-model-devices-filter-wheel-filter-wheel-sutter-sutterfilterwheel"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection": [[123, "aslm-model-devices-filter-wheel-filter-wheel-sutter-build-filter-wheel-connection"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel": [[125, "aslm-model-devices-filter-wheel-filter-wheel-synthetic-syntheticfilterwheel"]], "aslm.model.devices.galvo": [[126, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[127, "module-aslm.model.devices.galvo.galvo_base"]], "aslm.model.devices.galvo.galvo_base.GalvoBase": [[128, "aslm-model-devices-galvo-galvo-base-galvobase"]], "aslm.model.devices.galvo.galvo_synthetic": [[129, "module-aslm.model.devices.galvo.galvo_synthetic"]], "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo": [[130, "aslm-model-devices-galvo-galvo-synthetic-syntheticgalvo"]], "aslm.model.devices.lasers": [[131, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[132, "module-aslm.model.devices.lasers.laser_base"]], "aslm.model.devices.lasers.laser_base.LaserBase": [[133, "aslm-model-devices-lasers-laser-base-laserbase"]], "aslm.model.devices.lasers.laser_synthetic": [[134, "module-aslm.model.devices.lasers.laser_synthetic"]], "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser": [[135, "aslm-model-devices-lasers-laser-synthetic-syntheticlaser"]], "aslm.model.devices.objectives": [[136, "module-aslm.model.devices.objectives"]], "aslm.model.devices.objectives.Objective": [[137, "aslm-model-devices-objectives-objective"]], "aslm.model.devices.remote_focus": [[138, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[139, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase": [[140, "aslm-model-devices-remote-focus-remote-focus-base-remotefocusbase"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[141, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus": [[142, "aslm-model-devices-remote-focus-remote-focus-synthetic-syntheticremotefocus"]], "aslm.model.devices.shutter": [[143, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[144, "module-aslm.model.devices.shutter.laser_shutter_base"]], "aslm.model.devices.shutter.laser_shutter_base.ShutterBase": [[145, "aslm-model-devices-shutter-laser-shutter-base-shutterbase"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[146, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter": [[147, "aslm-model-devices-shutter-laser-shutter-synthetic-syntheticshutter"]], "aslm.model.devices.stages": [[148, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[149, "module-aslm.model.devices.stages.stage_asi"]], "aslm.model.devices.stages.stage_asi.ASIStage": [[150, "aslm-model-devices-stages-stage-asi-asistage"]], "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection": [[151, "aslm-model-devices-stages-stage-asi-build-asi-stage-connection"]], "aslm.model.devices.stages.stage_base": [[152, "module-aslm.model.devices.stages.stage_base"]], "aslm.model.devices.stages.stage_base.StageBase": [[153, "aslm-model-devices-stages-stage-base-stagebase"]], "aslm.model.devices.stages.stage_galvo": [[154, "module-aslm.model.devices.stages.stage_galvo"]], "aslm.model.devices.stages.stage_galvo.GalvoNIStage": [[155, "aslm-model-devices-stages-stage-galvo-galvonistage"]], "aslm.model.devices.stages.stage_mcl": [[156, "module-aslm.model.devices.stages.stage_mcl"]], "aslm.model.devices.stages.stage_mcl.MCLStage": [[157, "aslm-model-devices-stages-stage-mcl-mclstage"]], "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection": [[158, "aslm-model-devices-stages-stage-mcl-build-mclstage-connection"]], "aslm.model.devices.stages.stage_pi": [[159, "module-aslm.model.devices.stages.stage_pi"]], "aslm.model.devices.stages.stage_pi.PIStage": [[160, "aslm-model-devices-stages-stage-pi-pistage"]], "aslm.model.devices.stages.stage_pi.build_PIStage_connection": [[161, "aslm-model-devices-stages-stage-pi-build-pistage-connection"]], "aslm.model.devices.stages.stage_sutter": [[162, "module-aslm.model.devices.stages.stage_sutter"]], "aslm.model.devices.stages.stage_sutter.SutterStage": [[163, "aslm-model-devices-stages-stage-sutter-sutterstage"]], "aslm.model.devices.stages.stage_sutter.build_MP285_connection": [[164, "aslm-model-devices-stages-stage-sutter-build-mp285-connection"]], "aslm.model.devices.stages.stage_synthetic": [[165, "module-aslm.model.devices.stages.stage_synthetic"]], "aslm.model.devices.stages.stage_synthetic.SyntheticStage": [[166, "aslm-model-devices-stages-stage-synthetic-syntheticstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[167, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage": [[168, "aslm-model-devices-stages-stage-tl-kcube-inertial-tlkimstage"]], "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection": [[169, "aslm-model-devices-stages-stage-tl-kcube-inertial-build-tlkimstage-connection"]], "aslm.model.devices.zoom": [[170, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[171, "module-aslm.model.devices.zoom.zoom_base"]], "aslm.model.devices.zoom.zoom_base.ZoomBase": [[172, "aslm-model-devices-zoom-zoom-base-zoombase"]], "aslm.model.devices.zoom.zoom_dynamixel": [[173, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom": [[174, "aslm-model-devices-zoom-zoom-dynamixel-dynamixelzoom"]], "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection": [[175, "aslm-model-devices-zoom-zoom-dynamixel-build-dynamixel-zoom-connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[176, "module-aslm.model.devices.zoom.zoom_synthetic"]], "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom": [[177, "aslm-model-devices-zoom-zoom-synthetic-syntheticzoom"]], "aslm.model.dummy": [[178, "module-aslm.model.dummy"]], "aslm.model.dummy.DummyController": [[179, "aslm-model-dummy-dummycontroller"]], "aslm.model.dummy.DummyDevice": [[180, "aslm-model-dummy-dummydevice"]], "aslm.model.dummy.DummyMicroscope": [[181, "aslm-model-dummy-dummymicroscope"]], "aslm.model.dummy.DummyModel": [[182, "aslm-model-dummy-dummymodel"]], "aslm.model.features": [[183, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[184, "module-aslm.model.features.auto_tile_scan"]], "aslm.model.features.auto_tile_scan.CalculateFocusRange": [[185, "aslm-model-features-auto-tile-scan-calculatefocusrange"]], "Parameters:": [[185, "parameters"], [185, "id1"], [185, "id2"], [185, "id4"], [185, "id6"], [185, "id8"], [185, "id10"], [190, "parameters"], [190, "id1"], [190, "id2"], [191, "parameters"], [191, "id3"], [191, "id6"], [191, "id8"], [191, "id10"], [192, "parameters"], [192, "id1"], [193, "parameters"], [193, "id1"], [193, "id2"], [194, "parameters"], [194, "id1"], [194, "id2"], [195, "parameters"], [195, "id1"], [196, "parameters"], [196, "id1"], [197, "parameters"], [197, "id1"], [198, "parameters"], [198, "id1"], [198, "id2"], [198, "id4"], [198, "id6"], [198, "id8"], [199, "parameters"], [199, "id1"], [199, "id2"], [199, "id4"], [199, "id6"], [199, "id8"], [199, "id10"], [199, "id12"], [199, "id14"], [205, "parameters"], [206, "parameters"], [206, "id3"], [207, "parameters"], [207, "id3"], [207, "id6"], [208, "parameters"], [208, "id3"], [209, "parameters"], [209, "id3"], [209, "id6"], [210, "parameters"], [210, "id3"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [216, "parameters"], [216, "id1"], [217, "parameters"], [219, "parameters"], [223, "parameters"], [223, "id2"], [224, "parameters"], [224, "id2"], [225, "parameters"], [226, "parameters"], [227, "parameters"]], "Attributes:": [[185, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [197, "attributes"], [198, "attributes"], [199, "attributes"], [205, "attributes"], [207, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [216, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"]], "Methods:": [[185, "methods"], [190, "methods"], [191, "methods"], [192, "methods"], [193, "methods"], [194, "methods"], [195, "methods"], [196, "methods"], [197, "methods"], [198, "methods"], [199, "methods"], [205, "methods"], [206, "methods"], [207, "methods"], [208, "methods"], [209, "methods"], [210, "methods"], [216, "methods"], [223, "methods"], [224, "methods"], [225, "methods"]], "Notes:": [[185, "notes"], [190, "notes"], [191, "notes"], [192, "notes"], [193, "notes"], [194, "notes"], [195, "notes"], [196, "notes"], [197, "notes"], [198, "notes"], [199, "notes"], [205, "notes"], [206, "notes"], [206, "id6"], [207, "notes"], [208, "notes"], [208, "id6"], [209, "notes"], [210, "notes"], [211, "notes"], [212, "notes"], [213, "notes"], [214, "notes"], [216, "notes"], [217, "notes"], [219, "notes"], [226, "notes"], [227, "notes"]], "Returns:": [[185, "returns"], [185, "id3"], [185, "id5"], [185, "id7"], [185, "id9"], [185, "id11"], [190, "returns"], [190, "id3"], [191, "returns"], [191, "id7"], [191, "id9"], [191, "id11"], [192, "returns"], [193, "returns"], [193, "id3"], [194, "returns"], [194, "id3"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [198, "id3"], [198, "id5"], [198, "id7"], [198, "id9"], [199, "returns"], [199, "id3"], [199, "id5"], [199, "id7"], [199, "id9"], [199, "id11"], [199, "id13"], [199, "id15"], [207, "returns"], [207, "id9"], [209, "returns"], [209, "id9"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [217, "returns"], [223, "returns"], [223, "id1"], [223, "id3"], [223, "id4"], [223, "id5"], [223, "id6"], [224, "returns"], [224, "id1"], [224, "id3"], [224, "id4"], [224, "id5"], [224, "id6"], [225, "returns"], [226, "returns"], [227, "returns"]], "aslm.model.features.autofocus": [[186, "module-aslm.model.features.autofocus"]], "aslm.model.features.autofocus.Autofocus": [[187, "aslm-model-features-autofocus-autofocus"]], "aslm.model.features.autofocus.power_tent": [[188, "aslm-model-features-autofocus-power-tent"]], "aslm.model.features.common_features": [[189, "module-aslm.model.features.common_features"]], "aslm.model.features.common_features.ChangeResolution": [[190, "aslm-model-features-common-features-changeresolution"]], "aslm.model.features.common_features.ConProAcquisition": [[191, "aslm-model-features-common-features-conproacquisition"]], "aslm.model.features.common_features.FindTissueSimple2D": [[192, "aslm-model-features-common-features-findtissuesimple2d"]], "aslm.model.features.common_features.LoopByCount": [[193, "aslm-model-features-common-features-loopbycount"]], "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable": [[194, "aslm-model-features-common-features-movetonextpositioninmultipositiontable"]], "aslm.model.features.common_features.PrepareNextChannel": [[195, "aslm-model-features-common-features-preparenextchannel"]], "aslm.model.features.common_features.Snap": [[196, "aslm-model-features-common-features-snap"]], "aslm.model.features.common_features.StackPause": [[197, "aslm-model-features-common-features-stackpause"]], "aslm.model.features.common_features.WaitToContinue": [[198, "aslm-model-features-common-features-waittocontinue"]], "aslm.model.features.common_features.ZStackAcquisition": [[199, "aslm-model-features-common-features-zstackacquisition"]], "aslm.model.features.constant_velocity_acquisition": [[200, "module-aslm.model.features.constant_velocity_acquisition"]], "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition": [[201, "aslm-model-features-constant-velocity-acquisition-constantvelocityacquisition"]], "aslm.model.features.dummy_detective": [[202, "module-aslm.model.features.dummy_detective"]], "aslm.model.features.dummy_detective.Dummy_Detective": [[203, "aslm-model-features-dummy-detective-dummy-detective"]], "aslm.model.features.feature_container": [[204, "module-aslm.model.features.feature_container"]], "aslm.model.features.feature_container.Container": [[205, "aslm-model-features-feature-container-container"]], "aslm.model.features.feature_container.DataContainer": [[206, "aslm-model-features-feature-container-datacontainer"]], "aslm.model.features.feature_container.DataNode": [[207, "aslm-model-features-feature-container-datanode"]], "aslm.model.features.feature_container.SignalContainer": [[208, "aslm-model-features-feature-container-signalcontainer"]], "aslm.model.features.feature_container.SignalNode": [[209, "aslm-model-features-feature-container-signalnode"]], "aslm.model.features.feature_container.TreeNode": [[210, "aslm-model-features-feature-container-treenode"]], "aslm.model.features.feature_container.dummy_True": [[211, "aslm-model-features-feature-container-dummy-true"]], "aslm.model.features.feature_container.dummy_func": [[212, "aslm-model-features-feature-container-dummy-func"]], "aslm.model.features.feature_container.get_registered_funcs": [[213, "aslm-model-features-feature-container-get-registered-funcs"]], "aslm.model.features.feature_container.load_features": [[214, "aslm-model-features-feature-container-load-features"]], "aslm.model.features.feature_related_functions": [[215, "module-aslm.model.features.feature_related_functions"]], "aslm.model.features.feature_related_functions.SharedList": [[216, "aslm-model-features-feature-related-functions-sharedlist"]], "aslm.model.features.feature_related_functions.convert_feature_list_to_str": [[217, "aslm-model-features-feature-related-functions-convert-feature-list-to-str"]], "Example:": [[217, "example"], [219, "example"], [226, "example"]], "]": [[217, "id3"], [219, "id5"]], "aslm.model.features.feature_related_functions.convert_str_to_feature_list": [[218, "aslm-model-features-feature-related-functions-convert-str-to-feature-list"]], "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions": [[219, "aslm-model-features-feature-related-functions-load-dynamic-parameter-functions"]], "aslm.model.features.image_writer": [[220, "module-aslm.model.features.image_writer"]], "aslm.model.features.image_writer.ImageWriter": [[221, "aslm-model-features-image-writer-imagewriter"]], "aslm.model.features.remove_empty_tiles": [[222, "module-aslm.model.features.remove_empty_tiles"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStack": [[223, "aslm-model-features-remove-empty-tiles-detecttissueinstack"]], "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord": [[224, "aslm-model-features-remove-empty-tiles-detecttissueinstackandrecord"]], "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions": [[225, "aslm-model-features-remove-empty-tiles-removeemptypositions"]], "aslm.model.features.remove_empty_tiles.detect_tissue": [[226, "aslm-model-features-remove-empty-tiles-detect-tissue"]], "aslm.model.features.remove_empty_tiles.detect_tissue2": [[227, "aslm-model-features-remove-empty-tiles-detect-tissue2"]], "aslm.model.features.restful_features": [[228, "module-aslm.model.features.restful_features"]], "aslm.model.features.restful_features.IlastikSegmentation": [[229, "aslm-model-features-restful-features-ilastiksegmentation"]], "aslm.model.features.restful_features.prepare_service": [[230, "aslm-model-features-restful-features-prepare-service"]], "aslm.model.features.volume_search": [[231, "module-aslm.model.features.volume_search"]], "aslm.model.features.volume_search.VolumeSearch": [[232, "aslm-model-features-volume-search-volumesearch"]], "aslm.model.features.volume_search.draw_box": [[233, "aslm-model-features-volume-search-draw-box"]], "aslm.model.metadata_sources": [[234, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[235, "module-aslm.model.metadata_sources.bdv_metadata"]], "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata": [[236, "aslm-model-metadata-sources-bdv-metadata-bigdataviewermetadata"]], "aslm.model.metadata_sources.metadata": [[237, "module-aslm.model.metadata_sources.metadata"]], "aslm.model.metadata_sources.metadata.Metadata": [[238, "aslm-model-metadata-sources-metadata-metadata"]], "aslm.model.metadata_sources.metadata.XMLMetadata": [[239, "aslm-model-metadata-sources-metadata-xmlmetadata"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[240, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata": [[241, "aslm-model-metadata-sources-ome-tiff-metadata-ometiffmetadata"]], "aslm.model.microscope": [[242, "module-aslm.model.microscope"]], "aslm.model.microscope.Microscope": [[243, "aslm-model-microscope-microscope"]], "aslm.model.model": [[244, "module-aslm.model.model"]], "aslm.model.model.Model": [[245, "aslm-model-model-model"]], "aslm.model.waveforms": [[246, "module-aslm.model.waveforms"]], "aslm.model.waveforms.camera_exposure": [[247, "aslm-model-waveforms-camera-exposure"]], "aslm.model.waveforms.dc_value": [[248, "aslm-model-waveforms-dc-value"]], "aslm.model.waveforms.remote_focus_ramp": [[249, "aslm-model-waveforms-remote-focus-ramp"]], "aslm.model.waveforms.sawtooth": [[250, "aslm-model-waveforms-sawtooth"]], "aslm.model.waveforms.sine_wave": [[251, "aslm-model-waveforms-sine-wave"]], "aslm.model.waveforms.single_pulse": [[252, "aslm-model-waveforms-single-pulse"]], "aslm.model.waveforms.smooth_waveform": [[253, "aslm-model-waveforms-smooth-waveform"]], "aslm.model.waveforms.square": [[254, "aslm-model-waveforms-square"]], "aslm.tools": [[255, "module-aslm.tools"]], "aslm.tools.beams": [[256, "module-aslm.tools.beams"]], "aslm.tools.beams.fit_gaussian_beam_error": [[257, "aslm-tools-beams-fit-gaussian-beam-error"]], "aslm.tools.beams.fit_gaussian_beam_mse": [[258, "aslm-tools-beams-fit-gaussian-beam-mse"]], "aslm.tools.beams.gaussian_beam": [[259, "aslm-tools-beams-gaussian-beam"]], "aslm.tools.common_dict_tools": [[260, "module-aslm.tools.common_dict_tools"]], "aslm.tools.common_dict_tools.update_stage_dict": [[261, "aslm-tools-common-dict-tools-update-stage-dict"]], "aslm.tools.common_functions": [[262, "module-aslm.tools.common_functions"]], "aslm.tools.common_functions.VariableWithLock": [[263, "aslm-tools-common-functions-variablewithlock"]], "aslm.tools.common_functions.build_ref_name": [[264, "aslm-tools-common-functions-build-ref-name"]], "aslm.tools.common_functions.combine_funcs": [[265, "aslm-tools-common-functions-combine-funcs"]], "aslm.tools.common_functions.copy_proxy_object": [[266, "aslm-tools-common-functions-copy-proxy-object"]], "aslm.tools.common_functions.load_module_from_file": [[267, "aslm-tools-common-functions-load-module-from-file"]], "aslm.tools.decorators": [[268, "module-aslm.tools.decorators"]], "aslm.tools.decorators.FeatureList": [[269, "aslm-tools-decorators-featurelist"]], "aslm.tools.decorators.function_timer": [[270, "aslm-tools-decorators-function-timer"]], "aslm.tools.file_functions": [[271, "module-aslm.tools.file_functions"]], "aslm.tools.file_functions.create_save_path": [[272, "aslm-tools-file-functions-create-save-path"]], "aslm.tools.file_functions.delete_folder": [[273, "aslm-tools-file-functions-delete-folder"]], "aslm.tools.file_functions.load_yaml_file": [[274, "aslm-tools-file-functions-load-yaml-file"]], "aslm.tools.file_functions.save_yaml_file": [[275, "aslm-tools-file-functions-save-yaml-file"]], "aslm.tools.image": [[276, "module-aslm.tools.image"]], "aslm.tools.image.create_arrow_image": [[277, "aslm-tools-image-create-arrow-image"]], "aslm.tools.image.text_array": [[278, "aslm-tools-image-text-array"]], "aslm.tools.image_loaders": [[279, "module-aslm.tools.image_loaders"]], "aslm.tools.image_loaders.LazyTiff": [[280, "aslm-tools-image-loaders-lazytiff"]], "aslm.tools.main_functions": [[281, "module-aslm.tools.main_functions"]], "aslm.tools.main_functions.create_parser": [[282, "aslm-tools-main-functions-create-parser"]], "aslm.tools.main_functions.evaluate_parser_input_arguments": [[283, "aslm-tools-main-functions-evaluate-parser-input-arguments"]], "aslm.tools.multipos_table_tools": [[284, "module-aslm.tools.multipos_table_tools"]], "aslm.tools.multipos_table_tools.calc_num_tiles": [[285, "aslm-tools-multipos-table-tools-calc-num-tiles"]], "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box": [[286, "aslm-tools-multipos-table-tools-compute-tiles-from-bounding-box"]], "aslm.tools.multipos_table_tools.sign": [[287, "aslm-tools-multipos-table-tools-sign"]], "aslm.tools.multipos_table_tools.update_table": [[288, "aslm-tools-multipos-table-tools-update-table"]], "aslm.tools.project_stats": [[289, "module-aslm.tools.project_stats"]], "aslm.tools.project_stats.countlines": [[290, "aslm-tools-project-stats-countlines"]], "aslm.tools.sdf": [[291, "module-aslm.tools.sdf"]], "aslm.tools.sdf.box": [[292, "aslm-tools-sdf-box"]], "aslm.tools.sdf.sphere": [[293, "aslm-tools-sdf-sphere"]], "aslm.tools.sdf.volume_from_sdf": [[294, "aslm-tools-sdf-volume-from-sdf"]], "aslm.tools.waveform_template_funcs": [[295, "module-aslm.tools.waveform_template_funcs"]], "aslm.tools.waveform_template_funcs.get_waveform_template_parameters": [[296, "aslm-tools-waveform-template-funcs-get-waveform-template-parameters"]], "aslm.tools.xml_tools": [[297, "module-aslm.tools.xml_tools"]], "aslm.tools.xml_tools.dict_to_xml": [[298, "aslm-tools-xml-tools-dict-to-xml"]], "aslm.tools.xml_tools.parse_xml": [[299, "aslm-tools-xml-tools-parse-xml"]], "aslm.view": [[300, "module-aslm.view"]], "aslm.view.custom_widgets": [[301, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[302, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[303, "module-aslm.view.popups"]], "API Reference": [[306, "api-reference"]], "Configuring ASLM": [[307, "configuring-aslm"]], "Configuration.yaml": [[307, "configuration-yaml"]], "Hardware Section": [[307, "hardware-section"], [316, "hardware-section"]], "Microscope Section": [[307, "microscope-section"], [316, "microscope-section"]], "Configuring stages": [[307, "configuring-stages"]], "GUI Section": [[307, "gui-section"], [316, "gui-section"]], "Channels": [[307, "channels"]], "Stack Acquisition": [[307, "stack-acquisition"]], "Timepoint": [[307, "timepoint"]], "Example YAML Configuration": [[307, "example-yaml-configuration"]], "Contributing Guidelines": [[308, "contributing-guidelines"]], "General Principles": [[308, "general-principles"]], "Installation of Developer Dependencies": [[308, "installation-of-developer-dependencies"]], "Coding Style": [[308, "coding-style"]], "Documentation": [[308, "documentation"]], "Pre-Commit Hooks": [[308, "pre-commit-hooks"]], "Dictionary Parsing": [[308, "dictionary-parsing"]], "Unit Tests": [[308, "unit-tests"]], "Developing with a Mac": [[308, "developing-with-a-mac"]], "Adding New Hardware": [[309, "adding-new-hardware"]], "Scientific Units": [[309, "scientific-units"]], "How to Add New Hardware": [[309, "how-to-add-new-hardware"]], "Contributing to ASLM": [[310, "contributing-to-aslm"]], "Adding New Model Features": [[311, "adding-new-model-features"]], "Feature Container": [[313, "feature-container"]], "Introduction": [[313, "introduction"]], "Currently Implemented Features": [[313, "currently-implemented-features"]], "The Feature Object": [[313, "the-feature-object"]], "Creating Custom Features": [[313, "creating-custom-features"]], "Combining Features": [[313, "combining-features"]], "Loading Custom Functions": [[313, "loading-custom-functions"]], "Editing Function Parameters": [[313, "editing-function-parameters"]], "Deleting Features": [[313, "deleting-features"]], "Microscope Implementations": [[314, "microscope-implementations"]], "Multiscale Microscope": [[314, "multiscale-microscope"]], "Expansion ASLM": [[314, "expansion-aslm"]], "OPM-V2": [[314, "opm-v2"]], "CT-ASLM-V1": [[314, "ct-aslm-v1"]], "CT-ASLM-V2": [[314, "ct-aslm-v2"]], "Spectral TIRF": [[314, "spectral-tirf"]], "Autonomous Software for Light Microscopy": [[315, "autonomous-software-for-light-microscopy"]], "Project Philosophy": [[315, "project-philosophy"]], "Contents": [[315, "contents"]], "Authors": [[315, "authors"]], "Index and search": [[315, "index-and-search"]], "Software Configuration": [[316, "software-configuration"]], "Configuration File": [[316, "configuration-file"]], "DAQ Section": [[316, "daq-section"]], "Camera Section": [[316, "camera-section"]], "Remote Focus Section": [[316, "remote-focus-section"]], "Galvo Section": [[316, "galvo-section"]], "Filter Wheel Section": [[316, "filter-wheel-section"]], "Stage Section": [[316, "stage-section"]], "Stage Axes Definition": [[316, "stage-axes-definition"]], "Joystick Axes Definition": [[316, "joystick-axes-definition"]], "Zoom Section": [[316, "zoom-section"]], "Shutter Section": [[316, "shutter-section"]], "Laser Section": [[316, "laser-section"]], "Waveform Constants File": [[316, "waveform-constants-file"]], "Remote Constants Section": [[316, "remote-constants-section"]], "Galvo Constants Section": [[316, "galvo-constants-section"]], "Other Constants Section": [[316, "other-constants-section"]], "Waveform Templates File": [[316, "waveform-templates-file"]], "Rest API Configuration File": [[316, "rest-api-configuration-file"]], "Software Installation": [[317, "software-installation"]], "Download Git": [[317, "download-git"]], "Setup your Python Environment": [[317, "setup-your-python-environment"]], "Troubleshooting": [[317, "troubleshooting"]], "Supported Hardware": [[318, "supported-hardware"]], "Data Acquisition Card": [[318, "data-acquisition-card"]], "NI": [[318, "ni"]], "PCIe-6738": [[318, "pcie-6738"]], "PXI-6259": [[318, "pxi-6259"]], "PXI-6723": [[318, "pxi-6723"]], "Cameras": [[318, "cameras"]], "Hamamatsu Flash 4.0, Fusion, and Lightning": [[318, "hamamatsu-flash-4-0-fusion-and-lightning"]], "Photometrics Iris 15": [[318, "photometrics-iris-15"]], "Voicecoil": [[318, "voicecoil"]], "Equipment Solutions": [[318, "equipment-solutions"]], "Thorlabs BLINK": [[318, "thorlabs-blink"]], "Stages": [[318, "stages"]], "ASI Tiger Controller": [[318, "asi-tiger-controller"]], "Sutter": [[318, "sutter"], [318, "id1"]], "Physik Instrumente": [[318, "physik-instrumente"]], "Thorlabs": [[318, "thorlabs"], [318, "id2"]], "Analog Controlled (Galvo/Piezo/etc.)": [[318, "analog-controlled-galvo-piezo-etc"]], "Deformable Mirrors": [[318, "deformable-mirrors"]], "Imagine Optics": [[318, "imagine-optics"]], "Filter Wheels": [[318, "filter-wheels"]], "ASI": [[318, "asi"]], "Galvanometers": [[318, "galvanometers"]], "Cambridge Technologies/Novanta": [[318, "cambridge-technologies-novanta"]], "ScannerMAX": [[318, "scannermax"]], "Lasers": [[318, "lasers"]], "Coherent": [[318, "coherent"]], "Omicron": [[318, "omicron"]], "Shutters": [[318, "shutters"]], "Mechanical Zoom": [[318, "mechanical-zoom"]], "Dynamixel": [[318, "dynamixel"]]}, "indexentries": {"aslm.config": [[0, "module-aslm.config"]], "module": [[0, "module-aslm.config"], [1, "module-aslm.config.config"], [9, "module-aslm.controller"], [10, "module-aslm.controller.configuration_controller"], [12, "module-aslm.controller.thread_pool"], [16, "module-aslm.log_files"], [17, "module-aslm.log_files.filters"], [20, "module-aslm.log_files.log_functions"], [25, "module-aslm.model"], [26, "module-aslm.model.analysis"], [27, "module-aslm.model.analysis.boundary_detect"], [32, "module-aslm.model.analysis.camera"], [37, "module-aslm.model.analysis.detection"], [47, "module-aslm.model.analysis.image_contrast"], [49, "module-aslm.model.concurrency"], [50, "module-aslm.model.concurrency.concurrency_tools"], [61, "module-aslm.model.concurrency.proxy_objects"], [66, "module-aslm.model.data_sources"], [67, "module-aslm.model.data_sources.bdv_data_source"], [69, "module-aslm.model.data_sources.data_source"], [72, "module-aslm.model.data_sources.tiff_data_source"], [74, "module-aslm.model.device_startup_functions"], [92, "module-aslm.model.devices"], [93, "module-aslm.model.devices.APIs"], [94, "module-aslm.model.devices.APIs.coherent"], [95, "module-aslm.model.devices.APIs.dynamixel"], [96, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"], [98, "module-aslm.model.devices.APIs.omicron"], [99, "module-aslm.model.devices.camera"], [100, "module-aslm.model.devices.camera.camera_base"], [102, "module-aslm.model.devices.camera.camera_hamamatsu"], [105, "module-aslm.model.devices.camera.camera_photometrics"], [107, "module-aslm.model.devices.camera.camera_synthetic"], [110, "module-aslm.model.devices.daq"], [111, "module-aslm.model.devices.daq.daq_base"], [113, "module-aslm.model.devices.daq.daq_synthetic"], [115, "module-aslm.model.devices.filter_wheel"], [116, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"], [119, "module-aslm.model.devices.filter_wheel.filter_wheel_base"], [121, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"], [124, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"], [126, "module-aslm.model.devices.galvo"], [127, "module-aslm.model.devices.galvo.galvo_base"], [129, "module-aslm.model.devices.galvo.galvo_synthetic"], [131, "module-aslm.model.devices.lasers"], [132, "module-aslm.model.devices.lasers.laser_base"], [134, "module-aslm.model.devices.lasers.laser_synthetic"], [136, "module-aslm.model.devices.objectives"], [138, "module-aslm.model.devices.remote_focus"], [139, "module-aslm.model.devices.remote_focus.remote_focus_base"], [141, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"], [143, "module-aslm.model.devices.shutter"], [144, "module-aslm.model.devices.shutter.laser_shutter_base"], [146, "module-aslm.model.devices.shutter.laser_shutter_synthetic"], [148, "module-aslm.model.devices.stages"], [149, "module-aslm.model.devices.stages.stage_asi"], [152, "module-aslm.model.devices.stages.stage_base"], [154, "module-aslm.model.devices.stages.stage_galvo"], [156, "module-aslm.model.devices.stages.stage_mcl"], [159, "module-aslm.model.devices.stages.stage_pi"], [162, "module-aslm.model.devices.stages.stage_sutter"], [165, "module-aslm.model.devices.stages.stage_synthetic"], [167, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"], [170, "module-aslm.model.devices.zoom"], [171, "module-aslm.model.devices.zoom.zoom_base"], [173, "module-aslm.model.devices.zoom.zoom_dynamixel"], [176, "module-aslm.model.devices.zoom.zoom_synthetic"], [178, "module-aslm.model.dummy"], [183, "module-aslm.model.features"], [184, "module-aslm.model.features.auto_tile_scan"], [186, "module-aslm.model.features.autofocus"], [189, "module-aslm.model.features.common_features"], [200, "module-aslm.model.features.constant_velocity_acquisition"], [202, "module-aslm.model.features.dummy_detective"], [204, "module-aslm.model.features.feature_container"], [215, "module-aslm.model.features.feature_related_functions"], [220, "module-aslm.model.features.image_writer"], [222, "module-aslm.model.features.remove_empty_tiles"], [228, "module-aslm.model.features.restful_features"], [231, "module-aslm.model.features.volume_search"], [234, "module-aslm.model.metadata_sources"], [235, "module-aslm.model.metadata_sources.bdv_metadata"], [237, "module-aslm.model.metadata_sources.metadata"], [240, "module-aslm.model.metadata_sources.ome_tiff_metadata"], [242, "module-aslm.model.microscope"], [244, "module-aslm.model.model"], [246, "module-aslm.model.waveforms"], [255, "module-aslm.tools"], [256, "module-aslm.tools.beams"], [260, "module-aslm.tools.common_dict_tools"], [262, "module-aslm.tools.common_functions"], [268, "module-aslm.tools.decorators"], [271, "module-aslm.tools.file_functions"], [276, "module-aslm.tools.image"], [279, "module-aslm.tools.image_loaders"], [281, "module-aslm.tools.main_functions"], [284, "module-aslm.tools.multipos_table_tools"], [289, "module-aslm.tools.project_stats"], [291, "module-aslm.tools.sdf"], [295, "module-aslm.tools.waveform_template_funcs"], [297, "module-aslm.tools.xml_tools"], [300, "module-aslm.view"], [301, "module-aslm.view.custom_widgets"], [302, "module-aslm.view.main_window_content"], [303, "module-aslm.view.popups"]], "aslm.config.config": [[1, "module-aslm.config.config"]], "build_nested_dict() (in module aslm.config.config)": [[2, "aslm.config.config.build_nested_dict"]], "get_aslm_path() (in module aslm.config.config)": [[3, "aslm.config.config.get_aslm_path"]], "get_configuration_paths() (in module aslm.config.config)": [[4, "aslm.config.config.get_configuration_paths"]], "load_configs() (in module aslm.config.config)": [[5, "aslm.config.config.load_configs"]], "update_config_dict() (in module aslm.config.config)": [[6, "aslm.config.config.update_config_dict"]], "verify_experiment_config() (in module aslm.config.config)": [[7, "aslm.config.config.verify_experiment_config"]], "verify_waveform_constants() (in module aslm.config.config)": [[8, "aslm.config.config.verify_waveform_constants"]], "aslm.controller": [[9, "module-aslm.controller"]], "aslm.controller.configuration_controller": [[10, "module-aslm.controller.configuration_controller"]], "configurationcontroller (class in aslm.controller.configuration_controller)": [[11, "aslm.controller.configuration_controller.ConfigurationController"]], "__init__() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.__init__"]], "camera_config_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_config_dict"]], "camera_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_flip_flags"]], "camera_pixels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.camera_pixels"]], "change_microscope() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.change_microscope"]], "channels_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.channels_info"]], "configuration (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.configuration"]], "daq_sample_rate (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.daq_sample_rate"]], "filter_wheel_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.filter_wheel_setting_dict"]], "galvo_num (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_num"]], "galvo_parameter_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.galvo_parameter_dict"]], "get_microscope_configuration_dict() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_microscope_configuration_dict"]], "get_stage_position_limits() (aslm.controller.configuration_controller.configurationcontroller method)": [[11, "aslm.controller.configuration_controller.ConfigurationController.get_stage_position_limits"]], "lasers_info (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.lasers_info"]], "microscope_config (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_config"]], "microscope_name (aslm.controller.configuration_controller.configurationcontroller attribute)": [[11, "aslm.controller.configuration_controller.ConfigurationController.microscope_name"]], "number_of_channels (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.number_of_channels"]], "remote_focus_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.remote_focus_dict"]], "stage_default_position (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_default_position"]], "stage_flip_flags (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_flip_flags"]], "stage_setting_dict (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_setting_dict"]], "stage_step (aslm.controller.configuration_controller.configurationcontroller property)": [[11, "aslm.controller.configuration_controller.ConfigurationController.stage_step"]], "aslm.controller.thread_pool": [[12, "module-aslm.controller.thread_pool"]], "selflockthread (class in aslm.controller.thread_pool)": [[13, "aslm.controller.thread_pool.SelfLockThread"]], "__init__() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.__init__"]], "daemon (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.daemon"]], "getname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.getName"]], "ident (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.ident"]], "isdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isDaemon"]], "islocked() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.isLocked"]], "is_alive() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.is_alive"]], "join() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.join"]], "name (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.name"]], "native_id (aslm.controller.thread_pool.selflockthread property)": [[13, "aslm.controller.thread_pool.SelfLockThread.native_id"]], "run() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.run"]], "selflock (aslm.controller.thread_pool.selflockthread attribute)": [[13, "aslm.controller.thread_pool.SelfLockThread.selfLock"]], "setdaemon() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setDaemon"]], "setname() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.setName"]], "start() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.start"]], "unlock() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.unlock"]], "wait() (aslm.controller.thread_pool.selflockthread method)": [[13, "aslm.controller.thread_pool.SelfLockThread.wait"]], "synchronizedthreadpool (class in aslm.controller.thread_pool)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool"]], "__init__() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.__init__"]], "clear() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.clear"]], "createthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.createThread"]], "getrunningthread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.getRunningThread"]], "globaltrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.globaltrace"]], "killthreadinlist() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.killThreadInList"]], "localtrace() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.localtrace"]], "movetodelete() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.moveToDelete"]], "registerresource() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.registerResource"]], "removethread() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.removeThread"]], "resources (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.resources"]], "threadtaskwrapping() (aslm.controller.thread_pool.synchronizedthreadpool method)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.threadTaskWrapping"]], "todeletelist (aslm.controller.thread_pool.synchronizedthreadpool attribute)": [[14, "aslm.controller.thread_pool.SynchronizedThreadPool.toDeleteList"]], "threadwaitlist (class in aslm.controller.thread_pool)": [[15, "aslm.controller.thread_pool.ThreadWaitlist"]], "__init__() (aslm.controller.thread_pool.threadwaitlist method)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.__init__"]], "waitlist (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlist"]], "waitlistlock (aslm.controller.thread_pool.threadwaitlist attribute)": [[15, "aslm.controller.thread_pool.ThreadWaitlist.waitlistLock"]], "aslm.log_files": [[16, "module-aslm.log_files"]], "aslm.log_files.filters": [[17, "module-aslm.log_files.filters"]], "nonperffilter (class in aslm.log_files.filters)": [[18, "aslm.log_files.filters.NonPerfFilter"]], "__init__() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.__init__"]], "filter() (aslm.log_files.filters.nonperffilter method)": [[18, "aslm.log_files.filters.NonPerfFilter.filter"]], "performancefilter (class in aslm.log_files.filters)": [[19, "aslm.log_files.filters.PerformanceFilter"]], "__init__() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.__init__"]], "filter() (aslm.log_files.filters.performancefilter method)": [[19, "aslm.log_files.filters.PerformanceFilter.filter"]], "aslm.log_files.log_functions": [[20, "module-aslm.log_files.log_functions"]], "find_filename() (in module aslm.log_files.log_functions)": [[21, "aslm.log_files.log_functions.find_filename"]], "log_setup() (in module aslm.log_files.log_functions)": [[22, "aslm.log_files.log_functions.log_setup"]], "main_process_listener() (in module aslm.log_files.log_functions)": [[23, "aslm.log_files.log_functions.main_process_listener"]], "update_nested_dict() (in module aslm.log_files.log_functions)": [[24, "aslm.log_files.log_functions.update_nested_dict"]], "aslm.model": [[25, "module-aslm.model"]], "aslm.model.analysis": [[26, "module-aslm.model.analysis"]], "aslm.model.analysis.boundary_detect": [[27, "module-aslm.model.analysis.boundary_detect"]], "binary_detect() (in module aslm.model.analysis.boundary_detect)": [[28, "aslm.model.analysis.boundary_detect.binary_detect"]], "find_tissue_boundary_2d() (in module aslm.model.analysis.boundary_detect)": [[29, "aslm.model.analysis.boundary_detect.find_tissue_boundary_2d"]], "has_tissue() (in module aslm.model.analysis.boundary_detect)": [[30, "aslm.model.analysis.boundary_detect.has_tissue"]], "map_boundary() (in module aslm.model.analysis.boundary_detect)": [[31, "aslm.model.analysis.boundary_detect.map_boundary"]], "aslm.model.analysis.camera": [[32, "module-aslm.model.analysis.camera"]], "compute_flatfield_map() (in module aslm.model.analysis.camera)": [[33, "aslm.model.analysis.camera.compute_flatfield_map"]], "compute_noise_sigma() (in module aslm.model.analysis.camera)": [[34, "aslm.model.analysis.camera.compute_noise_sigma"]], "compute_scmos_offset_and_variance_map() (in module aslm.model.analysis.camera)": [[35, "aslm.model.analysis.camera.compute_scmos_offset_and_variance_map"]], "compute_signal_to_noise() (in module aslm.model.analysis.camera)": [[36, "aslm.model.analysis.camera.compute_signal_to_noise"]], "aslm.model.analysis.detection": [[37, "module-aslm.model.analysis.detection"]], "add_median_border() (in module aslm.model.analysis.detection)": [[38, "aslm.model.analysis.detection.add_median_border"]], "combine_images() (in module aslm.model.analysis.detection)": [[39, "aslm.model.analysis.detection.combine_images"]], "log_detection() (in module aslm.model.analysis.detection)": [[40, "aslm.model.analysis.detection.log_detection"]], "make_inside_image() (in module aslm.model.analysis.detection)": [[41, "aslm.model.analysis.detection.make_inside_image"]], "make_normalized_image() (in module aslm.model.analysis.detection)": [[42, "aslm.model.analysis.detection.make_normalized_image"]], "make_sphere_3d() (in module aslm.model.analysis.detection)": [[43, "aslm.model.analysis.detection.make_sphere_3D"]], "multiscale_surface_filter_3d() (in module aslm.model.analysis.detection)": [[44, "aslm.model.analysis.detection.multiscale_surface_filter_3D"]], "surface_filter_gauss_3d() (in module aslm.model.analysis.detection)": [[45, "aslm.model.analysis.detection.surface_filter_gauss_3D"]], "three_level_segmentation() (in module aslm.model.analysis.detection)": [[46, "aslm.model.analysis.detection.three_level_segmentation"]], "aslm.model.analysis.image_contrast": [[47, "module-aslm.model.analysis.image_contrast"]], "fast_normalized_dct_shannon_entropy() (in module aslm.model.analysis.image_contrast)": [[48, "aslm.model.analysis.image_contrast.fast_normalized_dct_shannon_entropy"]], "aslm.model.concurrency": [[49, "module-aslm.model.concurrency"]], "aslm.model.concurrency.concurrency_tools": [[50, "module-aslm.model.concurrency.concurrency_tools"]], "custodythread (class in aslm.model.concurrency.concurrency_tools)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.join"]], "name (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.custodythread property)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.custodythread method)": [[51, "aslm.model.concurrency.concurrency_tools.CustodyThread.start"]], "fancythread (in module aslm.model.concurrency.concurrency_tools)": [[52, "aslm.model.concurrency.concurrency_tools.FancyThread"]], "mytestclass (class in aslm.model.concurrency.concurrency_tools)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.mytestclass method)": [[53, "aslm.model.concurrency.concurrency_tools.MyTestClass.time_it"]], "objectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[54, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess"]], "__init__() (aslm.model.concurrency.concurrency_tools.objectinsubprocess method)": [[54, "aslm.model.concurrency.concurrency_tools.ObjectInSubprocess.__init__"]], "politethread (in module aslm.model.concurrency.concurrency_tools)": [[55, "aslm.model.concurrency.concurrency_tools.PoliteThread"]], "resultthread (class in aslm.model.concurrency.concurrency_tools)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.__init__"]], "daemon (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.daemon"]], "getname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.getName"]], "get_result() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.get_result"]], "ident (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.ident"]], "isdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.isDaemon"]], "is_alive() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.is_alive"]], "join() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.join"]], "name (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.name"]], "native_id (aslm.model.concurrency.concurrency_tools.resultthread property)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.native_id"]], "run() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.run"]], "setdaemon() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.setDaemon"]], "setname() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.setName"]], "start() (aslm.model.concurrency.concurrency_tools.resultthread method)": [[56, "aslm.model.concurrency.concurrency_tools.ResultThread.start"]], "aligned (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ALIGNED"]], "behaved (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.BEHAVED"]], "carray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.CARRAY"]], "c_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.C_CONTIGUOUS"]], "farray (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FARRAY"]], "fnc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FNC"]], "forc (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.FORC"]], "f_contiguous (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.F_CONTIGUOUS"]], "owndata (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.OWNDATA"]], "sharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray"]], "t (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.T"]], "updateifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.UPDATEIFCOPY"]], "writeable (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEABLE"]], "writebackifcopy (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.WRITEBACKIFCOPY"]], "__init__() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.__init__"]], "all() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.all"]], "any() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.any"]], "argmax() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmax"]], "argmin() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argmin"]], "argpartition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argpartition"]], "argsort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.argsort"]], "astype() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.astype"]], "base (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.base"]], "byteswap() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.byteswap"]], "choose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.choose"]], "clip() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.clip"]], "compress() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.compress"]], "conj() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conj"]], "conjugate() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.conjugate"]], "copy() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.copy"]], "ctypes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ctypes"]], "cumprod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumprod"]], "cumsum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.cumsum"]], "data (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.data"]], "diagonal() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.diagonal"]], "dtype (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dtype"]], "dump() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dump"]], "dumps() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.dumps"]], "fill() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.fill"]], "flags (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flags"]], "flat (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flat"]], "flatten() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.flatten"]], "getfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.getfield"]], "imag (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.imag"]], "item() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.item"]], "itemset() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemset"]], "itemsize (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.itemsize"]], "max() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.max"]], "mean() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.mean"]], "min() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.min"]], "nbytes (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nbytes"]], "ndim (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ndim"]], "newbyteorder() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.newbyteorder"]], "nonzero() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.nonzero"]], "partition() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.partition"]], "prod() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.prod"]], "ptp() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ptp"]], "put() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.put"]], "ravel() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.ravel"]], "real (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.real"]], "repeat() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.repeat"]], "reshape() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.reshape"]], "resize() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.resize"]], "round() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.round"]], "searchsorted() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.searchsorted"]], "setfield() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setfield"]], "setflags() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.setflags"]], "shape (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.shape"]], "size (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.size"]], "sort() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sort"]], "squeeze() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.squeeze"]], "std() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.std"]], "strides (aslm.model.concurrency.concurrency_tools.sharedndarray attribute)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.strides"]], "sum() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.sum"]], "swapaxes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.swapaxes"]], "take() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.take"]], "tobytes() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tobytes"]], "tofile() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tofile"]], "tolist() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tolist"]], "tostring() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.tostring"]], "trace() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.trace"]], "transpose() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.transpose"]], "var() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.var"]], "view() (aslm.model.concurrency.concurrency_tools.sharedndarray method)": [[57, "aslm.model.concurrency.concurrency_tools.SharedNDArray.view"]], "testobjectinsubprocess (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess"]], "testobjectinsubprocess.testclass (class in aslm.model.concurrency.concurrency_tools)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.TestClass"]], "__init__() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.run"]], "test_incorrect_thread_management() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_incorrect_thread_management"]], "test_lock_with_waitlist() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_lock_with_waitlist"]], "test_object_in_subprocess_overhead() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_object_in_subprocess_overhead"]], "test_sending_shared_arrays() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.test_sending_shared_arrays"]], "time_it() (aslm.model.concurrency.concurrency_tools.testobjectinsubprocess method)": [[58, "aslm.model.concurrency.concurrency_tools.TestObjectInSubprocess.time_it"]], "testresultthreadandcustodythread (class in aslm.model.concurrency.concurrency_tools)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread"]], "__init__() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.run"]], "time_it() (aslm.model.concurrency.concurrency_tools.testresultthreadandcustodythread method)": [[59, "aslm.model.concurrency.concurrency_tools.TestResultThreadAndCustodyThread.time_it"]], "testsharedndarray (class in aslm.model.concurrency.concurrency_tools)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray"]], "__init__() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.__init__"]], "run() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.run"]], "test_ndarraylike_behavior() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_ndarraylike_behavior"]], "test_serialization() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serialization"]], "test_serializing_and_deserializing() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.test_serializing_and_deserializing"]], "time_it() (aslm.model.concurrency.concurrency_tools.testsharedndarray method)": [[60, "aslm.model.concurrency.concurrency_tools.TestSharedNDArray.time_it"]], "aslm.model.concurrency.proxy_objects": [[61, "module-aslm.model.concurrency.proxy_objects"]], "proxymanager (class in aslm.model.concurrency.proxy_objects)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager"]], "__init__() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager.__init__"]], "proxy_object() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager.proxy_object"]], "shared_numpy_array() (aslm.model.concurrency.proxy_objects.proxymanager method)": [[62, "aslm.model.concurrency.proxy_objects.ProxyManager.shared_numpy_array"]], "proxyobject (class in aslm.model.concurrency.proxy_objects)": [[63, "aslm.model.concurrency.proxy_objects.ProxyObject"]], "__init__() (aslm.model.concurrency.proxy_objects.proxyobject method)": [[63, "aslm.model.concurrency.proxy_objects.ProxyObject.__init__"]], "launch_custody_thread() (in module aslm.model.concurrency.proxy_objects)": [[64, "aslm.model.concurrency.proxy_objects.launch_custody_thread"]], "launch_thread() (in module aslm.model.concurrency.proxy_objects)": [[65, "aslm.model.concurrency.proxy_objects.launch_thread"]], "aslm.model.data_sources": [[66, "module-aslm.model.data_sources"]], "aslm.model.data_sources.bdv_data_source": [[67, "module-aslm.model.data_sources.bdv_data_source"]], "bigdataviewerdatasource (class in aslm.model.data_sources.bdv_data_source)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource"]], "__init__() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.__init__"]], "bits (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.bits"]], "close() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.close"], [68, "id5"], [68, "id6"]], "data (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.data"]], "dc (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dc"]], "ds_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.ds_name"]], "dt (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dt"]], "dx (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dx"]], "dy (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dy"]], "dz (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.dz"]], "file_name (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.file_name"]], "get_slice() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.get_slice"]], "image (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.image"]], "logger (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.logger"]], "metadata (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.metadata"], [68, "id0"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.mode"]], "mode (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "id10"]], "mode() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "id1"]], "nbytes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "id11"]], "nbytes() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.nbytes"]], "positions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.positions"]], "read() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.read"], [68, "id3"], [68, "id7"]], "resolutions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.resolutions"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.set_metadata_from_configuration_experiment"], [68, "id2"], [68, "id8"]], "setup (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.setup"]], "shape (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "id12"]], "shape() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape"]], "shape_c (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_c"]], "shape_t (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_t"]], "shape_x (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_x"]], "shape_y (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_y"]], "shape_z (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource attribute)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shape_z"]], "shapes (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.shapes"]], "subdivisions (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.subdivisions"]], "voxel_size (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource property)": [[68, "id13"]], "voxel_size() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.voxel_size"]], "write() (aslm.model.data_sources.bdv_data_source.bigdataviewerdatasource method)": [[68, "aslm.model.data_sources.bdv_data_source.BigDataViewerDataSource.write"], [68, "id4"], [68, "id9"]], "aslm.model.data_sources.data_source": [[69, "module-aslm.model.data_sources.data_source"]], "datasource (class in aslm.model.data_sources.data_source)": [[70, "aslm.model.data_sources.data_source.DataSource"]], "__init__() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.__init__"]], "bits (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.bits"]], "close() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.close"], [70, "id1"]], "data (aslm.model.data_sources.data_source.datasource property)": [[70, "aslm.model.data_sources.data_source.DataSource.data"]], "dc (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.dc"]], "dt (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.dt"]], "dx (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.dx"]], "dy (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.dy"]], "dz (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.dz"]], "file_name (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.file_name"]], "logger (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.logger"]], "metadata (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.metadata"]], "mode (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.mode"]], "mode (aslm.model.data_sources.data_source.datasource property)": [[70, "id5"]], "mode() (aslm.model.data_sources.data_source.datasource method)": [[70, "id0"]], "nbytes (aslm.model.data_sources.data_source.datasource property)": [[70, "id6"]], "nbytes() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.nbytes"]], "positions (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.positions"]], "read() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.read"], [70, "id2"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.set_metadata_from_configuration_experiment"], [70, "id3"]], "shape (aslm.model.data_sources.data_source.datasource property)": [[70, "id7"]], "shape() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.shape"]], "shape_c (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.shape_c"]], "shape_t (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.shape_t"]], "shape_x (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.shape_x"]], "shape_y (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.shape_y"]], "shape_z (aslm.model.data_sources.data_source.datasource attribute)": [[70, "aslm.model.data_sources.data_source.DataSource.shape_z"]], "voxel_size (aslm.model.data_sources.data_source.datasource property)": [[70, "id8"]], "voxel_size() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.voxel_size"]], "write() (aslm.model.data_sources.data_source.datasource method)": [[70, "aslm.model.data_sources.data_source.DataSource.write"], [70, "id4"]], "get_data_source() (in module aslm.model.data_sources)": [[71, "aslm.model.data_sources.get_data_source"]], "aslm.model.data_sources.tiff_data_source": [[72, "module-aslm.model.data_sources.tiff_data_source"]], "tiffdatasource (class in aslm.model.data_sources.tiff_data_source)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource"]], "__init__() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.__init__"]], "bits (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.bits"]], "close() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.close"], [73, "id4"], [73, "id5"]], "data (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.data"]], "dc (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dc"]], "dt (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dt"]], "dx (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dx"]], "dy (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dy"]], "dz (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.dz"]], "file_name (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.file_name"]], "generate_image_name() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.generate_image_name"], [73, "id6"]], "image (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.image"]], "logger (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.logger"]], "metadata (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.metadata"], [73, "id0"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.mode"]], "mode (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[73, "id10"]], "mode() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "id1"]], "nbytes (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[73, "id11"]], "nbytes() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.nbytes"]], "positions (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.positions"]], "read() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.read"], [73, "id2"], [73, "id7"]], "save_directory (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.save_directory"]], "set_metadata_from_configuration_experiment() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.set_metadata_from_configuration_experiment"], [73, "id8"]], "shape (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[73, "id12"]], "shape() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape"]], "shape_c (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_c"]], "shape_t (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_t"]], "shape_x (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_x"]], "shape_y (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_y"]], "shape_z (aslm.model.data_sources.tiff_data_source.tiffdatasource attribute)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.shape_z"]], "voxel_size (aslm.model.data_sources.tiff_data_source.tiffdatasource property)": [[73, "id13"]], "voxel_size() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.voxel_size"]], "write() (aslm.model.data_sources.tiff_data_source.tiffdatasource method)": [[73, "aslm.model.data_sources.tiff_data_source.TiffDataSource.write"], [73, "id3"], [73, "id9"]], "aslm.model.device_startup_functions": [[74, "module-aslm.model.device_startup_functions"]], "dummydeviceconnection (class in aslm.model.device_startup_functions)": [[75, "aslm.model.device_startup_functions.DummyDeviceConnection"]], "__init__() (aslm.model.device_startup_functions.dummydeviceconnection method)": [[75, "aslm.model.device_startup_functions.DummyDeviceConnection.__init__"]], "auto_redial() (in module aslm.model.device_startup_functions)": [[76, "aslm.model.device_startup_functions.auto_redial"]], "device_not_found() (in module aslm.model.device_startup_functions)": [[77, "aslm.model.device_startup_functions.device_not_found"]], "load_camera_connection() (in module aslm.model.device_startup_functions)": [[78, "aslm.model.device_startup_functions.load_camera_connection"]], "load_devices() (in module aslm.model.device_startup_functions)": [[79, "aslm.model.device_startup_functions.load_devices"]], "load_filter_wheel_connection() (in module aslm.model.device_startup_functions)": [[80, "aslm.model.device_startup_functions.load_filter_wheel_connection"]], "load_stages() (in module aslm.model.device_startup_functions)": [[81, "aslm.model.device_startup_functions.load_stages"]], "load_zoom_connection() (in module aslm.model.device_startup_functions)": [[82, "aslm.model.device_startup_functions.load_zoom_connection"]], "start_camera() (in module aslm.model.device_startup_functions)": [[83, "aslm.model.device_startup_functions.start_camera"]], "start_daq() (in module aslm.model.device_startup_functions)": [[84, "aslm.model.device_startup_functions.start_daq"]], "start_filter_wheel() (in module aslm.model.device_startup_functions)": [[85, "aslm.model.device_startup_functions.start_filter_wheel"]], "start_galvo() (in module aslm.model.device_startup_functions)": [[86, "aslm.model.device_startup_functions.start_galvo"]], "start_lasers() (in module aslm.model.device_startup_functions)": [[87, "aslm.model.device_startup_functions.start_lasers"]], "start_remote_focus_device() (in module aslm.model.device_startup_functions)": [[88, "aslm.model.device_startup_functions.start_remote_focus_device"]], "start_shutter() (in module aslm.model.device_startup_functions)": [[89, "aslm.model.device_startup_functions.start_shutter"]], "start_stage() (in module aslm.model.device_startup_functions)": [[90, "aslm.model.device_startup_functions.start_stage"]], "start_zoom() (in module aslm.model.device_startup_functions)": [[91, "aslm.model.device_startup_functions.start_zoom"]], "aslm.model.devices": [[92, "module-aslm.model.devices"]], "aslm.model.devices.apis": [[93, "module-aslm.model.devices.APIs"]], "aslm.model.devices.apis.coherent": [[94, "module-aslm.model.devices.APIs.coherent"]], "aslm.model.devices.apis.dynamixel": [[95, "module-aslm.model.devices.APIs.dynamixel"]], "aslm.model.devices.apis.dynamixel.dynamixel_functions": [[96, "module-aslm.model.devices.APIs.dynamixel.dynamixel_functions"]], "create_mock_dxl_device() (in module aslm.model.devices.apis.dynamixel.dynamixel_functions)": [[97, "aslm.model.devices.APIs.dynamixel.dynamixel_functions.create_mock_dxl_device"]], "aslm.model.devices.apis.omicron": [[98, "module-aslm.model.devices.APIs.omicron"]], "aslm.model.devices.camera": [[99, "module-aslm.model.devices.camera"]], "aslm.model.devices.camera.camera_base": [[100, "module-aslm.model.devices.camera.camera_base"]], "camerabase (class in aslm.model.devices.camera.camera_base)": [[101, "aslm.model.devices.camera.camera_base.CameraBase"]], "__init__() (aslm.model.devices.camera.camera_base.camerabase method)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_base.camerabase method)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.calculate_light_sheet_exposure_time"]], "camera_controller (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_base.camerabase method)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.close_camera"]], "configuration (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_base.camerabase method)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.get_line_interval"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_base.camerabase method)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.get_offset_variance_maps"]], "is_acquiring (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.min_image_width"]], "offset (aslm.model.devices.camera.camera_base.camerabase property)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.offset"]], "set_readout_direction() (aslm.model.devices.camera.camera_base.camerabase method)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.set_readout_direction"]], "step_image_height (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.step_image_width"]], "variance (aslm.model.devices.camera.camera_base.camerabase property)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.variance"]], "x_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_base.camerabase attribute)": [[101, "aslm.model.devices.camera.camera_base.CameraBase.y_pixels"]], "aslm.model.devices.camera.camera_hamamatsu": [[102, "module-aslm.model.devices.camera.camera_hamamatsu"]], "hamamatsuorca (class in aslm.model.devices.camera.camera_hamamatsu)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca method)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca property)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorca attribute)": [[103, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrca.y_pixels"]], "hamamatsuorcalightning (class in aslm.model.devices.camera.camera_hamamatsu)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning"]], "__init__() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.close_image_series"]], "configuration (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.min_image_width"]], "offset (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.offset"]], "report_settings() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.report_settings"]], "serial_number (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning method)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.step_image_width"]], "variance (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning property)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.variance"]], "x_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_hamamatsu.hamamatsuorcalightning attribute)": [[104, "aslm.model.devices.camera.camera_hamamatsu.HamamatsuOrcaLightning.y_pixels"]], "aslm.model.devices.camera.camera_photometrics": [[105, "module-aslm.model.devices.camera.camera_photometrics"]], "photometricskinetix (class in aslm.model.devices.camera.camera_photometrics)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix"]], "__init__() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_controller"]], "camera_parameters (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.close_image_series"]], "configuration (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.configuration"]], "get_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.is_acquiring"]], "max_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.min_image_width"]], "offset (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.offset"]], "report_settings() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.report_settings"]], "serial_number (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_photometrics.photometricskinetix method)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.step_image_width"]], "variance (aslm.model.devices.camera.camera_photometrics.photometricskinetix property)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.variance"]], "x_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_photometrics.photometricskinetix attribute)": [[106, "aslm.model.devices.camera.camera_photometrics.PhotometricsKinetix.y_pixels"]], "aslm.model.devices.camera.camera_synthetic": [[107, "module-aslm.model.devices.camera.camera_synthetic"]], "syntheticcamera (class in aslm.model.devices.camera.camera_synthetic)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.__init__"]], "calculate_light_sheet_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_light_sheet_exposure_time"]], "calculate_readout_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.calculate_readout_time"]], "camera_controller (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_controller"]], "camera_exposure_time (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_exposure_time"]], "camera_parameters (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.camera_parameters"]], "close_camera() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_camera"]], "close_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.close_image_series"]], "configuration (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.configuration"]], "current_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.current_frame_idx"]], "data_buffer (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.data_buffer"]], "generate_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.generate_new_frame"]], "get_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_line_interval"]], "get_minimum_waiting_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_minimum_waiting_time"]], "get_new_frame() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_new_frame"]], "get_offset_variance_maps() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.get_offset_variance_maps"]], "initialize_image_series() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.initialize_image_series"]], "is_acquiring (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.is_acquiring"]], "load_images() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.load_images"]], "max_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_height"]], "max_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.max_image_width"]], "min_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_height"]], "min_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.min_image_width"]], "num_of_frame (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.num_of_frame"]], "offset (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.offset"]], "pre_frame_idx (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.pre_frame_idx"]], "random_image (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.random_image"]], "report_settings() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.report_settings"]], "serial_number (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.serial_number"]], "set_roi() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_ROI"]], "set_binning() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_binning"]], "set_exposure_time() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_exposure_time"]], "set_line_interval() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_line_interval"]], "set_readout_direction() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_readout_direction"]], "set_sensor_mode() (aslm.model.devices.camera.camera_synthetic.syntheticcamera method)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.set_sensor_mode"]], "step_image_height (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_height"]], "step_image_width (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.step_image_width"]], "variance (aslm.model.devices.camera.camera_synthetic.syntheticcamera property)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.variance"]], "x_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.x_pixels"]], "y_pixels (aslm.model.devices.camera.camera_synthetic.syntheticcamera attribute)": [[108, "aslm.model.devices.camera.camera_synthetic.SyntheticCamera.y_pixels"]], "syntheticcameracontroller (class in aslm.model.devices.camera.camera_synthetic)": [[109, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController"]], "__init__() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[109, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.__init__"]], "get_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[109, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.get_property_value"]], "set_property_value() (aslm.model.devices.camera.camera_synthetic.syntheticcameracontroller method)": [[109, "aslm.model.devices.camera.camera_synthetic.SyntheticCameraController.set_property_value"]], "aslm.model.devices.daq": [[110, "module-aslm.model.devices.daq"]], "aslm.model.devices.daq.daq_base": [[111, "module-aslm.model.devices.daq.daq_base"]], "daqbase (class in aslm.model.devices.daq.daq_base)": [[112, "aslm.model.devices.daq.daq_base.DAQBase"]], "__init__() (aslm.model.devices.daq.daq_base.daqbase method)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.__init__"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_base.daqbase method)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.calculate_all_waveforms"]], "camera_delay (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.camera_pulse_percent"]], "configuration (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.configuration"]], "daq_parameters (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_base.daqbase method)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.enable_microscope"]], "microscope_name (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.microscope_name"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.sample_rate"]], "sweep_time (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.sweep_time"]], "waveform_constants (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_base.daqbase attribute)": [[112, "aslm.model.devices.daq.daq_base.DAQBase.waveform_repeat_num"]], "aslm.model.devices.daq.daq_synthetic": [[113, "module-aslm.model.devices.daq.daq_synthetic"]], "syntheticdaq (class in aslm.model.devices.daq.daq_synthetic)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ"]], "__init__() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.__init__"]], "add_camera() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.add_camera"]], "analog_outputs (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.analog_outputs"]], "calculate_all_waveforms() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.calculate_all_waveforms"]], "camera (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera"]], "camera_delay (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay"]], "camera_delay_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_delay_percent"]], "camera_high_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_high_time"]], "camera_pulse_percent (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.camera_pulse_percent"]], "close_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.close_tasks"]], "configuration (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.configuration"]], "create_camera_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_camera_task"]], "create_galvo_remote_focus_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_galvo_remote_focus_tasks"]], "create_master_trigger_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.create_master_trigger_task"]], "daq_parameters (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.daq_parameters"]], "enable_microscope() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.enable_microscope"]], "is_updating_analog_task (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.is_updating_analog_task"]], "microscope_name (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.microscope_name"]], "prepare_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.prepare_acquisition"]], "remote_focus_ramp_falling (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.remote_focus_ramp_falling"]], "run_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.run_acquisition"]], "sample_rate (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sample_rate"]], "set_external_trigger() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.set_external_trigger"]], "start_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.start_tasks"]], "stop_acquisition() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_acquisition"]], "stop_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.stop_tasks"]], "sweep_time (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.sweep_time"]], "trigger_mode (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.trigger_mode"]], "update_analog_task() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.update_analog_task"]], "wait_to_run_lock (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.wait_to_run_lock"]], "waveform_constants (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_constants"]], "waveform_dict (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_dict"]], "waveform_expand_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_expand_num"]], "waveform_repeat_num (aslm.model.devices.daq.daq_synthetic.syntheticdaq attribute)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.waveform_repeat_num"]], "write_waveforms_to_tasks() (aslm.model.devices.daq.daq_synthetic.syntheticdaq method)": [[114, "aslm.model.devices.daq.daq_synthetic.SyntheticDAQ.write_waveforms_to_tasks"]], "aslm.model.devices.filter_wheel": [[115, "module-aslm.model.devices.filter_wheel"]], "aslm.model.devices.filter_wheel.filter_wheel_asi": [[116, "module-aslm.model.devices.filter_wheel.filter_wheel_asi"]], "asifilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_asi)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.__init__"]], "active_filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.active_filter_wheel"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.close"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_dictionary"]], "filter_wheel (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel"]], "filter_wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.filter_wheel_position"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.number_of_filter_wheels"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel method)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.set_filter"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_asi.asifilterwheel attribute)": [[117, "aslm.model.devices.filter_wheel.filter_wheel_asi.ASIFilterWheel.wheel_position"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_asi)": [[118, "aslm.model.devices.filter_wheel.filter_wheel_asi.build_filter_wheel_connection"]], "aslm.model.devices.filter_wheel.filter_wheel_base": [[119, "module-aslm.model.devices.filter_wheel.filter_wheel_base"]], "filterwheelbase (class in aslm.model.devices.filter_wheel.filter_wheel_base)": [[120, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[120, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase method)": [[120, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.check_if_filter_in_filter_dictionary"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[120, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.filter_dictionary"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_base.filterwheelbase attribute)": [[120, "aslm.model.devices.filter_wheel.filter_wheel_base.FilterWheelBase.wheel_position"]], "aslm.model.devices.filter_wheel.filter_wheel_sutter": [[121, "module-aslm.model.devices.filter_wheel.filter_wheel_sutter"]], "sutterfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.__init__"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.close"]], "delay_matrix (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.delay_matrix"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.filter_dictionary"]], "init_finished (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.init_finished"]], "microscope_name (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.microscope_name"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read"]], "read_on_init (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.read_on_init"]], "serial (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.serial"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel method)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.set_filter"]], "speed (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.speed"]], "wait_until_done (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done"]], "wait_until_done_delay (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wait_until_done_delay"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_sutter.sutterfilterwheel attribute)": [[122, "aslm.model.devices.filter_wheel.filter_wheel_sutter.SutterFilterWheel.wheel_position"]], "baudrate (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.baudrate"]], "build_filter_wheel_connection() (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.build_filter_wheel_connection"]], "comport (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.comport"]], "timeout (in module aslm.model.devices.filter_wheel.filter_wheel_sutter)": [[123, "aslm.model.devices.filter_wheel.filter_wheel_sutter.timeout"]], "aslm.model.devices.filter_wheel.filter_wheel_synthetic": [[124, "module-aslm.model.devices.filter_wheel.filter_wheel_synthetic"]], "syntheticfilterwheel (class in aslm.model.devices.filter_wheel.filter_wheel_synthetic)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel"]], "__init__() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.__init__"]], "baudrate (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.baudrate"]], "check_if_filter_in_filter_dictionary() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.check_if_filter_in_filter_dictionary"]], "close() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.close"]], "comport (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.comport"]], "filter_change_delay() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_change_delay"]], "filter_dictionary (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.filter_dictionary"], [125, "id0"]], "number_of_filter_wheels (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.number_of_filter_wheels"]], "read() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.read"]], "set_filter() (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel method)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.set_filter"]], "wheel_position (aslm.model.devices.filter_wheel.filter_wheel_synthetic.syntheticfilterwheel attribute)": [[125, "aslm.model.devices.filter_wheel.filter_wheel_synthetic.SyntheticFilterWheel.wheel_position"], [125, "id1"]], "aslm.model.devices.galvo": [[126, "module-aslm.model.devices.galvo"]], "aslm.model.devices.galvo.galvo_base": [[127, "module-aslm.model.devices.galvo.galvo_base"]], "galvobase (class in aslm.model.devices.galvo.galvo_base)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase"]], "__init__() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.close_task"]], "configuration (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.configuration"]], "device_config (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.samples"]], "start_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_base.galvobase method)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_base.galvobase attribute)": [[128, "aslm.model.devices.galvo.galvo_base.GalvoBase.waveform_dict"]], "aslm.model.devices.galvo.galvo_synthetic": [[129, "module-aslm.model.devices.galvo.galvo_synthetic"]], "syntheticgalvo (class in aslm.model.devices.galvo.galvo_synthetic)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo"]], "__init__() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.__init__"]], "adjust() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.adjust"]], "camera_delay_percent (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.camera_delay_percent"]], "close_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.close_task"]], "configuration (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.configuration"]], "device_config (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.device_config"]], "galvo_max_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_min_voltage"]], "galvo_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_name"]], "galvo_waveform (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.galvo_waveform"]], "microscope_name (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.microscope_name"]], "prepare_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.prepare_task"]], "remote_focus_ramp_falling (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sample_rate"]], "samples (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.samples"]], "start_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.start_task"]], "stop_task() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.stop_task"]], "sweep_time (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.sweep_time"]], "turn_off() (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo method)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.turn_off"]], "waveform_dict (aslm.model.devices.galvo.galvo_synthetic.syntheticgalvo attribute)": [[130, "aslm.model.devices.galvo.galvo_synthetic.SyntheticGalvo.waveform_dict"]], "aslm.model.devices.lasers": [[131, "module-aslm.model.devices.lasers"]], "aslm.model.devices.lasers.laser_base": [[132, "module-aslm.model.devices.lasers.laser_base"]], "laserbase (class in aslm.model.devices.lasers.laser_base)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase"]], "__init__() (aslm.model.devices.lasers.laser_base.laserbase method)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.__init__"]], "close() (aslm.model.devices.lasers.laser_base.laserbase method)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.close"]], "configuration (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.configuration"]], "device_config (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_base.laserbase method)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_base.laserbase attribute)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_base.laserbase method)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_base.laserbase method)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_base.laserbase method)": [[133, "aslm.model.devices.lasers.laser_base.LaserBase.turn_on"]], "aslm.model.devices.lasers.laser_synthetic": [[134, "module-aslm.model.devices.lasers.laser_synthetic"]], "syntheticlaser (class in aslm.model.devices.lasers.laser_synthetic)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser"]], "__init__() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.__init__"]], "close() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.close"]], "configuration (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.configuration"]], "device_config (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.device_config"]], "initialize_laser() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.initialize_laser"]], "microscope_name (aslm.model.devices.lasers.laser_synthetic.syntheticlaser attribute)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.microscope_name"]], "set_power() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.set_power"]], "turn_off() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_off"]], "turn_on() (aslm.model.devices.lasers.laser_synthetic.syntheticlaser method)": [[135, "aslm.model.devices.lasers.laser_synthetic.SyntheticLaser.turn_on"]], "aslm.model.devices.objectives": [[136, "module-aslm.model.devices.objectives"]], "objective (class in aslm.model.devices.objectives)": [[137, "aslm.model.devices.objectives.Objective"]], "__init__() (aslm.model.devices.objectives.objective method)": [[137, "aslm.model.devices.objectives.Objective.__init__"]], "calculate_entrance_pupil() (aslm.model.devices.objectives.objective method)": [[137, "aslm.model.devices.objectives.Objective.calculate_entrance_pupil"]], "aslm.model.devices.remote_focus": [[138, "module-aslm.model.devices.remote_focus"]], "aslm.model.devices.remote_focus.remote_focus_base": [[139, "module-aslm.model.devices.remote_focus.remote_focus_base"]], "remotefocusbase (class in aslm.model.devices.remote_focus.remote_focus_base)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.microscope_name"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase method)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_base.remotefocusbase attribute)": [[140, "aslm.model.devices.remote_focus.remote_focus_base.RemoteFocusBase.waveform_dict"]], "aslm.model.devices.remote_focus.remote_focus_synthetic": [[141, "module-aslm.model.devices.remote_focus.remote_focus_synthetic"]], "syntheticremotefocus (class in aslm.model.devices.remote_focus.remote_focus_synthetic)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus"]], "__init__() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.__init__"]], "adjust() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.adjust"]], "camera_delay_percent (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.camera_delay_percent"]], "close_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.close_task"]], "configuration (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.configuration"]], "device_config (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.device_config"]], "microscope_name (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.microscope_name"]], "move() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.move"]], "percent_smoothing (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.percent_smoothing"]], "prepare_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.prepare_task"]], "remote_focus_delay (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_delay"]], "remote_focus_max_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_max_voltage"]], "remote_focus_min_voltage (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_min_voltage"]], "remote_focus_ramp_falling (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.remote_focus_ramp_falling"]], "sample_rate (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sample_rate"]], "samples (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.samples"]], "start_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.start_task"]], "stop_task() (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus method)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.stop_task"]], "sweep_time (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.sweep_time"]], "waveform_dict (aslm.model.devices.remote_focus.remote_focus_synthetic.syntheticremotefocus attribute)": [[142, "aslm.model.devices.remote_focus.remote_focus_synthetic.SyntheticRemoteFocus.waveform_dict"]], "aslm.model.devices.shutter": [[143, "module-aslm.model.devices.shutter"]], "aslm.model.devices.shutter.laser_shutter_base": [[144, "module-aslm.model.devices.shutter.laser_shutter_base"]], "shutterbase (class in aslm.model.devices.shutter.laser_shutter_base)": [[145, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase"]], "__init__() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[145, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[145, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_base.shutterbase method)": [[145, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_base.shutterbase attribute)": [[145, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_base.shutterbase property)": [[145, "aslm.model.devices.shutter.laser_shutter_base.ShutterBase.state"]], "aslm.model.devices.shutter.laser_shutter_synthetic": [[146, "module-aslm.model.devices.shutter.laser_shutter_synthetic"]], "syntheticshutter (class in aslm.model.devices.shutter.laser_shutter_synthetic)": [[147, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter"]], "__init__() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[147, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.__init__"]], "close_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[147, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.close_shutter"]], "open_shutter() (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter method)": [[147, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.open_shutter"]], "shutter_state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter attribute)": [[147, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.shutter_state"]], "state (aslm.model.devices.shutter.laser_shutter_synthetic.syntheticshutter property)": [[147, "aslm.model.devices.shutter.laser_shutter_synthetic.SyntheticShutter.state"]], "aslm.model.devices.stages": [[148, "module-aslm.model.devices.stages"]], "aslm.model.devices.stages.stage_asi": [[149, "module-aslm.model.devices.stages.stage_asi"]], "asistage (class in aslm.model.devices.stages.stage_asi)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage"]], "__init__() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.__init__"]], "axes (aslm.model.devices.stages.stage_asi.asistage attribute)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_asi.asistage attribute)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.get_speed"]], "move_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_asi.asistage attribute)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_asi.asistage attribute)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.stop_scan"]], "tiger_controller (aslm.model.devices.stages.stage_asi.asistage attribute)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.tiger_controller"]], "verify_abs_position() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.verify_abs_position"]], "verify_move() (aslm.model.devices.stages.stage_asi.asistage method)": [[150, "aslm.model.devices.stages.stage_asi.ASIStage.verify_move"]], "build_asi_stage_connection() (in module aslm.model.devices.stages.stage_asi)": [[151, "aslm.model.devices.stages.stage_asi.build_ASI_Stage_connection"]], "aslm.model.devices.stages.stage_base": [[152, "module-aslm.model.devices.stages.stage_base"]], "stagebase (class in aslm.model.devices.stages.stage_base)": [[153, "aslm.model.devices.stages.stage_base.StageBase"]], "__init__() (aslm.model.devices.stages.stage_base.stagebase method)": [[153, "aslm.model.devices.stages.stage_base.StageBase.__init__"]], "axes (aslm.model.devices.stages.stage_base.stagebase attribute)": [[153, "aslm.model.devices.stages.stage_base.StageBase.axes"]], "axes_mapping (aslm.model.devices.stages.stage_base.stagebase attribute)": [[153, "aslm.model.devices.stages.stage_base.StageBase.axes_mapping"]], "close() (aslm.model.devices.stages.stage_base.stagebase method)": [[153, "aslm.model.devices.stages.stage_base.StageBase.close"]], "get_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[153, "aslm.model.devices.stages.stage_base.StageBase.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_base.stagebase method)": [[153, "aslm.model.devices.stages.stage_base.StageBase.get_position_dict"]], "stage_feedback (aslm.model.devices.stages.stage_base.stagebase attribute)": [[153, "aslm.model.devices.stages.stage_base.StageBase.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_base.stagebase attribute)": [[153, "aslm.model.devices.stages.stage_base.StageBase.stage_limits"]], "stop() (aslm.model.devices.stages.stage_base.stagebase method)": [[153, "aslm.model.devices.stages.stage_base.StageBase.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_base.stagebase method)": [[153, "aslm.model.devices.stages.stage_base.StageBase.verify_abs_position"]], "aslm.model.devices.stages.stage_galvo": [[154, "module-aslm.model.devices.stages.stage_galvo"]], "galvonistage (class in aslm.model.devices.stages.stage_galvo)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage"]], "__init__() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.__init__"]], "axes (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes"]], "axes_channels (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_channels"]], "axes_mapping (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.axes_mapping"]], "calculate_waveform() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.calculate_waveform"]], "camera_delay_percent (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.camera_delay_percent"]], "close() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.close"]], "configuration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.configuration"]], "daq (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.daq"]], "distance_threshold (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.distance_threshold"]], "exposure_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.exposure_times"]], "galvo_max_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_max_voltage"]], "galvo_min_voltage (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.galvo_min_voltage"]], "get_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.get_position_dict"]], "microscope_name (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.microscope_name"]], "move_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.move_axis_absolute"]], "remote_focus_delay (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_delay"]], "remote_focus_ramp_falling (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.remote_focus_ramp_falling"]], "report_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.report_position"]], "sample_rate (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sample_rate"]], "samples (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.samples"]], "stage_feedback (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_limits"]], "stage_settle_duration (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stage_settle_duration"]], "stop() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.stop"]], "sweep_time (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_time"]], "sweep_times (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.sweep_times"]], "trigger_source (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.trigger_source"]], "verify_abs_position() (aslm.model.devices.stages.stage_galvo.galvonistage method)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.verify_abs_position"]], "volts_per_micron (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.volts_per_micron"]], "waveform_dict (aslm.model.devices.stages.stage_galvo.galvonistage attribute)": [[155, "aslm.model.devices.stages.stage_galvo.GalvoNIStage.waveform_dict"]], "aslm.model.devices.stages.stage_mcl": [[156, "module-aslm.model.devices.stages.stage_mcl"]], "mclstage (class in aslm.model.devices.stages.stage_mcl)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage"]], "__init__() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.__init__"]], "axes (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.get_position_dict"]], "handle (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.handle"]], "mcl_controller (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.mcl_controller"]], "move_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_mcl.mclstage attribute)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_mcl.mclstage method)": [[157, "aslm.model.devices.stages.stage_mcl.MCLStage.verify_abs_position"]], "build_mclstage_connection() (in module aslm.model.devices.stages.stage_mcl)": [[158, "aslm.model.devices.stages.stage_mcl.build_MCLStage_connection"]], "aslm.model.devices.stages.stage_pi": [[159, "module-aslm.model.devices.stages.stage_pi"]], "pistage (class in aslm.model.devices.stages.stage_pi)": [[160, "aslm.model.devices.stages.stage_pi.PIStage"]], "__init__() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.__init__"]], "axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_pi.pistage attribute)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.move_axis_absolute"]], "pi_axes (aslm.model.devices.stages.stage_pi.pistage attribute)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.pi_axes"]], "pi_device (aslm.model.devices.stages.stage_pi.pistage attribute)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.pi_device"]], "pi_tools (aslm.model.devices.stages.stage_pi.pistage attribute)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.pi_tools"]], "report_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.report_position"]], "stage_feedback (aslm.model.devices.stages.stage_pi.pistage attribute)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_pi.pistage attribute)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.verify_abs_position"]], "wait_on_target() (aslm.model.devices.stages.stage_pi.pistage method)": [[160, "aslm.model.devices.stages.stage_pi.PIStage.wait_on_target"]], "build_pistage_connection() (in module aslm.model.devices.stages.stage_pi)": [[161, "aslm.model.devices.stages.stage_pi.build_PIStage_connection"]], "aslm.model.devices.stages.stage_sutter": [[162, "module-aslm.model.devices.stages.stage_sutter"]], "sutterstage (class in aslm.model.devices.stages.stage_sutter)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage"]], "__init__() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.__init__"]], "axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.close"]], "device_axes (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.device_axes"]], "get_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.get_position_dict"]], "move_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.report_position"]], "resolution (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.resolution"]], "speed (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.speed"]], "stage (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.stage"]], "stage_feedback (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_limits"]], "stage_x_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_x_pos"]], "stage_y_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_y_pos"]], "stage_z_pos (aslm.model.devices.stages.stage_sutter.sutterstage attribute)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.stage_z_pos"]], "stop() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_sutter.sutterstage method)": [[163, "aslm.model.devices.stages.stage_sutter.SutterStage.verify_abs_position"]], "build_mp285_connection() (in module aslm.model.devices.stages.stage_sutter)": [[164, "aslm.model.devices.stages.stage_sutter.build_MP285_connection"]], "aslm.model.devices.stages.stage_synthetic": [[165, "module-aslm.model.devices.stages.stage_synthetic"]], "syntheticstage (class in aslm.model.devices.stages.stage_synthetic)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage"]], "__init__() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.__init__"]], "axes (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.close"]], "default_speed (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.default_speed"]], "get_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_abs_position"]], "get_axis_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_axis_position"]], "get_position_dict() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_position_dict"]], "get_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.get_speed"]], "load_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.load_sample"]], "move_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.report_position"]], "scanr() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.scanr"]], "set_speed() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.set_speed"]], "stage_feedback (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_synthetic.syntheticstage attribute)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stage_limits"]], "start_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.start_scan"]], "stop() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop"]], "stop_scan() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.stop_scan"]], "unload_sample() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.unload_sample"]], "verify_abs_position() (aslm.model.devices.stages.stage_synthetic.syntheticstage method)": [[166, "aslm.model.devices.stages.stage_synthetic.SyntheticStage.verify_abs_position"]], "aslm.model.devices.stages.stage_tl_kcube_inertial": [[167, "module-aslm.model.devices.stages.stage_tl_kcube_inertial"]], "tlkimstage (class in aslm.model.devices.stages.stage_tl_kcube_inertial)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage"]], "__init__() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.__init__"]], "axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes"]], "axes_mapping (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.axes_mapping"]], "close() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.close"]], "get_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_abs_position"]], "get_position_dict() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.get_position_dict"]], "kim_axes (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_axes"]], "kim_controller (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.kim_controller"]], "move_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_absolute"]], "move_axis_absolute() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.move_axis_absolute"]], "report_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.report_position"]], "serial_number (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.serial_number"]], "stage_feedback (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_feedback"]], "stage_limits (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage attribute)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stage_limits"]], "stop() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.stop"]], "verify_abs_position() (aslm.model.devices.stages.stage_tl_kcube_inertial.tlkimstage method)": [[168, "aslm.model.devices.stages.stage_tl_kcube_inertial.TLKIMStage.verify_abs_position"]], "build_tlkimstage_connection() (in module aslm.model.devices.stages.stage_tl_kcube_inertial)": [[169, "aslm.model.devices.stages.stage_tl_kcube_inertial.build_TLKIMStage_connection"]], "aslm.model.devices.zoom": [[170, "module-aslm.model.devices.zoom"]], "aslm.model.devices.zoom.zoom_base": [[171, "module-aslm.model.devices.zoom.zoom_base"]], "zoombase (class in aslm.model.devices.zoom.zoom_base)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase"]], "__init__() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.configuration"]], "move() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.move"]], "read_position() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_base.zoombase method)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_base.zoombase attribute)": [[172, "aslm.model.devices.zoom.zoom_base.ZoomBase.zoomvalue"]], "aslm.model.devices.zoom.zoom_dynamixel": [[173, "module-aslm.model.devices.zoom.zoom_dynamixel"]], "dynamixelzoom (class in aslm.model.devices.zoom.zoom_dynamixel)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom"]], "__init__() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.__init__"]], "addr_mx_goal_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_goal_position"]], "addr_mx_moving_speed (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_moving_speed"]], "addr_mx_p_gain (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_p_gain"]], "addr_mx_present_position (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_present_position"]], "addr_mx_torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_enable"]], "addr_mx_torque_limit (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.addr_mx_torque_limit"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.configuration"]], "dynamixel (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.dynamixel"]], "goal_position_offset (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.goal_position_offset"]], "id (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.id"]], "move() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.move"]], "port_num (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.port_num"]], "read_position() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom method)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.set_zoom"]], "sleeptime (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.sleeptime"]], "timeout (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.timeout"]], "torque_disable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_disable"]], "torque_enable (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.torque_enable"]], "zoomdict (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_dynamixel.dynamixelzoom attribute)": [[174, "aslm.model.devices.zoom.zoom_dynamixel.DynamixelZoom.zoomvalue"]], "build_dynamixel_zoom_connection() (in module aslm.model.devices.zoom.zoom_dynamixel)": [[175, "aslm.model.devices.zoom.zoom_dynamixel.build_dynamixel_zoom_connection"]], "aslm.model.devices.zoom.zoom_synthetic": [[176, "module-aslm.model.devices.zoom.zoom_synthetic"]], "syntheticzoom (class in aslm.model.devices.zoom.zoom_synthetic)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom"]], "__init__() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.__init__"]], "build_stage_dict() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.build_stage_dict"]], "configuration (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.configuration"]], "move() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.move"]], "read_position() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.read_position"]], "set_zoom() (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom method)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.set_zoom"]], "zoomdict (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomdict"]], "zoomvalue (aslm.model.devices.zoom.zoom_synthetic.syntheticzoom attribute)": [[177, "aslm.model.devices.zoom.zoom_synthetic.SyntheticZoom.zoomvalue"]], "aslm.model.dummy": [[178, "module-aslm.model.dummy"]], "dummycontroller (class in aslm.model.dummy)": [[179, "aslm.model.dummy.DummyController"]], "__init__() (aslm.model.dummy.dummycontroller method)": [[179, "aslm.model.dummy.DummyController.__init__"]], "clear() (aslm.model.dummy.dummycontroller method)": [[179, "aslm.model.dummy.DummyController.clear"]], "commands (aslm.model.dummy.dummycontroller attribute)": [[179, "aslm.model.dummy.DummyController.commands"]], "configuration (aslm.model.dummy.dummycontroller attribute)": [[179, "aslm.model.dummy.DummyController.configuration"]], "configuration_controller (aslm.model.dummy.dummycontroller attribute)": [[179, "aslm.model.dummy.DummyController.configuration_controller"]], "execute() (aslm.model.dummy.dummycontroller method)": [[179, "aslm.model.dummy.DummyController.execute"]], "menu_controller (aslm.model.dummy.dummycontroller attribute)": [[179, "aslm.model.dummy.DummyController.menu_controller"]], "off_stage_pos (aslm.model.dummy.dummycontroller attribute)": [[179, "aslm.model.dummy.DummyController.off_stage_pos"]], "pop() (aslm.model.dummy.dummycontroller method)": [[179, "aslm.model.dummy.DummyController.pop"]], "stage_pos (aslm.model.dummy.dummycontroller attribute)": [[179, "aslm.model.dummy.DummyController.stage_pos"]], "view (aslm.model.dummy.dummycontroller attribute)": [[179, "aslm.model.dummy.DummyController.view"]], "dummydevice (class in aslm.model.dummy)": [[180, "aslm.model.dummy.DummyDevice"]], "__init__() (aslm.model.dummy.dummydevice method)": [[180, "aslm.model.dummy.DummyDevice.__init__"]], "clear() (aslm.model.dummy.dummydevice method)": [[180, "aslm.model.dummy.DummyDevice.clear"]], "generate_message() (aslm.model.dummy.dummydevice method)": [[180, "aslm.model.dummy.DummyDevice.generate_message"]], "in_port (aslm.model.dummy.dummydevice attribute)": [[180, "aslm.model.dummy.DummyDevice.in_port"]], "listen() (aslm.model.dummy.dummydevice method)": [[180, "aslm.model.dummy.DummyDevice.listen"]], "msg_count (aslm.model.dummy.dummydevice attribute)": [[180, "aslm.model.dummy.DummyDevice.msg_count"]], "out_port (aslm.model.dummy.dummydevice attribute)": [[180, "aslm.model.dummy.DummyDevice.out_port"]], "sendout() (aslm.model.dummy.dummydevice method)": [[180, "aslm.model.dummy.DummyDevice.sendout"]], "sendout_msg_count (aslm.model.dummy.dummydevice attribute)": [[180, "aslm.model.dummy.DummyDevice.sendout_msg_count"]], "setup() (aslm.model.dummy.dummydevice method)": [[180, "aslm.model.dummy.DummyDevice.setup"]], "stop_flag (aslm.model.dummy.dummydevice attribute)": [[180, "aslm.model.dummy.DummyDevice.stop_flag"]], "timecost (aslm.model.dummy.dummydevice attribute)": [[180, "aslm.model.dummy.DummyDevice.timecost"]], "dummymicroscope (class in aslm.model.dummy)": [[181, "aslm.model.dummy.DummyMicroscope"]], "__init__() (aslm.model.dummy.dummymicroscope method)": [[181, "aslm.model.dummy.DummyMicroscope.__init__"]], "calculate_exposure_sweep_times() (aslm.model.dummy.dummymicroscope method)": [[181, "aslm.model.dummy.DummyMicroscope.calculate_exposure_sweep_times"]], "configuration (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.configuration"]], "current_channel (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.current_channel"]], "daq (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.daq"]], "data_buffer (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.data_buffer"]], "galvo (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.galvo"]], "lasers (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.lasers"]], "microscope_name (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.microscope_name"]], "stages (aslm.model.dummy.dummymicroscope attribute)": [[181, "aslm.model.dummy.DummyMicroscope.stages"]], "dummymodel (class in aslm.model.dummy)": [[182, "aslm.model.dummy.DummyModel"]], "__init__() (aslm.model.dummy.dummymodel method)": [[182, "aslm.model.dummy.DummyModel.__init__"]], "active_microscope (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.active_microscope"]], "active_microscope_name (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.active_microscope_name"]], "camera (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.camera"]], "configuration (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.configuration"]], "data (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.data"]], "data_buffer (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.data_buffer"]], "data_buffer_positions (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.data_buffer_positions"]], "data_container (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.data_container"]], "data_func() (aslm.model.dummy.dummymodel method)": [[182, "aslm.model.dummy.DummyModel.data_func"]], "data_pipe (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.data_pipe"]], "data_records (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.data_records"]], "data_thread (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.data_thread"]], "device (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.device"]], "frame_id (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.frame_id"]], "img_height (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.img_height"]], "img_width (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.img_width"]], "manager (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.manager"]], "number_of_frames (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.number_of_frames"]], "signal_container (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.signal_container"]], "signal_func() (aslm.model.dummy.dummymodel method)": [[182, "aslm.model.dummy.DummyModel.signal_func"]], "signal_pipe (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.signal_pipe"]], "signal_records (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.signal_records"]], "signal_thread (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.signal_thread"]], "start() (aslm.model.dummy.dummymodel method)": [[182, "aslm.model.dummy.DummyModel.start"]], "stop_flag (aslm.model.dummy.dummymodel attribute)": [[182, "aslm.model.dummy.DummyModel.stop_flag"]], "aslm.model.features": [[183, "module-aslm.model.features"]], "aslm.model.features.auto_tile_scan": [[184, "module-aslm.model.features.auto_tile_scan"]], "calculatefocusrange (class in aslm.model.features.auto_tile_scan)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange"]], "__init__() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange.__init__"]], "end_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_data"]], "end_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange.end_func_signal"]], "in_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_data"]], "in_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange.in_func_signal"]], "pre_func_data() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_data"]], "pre_func_signal() (aslm.model.features.auto_tile_scan.calculatefocusrange method)": [[185, "aslm.model.features.auto_tile_scan.CalculateFocusRange.pre_func_signal"]], "aslm.model.features.autofocus": [[186, "module-aslm.model.features.autofocus"]], "autofocus (class in aslm.model.features.autofocus)": [[187, "aslm.model.features.autofocus.Autofocus"]], "__init__() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.__init__"]], "autofocus_frame_queue (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.autofocus_frame_queue"]], "autofocus_pos_queue (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.autofocus_pos_queue"]], "coarse_step_size (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.coarse_step_size"]], "coarse_steps (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.coarse_steps"]], "end_func_data() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.end_func_data"]], "end_func_signal() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.end_func_signal"]], "f_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.f_frame_id"]], "f_pos (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.f_pos"]], "fine_pos_offset (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.fine_pos_offset"]], "fine_step_size (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.fine_step_size"]], "focus_pos (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.focus_pos"]], "frame_num (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.frame_num"]], "get_autofocus_frame_num() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.get_autofocus_frame_num"]], "get_frames_num (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.get_frames_num"]], "get_steps() (aslm.model.features.autofocus.autofocus static method)": [[187, "aslm.model.features.autofocus.Autofocus.get_steps"]], "in_func_data() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.in_func_data"]], "in_func_signal() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.in_func_signal"]], "init_pos (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.init_pos"]], "max_entropy (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.max_entropy"]], "plot_data (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.plot_data"]], "pre_func_data() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.pre_func_data"]], "pre_func_signal() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.pre_func_signal"]], "robust_autofocus() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.robust_autofocus"]], "run() (aslm.model.features.autofocus.autofocus method)": [[187, "aslm.model.features.autofocus.Autofocus.run"], [187, "id0"]], "signal_id (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.signal_id"]], "target_channel (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.target_channel"]], "target_frame_id (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.target_frame_id"]], "total_frame_num (aslm.model.features.autofocus.autofocus attribute)": [[187, "aslm.model.features.autofocus.Autofocus.total_frame_num"]], "power_tent() (in module aslm.model.features.autofocus)": [[188, "aslm.model.features.autofocus.power_tent"]], "aslm.model.features.common_features": [[189, "module-aslm.model.features.common_features"]], "changeresolution (class in aslm.model.features.common_features)": [[190, "aslm.model.features.common_features.ChangeResolution"]], "__init__() (aslm.model.features.common_features.changeresolution method)": [[190, "aslm.model.features.common_features.ChangeResolution.__init__"]], "cleanup() (aslm.model.features.common_features.changeresolution method)": [[190, "aslm.model.features.common_features.ChangeResolution.cleanup"]], "signal_func() (aslm.model.features.common_features.changeresolution method)": [[190, "aslm.model.features.common_features.ChangeResolution.signal_func"]], "conproacquisition (class in aslm.model.features.common_features)": [[191, "aslm.model.features.common_features.ConProAcquisition"]], "__init__() (aslm.model.features.common_features.conproacquisition method)": [[191, "aslm.model.features.common_features.ConProAcquisition.__init__"]], "generate_meta_data() (aslm.model.features.common_features.conproacquisition method)": [[191, "aslm.model.features.common_features.ConProAcquisition.generate_meta_data"]], "pre_signal_func() (aslm.model.features.common_features.conproacquisition method)": [[191, "aslm.model.features.common_features.ConProAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.conproacquisition method)": [[191, "aslm.model.features.common_features.ConProAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.conproacquisition method)": [[191, "aslm.model.features.common_features.ConProAcquisition.signal_func"]], "findtissuesimple2d (class in aslm.model.features.common_features)": [[192, "aslm.model.features.common_features.FindTissueSimple2D"]], "__init__() (aslm.model.features.common_features.findtissuesimple2d method)": [[192, "aslm.model.features.common_features.FindTissueSimple2D.__init__"]], "data_func() (aslm.model.features.common_features.findtissuesimple2d method)": [[192, "aslm.model.features.common_features.FindTissueSimple2D.data_func"]], "loopbycount (class in aslm.model.features.common_features)": [[193, "aslm.model.features.common_features.LoopByCount"]], "__init__() (aslm.model.features.common_features.loopbycount method)": [[193, "aslm.model.features.common_features.LoopByCount.__init__"]], "data_func() (aslm.model.features.common_features.loopbycount method)": [[193, "aslm.model.features.common_features.LoopByCount.data_func"]], "signal_func() (aslm.model.features.common_features.loopbycount method)": [[193, "aslm.model.features.common_features.LoopByCount.signal_func"]], "movetonextpositioninmultipositiontable (class in aslm.model.features.common_features)": [[194, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable"]], "__init__() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[194, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.__init__"]], "cleanup() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[194, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.cleanup"]], "signal_func() (aslm.model.features.common_features.movetonextpositioninmultipositiontable method)": [[194, "aslm.model.features.common_features.MoveToNextPositionInMultiPositionTable.signal_func"]], "preparenextchannel (class in aslm.model.features.common_features)": [[195, "aslm.model.features.common_features.PrepareNextChannel"]], "__init__() (aslm.model.features.common_features.preparenextchannel method)": [[195, "aslm.model.features.common_features.PrepareNextChannel.__init__"]], "signal_func() (aslm.model.features.common_features.preparenextchannel method)": [[195, "aslm.model.features.common_features.PrepareNextChannel.signal_func"]], "snap (class in aslm.model.features.common_features)": [[196, "aslm.model.features.common_features.Snap"]], "__init__() (aslm.model.features.common_features.snap method)": [[196, "aslm.model.features.common_features.Snap.__init__"]], "data_func() (aslm.model.features.common_features.snap method)": [[196, "aslm.model.features.common_features.Snap.data_func"]], "stackpause (class in aslm.model.features.common_features)": [[197, "aslm.model.features.common_features.StackPause"]], "__init__() (aslm.model.features.common_features.stackpause method)": [[197, "aslm.model.features.common_features.StackPause.__init__"]], "signal_func() (aslm.model.features.common_features.stackpause method)": [[197, "aslm.model.features.common_features.StackPause.signal_func"]], "waittocontinue (class in aslm.model.features.common_features)": [[198, "aslm.model.features.common_features.WaitToContinue"]], "__init__() (aslm.model.features.common_features.waittocontinue method)": [[198, "aslm.model.features.common_features.WaitToContinue.__init__"]], "cleanup() (aslm.model.features.common_features.waittocontinue method)": [[198, "aslm.model.features.common_features.WaitToContinue.cleanup"]], "data_func() (aslm.model.features.common_features.waittocontinue method)": [[198, "aslm.model.features.common_features.WaitToContinue.data_func"]], "pre_data_func() (aslm.model.features.common_features.waittocontinue method)": [[198, "aslm.model.features.common_features.WaitToContinue.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.waittocontinue method)": [[198, "aslm.model.features.common_features.WaitToContinue.pre_signal_func"]], "signal_func() (aslm.model.features.common_features.waittocontinue method)": [[198, "aslm.model.features.common_features.WaitToContinue.signal_func"]], "zstackacquisition (class in aslm.model.features.common_features)": [[199, "aslm.model.features.common_features.ZStackAcquisition"]], "__init__() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.__init__"]], "cleanup_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.cleanup_data_func"]], "end_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.end_data_func"]], "in_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.in_data_func"]], "pre_data_func() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.pre_data_func"]], "pre_signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.pre_signal_func"]], "signal_end() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.signal_end"]], "signal_func() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.signal_func"]], "update_channel() (aslm.model.features.common_features.zstackacquisition method)": [[199, "aslm.model.features.common_features.ZStackAcquisition.update_channel"]], "aslm.model.features.constant_velocity_acquisition": [[200, "module-aslm.model.features.constant_velocity_acquisition"]], "constantvelocityacquisition (class in aslm.model.features.constant_velocity_acquisition)": [[201, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition"]], "__init__() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[201, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.__init__"]], "cleanup() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[201, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.cleanup"]], "pre_func_signal() (aslm.model.features.constant_velocity_acquisition.constantvelocityacquisition method)": [[201, "aslm.model.features.constant_velocity_acquisition.ConstantVelocityAcquisition.pre_func_signal"]], "aslm.model.features.dummy_detective": [[202, "module-aslm.model.features.dummy_detective"]], "dummy_detective (class in aslm.model.features.dummy_detective)": [[203, "aslm.model.features.dummy_detective.Dummy_Detective"]], "__init__() (aslm.model.features.dummy_detective.dummy_detective method)": [[203, "aslm.model.features.dummy_detective.Dummy_Detective.__init__"]], "aslm.model.features.feature_container": [[204, "module-aslm.model.features.feature_container"]], "container (class in aslm.model.features.feature_container)": [[205, "aslm.model.features.feature_container.Container"]], "__init__() (aslm.model.features.feature_container.container method)": [[205, "aslm.model.features.feature_container.Container.__init__"]], "cleanup() (aslm.model.features.feature_container.container method)": [[205, "aslm.model.features.feature_container.Container.cleanup"]], "reset() (aslm.model.features.feature_container.container method)": [[205, "aslm.model.features.feature_container.Container.reset"]], "datacontainer (class in aslm.model.features.feature_container)": [[206, "aslm.model.features.feature_container.DataContainer"]], "__init__() (aslm.model.features.feature_container.datacontainer method)": [[206, "aslm.model.features.feature_container.DataContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.datacontainer method)": [[206, "aslm.model.features.feature_container.DataContainer.cleanup"]], "reset() (aslm.model.features.feature_container.datacontainer method)": [[206, "aslm.model.features.feature_container.DataContainer.reset"]], "run() (aslm.model.features.feature_container.datacontainer method)": [[206, "aslm.model.features.feature_container.DataContainer.run"]], "datanode (class in aslm.model.features.feature_container)": [[207, "aslm.model.features.feature_container.DataNode"]], "__init__() (aslm.model.features.feature_container.datanode method)": [[207, "aslm.model.features.feature_container.DataNode.__init__"]], "run() (aslm.model.features.feature_container.datanode method)": [[207, "aslm.model.features.feature_container.DataNode.run"]], "set_property() (aslm.model.features.feature_container.datanode method)": [[207, "aslm.model.features.feature_container.DataNode.set_property"]], "signalcontainer (class in aslm.model.features.feature_container)": [[208, "aslm.model.features.feature_container.SignalContainer"]], "__init__() (aslm.model.features.feature_container.signalcontainer method)": [[208, "aslm.model.features.feature_container.SignalContainer.__init__"]], "cleanup() (aslm.model.features.feature_container.signalcontainer method)": [[208, "aslm.model.features.feature_container.SignalContainer.cleanup"]], "reset() (aslm.model.features.feature_container.signalcontainer method)": [[208, "aslm.model.features.feature_container.SignalContainer.reset"]], "run() (aslm.model.features.feature_container.signalcontainer method)": [[208, "aslm.model.features.feature_container.SignalContainer.run"]], "signalnode (class in aslm.model.features.feature_container)": [[209, "aslm.model.features.feature_container.SignalNode"]], "__init__() (aslm.model.features.feature_container.signalnode method)": [[209, "aslm.model.features.feature_container.SignalNode.__init__"]], "run() (aslm.model.features.feature_container.signalnode method)": [[209, "aslm.model.features.feature_container.SignalNode.run"]], "set_property() (aslm.model.features.feature_container.signalnode method)": [[209, "aslm.model.features.feature_container.SignalNode.set_property"]], "treenode (class in aslm.model.features.feature_container)": [[210, "aslm.model.features.feature_container.TreeNode"]], "__init__() (aslm.model.features.feature_container.treenode method)": [[210, "aslm.model.features.feature_container.TreeNode.__init__"]], "set_property() (aslm.model.features.feature_container.treenode method)": [[210, "aslm.model.features.feature_container.TreeNode.set_property"]], "dummy_true() (in module aslm.model.features.feature_container)": [[211, "aslm.model.features.feature_container.dummy_True"]], "dummy_func() (in module aslm.model.features.feature_container)": [[212, "aslm.model.features.feature_container.dummy_func"]], "get_registered_funcs() (in module aslm.model.features.feature_container)": [[213, "aslm.model.features.feature_container.get_registered_funcs"]], "load_features() (in module aslm.model.features.feature_container)": [[214, "aslm.model.features.feature_container.load_features"]], "aslm.model.features.feature_related_functions": [[215, "module-aslm.model.features.feature_related_functions"]], "sharedlist (class in aslm.model.features.feature_related_functions)": [[216, "aslm.model.features.feature_related_functions.SharedList"]], "__init__() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.__init__"]], "append() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.append"]], "clear() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.clear"]], "copy() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.copy"]], "count() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.count"]], "extend() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.extend"]], "index() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.index"]], "insert() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.insert"]], "pop() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.pop"]], "remove() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.remove"]], "reverse() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.reverse"]], "sort() (aslm.model.features.feature_related_functions.sharedlist method)": [[216, "aslm.model.features.feature_related_functions.SharedList.sort"]], "convert_feature_list_to_str() (in module aslm.model.features.feature_related_functions)": [[217, "aslm.model.features.feature_related_functions.convert_feature_list_to_str"]], "convert_str_to_feature_list() (in module aslm.model.features.feature_related_functions)": [[218, "aslm.model.features.feature_related_functions.convert_str_to_feature_list"]], "load_dynamic_parameter_functions() (in module aslm.model.features.feature_related_functions)": [[219, "aslm.model.features.feature_related_functions.load_dynamic_parameter_functions"]], "aslm.model.features.image_writer": [[220, "module-aslm.model.features.image_writer"]], "imagewriter (class in aslm.model.features.image_writer)": [[221, "aslm.model.features.image_writer.ImageWriter"]], "__init__() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.__init__"]], "calculate_and_check_disk_space() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.calculate_and_check_disk_space"]], "close() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.close"], [221, "id0"]], "config_table (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.config_table"]], "current_time_point (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.current_time_point"]], "data_buffer (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.data_buffer"]], "data_source (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.data_source"]], "file_type (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.file_type"]], "generate_image_name() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.generate_image_name"], [221, "id1"]], "generate_meta_data() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.generate_meta_data"], [221, "id2"]], "mip (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.mip"]], "mip_directory (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.mip_directory"]], "model (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.model"]], "num_of_channels (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.num_of_channels"]], "save_directory (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.save_directory"]], "save_image() (aslm.model.features.image_writer.imagewriter method)": [[221, "aslm.model.features.image_writer.ImageWriter.save_image"], [221, "id3"]], "sub_dir (aslm.model.features.image_writer.imagewriter attribute)": [[221, "aslm.model.features.image_writer.ImageWriter.sub_dir"]], "aslm.model.features.remove_empty_tiles": [[222, "module-aslm.model.features.remove_empty_tiles"]], "detecttissueinstack (class in aslm.model.features.remove_empty_tiles)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstack method)": [[223, "aslm.model.features.remove_empty_tiles.DetectTissueInStack.pre_func_signal"]], "detecttissueinstackandrecord (class in aslm.model.features.remove_empty_tiles)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord"]], "__init__() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.__init__"]], "end_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_data"]], "end_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.end_func_signal"]], "in_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_data"]], "in_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.in_func_signal"]], "pre_func_data() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_data"]], "pre_func_signal() (aslm.model.features.remove_empty_tiles.detecttissueinstackandrecord method)": [[224, "aslm.model.features.remove_empty_tiles.DetectTissueInStackAndRecord.pre_func_signal"]], "removeemptypositions (class in aslm.model.features.remove_empty_tiles)": [[225, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions"]], "__init__() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[225, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.__init__"]], "signal_func() (aslm.model.features.remove_empty_tiles.removeemptypositions method)": [[225, "aslm.model.features.remove_empty_tiles.RemoveEmptyPositions.signal_func"]], "detect_tissue() (in module aslm.model.features.remove_empty_tiles)": [[226, "aslm.model.features.remove_empty_tiles.detect_tissue"]], "detect_tissue2() (in module aslm.model.features.remove_empty_tiles)": [[227, "aslm.model.features.remove_empty_tiles.detect_tissue2"]], "aslm.model.features.restful_features": [[228, "module-aslm.model.features.restful_features"]], "ilastiksegmentation (class in aslm.model.features.restful_features)": [[229, "aslm.model.features.restful_features.IlastikSegmentation"]], "__init__() (aslm.model.features.restful_features.ilastiksegmentation method)": [[229, "aslm.model.features.restful_features.IlastikSegmentation.__init__"]], "prepare_service() (in module aslm.model.features.restful_features)": [[230, "aslm.model.features.restful_features.prepare_service"]], "aslm.model.features.volume_search": [[231, "module-aslm.model.features.volume_search"]], "volumesearch (class in aslm.model.features.volume_search)": [[232, "aslm.model.features.volume_search.VolumeSearch"]], "__init__() (aslm.model.features.volume_search.volumesearch method)": [[232, "aslm.model.features.volume_search.VolumeSearch.__init__"]], "draw_box() (in module aslm.model.features.volume_search)": [[233, "aslm.model.features.volume_search.draw_box"]], "aslm.model.metadata_sources": [[234, "module-aslm.model.metadata_sources"]], "aslm.model.metadata_sources.bdv_metadata": [[235, "module-aslm.model.metadata_sources.bdv_metadata"]], "bigdataviewermetadata (class in aslm.model.metadata_sources.bdv_metadata)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata"]], "__init__() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.__init__"]], "affine_matrix_to_stage_positions() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.affine_matrix_to_stage_positions"]], "parse_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.parse_xml"]], "shape (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.shape"]], "stage_positions_to_affine_matrix() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.stage_positions_to_affine_matrix"]], "to_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata property)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.bdv_metadata.bigdataviewermetadata method)": [[236, "aslm.model.metadata_sources.bdv_metadata.BigDataViewerMetadata.write_xml"]], "aslm.model.metadata_sources.metadata": [[237, "module-aslm.model.metadata_sources.metadata"]], "metadata (class in aslm.model.metadata_sources.metadata)": [[238, "aslm.model.metadata_sources.metadata.Metadata"]], "__init__() (aslm.model.metadata_sources.metadata.metadata method)": [[238, "aslm.model.metadata_sources.metadata.Metadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.metadata property)": [[238, "aslm.model.metadata_sources.metadata.Metadata.shape"]], "voxel_size (aslm.model.metadata_sources.metadata.metadata property)": [[238, "aslm.model.metadata_sources.metadata.Metadata.voxel_size"]], "xmlmetadata (class in aslm.model.metadata_sources.metadata)": [[239, "aslm.model.metadata_sources.metadata.XMLMetadata"]], "__init__() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[239, "aslm.model.metadata_sources.metadata.XMLMetadata.__init__"]], "shape (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[239, "aslm.model.metadata_sources.metadata.XMLMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[239, "aslm.model.metadata_sources.metadata.XMLMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.metadata.xmlmetadata property)": [[239, "aslm.model.metadata_sources.metadata.XMLMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.metadata.xmlmetadata method)": [[239, "aslm.model.metadata_sources.metadata.XMLMetadata.write_xml"]], "aslm.model.metadata_sources.ome_tiff_metadata": [[240, "module-aslm.model.metadata_sources.ome_tiff_metadata"]], "ometiffmetadata (class in aslm.model.metadata_sources.ome_tiff_metadata)": [[241, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata"]], "__init__() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[241, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.__init__"]], "ome_tiff_xml_dict() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[241, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.ome_tiff_xml_dict"]], "shape (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[241, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.shape"]], "to_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[241, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.to_xml"]], "voxel_size (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata property)": [[241, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.voxel_size"]], "write_xml() (aslm.model.metadata_sources.ome_tiff_metadata.ometiffmetadata method)": [[241, "aslm.model.metadata_sources.ome_tiff_metadata.OMETIFFMetadata.write_xml"]], "aslm.model.microscope": [[242, "module-aslm.model.microscope"]], "microscope (class in aslm.model.microscope)": [[243, "aslm.model.microscope.Microscope"]], "__init__() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.__init__"]], "ask_stage_for_position (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.ask_stage_for_position"]], "assemble_device_config_lists() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.assemble_device_config_lists"]], "available_channels (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.available_channels"]], "calculate_all_waveform() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.calculate_all_waveform"]], "calculate_exposure_sweep_times() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.calculate_exposure_sweep_times"]], "central_focus (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.central_focus"]], "channels (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.channels"]], "configuration (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.configuration"]], "current_channel (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.current_channel"]], "current_laser_index (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.current_laser_index"]], "daq (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.daq"]], "data_buffer (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.data_buffer"]], "end_acquisition() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.end_acquisition"]], "galvo (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.galvo"]], "get_readout_time() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.get_readout_time"]], "get_stage_position() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.get_stage_position"]], "info (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.info"]], "is_synthetic (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.is_synthetic"]], "laser_wavelength (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.laser_wavelength"]], "lasers (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.lasers"]], "load_and_start_devices() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.load_and_start_devices"]], "microscope_name (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.microscope_name"]], "move_remote_focus() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.move_remote_focus"]], "move_stage() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.move_stage"]], "move_stage_offset() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.move_stage_offset"]], "number_of_frames (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.number_of_frames"]], "prepare_acquisition() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.prepare_acquisition"]], "prepare_next_channel() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.prepare_next_channel"]], "ret_pos_dict (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.ret_pos_dict"]], "stages (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.stages"]], "stages_list (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.stages_list"]], "stop_stage() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.stop_stage"]], "terminate() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.terminate"]], "tiger_controller (aslm.model.microscope.microscope attribute)": [[243, "aslm.model.microscope.Microscope.tiger_controller"]], "turn_off_lasers() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.turn_off_lasers"]], "turn_on_laser() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.turn_on_laser"]], "update_data_buffer() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.update_data_buffer"]], "update_stage_limits() (aslm.model.microscope.microscope method)": [[243, "aslm.model.microscope.Microscope.update_stage_limits"]], "aslm.model.model": [[244, "module-aslm.model.model"]], "model (class in aslm.model.model)": [[245, "aslm.model.model.Model"]], "__init__() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.__init__"]], "acquisition_count (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.acquisition_count"]], "active_microscope (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.active_microscope"]], "active_microscope_name (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.active_microscope_name"]], "ask_to_pause_data_thread (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.ask_to_pause_data_thread"]], "autofocus_on (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.autofocus_on"]], "binning (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.binning"]], "camera_wait_iterations (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.camera_wait_iterations"]], "change_resolution() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.change_resolution"]], "configuration (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.configuration"]], "create_pipe() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.create_pipe"]], "current_exposure_time (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.current_exposure_time"]], "data_buffer (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.data_buffer"]], "data_buffer_positions (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.data_buffer_positions"]], "data_thread (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.data_thread"]], "destroy_virtual_microscope() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.destroy_virtual_microscope"]], "end_acquisition() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.end_acquisition"]], "event_queue (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.event_queue"]], "f_position (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.f_position"]], "feature_list (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.feature_list"]], "focus_pos (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.focus_pos"]], "frame_id (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.frame_id"]], "get_active_microscope() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.get_active_microscope"]], "get_camera_line_interval_and_exposure_time() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.get_camera_line_interval_and_exposure_time"]], "get_data_buffer() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.get_data_buffer"]], "get_feature_list() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.get_feature_list"]], "get_microscope_info() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.get_microscope_info"]], "get_offset_variance_maps() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.get_offset_variance_maps"]], "get_stage_position() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.get_stage_position"]], "image_count (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.image_count"]], "image_writer (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.image_writer"]], "imaging_mode (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.imaging_mode"]], "img_height (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.img_height"]], "img_width (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.img_width"]], "is_acquiring (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.is_acquiring"]], "is_live (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.is_live"]], "is_save (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.is_save"]], "launch_virtual_microscope() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.launch_virtual_microscope"]], "load_feature_list_from_file() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.load_feature_list_from_file"]], "load_feature_list_from_str() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.load_feature_list_from_str"]], "load_feature_records() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.load_feature_records"]], "load_images() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.load_images"]], "logger (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.logger"]], "max_entropy (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.max_entropy"]], "microscopes (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.microscopes"]], "move_stage() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.move_stage"]], "number_of_frames (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.number_of_frames"]], "pause_data_event (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.pause_data_event"]], "pause_data_ready_lock (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.pause_data_ready_lock"]], "pause_data_thread() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.pause_data_thread"]], "plot_pipe (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.plot_pipe"]], "pre_exposure_time (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.pre_exposure_time"]], "prepare_acquisition() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.prepare_acquisition"]], "release_pipe() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.release_pipe"]], "resume_data_thread() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.resume_data_thread"]], "run_acquisition() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.run_acquisition"]], "run_command() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.run_command"]], "run_data_process() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.run_data_process"]], "run_live_acquisition() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.run_live_acquisition"]], "show_img_pipe (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.show_img_pipe"]], "signal_thread (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.signal_thread"]], "simplified_data_process() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.simplified_data_process"]], "snap_image() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.snap_image"]], "start_time (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.start_time"]], "stop_acquisition (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.stop_acquisition"]], "stop_send_signal (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.stop_send_signal"]], "stop_stage() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.stop_stage"]], "terminate() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.terminate"]], "total_acquisition_count (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.total_acquisition_count"]], "total_image_count (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.total_image_count"]], "update_data_buffer() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.update_data_buffer"]], "update_ilastik_setting() (aslm.model.model.model method)": [[245, "aslm.model.model.Model.update_ilastik_setting"]], "virtual_microscopes (aslm.model.model.model attribute)": [[245, "aslm.model.model.Model.virtual_microscopes"]], "aslm.model.waveforms": [[246, "module-aslm.model.waveforms"]], "camera_exposure() (in module aslm.model.waveforms)": [[247, "aslm.model.waveforms.camera_exposure"]], "dc_value() (in module aslm.model.waveforms)": [[248, "aslm.model.waveforms.dc_value"]], "remote_focus_ramp() (in module aslm.model.waveforms)": [[249, "aslm.model.waveforms.remote_focus_ramp"]], "sawtooth() (in module aslm.model.waveforms)": [[250, "aslm.model.waveforms.sawtooth"]], "sine_wave() (in module aslm.model.waveforms)": [[251, "aslm.model.waveforms.sine_wave"]], "single_pulse() (in module aslm.model.waveforms)": [[252, "aslm.model.waveforms.single_pulse"]], "smooth_waveform() (in module aslm.model.waveforms)": [[253, "aslm.model.waveforms.smooth_waveform"]], "square() (in module aslm.model.waveforms)": [[254, "aslm.model.waveforms.square"]], "aslm.tools": [[255, "module-aslm.tools"]], "aslm.tools.beams": [[256, "module-aslm.tools.beams"]], "fit_gaussian_beam_error() (in module aslm.tools.beams)": [[257, "aslm.tools.beams.fit_gaussian_beam_error"]], "fit_gaussian_beam_mse() (in module aslm.tools.beams)": [[258, "aslm.tools.beams.fit_gaussian_beam_mse"]], "gaussian_beam() (in module aslm.tools.beams)": [[259, "aslm.tools.beams.gaussian_beam"]], "aslm.tools.common_dict_tools": [[260, "module-aslm.tools.common_dict_tools"]], "update_stage_dict() (in module aslm.tools.common_dict_tools)": [[261, "aslm.tools.common_dict_tools.update_stage_dict"]], "aslm.tools.common_functions": [[262, "module-aslm.tools.common_functions"]], "variablewithlock (class in aslm.tools.common_functions)": [[263, "aslm.tools.common_functions.VariableWithLock"]], "__init__() (aslm.tools.common_functions.variablewithlock method)": [[263, "aslm.tools.common_functions.VariableWithLock.__init__"]], "build_ref_name() (in module aslm.tools.common_functions)": [[264, "aslm.tools.common_functions.build_ref_name"]], "combine_funcs() (in module aslm.tools.common_functions)": [[265, "aslm.tools.common_functions.combine_funcs"]], "copy_proxy_object() (in module aslm.tools.common_functions)": [[266, "aslm.tools.common_functions.copy_proxy_object"]], "load_module_from_file() (in module aslm.tools.common_functions)": [[267, "aslm.tools.common_functions.load_module_from_file"]], "aslm.tools.decorators": [[268, "module-aslm.tools.decorators"]], "featurelist (class in aslm.tools.decorators)": [[269, "aslm.tools.decorators.FeatureList"]], "__init__() (aslm.tools.decorators.featurelist method)": [[269, "aslm.tools.decorators.FeatureList.__init__"]], "function_timer() (in module aslm.tools.decorators)": [[270, "aslm.tools.decorators.function_timer"]], "aslm.tools.file_functions": [[271, "module-aslm.tools.file_functions"]], "create_save_path() (in module aslm.tools.file_functions)": [[272, "aslm.tools.file_functions.create_save_path"]], "delete_folder() (in module aslm.tools.file_functions)": [[273, "aslm.tools.file_functions.delete_folder"]], "load_yaml_file() (in module aslm.tools.file_functions)": [[274, "aslm.tools.file_functions.load_yaml_file"]], "save_yaml_file() (in module aslm.tools.file_functions)": [[275, "aslm.tools.file_functions.save_yaml_file"]], "aslm.tools.image": [[276, "module-aslm.tools.image"]], "create_arrow_image() (in module aslm.tools.image)": [[277, "aslm.tools.image.create_arrow_image"]], "text_array() (in module aslm.tools.image)": [[278, "aslm.tools.image.text_array"]], "aslm.tools.image_loaders": [[279, "module-aslm.tools.image_loaders"]], "lazytiff (class in aslm.tools.image_loaders)": [[280, "aslm.tools.image_loaders.LazyTiff"]], "__init__() (aslm.tools.image_loaders.lazytiff method)": [[280, "aslm.tools.image_loaders.LazyTiff.__init__"]], "shape (aslm.tools.image_loaders.lazytiff property)": [[280, "aslm.tools.image_loaders.LazyTiff.shape"]], "aslm.tools.main_functions": [[281, "module-aslm.tools.main_functions"]], "create_parser() (in module aslm.tools.main_functions)": [[282, "aslm.tools.main_functions.create_parser"]], "evaluate_parser_input_arguments() (in module aslm.tools.main_functions)": [[283, "aslm.tools.main_functions.evaluate_parser_input_arguments"]], "aslm.tools.multipos_table_tools": [[284, "module-aslm.tools.multipos_table_tools"]], "calc_num_tiles() (in module aslm.tools.multipos_table_tools)": [[285, "aslm.tools.multipos_table_tools.calc_num_tiles"]], "compute_tiles_from_bounding_box() (in module aslm.tools.multipos_table_tools)": [[286, "aslm.tools.multipos_table_tools.compute_tiles_from_bounding_box"]], "sign() (in module aslm.tools.multipos_table_tools)": [[287, "aslm.tools.multipos_table_tools.sign"]], "update_table() (in module aslm.tools.multipos_table_tools)": [[288, "aslm.tools.multipos_table_tools.update_table"]], "aslm.tools.project_stats": [[289, "module-aslm.tools.project_stats"]], "countlines() (in module aslm.tools.project_stats)": [[290, "aslm.tools.project_stats.countlines"]], "aslm.tools.sdf": [[291, "module-aslm.tools.sdf"]], "box() (in module aslm.tools.sdf)": [[292, "aslm.tools.sdf.box"]], "sphere() (in module aslm.tools.sdf)": [[293, "aslm.tools.sdf.sphere"]], "volume_from_sdf() (in module aslm.tools.sdf)": [[294, "aslm.tools.sdf.volume_from_sdf"]], "aslm.tools.waveform_template_funcs": [[295, "module-aslm.tools.waveform_template_funcs"]], "get_waveform_template_parameters() (in module aslm.tools.waveform_template_funcs)": [[296, "aslm.tools.waveform_template_funcs.get_waveform_template_parameters"]], "aslm.tools.xml_tools": [[297, "module-aslm.tools.xml_tools"]], "dict_to_xml() (in module aslm.tools.xml_tools)": [[298, "aslm.tools.xml_tools.dict_to_xml"]], "parse_xml() (in module aslm.tools.xml_tools)": [[299, "aslm.tools.xml_tools.parse_xml"]], "aslm.view": [[300, "module-aslm.view"]], "aslm.view.custom_widgets": [[301, "module-aslm.view.custom_widgets"]], "aslm.view.main_window_content": [[302, "module-aslm.view.main_window_content"]], "aslm.view.popups": [[303, "module-aslm.view.popups"]]}})